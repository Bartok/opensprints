MP2COD 4.12, COFF to COD File Converter
Copyright (c) 2007 Microchip Technology Inc.
Listing File Generated: Wed May 28 05:25:54 2008


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           /*********************************************************************           C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            *********************************************************************           C:\opensprints\FW\main.c
                                            * FileName:        main.c                                                       C:\opensprints\FW\main.c
                                            * Dependencies:    See INCLUDES section below                                   C:\opensprints\FW\main.c
                                            * Processor:       PIC18                                                        C:\opensprints\FW\main.c
                                            * Compiler:        C18 2.30.01+                                                 C:\opensprints\FW\main.c
                                            * Company:         Microchip Technology, Inc.                                   C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Software License Agreement                                                    C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\opensprints\FW\main.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\opensprints\FW\main.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\opensprints\FW\main.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\opensprints\FW\main.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\opensprints\FW\main.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\opensprints\FW\main.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\opensprints\FW\main.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\opensprints\FW\main.c
                                            * civil liability for the breach of the terms and conditions of this            C:\opensprints\FW\main.c
                                            * license.                                                                      C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\opensprints\FW\main.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\opensprints\FW\main.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\opensprints\FW\main.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\opensprints\FW\main.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\opensprints\FW\main.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Author               Date        Comment                                      C:\opensprints\FW\main.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\opensprints\FW\main.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\opensprints\FW\main.c
                                            ********************************************************************/           C:\opensprints\FW\main.c
                                                                                                                            C:\opensprints\FW\main.c
                                           /** I N C L U D E S **********************************************************/  C:\opensprints\FW\main.c
                                           #include <p18cxxx.h>                                                             C:\opensprints\FW\main.c
                                           #include "system\typedefs.h"                        // Required                  C:\opensprints\FW\main.c
                                           #include "system\usb\usb.h"                         // Required                  C:\opensprints\FW\main.c
                                           #include "io_cfg.h"                                 // Required                  C:\opensprints\FW\main.c
                                                                                                                            C:\opensprints\FW\main.c
                                           #include "system\usb\usb_compile_time_validation.h" // Optional                  C:\opensprints\FW\main.c
                                           #include "user\user.h"                              // Modifiable                C:\opensprints\FW\main.c
                                                                                                                            C:\opensprints\FW\main.c
                                           /** V A R I A B L E S ********************************************************/  C:\opensprints\FW\main.c
                                           #pragma udata                                                                    C:\opensprints\FW\main.c
                                                                                                                            C:\opensprints\FW\main.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\opensprints\FW\main.c
                                           static void InitializeSystem(void);                                              C:\opensprints\FW\main.c
                                           void USBTasks(void);                                                             C:\opensprints\FW\main.c
                                                                                                                            C:\opensprints\FW\main.c
                                           #pragma code high_vector_section = 0x000808                                      C:\opensprints\FW\main.c
                                           void high_vector (void)                                                          C:\opensprints\FW\main.c
                                           {                                                                                C:\opensprints\FW\main.c
000808   efcc     GOTO      0xb98              _asm goto high_ISR _endasm                                                   C:\opensprints\FW\main.c
00080a   f005                                                                                                               
00080c   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\main.c
                                           #pragma code low_vector_section = 0x000818                                       C:\opensprints\FW\main.c
                                           void low_vector (void)                                                           C:\opensprints\FW\main.c
                                           {                                                                                C:\opensprints\FW\main.c
000818   ef22     GOTO      0x844              _asm goto low_ISR _endasm                                                    C:\opensprints\FW\main.c
00081a   f004                                                                                                               
00081c   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\main.c
                                           #pragma code                                                                     C:\opensprints\FW\main.c
                                                                                                                            C:\opensprints\FW\main.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\opensprints\FW\main.c
                                           #pragma code                                                                     C:\opensprints\FW\main.c
                                           /******************************************************************************  C:\opensprints\FW\main.c
                                            * Function:        void main(void)                                              C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Input:           None                                                         C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Output:          None                                                         C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Overview:        Main program entry point.                                    C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Note:            None                                                         C:\opensprints\FW\main.c
                                            *****************************************************************************/  C:\opensprints\FW\main.c
                                           void main(void)                                                                  C:\opensprints\FW\main.c
                                           {                                                                                C:\opensprints\FW\main.c
004fb0   d806     RCALL     0x4fbe             InitializeSystem();                                                          C:\opensprints\FW\main.c
004fb2   ec13     CALL      0x2826,0x0     	InitNoPcRace();                                                                 C:\opensprints\FW\main.c
004fb4   f014                                                                                                               
                                                                                                                            C:\opensprints\FW\main.c
004fba   d7fd     BRA       0x4fb6         	while(1)                                                                        C:\opensprints\FW\main.c
                                               {                                                                            C:\opensprints\FW\main.c
                                                   //USBTasks();         // USB Tasks                                       C:\opensprints\FW\main.c
004fb6   eca0     CALL      0xd40,0x0              ProcessIO();        // See user.c and user.h                             C:\opensprints\FW\main.c
004fb8   f006                                                                                                               
                                               }//end while                                                                 C:\opensprints\FW\main.c
004fbc   0012     RETURN    0x0            }//end main                                                                      C:\opensprints\FW\main.c
                                                                                                                            C:\opensprints\FW\main.c
                                           /******************************************************************************  C:\opensprints\FW\main.c
                                            * Function:        static void InitializeSystem(void)                           C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Input:           None                                                         C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Output:          None                                                         C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Overview:        InitializeSystem is a centralize initialization routine.     C:\opensprints\FW\main.c
                                            *                  All required USB initialization routines are called from     C:\opensprints\FW\main.c
                                            *                  here.                                                        C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            *                  User application initialization routine should also be       C:\opensprints\FW\main.c
                                            *                  called from here.                                            C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Note:            None                                                         C:\opensprints\FW\main.c
                                            *****************************************************************************/  C:\opensprints\FW\main.c
                                           static void InitializeSystem(void)                                               C:\opensprints\FW\main.c
                                           {                                                                                C:\opensprints\FW\main.c
004fbe   0e0f     MOVLW     0xf                ADCON1 |= 0x0F;                 // Default all pins to digital               C:\opensprints\FW\main.c
004fc0   12c1     IORWF     0xc1,0x1,0x0                                                                                    
                                                                                                                            C:\opensprints\FW\main.c
                                               //mInitializeUSBDriver();         // See usbdrv.h                            C:\opensprints\FW\main.c
                                                                                                                            C:\opensprints\FW\main.c
004fc2   ecd5     CALL      0xbaa,0x0          UserInit();                     // See user.c & .h                           C:\opensprints\FW\main.c
004fc4   f005                                                                                                               
                                                                                                                            C:\opensprints\FW\main.c
004fc6   0012     RETURN    0x0            }//end InitializeSystem                                                          C:\opensprints\FW\main.c
                                                                                                                            C:\opensprints\FW\main.c
                                           /******************************************************************************  C:\opensprints\FW\main.c
                                            * Function:        void USBTasks(void)                                          C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * PreCondition:    InitializeSystem has been called.                            C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Input:           None                                                         C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Output:          None                                                         C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Overview:        Service loop for USB tasks.                                  C:\opensprints\FW\main.c
                                            *                                                                               C:\opensprints\FW\main.c
                                            * Note:            None                                                         C:\opensprints\FW\main.c
                                            *****************************************************************************/  C:\opensprints\FW\main.c
                                           void USBTasks(void)                                                              C:\opensprints\FW\main.c
                                           {                                                                                C:\opensprints\FW\main.c
                                               /*                                                                           C:\opensprints\FW\main.c
                                                * Servicing Hardware                                                        C:\opensprints\FW\main.c
                                                */                                                                          C:\opensprints\FW\main.c
004fc8   ecce     CALL      0x479c,0x0         USBCheckBusStatus();                    // Must use polling method           C:\opensprints\FW\main.c
004fca   f023                                                                                                               
004fcc   be6f     BTFSC     0x6f,0x7,0x0       if(UCFGbits.UTEYE!=1)                                                        C:\opensprints\FW\main.c
004fce   d002     BRA       0x4fd4                                                                                          
004fd0   ecee     CALL      0x47dc,0x0             USBDriverService();                 // Interrupt or polling method       C:\opensprints\FW\main.c
004fd2   f023                                                                                                               
                                                                                                                            C:\opensprints\FW\main.c
                                               #if defined(USB_USE_CDC)                                                     C:\opensprints\FW\main.c
004fd4   ec18     CALL      0x4030,0x0         CDCTxService();                                                              C:\opensprints\FW\main.c
004fd6   f020                                                                                                               
                                               #endif                                                                       C:\opensprints\FW\main.c
                                                                                                                            C:\opensprints\FW\main.c
004fd8   0012     RETURN    0x0            }// end USBTasks                                                                 C:\opensprints\FW\main.c
                                                                                                                            C:\opensprints\FW\main.c
                                           /** EOF main.c ***************************************************************/  C:\opensprints\FW\main.c
                                           /*********************************************************************           C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            *********************************************************************           C:\opensprints\FW\system\usb\usbmmap.c
                                            * FileName:        usbmmap.c                                                    C:\opensprints\FW\system\usb\usbmmap.c
                                            * Dependencies:    See INCLUDES section below                                   C:\opensprints\FW\system\usb\usbmmap.c
                                            * Processor:       PIC18                                                        C:\opensprints\FW\system\usb\usbmmap.c
                                            * Compiler:        C18 2.30.01+                                                 C:\opensprints\FW\system\usb\usbmmap.c
                                            * Company:         Microchip Technology, Inc.                                   C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * Software License Agreement                                                    C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\opensprints\FW\system\usb\usbmmap.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\opensprints\FW\system\usb\usbmmap.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\opensprints\FW\system\usb\usbmmap.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\opensprints\FW\system\usb\usbmmap.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\opensprints\FW\system\usb\usbmmap.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\opensprints\FW\system\usb\usbmmap.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\opensprints\FW\system\usb\usbmmap.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\opensprints\FW\system\usb\usbmmap.c
                                            * civil liability for the breach of the terms and conditions of this            C:\opensprints\FW\system\usb\usbmmap.c
                                            * license.                                                                      C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\opensprints\FW\system\usb\usbmmap.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\opensprints\FW\system\usb\usbmmap.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\opensprints\FW\system\usb\usbmmap.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\opensprints\FW\system\usb\usbmmap.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\opensprints\FW\system\usb\usbmmap.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * Author               Date        Comment                                      C:\opensprints\FW\system\usb\usbmmap.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\opensprints\FW\system\usb\usbmmap.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\opensprints\FW\system\usb\usbmmap.c
                                            ********************************************************************/           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbmmap.c
                                            * -usbmmap.c-                                                                   C:\opensprints\FW\system\usb\usbmmap.c
                                            * USB Memory Map                                                                C:\opensprints\FW\system\usb\usbmmap.c
                                            * This file is the USB memory manager; it serves as a compile-time memory       C:\opensprints\FW\system\usb\usbmmap.c
                                            * allocator for the USB endpoints. It uses the compile time options passed      C:\opensprints\FW\system\usb\usbmmap.c
                                            * from usbcfg.h to instantiate endpoints and endpoint buffer.                   C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * Each endpoint requires to have a set of Buffer Descriptor registers(BDT).     C:\opensprints\FW\system\usb\usbmmap.c
                                            * A BDT is 4-byte long and has a specific RAM location for each endpoint.       C:\opensprints\FW\system\usb\usbmmap.c
                                            * The BDT for endpoint 0 out is located at address 0x400 to 0x403.              C:\opensprints\FW\system\usb\usbmmap.c
                                            * The BDT for endpoint 0 in is located at address 0x404 to 0x407.               C:\opensprints\FW\system\usb\usbmmap.c
                                            * The BDT for endpoint 1 out is located at address 0x408 to 0x40B.              C:\opensprints\FW\system\usb\usbmmap.c
                                            * and so on... The above allocation assumes the Ping-Pong Buffer Mode 0 is      C:\opensprints\FW\system\usb\usbmmap.c
                                            * used. These locations are already hard-wired in the silicon. The point        C:\opensprints\FW\system\usb\usbmmap.c
                                            * of doing instantiation, i.e. volatile far BDT ep0Bo;, is to provide the       C:\opensprints\FW\system\usb\usbmmap.c
                                            * C compiler a way to address each variable directly. This is very important    C:\opensprints\FW\system\usb\usbmmap.c
                                            * because when a register can be accessed directly, it saves execution time     C:\opensprints\FW\system\usb\usbmmap.c
                                            * and reduces program size.                                                     C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * Endpoints are defined using the endpoint number and the direction             C:\opensprints\FW\system\usb\usbmmap.c
                                            * of transfer. For simplicity, usbmmap.c only uses the endpoint number          C:\opensprints\FW\system\usb\usbmmap.c
                                            * in the BDT register allocation scheme. This means if the usbcfg.h states      C:\opensprints\FW\system\usb\usbmmap.c
                                            * that the MAX_EP_NUMBER is number 1, then four BDTs will be                    C:\opensprints\FW\system\usb\usbmmap.c
                                            * instantiated: one each for endpoint0 in and endpoint0 out, which must         C:\opensprints\FW\system\usb\usbmmap.c
                                            * always be instantiated for control transfer by default, and one each sets     C:\opensprints\FW\system\usb\usbmmap.c
                                            * for endpoint1 in and endpoint1 out. The naming convention for instantiating   C:\opensprints\FW\system\usb\usbmmap.c
                                            * BDT is                                                                        C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * ep<#>B<d>                                                                     C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * where # is the endpoint number, and d is the direction of                     C:\opensprints\FW\system\usb\usbmmap.c
                                            * transfer, which could be either <i> or <o>.                                   C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * The USB memory manager uses MAX_EP_NUMBER, as defined in usbcfg.h, to define  C:\opensprints\FW\system\usb\usbmmap.c
                                            * the endpoints to be instantiated. This represents the highest endpoint        C:\opensprints\FW\system\usb\usbmmap.c
                                            * number to be allocated, not how many endpoints are used. Since the BDTs for   C:\opensprints\FW\system\usb\usbmmap.c
                                            * endpoints have hardware-assigned addresses in Bank 4, setting this value too  C:\opensprints\FW\system\usb\usbmmap.c
                                            * high may lead to inefficient use of data RAM. For example, if an application  C:\opensprints\FW\system\usb\usbmmap.c
                                            * uses only endpoints EP0 and EP4, then the MAX_EP_NUMBER is 4, and not 2.      C:\opensprints\FW\system\usb\usbmmap.c
                                            * The in-between endpoint BDTs in this example (EP1, EP2, and EP3) go unused,   C:\opensprints\FW\system\usb\usbmmap.c
                                            * and the 24 bytes of memory associated with them are wasted. It does not make  C:\opensprints\FW\system\usb\usbmmap.c
                                            * much sense to skip endpoints, but the final decision lies with the user.      C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * The next step is to assign the instantiated BDTs to different                 C:\opensprints\FW\system\usb\usbmmap.c
                                            * USB functions. The firmware framework fundamentally assumes that every USB    C:\opensprints\FW\system\usb\usbmmap.c
                                            * function should know which endpoint it is using, i.e., the default control    C:\opensprints\FW\system\usb\usbmmap.c
                                            * transfer should know that it is using endpoint 0 in and endpoint 0 out.       C:\opensprints\FW\system\usb\usbmmap.c
                                            * A HID class can choose which endpoint it wants to use, but once chosen, it    C:\opensprints\FW\system\usb\usbmmap.c
                                            * should always know the number of the endpoint.                                C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * The assignment of endpoints to USB functions is managed centrally             C:\opensprints\FW\system\usb\usbmmap.c
                                            * in usbcfg.h. This helps prevent the mistake of having more                    C:\opensprints\FW\system\usb\usbmmap.c
                                            * than one USB function using the same endpoint. The "Endpoint Allocation"      C:\opensprints\FW\system\usb\usbmmap.c
                                            * section in usbcfg.h provides examples for how to map USB endpoints to USB     C:\opensprints\FW\system\usb\usbmmap.c
                                            * functions.                                                                    C:\opensprints\FW\system\usb\usbmmap.c
                                            * Quite a few things can be mapped in that section. There is no                 C:\opensprints\FW\system\usb\usbmmap.c
                                            * one correct way to do the mapping and the user has the choice to              C:\opensprints\FW\system\usb\usbmmap.c
                                            * choose a method that is most suitable to the application.                     C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * Typically, however, a user will want to map the following for a given         C:\opensprints\FW\system\usb\usbmmap.c
                                            * USB interface function:                                                       C:\opensprints\FW\system\usb\usbmmap.c
                                            * 1. The USB interface ID                                                       C:\opensprints\FW\system\usb\usbmmap.c
                                            * 2. The endpoint control registers (UEPn)                                      C:\opensprints\FW\system\usb\usbmmap.c
                                            * 3. The BDT registers (ep<#>B<d>)                                              C:\opensprints\FW\system\usb\usbmmap.c
                                            * 4. The endpoint size                                                          C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * Example: Assume a USB device class "foo", which uses one out endpoint         C:\opensprints\FW\system\usb\usbmmap.c
                                            *          of size 64-byte and one in endpoint of size 64-byte, then:           C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * #define FOO_INTF_ID          0x00                                             C:\opensprints\FW\system\usb\usbmmap.c
                                            * #define FOO_UEP              UEP1                                             C:\opensprints\FW\system\usb\usbmmap.c
                                            * #define FOO_BD_OUT           ep1Bo                                            C:\opensprints\FW\system\usb\usbmmap.c
                                            * #define FOO_BD_IN            ep1Bi                                            C:\opensprints\FW\system\usb\usbmmap.c
                                            * #define FOO_EP_SIZE          64                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * The mapping above has chosen class "foo" to use endpoint 1.                   C:\opensprints\FW\system\usb\usbmmap.c
                                            * The names are arbitrary and can be anything other than FOO_??????.            C:\opensprints\FW\system\usb\usbmmap.c
                                            * For abstraction, the code for class "foo" should use the abstract             C:\opensprints\FW\system\usb\usbmmap.c
                                            * definitions of FOO_BD_OUT,FOO_BD_IN, and not ep1Bo or ep1Bi.                  C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * Note that the endpoint size defined in the usbcfg.h file is again             C:\opensprints\FW\system\usb\usbmmap.c
                                            * used in the usbmmap.c file. This shows that the relationship between          C:\opensprints\FW\system\usb\usbmmap.c
                                            * the two files are tightly related.                                            C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * The endpoint buffer for each USB function must be located in the              C:\opensprints\FW\system\usb\usbmmap.c
                                            * dual-port RAM area and has to come after all the BDTs have been               C:\opensprints\FW\system\usb\usbmmap.c
                                            * instantiated. An example declaration is:                                      C:\opensprints\FW\system\usb\usbmmap.c
                                            * volatile far unsigned char[FOO_EP_SIZE] data;                                 C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * The 'volatile' keyword tells the compiler not to perform any code             C:\opensprints\FW\system\usb\usbmmap.c
                                            * optimization on this variable because its content could be modified           C:\opensprints\FW\system\usb\usbmmap.c
                                            * by the hardware. The 'far' keyword tells the compiler that this variable      C:\opensprints\FW\system\usb\usbmmap.c
                                            * is not located in the Access RAM area (0x000 - 0x05F).                        C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * For the variable to be globally accessible by other files, it should be       C:\opensprints\FW\system\usb\usbmmap.c
                                            * declared in the header file usbmmap.h as an extern definition, such as        C:\opensprints\FW\system\usb\usbmmap.c
                                            * extern volatile far unsigned char[FOO_EP_SIZE] data;                          C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * Conclusion:                                                                   C:\opensprints\FW\system\usb\usbmmap.c
                                            * In a short summary, the dependencies between usbcfg and usbmmap can           C:\opensprints\FW\system\usb\usbmmap.c
                                            * be shown as:                                                                  C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * usbcfg[MAX_EP_NUMBER] -> usbmmap                                              C:\opensprints\FW\system\usb\usbmmap.c
                                            * usbmmap[ep<#>B<d>] -> usbcfg                                                  C:\opensprints\FW\system\usb\usbmmap.c
                                            * usbcfg[EP size] -> usbmmap                                                    C:\opensprints\FW\system\usb\usbmmap.c
                                            * usbcfg[abstract ep definitions] -> usb9/hid/cdc/etc class code                C:\opensprints\FW\system\usb\usbmmap.c
                                            * usbmmap[endpoint buffer variable] -> usb9/hid/cdc/etc class code              C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * Data mapping provides a means for direct addressing of BDT and endpoint       C:\opensprints\FW\system\usb\usbmmap.c
                                            * buffer. This means less usage of pointers, which equates to a faster and      C:\opensprints\FW\system\usb\usbmmap.c
                                            * smaller program code.                                                         C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           /** I N C L U D E S **********************************************************/  C:\opensprints\FW\system\usb\usbmmap.c
                                           #include "system\typedefs.h"                                                     C:\opensprints\FW\system\usb\usbmmap.c
                                           #include "system\usb\usb.h"                                                      C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           /** U S B  G L O B A L  V A R I A B L E S ************************************/  C:\opensprints\FW\system\usb\usbmmap.c
                                           #pragma udata                                                                    C:\opensprints\FW\system\usb\usbmmap.c
                                           byte usb_device_state;          // Device States: DETACHED, ATTACHED, ...        C:\opensprints\FW\system\usb\usbmmap.c
                                           USB_DEVICE_STATUS usb_stat;     // Global USB flags                              C:\opensprints\FW\system\usb\usbmmap.c
                                           byte usb_active_cfg;            // Value of current configuration                C:\opensprints\FW\system\usb\usbmmap.c
                                           byte usb_alt_intf[MAX_NUM_INT]; // Array to keep track of the current alternate  C:\opensprints\FW\system\usb\usbmmap.c
                                                                           // setting for each interface ID                 C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           /** U S B  F I X E D  L O C A T I O N  V A R I A B L E S *********************/  C:\opensprints\FW\system\usb\usbmmap.c
                                           #pragma udata usbram4=0x400     //See Linker Script,usb4:0x400-0x4FF(256-byte)   C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbmmap.c
                                            * Section A: Buffer Descriptor Table                                            C:\opensprints\FW\system\usb\usbmmap.c
                                            * - 0x400 - 0x4FF(max)                                                          C:\opensprints\FW\system\usb\usbmmap.c
                                            * - MAX_EP_NUMBER is defined in autofiles\usbcfg.h                              C:\opensprints\FW\system\usb\usbmmap.c
                                            * - BDT data type is defined in system\usb\usbmmap.h                            C:\opensprints\FW\system\usb\usbmmap.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(0 <= MAX_EP_NUMBER)                                                          C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep0Bo;         //Endpoint #0 BD Out                             C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep0Bi;         //Endpoint #0 BD In                              C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(1 <= MAX_EP_NUMBER)                                                          C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep1Bo;         //Endpoint #1 BD Out                             C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep1Bi;         //Endpoint #1 BD In                              C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(2 <= MAX_EP_NUMBER)                                                          C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep2Bo;         //Endpoint #2 BD Out                             C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep2Bi;         //Endpoint #2 BD In                              C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(3 <= MAX_EP_NUMBER)                                                          C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep3Bo;         //Endpoint #3 BD Out                             C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep3Bi;         //Endpoint #3 BD In                              C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(4 <= MAX_EP_NUMBER)                                                          C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep4Bo;         //Endpoint #4 BD Out                             C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep4Bi;         //Endpoint #4 BD In                              C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(5 <= MAX_EP_NUMBER)                                                          C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep5Bo;         //Endpoint #5 BD Out                             C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep5Bi;         //Endpoint #5 BD In                              C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(6 <= MAX_EP_NUMBER)                                                          C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep6Bo;         //Endpoint #6 BD Out                             C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep6Bi;         //Endpoint #6 BD In                              C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(7 <= MAX_EP_NUMBER)                                                          C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep7Bo;         //Endpoint #7 BD Out                             C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep7Bi;         //Endpoint #7 BD In                              C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(8 <= MAX_EP_NUMBER)                                                          C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep8Bo;         //Endpoint #8 BD Out                             C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep8Bi;         //Endpoint #8 BD In                              C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(9 <= MAX_EP_NUMBER)                                                          C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep9Bo;         //Endpoint #9 BD Out                             C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep9Bi;         //Endpoint #9 BD In                              C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(10 <= MAX_EP_NUMBER)                                                         C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep10Bo;        //Endpoint #10 BD Out                            C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep10Bi;        //Endpoint #10 BD In                             C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(11 <= MAX_EP_NUMBER)                                                         C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep11Bo;        //Endpoint #11 BD Out                            C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep11Bi;        //Endpoint #11 BD In                             C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(12 <= MAX_EP_NUMBER)                                                         C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep12Bo;        //Endpoint #12 BD Out                            C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep12Bi;        //Endpoint #12 BD In                             C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(13 <= MAX_EP_NUMBER)                                                         C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep13Bo;        //Endpoint #13 BD Out                            C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep13Bi;        //Endpoint #13 BD In                             C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(14 <= MAX_EP_NUMBER)                                                         C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep14Bo;        //Endpoint #14 BD Out                            C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep14Bi;        //Endpoint #14 BD In                             C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           #if(15 <= MAX_EP_NUMBER)                                                         C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep15Bo;        //Endpoint #15 BD Out                            C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far BDT ep15Bi;        //Endpoint #15 BD In                             C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbmmap.c
                                            * Section B: EP0 Buffer Space                                                   C:\opensprints\FW\system\usb\usbmmap.c
                                            ******************************************************************************  C:\opensprints\FW\system\usb\usbmmap.c
                                            * - Two buffer areas are defined:                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            *   A. CTRL_TRF_SETUP                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                            *      - Size = EP0_BUFF_SIZE as defined in autofiles\usbcfg.h                  C:\opensprints\FW\system\usb\usbmmap.c
                                            *      - Detailed data structure allows direct adddressing of bits and bytes.   C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            *   B. CTRL_TRF_DATA                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                            *      - Size = EP0_BUFF_SIZE as defined in autofiles\usbcfg.h                  C:\opensprints\FW\system\usb\usbmmap.c
                                            *      - Data structure allows direct adddressing of the first 8 bytes.         C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            * - Both data types are defined in system\usb\usbdefs\usbdefs_ep0_buff.h        C:\opensprints\FW\system\usb\usbmmap.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far CTRL_TRF_SETUP SetupPkt;                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far CTRL_TRF_DATA CtrlTrfData;                                          C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbmmap.c
                                            * Section C: CDC Buffer                                                         C:\opensprints\FW\system\usb\usbmmap.c
                                            ******************************************************************************  C:\opensprints\FW\system\usb\usbmmap.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbmmap.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbmmap.c
                                           #pragma udata usbram5a=0x500    //See Linker Script,usb5:0x500-...               C:\opensprints\FW\system\usb\usbmmap.c
                                           #if defined(USB_USE_CDC)                                                         C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far unsigned char cdc_notice[CDC_INT_EP_SIZE];                          C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far unsigned char cdc_data_rx[CDC_BULK_OUT_EP_SIZE];                    C:\opensprints\FW\system\usb\usbmmap.c
                                           volatile far unsigned char cdc_data_tx[CDC_BULK_IN_EP_SIZE];                     C:\opensprints\FW\system\usb\usbmmap.c
                                           #endif                                                                           C:\opensprints\FW\system\usb\usbmmap.c
                                           #pragma udata                                                                    C:\opensprints\FW\system\usb\usbmmap.c
                                                                                                                            C:\opensprints\FW\system\usb\usbmmap.c
                                           /** EOF usbmmap.c ************************************************************/  C:\opensprints\FW\system\usb\usbmmap.c
                                           /*********************************************************************           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *********************************************************************           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * FileName:        usbdrv.c                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Dependencies:    See INCLUDES section below                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Processor:       PIC18                                                        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Compiler:        C18 2.30.01+                                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Company:         Microchip Technology, Inc.                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Software License Agreement                                                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * civil liability for the breach of the terms and conditions of this            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * license.                                                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Author               Date        Comment                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            ********************************************************************/           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /** I N C L U D E S **********************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           #include <p18cxxx.h>                                                             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           #include "system\typedefs.h"                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           #include "system\usb\usb.h"                                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           #include "io_cfg.h"             // Required for USBCheckBusStatus()              C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /** V A R I A B L E S ********************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           #pragma udata                                                                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBModuleEnable(void);                                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBModuleDisable(void);                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBSuspend(void);                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBWakeFromSuspend(void);                                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBProtocolResetHandler(void);                                              C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USB_SOF_Handler(void);                                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBStallHandler(void);                                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBErrorHandler(void);                                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           #pragma code                                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBCheckBusStatus(void)                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This routine enables/disables the USB module by monitoring   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  the USB power signal.                                        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBCheckBusStatus(void)                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /**************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * Bus Attachment & Detachment Detection                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * usb_bus_sense is an i/o pin defined in io_cfg.h                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               #define USB_BUS_ATTACHED    1                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               #define USB_BUS_DETACHED    0                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               if(usb_bus_sense == USB_BUS_ATTACHED)       // Is USB bus attached?          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               {                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00479c   a66d     BTFSS     0x6d,0x3,0x0           if(UCONbits.USBEN == 0)                 // Is the module off?            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00479e   d810     RCALL     0x47c0                     USBModuleEnable();                  // Is off, enable it             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               }                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047a0   d002     BRA       0x47a6             else                                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               {                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047a2   b66d     BTFSC     0x6d,0x3,0x0           if(UCONbits.USBEN == 1)                 // Is the module on?             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047a4   d814     RCALL     0x47ce                     USBModuleDisable();                 // Is on, disable it             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               }//end if(usb_bus_sense...)                                                  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * After enabling the USB module, it takes some time for the voltage         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * on the D+ or D- line to rise high enough to get out of the SE0 condition. C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * The USB Reset interrupt should not be unmasked until the SE0 condition is C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * cleared. This helps preventing the firmware from misinterpreting this     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * unique event as a USB bus reset from the USB host.                        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047a6   0101     MOVLB     0x1                if(usb_device_state == ATTACHED_STATE)                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047a8   05a3     DECF      0xa3,0x0,0x1                                                                                    
0047aa   e109     BNZ       0x47be                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047ac   ba6d     BTFSC     0x6d,0x5,0x0           if(!UCONbits.SE0)                                                        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047ae   d007     BRA       0x47be                                                                                          
                                                   {                                                                        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047b0   6a68     CLRF      0x68,0x0                   UIR = 0;                        // Clear all USB interrupts          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047b2   6a69     CLRF      0x69,0x0                   UIE = 0;                        // Mask all USB interrupts           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047b4   8069     BSF       0x69,0x0,0x0               UIEbits.URSTIE = 1;             // Unmask RESET interrupt            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047b6   8869     BSF       0x69,0x4,0x0               UIEbits.IDLEIE = 1;             // Unmask IDLE interrupt             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047b8   0101     MOVLB     0x1                        usb_device_state = POWERED_STATE;                                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047ba   0e02     MOVLW     0x2                                                                                             
0047bc   6fa3     MOVWF     0xa3,0x1                                                                                        
                                                   }//end if                           // else wait until SE0 is cleared    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               }//end if(usb_device_state == ATTACHED_STATE)                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047be   0012     RETURN    0x0            }//end USBCheckBusStatus                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBModuleEnable(void)                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This routine enables the USB module.                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  An end designer should never have to call this routine       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  manually. This routine should only be called from            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  USBCheckBusStatus().                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Note:            See USBCheckBusStatus() for more information.                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBModuleEnable(void)                                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047c0   6a6d     CLRF      0x6d,0x0           UCON = 0;                                                                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047c2   6a69     CLRF      0x69,0x0           UIE = 0;                                // Mask all USB interrupts           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047c4   866d     BSF       0x6d,0x3,0x0       UCONbits.USBEN = 1;                     // Enable module & attach to bus     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047c6   0101     MOVLB     0x1                usb_device_state = ATTACHED_STATE;      // Defined in usbmmap.c & .h         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047c8   0e01     MOVLW     0x1                                                                                             
0047ca   6fa3     MOVWF     0xa3,0x1                                                                                        
0047cc   0012     RETURN    0x0            }//end USBModuleEnable                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBModuleDisable(void)                                  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This routine disables the USB module.                        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  An end designer should never have to call this routine       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  manually. This routine should only be called from            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  USBCheckBusStatus().                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Note:            See USBCheckBusStatus() for more information.                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBModuleDisable(void)                                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047ce   6a6d     CLRF      0x6d,0x0           UCON = 0;                               // Disable module & detach from bus  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047d0   6a69     CLRF      0x69,0x0           UIE = 0;                                // Mask all USB interrupts           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047d2   0101     MOVLB     0x1                usb_device_state = DETACHED_STATE;      // Defined in usbmmap.c & .h         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047d4   6ba3     CLRF      0xa3,0x1                                                                                        
0047d6   0012     RETURN    0x0            }//end USBModuleDisable                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBSoftDetach(void)                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    The device will have to be re-enumerated to function again.  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Overview:        USBSoftDetach electrically disconnects the device from       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  the bus. This is done by stop supplying Vusb voltage to      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  pull-up resistor. The pull-down resistors on the host        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  side will pull both differential signal lines low and        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  the host registers the event as a disconnect.                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  Since the USB cable is not physically disconnected, the      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  power supply through the cable can still be sensed by        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  the device. The next time USBCheckBusStatus() function       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  is called, it will reconnect the device back to the bus.     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBSoftDetach(void)                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047d8   dffa     RCALL     0x47ce             USBModuleDisable();                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047da   0012     RETURN    0x0            }//end USBSoftDetach                                                             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBDriverService(void)                                  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This routine is the heart of this firmware. It manages       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  all USB interrupts.                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Note:            Device state transitions through the following stages:       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  DETACHED -> ATTACHED -> POWERED -> DEFAULT ->                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  ADDRESS_PENDING -> ADDRESSED -> CONFIGURED -> READY          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBDriverService(void)                                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * Pointless to continue servicing if USB cable is not even attached.        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047dc   0101     MOVLB     0x1                if(usb_device_state == DETACHED_STATE) return;                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047de   51a3     MOVF      0xa3,0x0,0x1                                                                                    
0047e0   e101     BNZ       0x47e4                                                                                          
0047e2   d03a     BRA       0x4858                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * Task A: Service USB Activity Interrupt                                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047e4   5068     MOVF      0x68,0x0,0x0       if(UIRbits.ACTVIF && UIEbits.ACTVIE)    USBWakeFromSuspend();                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047e6   0b04     ANDLW     0x4                                                                                             
0047e8   e004     BZ        0x47f2                                                                                          
0047ea   5069     MOVF      0x69,0x0,0x0                                                                                    
0047ec   0b04     ANDLW     0x4                                                                                             
0047ee   e001     BZ        0x47f2                                                                                          
0047f0   d83c     RCALL     0x486a                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * Pointless to continue servicing if the device is in suspend mode.         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047f2   b26d     BTFSC     0x6d,0x1,0x0       if(UCONbits.SUSPND==1) return;                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047f4   d031     BRA       0x4858                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * Task B: Service USB Bus Reset Interrupt.                                  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * When bus reset is received during suspend, ACTVIF will be set first,      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * once the UCONbits.SUSPND is clear, then the URSTIF bit will be asserted.  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * This is why URSTIF is checked after ACTVIF.                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047f6   5068     MOVF      0x68,0x0,0x0       if(UIRbits.URSTIF && UIEbits.URSTIE)    USBProtocolResetHandler();           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0047f8   0b01     ANDLW     0x1                                                                                             
0047fa   e004     BZ        0x4804                                                                                          
0047fc   5069     MOVF      0x69,0x0,0x0                                                                                    
0047fe   0b01     ANDLW     0x1                                                                                             
004800   e001     BZ        0x4804                                                                                          
004802   d856     RCALL     0x48b0                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * Task C: Service other USB interrupts                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004804   5068     MOVF      0x68,0x0,0x0       if(UIRbits.IDLEIF && UIEbits.IDLEIE)    USBSuspend();                        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004806   0b10     ANDLW     0x10                                                                                            
004808   e004     BZ        0x4812                                                                                          
00480a   5069     MOVF      0x69,0x0,0x0                                                                                    
00480c   0b10     ANDLW     0x10                                                                                            
00480e   e001     BZ        0x4812                                                                                          
004810   d824     RCALL     0x485a                                                                                          
004812   5068     MOVF      0x68,0x0,0x0       if(UIRbits.SOFIF && UIEbits.SOFIE)      USB_SOF_Handler();                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004814   0b40     ANDLW     0x40                                                                                            
004816   e004     BZ        0x4820                                                                                          
004818   5069     MOVF      0x69,0x0,0x0                                                                                    
00481a   0b40     ANDLW     0x40                                                                                            
00481c   e001     BZ        0x4820                                                                                          
00481e   d83d     RCALL     0x489a                                                                                          
004820   5068     MOVF      0x68,0x0,0x0       if(UIRbits.STALLIF && UIEbits.STALLIE)  USBStallHandler();                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004822   0b20     ANDLW     0x20                                                                                            
004824   e004     BZ        0x482e                                                                                          
004826   5069     MOVF      0x69,0x0,0x0                                                                                    
004828   0b20     ANDLW     0x20                                                                                            
00482a   e001     BZ        0x482e                                                                                          
00482c   d838     RCALL     0x489e                                                                                          
00482e   5068     MOVF      0x68,0x0,0x0       if(UIRbits.UERRIF && UIEbits.UERRIE)    USBErrorHandler();                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004830   0b02     ANDLW     0x2                                                                                             
004832   e004     BZ        0x483c                                                                                          
004834   5069     MOVF      0x69,0x0,0x0                                                                                    
004836   0b02     ANDLW     0x2                                                                                             
004838   e001     BZ        0x483c                                                                                          
00483a   d838     RCALL     0x48ac                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * Pointless to continue servicing if the host has not sent a bus reset.     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * Once bus reset is received, the device transitions into the DEFAULT       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * state and is ready for communication.                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00483c   0e03     MOVLW     0x3                if(usb_device_state < DEFAULT_STATE) return;                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00483e   0101     MOVLB     0x1                                                                                             
004840   5da3     SUBWF     0xa3,0x0,0x1                                                                                    
004842   e201     BC        0x4846                                                                                          
004844   d009     BRA       0x4858                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * Task D: Servicing USB Transaction Complete Interrupt                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004846   5068     MOVF      0x68,0x0,0x0       if(UIRbits.TRNIF && UIEbits.TRNIE)                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004848   0b08     ANDLW     0x8                                                                                             
00484a   e006     BZ        0x4858                                                                                          
00484c   5069     MOVF      0x69,0x0,0x0                                                                                    
00484e   0b08     ANDLW     0x8                                                                                             
004850   e003     BZ        0x4858                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                   /*                                                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                    * USBCtrlEPService only services transactions over EP0.                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                    * It ignores all other EP transactions.                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                    */                                                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004852   eca2     CALL      0x4144,0x0             USBCtrlEPService();                                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004854   f020                                                                                                               
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                   /*                                                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                    * Other EP can be serviced later by responsible device class firmware.  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                    * Each device driver knows when an OUT or IN transaction is ready by    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                    * checking the buffer ownership bit.                                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                    * An OUT EP should always be owned by SIE until the data is ready.      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                    * An IN EP should always be owned by CPU until the data is ready.       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                    *                                                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                    * Because of this logic, it is not necessary to save the USTAT value    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                    * of non-EP0 transactions.                                              C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                    */                                                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004856   9668     BCF       0x68,0x3,0x0           UIRbits.TRNIF = 0;                                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               }//end if(UIRbits.TRNIF && UIEbits.TRNIE)                                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004858   0012     RETURN    0x0            }//end USBDriverService                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBSuspend(void)                                        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Overview:                                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBSuspend(void)                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * NOTE: Do not clear UIRbits.ACTVIF here!                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * Reason:                                                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * ACTVIF is only generated once an IDLEIF has been generated.               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * This is a 1:1 ratio interrupt generation.                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * For every IDLEIF, there will be only one ACTVIF regardless of             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * the number of subsequent bus transitions.                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * If the ACTIF is cleared here, a problem could occur when:                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * [       IDLE       ][bus activity ->                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * <--- 3 ms ----->     ^                                                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *                ^     ACTVIF=1                                             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *                IDLEIF=1                                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *  #           #           #           #   (#=Program polling flags)        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *                          ^                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *                          This polling loop will see both                  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *                          IDLEIF=1 and ACTVIF=1.                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *                          However, the program services IDLEIF first       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *                          because ACTIVIE=0.                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *                          If this routine clears the only ACTIVIF,         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *                          then it can never get out of the suspend         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                *                          mode.                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00485a   8469     BSF       0x69,0x2,0x0       UIEbits.ACTVIE = 1;                     // Enable bus activity interrupt     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00485c   9868     BCF       0x68,0x4,0x0       UIRbits.IDLEIF = 0;                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00485e   826d     BSF       0x6d,0x1,0x0       UCONbits.SUSPND = 1;                    // Put USB module in power conserve  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                       // mode, SIE clock inactive          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * At this point the PIC can go into sleep,idle, or                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * switch to a slower clock, etc.                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /* Modifiable Section */                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004860   9aa1     BCF       0xa1,0x5,0x0       PIR2bits.USBIF = 0;                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004862   8aa0     BSF       0xa0,0x5,0x0       PIE2bits.USBIE = 1;                     // Set USB wakeup source             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004864   0003     SLEEP                        Sleep();                                // Goto sleep                        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004866   9aa0     BCF       0xa0,0x5,0x0       PIE2bits.USBIE = 0;                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /* End Modifiable Section */                                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004868   0012     RETURN    0x0            }//end USBSuspend                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBWakeFromSuspend(void)                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Overview:                                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBWakeFromSuspend(void)                                                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * If using clock switching, this is the place to restore the                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * original clock frequency.                                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00486a   926d     BCF       0x6d,0x1,0x0       UCONbits.SUSPND = 0;                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00486c   9469     BCF       0x69,0x2,0x0       UIEbits.ACTVIE = 0;                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00486e   9468     BCF       0x68,0x2,0x0       UIRbits.ACTVIF = 0;                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004870   0012     RETURN    0x0            }//end USBWakeFromSuspend                                                        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBRemoteWakeup(void)                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This function should be called by user when the device       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  is waken up by an external stimulus other than ACTIVIF.      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  Please read the note below to understand the limitations.    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Note:            The modifiable section in this routine should be changed     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  to meet the application needs. Current implementation        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  temporary blocks other functions from executing for a        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  period of 1-13 ms depending on the core frequency.           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  According to USB 2.0 specification section 7.1.7.7,          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  "The remote wakeup device must hold the resume signaling     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  for at lest 1 ms but for no more than 15 ms."                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  The idea here is to use a delay counter loop, using a        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  common value that would work over a wide range of core       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  frequencies.                                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  That value selected is 1800. See table below:                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  ==========================================================   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  Core Freq(MHz)      MIP         RESUME Signal Period (ms)    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  ==========================================================   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                      48              12          1.05                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                       4              1           12.6                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  ==========================================================   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  * These timing could be incorrect when using code            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                    optimization or extended instruction mode,                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                    or when having other interrupts enabled.                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                    Make sure to verify using the MPLAB SIM's Stopwatch        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBRemoteWakeup(void)                                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               static word delay_count;                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004872   0101     MOVLB     0x1                if(usb_stat.RemoteWakeup == 1)          // Check if RemoteWakeup function    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004874   a1a4     BTFSS     0xa4,0x0,0x1                                                                                    
004876   d010     BRA       0x4898                                                                                          
                                               {                                       // has been enabled by the host.     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004878   dff8     RCALL     0x486a                 USBWakeFromSuspend();               // Unsuspend USB modue               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00487a   846d     BSF       0x6d,0x2,0x0           UCONbits.RESUME = 1;                // Start RESUME signaling            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                   /* Modifiable Section */                                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00487c   0101     MOVLB     0x1                    delay_count = 1800U;                // Set RESUME line for 1-13 ms       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00487e   0e08     MOVLW     0x8                                                                                             
004880   6fa7     MOVWF     0xa7,0x1                                                                                        
004882   0e07     MOVLW     0x7                                                                                             
004884   6fa8     MOVWF     0xa8,0x1                                                                                        
                                                   do                                                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                   {                                                                        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004886   0101     MOVLB     0x1                        delay_count--;                                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004888   07a7     DECF      0xa7,0x1,0x1                                                                                    
00488a   0e00     MOVLW     0x0                                                                                             
00488c   5ba8     SUBWFB    0xa8,0x1,0x1                                                                                    
00488e   0101     MOVLB     0x1                    }while(delay_count);                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004890   51a7     MOVF      0xa7,0x0,0x1                                                                                    
004892   11a8     IORWF     0xa8,0x0,0x1                                                                                    
004894   e1f8     BNZ       0x4886                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                   /* End Modifiable Section */                                             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004896   946d     BCF       0x6d,0x2,0x0           UCONbits.RESUME = 0;                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               }//endif                                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004898   0012     RETURN    0x0            }//end USBRemoteWakeup                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USB_SOF_Handler(void)                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Overview:        The USB host sends out a SOF packet to full-speed devices    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  every 1 ms. This interrupt may be useful for isochronous     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  pipes. End designers should implement callback routine       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  as necessary.                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USB_SOF_Handler(void)                                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /* Callback routine here */                                                  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00489a   9c68     BCF       0x68,0x6,0x0       UIRbits.SOFIF = 0;                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00489c   0012     RETURN    0x0            }//end USB_SOF_Handler                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBStallHandler(void)                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    A STALL packet is sent to the host by the SIE.               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Overview:        The STALLIF is set anytime the SIE sends out a STALL         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  packet regardless of which endpoint causes it.               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  A Setup transaction overrides the STALL function. A stalled  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  endpoint stops stalling once it receives a setup packet.     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  In this case, the SIE will accepts the Setup packet and      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  set the TRNIF flag to notify the firmware. STALL function    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  for that particular endpoint pipe will be automatically      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  disabled (direction specific).                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  There are a few reasons for an endpoint to be stalled.       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  1. When a non-supported USB request is received.             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                     Example: GET_DESCRIPTOR(DEVICE_QUALIFIER)                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  2. When an endpoint is currently halted.                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  3. When the device class specifies that an endpoint must     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                     stall in response to a specific event.                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                     Example: Mass Storage Device Class                        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                              If the CBW is not valid, the device shall        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                              STALL the Bulk-In pipe.                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                              See USB Mass Storage Class Bulk-only Transport   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                              Specification for more details.                  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Note:            UEPn.EPSTALL can be scanned to see which endpoint causes     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  the stall event.                                             C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  If                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBStallHandler(void)                                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * Does not really have to do anything here,                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * even for the control endpoint.                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * All BDs of Endpoint 0 are owned by SIE right now,                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * but once a Setup Transaction is received, the ownership                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * for EP0_OUT will be returned to CPU.                                      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * When the Setup Transaction is serviced, the ownership                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                * for EP0_IN will then be forced back to CPU by firmware.                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00489e   a070     BTFSS     0x70,0x0,0x0       if(UEP0bits.EPSTALL == 1)                                                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048a0   d003     BRA       0x48a8                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048a2   ec2f     CALL      0x445e,0x0             USBPrepareForNextSetupTrf();        // Firmware work-around              C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048a4   f022                                                                                                               
0048a6   9070     BCF       0x70,0x0,0x0           UEP0bits.EPSTALL = 0;                                                    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                               }                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048a8   9a68     BCF       0x68,0x5,0x0       UIRbits.STALLIF = 0;                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048aa   0012     RETURN    0x0            }//end USBStallHandler                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBErrorHandler(void)                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Overview:        The purpose of this interrupt is mainly for debugging        C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  during development. Check UEIR to see which error causes     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  the interrupt.                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBErrorHandler(void)                                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048ac   9268     BCF       0x68,0x1,0x0       UIRbits.UERRIF = 0;                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048ae   0012     RETURN    0x0            }//end USBErrorHandler                                                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBProtocolResetHandler(void)                           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    A USB bus reset is received from the host.                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    Currently, this routine flushes any pending USB              C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  transactions. It empties out the USTAT FIFO. This action     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  might not be desirable in some applications.                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Overview:        Once a USB bus reset is received from the host, this         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  routine should be called. It resets the device address to    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  zero, disables all non-EP0 endpoints, initializes EP0 to     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  be ready for default communication, clears all USB           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  interrupt flags, unmasks applicable USB interrupts, and      C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                  reinitializes internal state-machine variables.              C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           void USBProtocolResetHandler(void)                                               C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048b0   6a6a     CLRF      0x6a,0x0           UEIR = 0;                       // Clear all USB error flags                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048b2   6a68     CLRF      0x68,0x0           UIR = 0;                        // Clears all USB interrupts                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048b4   0e9f     MOVLW     0x9f               UEIE = 0b10011111;              // Unmask all USB error interrupts           C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048b6   6e6b     MOVWF     0x6b,0x0                                                                                        
0048b8   0e7b     MOVLW     0x7b               UIE = 0b01111011;               // Enable all interrupts except ACTVIE       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048ba   6e69     MOVWF     0x69,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048bc   6a6e     CLRF      0x6e,0x0           UADDR = 0x00;                   // Reset to default address                  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048be   0e0f     MOVLW     0xf                mDisableEP1to15();              // Reset all non-EP0 UEPn registers          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048c0   6ee6     MOVWF     0xe6,0x0                                                                                        
0048c2   0e71     MOVLW     0x71                                                                                            
0048c4   6ee6     MOVWF     0xe6,0x0                                                                                        
0048c6   0e0f     MOVLW     0xf                                                                                             
0048c8   6ee6     MOVWF     0xe6,0x0                                                                                        
0048ca   d814     RCALL     0x48f4                                                                                          
0048cc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0048ce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0048d0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0048d2   0e16     MOVLW     0x16               UEP0 = EP_CTRL|HSHK_EN;         // Init EP0 as a Ctrl EP, see usbdrv.h       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048d4   6e70     MOVWF     0x70,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048d6   a668     BTFSS     0x68,0x3,0x0       while(UIRbits.TRNIF == 1)       // Flush any pending transactions            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048d8   d002     BRA       0x48de                                                                                          
0048dc   d7fc     BRA       0x48d6                                                                                          
0048da   9668     BCF       0x68,0x3,0x0           UIRbits.TRNIF = 0;                                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048de   986d     BCF       0x6d,0x4,0x0       UCONbits.PKTDIS = 0;            // Make sure packet processing is enabled    C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048e0   ec2f     CALL      0x445e,0x0         USBPrepareForNextSetupTrf();    // Declared in usbctrltrf.c                  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048e2   f022                                                                                                               
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048e4   0101     MOVLB     0x1                usb_stat.RemoteWakeup = 0;      // Default status flag to disable            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048e6   91a4     BCF       0xa4,0x0,0x1                                                                                    
0048e8   0101     MOVLB     0x1                usb_active_cfg = 0;             // Clear active configuration                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048ea   6ba5     CLRF      0xa5,0x1                                                                                        
0048ec   0101     MOVLB     0x1                usb_device_state = DEFAULT_STATE;                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048ee   0e03     MOVLW     0x3                                                                                             
0048f0   6fa3     MOVWF     0xa3,0x1                                                                                        
0048f2   0012     RETURN    0x0            }//end USBProtocolResetHandler                                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /* Auxiliary Function */                                                         C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048f4   cfd9     MOVFF     0xfd9,0xfe6    void ClearArray(byte* startAdr,byte count)                                       C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048f6   ffe6                                                                                                               
0048f8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0048fa   ffd9                                                                                                               
                                           {                                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048fc   0efd     MOVLW     0xfd               *startAdr;                                                                   C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
0048fe   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004900   ffe9                                                                                                               
004902   0efe     MOVLW     0xfe                                                                                            
004904   cfdb     MOVFF     0xfdb,0xfea                                                                                     
004906   ffea                                                                                                               
004908   0efc     MOVLW     0xfc               while(count)                                                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00490a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00490c   e004     BZ        0x4916                                                                                          
004914   d7f9     BRA       0x4908                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                   _asm                                                                     C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
00490e   6aee     CLRF      0xee,0x0               clrf POSTINC0,0                                                          C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                                   _endasm                                                                  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004910   0efc     MOVLW     0xfc                   count--;                                                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004912   06db     DECF      0xdb,0x1,0x0                                                                                    
                                               }//end while                                                                 C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004916   52e5     MOVF      0xe5,0x1,0x0   }//end ClearArray                                                                C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
004918   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00491a   ffd9                                                                                                               
00491c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /** EOF usbdrv.c *************************************************************/  C:\opensprints\FW\system\usb\usbdrv\usbdrv.c
                                           /*********************************************************************           C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *********************************************************************           C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * FileName:        usb9.c                                                       C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Dependencies:    See INCLUDES section below                                   C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Processor:       PIC18                                                        C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Compiler:        C18 2.30.01+                                                 C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Company:         Microchip Technology, Inc.                                   C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Software License Agreement                                                    C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * civil liability for the breach of the terms and conditions of this            C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * license.                                                                      C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Author               Date        Comment                                      C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\opensprints\FW\system\usb\usb9\usb9.c
                                            ********************************************************************/           C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                           /** I N C L U D E S **********************************************************/  C:\opensprints\FW\system\usb\usb9\usb9.c
                                           #include <p18cxxx.h>                                                             C:\opensprints\FW\system\usb\usb9\usb9.c
                                           #include "system\typedefs.h"                                                     C:\opensprints\FW\system\usb\usb9\usb9.c
                                           #include "system\usb\usb.h"                                                      C:\opensprints\FW\system\usb\usb9\usb9.c
                                           #include "io_cfg.h"                     // Required for self_power status        C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                           /** V A R I A B L E S ********************************************************/  C:\opensprints\FW\system\usb\usb9\usb9.c
                                           #pragma udata                                                                    C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\opensprints\FW\system\usb\usb9\usb9.c
                                           void USBStdGetDscHandler(void);                                                  C:\opensprints\FW\system\usb\usb9\usb9.c
                                           void USBStdSetCfgHandler(void);                                                  C:\opensprints\FW\system\usb\usb9\usb9.c
                                           void USBStdGetStatusHandler(void);                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                           void USBStdFeatureReqHandler(void);                                              C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\opensprints\FW\system\usb\usb9\usb9.c
                                           #pragma code                                                                     C:\opensprints\FW\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Function:        void USBCheckStdRequest(void)                                C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Overview:        This routine checks the setup data packet to see if it       C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                  knows how to handle it                                       C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usb9\usb9.c
                                           void USBCheckStdRequest(void)                                                    C:\opensprints\FW\system\usb\usb9\usb9.c
                                           {                                                                                C:\opensprints\FW\system\usb\usb9\usb9.c
00447e   0104     MOVLB     0x4                if(SetupPkt.RequestType != STANDARD) return;                                 C:\opensprints\FW\system\usb\usb9\usb9.c
004480   5120     MOVF      0x20,0x0,0x1                                                                                    
004482   0b60     ANDLW     0x60                                                                                            
004484   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
004486   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
004488   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
00448a   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
00448c   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
00448e   0900     IORLW     0x0                                                                                             
004490   e001     BZ        0x4494                                                                                          
004492   d058     BRA       0x4544                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
004494   0104     MOVLB     0x4                switch(SetupPkt.bRequest)                                                    C:\opensprints\FW\system\usb\usb9\usb9.c
004496   5121     MOVF      0x21,0x0,0x1                                                                                    
004498   0a07     XORLW     0x7                                                                                             
00449a   e053     BZ        0x4542                                                                                          
00449c   0a0b     XORLW     0xb                                                                                             
00449e   e051     BZ        0x4542                                                                                          
0044a0   0a07     XORLW     0x7                                                                                             
0044a2   e042     BZ        0x4528                                                                                          
0044a4   0a01     XORLW     0x1                                                                                             
0044a6   e02c     BZ        0x4500                                                                                          
0044a8   0a0b     XORLW     0xb                                                                                             
0044aa   e028     BZ        0x44fc                                                                                          
0044ac   0a02     XORLW     0x2                                                                                             
0044ae   e026     BZ        0x44fc                                                                                          
0044b0   0a03     XORLW     0x3                                                                                             
0044b2   e022     BZ        0x44f8                                                                                          
0044b4   0a08     XORLW     0x8                                                                                             
0044b6   e012     BZ        0x44dc                                                                                          
0044b8   0a01     XORLW     0x1                                                                                             
0044ba   e00e     BZ        0x44d8                                                                                          
0044bc   0a0f     XORLW     0xf                                                                                             
0044be   e00a     BZ        0x44d4                                                                                          
0044c0   0a03     XORLW     0x3                                                                                             
0044c2   e001     BZ        0x44c6                                                                                          
0044c4   d03e     BRA       0x4542                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case SET_ADR:                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
0044c6   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\opensprints\FW\system\usb\usb9\usb9.c
0044c8   0e01     MOVLW     0x1                                                                                             
0044ca   6ff9     MOVWF     0xf9,0x1                                                                                        
0044cc   0101     MOVLB     0x1                        usb_device_state = ADR_PENDING_STATE;       // Update state only     C:\opensprints\FW\system\usb\usb9\usb9.c
0044ce   0e04     MOVLW     0x4                                                                                             
0044d0   6fa3     MOVWF     0xa3,0x1                                                                                        
                                                       /* See USBCtrlTrfInHandler() in usbctrltrf.c for the next step */    C:\opensprints\FW\system\usb\usb9\usb9.c
0044d2   d038     BRA       0x4544                     break;                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case GET_DSC:                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
0044d4   d838     RCALL     0x4546                     USBStdGetDscHandler();                                               C:\opensprints\FW\system\usb\usb9\usb9.c
0044d6   d036     BRA       0x4544                     break;                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case SET_CFG:                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
0044d8   d893     RCALL     0x4600                     USBStdSetCfgHandler();                                               C:\opensprints\FW\system\usb\usb9\usb9.c
0044da   d034     BRA       0x4544                     break;                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case GET_CFG:                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
0044dc   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\opensprints\FW\system\usb\usb9\usb9.c
0044de   0e01     MOVLW     0x1                                                                                             
0044e0   6ff9     MOVWF     0xf9,0x1                                                                                        
0044e2   0100     MOVLB     0x0                        pSrc.bRam = (byte*)&usb_active_cfg;         // Set Source            C:\opensprints\FW\system\usb\usb9\usb9.c
0044e4   0ea5     MOVLW     0xa5                                                                                            
0044e6   6ffa     MOVWF     0xfa,0x1                                                                                        
0044e8   0e01     MOVLW     0x1                                                                                             
0044ea   6ffb     MOVWF     0xfb,0x1                                                                                        
0044ec   0101     MOVLB     0x1                        usb_stat.ctrl_trf_mem = _RAM;               // Set memory type       C:\opensprints\FW\system\usb\usb9\usb9.c
0044ee   93a4     BCF       0xa4,0x1,0x1                                                                                    
0044f0   0100     MOVLB     0x0                        LSB(wCount) = 1;                            // Set data count        C:\opensprints\FW\system\usb\usb9\usb9.c
0044f2   0e01     MOVLW     0x1                                                                                             
0044f4   6ffe     MOVWF     0xfe,0x1                                                                                        
0044f6   d026     BRA       0x4544                     break;                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case GET_STATUS:                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
0044f8   d8ab     RCALL     0x4650                     USBStdGetStatusHandler();                                            C:\opensprints\FW\system\usb\usb9\usb9.c
0044fa   d024     BRA       0x4544                     break;                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case CLR_FEATURE:                                                        C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case SET_FEATURE:                                                        C:\opensprints\FW\system\usb\usb9\usb9.c
0044fc   d8f9     RCALL     0x46f0                     USBStdFeatureReqHandler();                                           C:\opensprints\FW\system\usb\usb9\usb9.c
0044fe   d022     BRA       0x4544                     break;                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case GET_INTF:                                                           C:\opensprints\FW\system\usb\usb9\usb9.c
004500   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\opensprints\FW\system\usb\usb9\usb9.c
004502   0e01     MOVLW     0x1                                                                                             
004504   6ff9     MOVWF     0xf9,0x1                                                                                        
004506   0104     MOVLB     0x4                        pSrc.bRam = (byte*)&usb_alt_intf+SetupPkt.bIntfID;  // Set source    C:\opensprints\FW\system\usb\usb9\usb9.c
004508   5124     MOVF      0x24,0x0,0x1                                                                                    
00450a   0100     MOVLB     0x0                                                                                             
00450c   6ffa     MOVWF     0xfa,0x1                                                                                        
00450e   6bfb     CLRF      0xfb,0x1                                                                                        
004510   0ea6     MOVLW     0xa6                                                                                            
004512   0100     MOVLB     0x0                                                                                             
004514   27fa     ADDWF     0xfa,0x1,0x1                                                                                    
004516   0e01     MOVLW     0x1                                                                                             
004518   0100     MOVLB     0x0                                                                                             
00451a   23fb     ADDWFC    0xfb,0x1,0x1                                                                                    
00451c   0101     MOVLB     0x1                        usb_stat.ctrl_trf_mem = _RAM;               // Set memory type       C:\opensprints\FW\system\usb\usb9\usb9.c
00451e   93a4     BCF       0xa4,0x1,0x1                                                                                    
004520   0100     MOVLB     0x0                        LSB(wCount) = 1;                            // Set data count        C:\opensprints\FW\system\usb\usb9\usb9.c
004522   0e01     MOVLW     0x1                                                                                             
004524   6ffe     MOVWF     0xfe,0x1                                                                                        
004526   d00e     BRA       0x4544                     break;                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case SET_INTF:                                                           C:\opensprints\FW\system\usb\usb9\usb9.c
004528   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\opensprints\FW\system\usb\usb9\usb9.c
00452a   0e01     MOVLW     0x1                                                                                             
00452c   6ff9     MOVWF     0xf9,0x1                                                                                        
00452e   0104     MOVLB     0x4                        usb_alt_intf[SetupPkt.bIntfID] = SetupPkt.bAltID;                    C:\opensprints\FW\system\usb\usb9\usb9.c
004530   5124     MOVF      0x24,0x0,0x1                                                                                    
004532   6aea     CLRF      0xea,0x0                                                                                        
004534   0fa6     ADDLW     0xa6                                                                                            
004536   6ee9     MOVWF     0xe9,0x0                                                                                        
004538   0e01     MOVLW     0x1                                                                                             
00453a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00453c   c422     MOVFF     0x422,0xfef                                                                                     
00453e   ffef                                                                                                               
004540   d001     BRA       0x4544                     break;                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case SET_DSC:                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case SYNCH_FRAME:                                                        C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   default:                                                                 C:\opensprints\FW\system\usb\usb9\usb9.c
004542   d000     BRA       0x4544                     break;                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                               }//end switch                                                                C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
004544   0012     RETURN    0x0            }//end USBCheckStdRequest                                                        C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Function:        void USBStdGetDscHandler(void)                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Overview:        This routine handles the standard GET_DESCRIPTOR request.    C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                  It utilizes tables dynamically looks up descriptor size.     C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                  This routine should never have to be modified if the tables  C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                  in usbdsc.c are declared correctly.                          C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usb9\usb9.c
                                           void USBStdGetDscHandler(void)                                                   C:\opensprints\FW\system\usb\usb9\usb9.c
                                           {                                                                                C:\opensprints\FW\system\usb\usb9\usb9.c
004546   0e80     MOVLW     0x80               if(SetupPkt.bmRequestType == 0x80)                                           C:\opensprints\FW\system\usb\usb9\usb9.c
004548   0104     MOVLB     0x4                                                                                             
00454a   5d20     SUBWF     0x20,0x0,0x1                                                                                    
00454c   e158     BNZ       0x45fe                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
00454e   0104     MOVLB     0x4                    switch(SetupPkt.bDscType)                                                C:\opensprints\FW\system\usb\usb9\usb9.c
004550   5123     MOVF      0x23,0x0,0x1                                                                                    
004552   0a03     XORLW     0x3                                                                                             
004554   e034     BZ        0x45be                                                                                          
004556   0a01     XORLW     0x1                                                                                             
004558   e010     BZ        0x457a                                                                                          
00455a   0a03     XORLW     0x3                                                                                             
00455c   e001     BZ        0x4560                                                                                          
00455e   d04d     BRA       0x45fa                                                                                          
                                                   {                                                                        C:\opensprints\FW\system\usb\usb9\usb9.c
                                                       case DSC_DEV:                                                        C:\opensprints\FW\system\usb\usb9\usb9.c
004560   0100     MOVLB     0x0                            ctrl_trf_session_owner = MUID_USB9;                              C:\opensprints\FW\system\usb\usb9\usb9.c
004562   0e01     MOVLW     0x1                                                                                             
004564   6ff9     MOVWF     0xf9,0x1                                                                                        
004566   0100     MOVLB     0x0                            pSrc.bRom = (rom byte*)&device_dsc;                              C:\opensprints\FW\system\usb\usb9\usb9.c
004568   0e54     MOVLW     0x54                                                                                            
00456a   6ffa     MOVWF     0xfa,0x1                                                                                        
00456c   0e4b     MOVLW     0x4b                                                                                            
00456e   6ffb     MOVWF     0xfb,0x1                                                                                        
004570   0e12     MOVLW     0x12                           wCount._word = sizeof(device_dsc);          // Set data count    C:\opensprints\FW\system\usb\usb9\usb9.c
004572   0100     MOVLB     0x0                                                                                             
004574   6ffe     MOVWF     0xfe,0x1                                                                                        
004576   6bff     CLRF      0xff,0x1                                                                                        
004578   d040     BRA       0x45fa                         break;                                                           C:\opensprints\FW\system\usb\usb9\usb9.c
                                                       case DSC_CFG:                                                        C:\opensprints\FW\system\usb\usb9\usb9.c
00457a   0100     MOVLB     0x0                            ctrl_trf_session_owner = MUID_USB9;                              C:\opensprints\FW\system\usb\usb9\usb9.c
00457c   0e01     MOVLW     0x1                                                                                             
00457e   6ff9     MOVWF     0xf9,0x1                                                                                        
004580   0104     MOVLB     0x4                            pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);                    C:\opensprints\FW\system\usb\usb9\usb9.c
004582   5122     MOVF      0x22,0x0,0x1                                                                                    
004584   6ef6     MOVWF     0xf6,0x0                                                                                        
004586   6af7     CLRF      0xf7,0x0                                                                                        
004588   90d8     BCF       0xd8,0x0,0x0                                                                                    
00458a   36f6     RLCF      0xf6,0x1,0x0                                                                                    
00458c   36f7     RLCF      0xf7,0x1,0x0                                                                                    
00458e   0e15     MOVLW     0x15                                                                                            
004590   26f6     ADDWF     0xf6,0x1,0x0                                                                                    
004592   0e4c     MOVLW     0x4c                                                                                            
004594   22f7     ADDWFC    0xf7,0x1,0x0                                                                                    
004596   0009     TBLRDPOSTINC                                                                                              
004598   cff5     MOVFF     0xff5,0xfa                                                                                      
00459a   f0fa                                                                                                               
00459c   000a     TBLRDPOSTDEC                                                                                              
00459e   cff5     MOVFF     0xff5,0xfb                                                                                      
0045a0   f0fb                                                                                                               
0045a2   0e02     MOVLW     0x2                            wCount._word = *(pSrc.wRom+1);              // Set data count    C:\opensprints\FW\system\usb\usb9\usb9.c
0045a4   0100     MOVLB     0x0                                                                                             
0045a6   6af7     CLRF      0xf7,0x0                                                                                        
0045a8   25fa     ADDWF     0xfa,0x0,0x1                                                                                    
0045aa   6ef6     MOVWF     0xf6,0x0                                                                                        
0045ac   51fb     MOVF      0xfb,0x0,0x1                                                                                    
0045ae   22f7     ADDWFC    0xf7,0x1,0x0                                                                                    
0045b0   0009     TBLRDPOSTINC                                                                                              
0045b2   cff5     MOVFF     0xff5,0xfe                                                                                      
0045b4   f0fe                                                                                                               
0045b6   000a     TBLRDPOSTDEC                                                                                              
0045b8   cff5     MOVFF     0xff5,0xff                                                                                      
0045ba   f0ff                                                                                                               
0045bc   d01e     BRA       0x45fa                         break;                                                           C:\opensprints\FW\system\usb\usb9\usb9.c
                                                       case DSC_STR:                                                        C:\opensprints\FW\system\usb\usb9\usb9.c
0045be   0100     MOVLB     0x0                            ctrl_trf_session_owner = MUID_USB9;                              C:\opensprints\FW\system\usb\usb9\usb9.c
0045c0   0e01     MOVLW     0x1                                                                                             
0045c2   6ff9     MOVWF     0xf9,0x1                                                                                        
0045c4   0104     MOVLB     0x4                            pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);                    C:\opensprints\FW\system\usb\usb9\usb9.c
0045c6   5122     MOVF      0x22,0x0,0x1                                                                                    
0045c8   6ef6     MOVWF     0xf6,0x0                                                                                        
0045ca   6af7     CLRF      0xf7,0x0                                                                                        
0045cc   90d8     BCF       0xd8,0x0,0x0                                                                                    
0045ce   36f6     RLCF      0xf6,0x1,0x0                                                                                    
0045d0   36f7     RLCF      0xf7,0x1,0x0                                                                                    
0045d2   0e19     MOVLW     0x19                                                                                            
0045d4   26f6     ADDWF     0xf6,0x1,0x0                                                                                    
0045d6   0e4c     MOVLW     0x4c                                                                                            
0045d8   22f7     ADDWFC    0xf7,0x1,0x0                                                                                    
0045da   0009     TBLRDPOSTINC                                                                                              
0045dc   cff5     MOVFF     0xff5,0xfa                                                                                      
0045de   f0fa                                                                                                               
0045e0   000a     TBLRDPOSTDEC                                                                                              
0045e2   cff5     MOVFF     0xff5,0xfb                                                                                      
0045e4   f0fb                                                                                                               
0045e6   c0fa     MOVFF     0xfa,0xff6                     wCount._word = *pSrc.bRom;                  // Set data count    C:\opensprints\FW\system\usb\usb9\usb9.c
0045e8   fff6                                                                                                               
0045ea   c0fb     MOVFF     0xfb,0xff7                                                                                      
0045ec   fff7                                                                                                               
0045ee   0008     TBLRD                                                                                                     
0045f0   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0045f2   0100     MOVLB     0x0                                                                                             
0045f4   6ffe     MOVWF     0xfe,0x1                                                                                        
0045f6   6bff     CLRF      0xff,0x1                                                                                        
0045f8   d000     BRA       0x45fa                         break;                                                           C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   }//end switch                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
0045fa   0101     MOVLB     0x1                    usb_stat.ctrl_trf_mem = _ROM;                       // Set memory type   C:\opensprints\FW\system\usb\usb9\usb9.c
0045fc   83a4     BSF       0xa4,0x1,0x1                                                                                    
                                               }//end if                                                                    C:\opensprints\FW\system\usb\usb9\usb9.c
0045fe   0012     RETURN    0x0            }//end USBStdGetDscHandler                                                       C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Function:        void USBStdSetCfgHandler(void)                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Overview:        This routine first disables all endpoints by clearing        C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                  UEP registers. It then configures (initializes) endpoints    C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                  specified in the modifiable section.                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usb9\usb9.c
                                           void USBStdSetCfgHandler(void)                                                   C:\opensprints\FW\system\usb\usb9\usb9.c
                                           {                                                                                C:\opensprints\FW\system\usb\usb9\usb9.c
004600   0100     MOVLB     0x0                ctrl_trf_session_owner = MUID_USB9;                                          C:\opensprints\FW\system\usb\usb9\usb9.c
004602   0e01     MOVLW     0x1                                                                                             
004604   6ff9     MOVWF     0xf9,0x1                                                                                        
004606   0e0f     MOVLW     0xf                mDisableEP1to15();                          // See usbdrv.h                  C:\opensprints\FW\system\usb\usb9\usb9.c
004608   6ee6     MOVWF     0xe6,0x0                                                                                        
00460a   0e71     MOVLW     0x71                                                                                            
00460c   6ee6     MOVWF     0xe6,0x0                                                                                        
00460e   0e0f     MOVLW     0xf                                                                                             
004610   6ee6     MOVWF     0xe6,0x0                                                                                        
004612   ec7a     CALL      0x48f4,0x0                                                                                      
004614   f024                                                                                                               
004616   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004618   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00461a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00461c   0e01     MOVLW     0x1                ClearArray((byte*)&usb_alt_intf,MAX_NUM_INT);                                C:\opensprints\FW\system\usb\usb9\usb9.c
00461e   6ee6     MOVWF     0xe6,0x0                                                                                        
004620   0ea6     MOVLW     0xa6                                                                                            
004622   6ee6     MOVWF     0xe6,0x0                                                                                        
004624   0e01     MOVLW     0x1                                                                                             
004626   6ee6     MOVWF     0xe6,0x0                                                                                        
004628   ec7a     CALL      0x48f4,0x0                                                                                      
00462a   f024                                                                                                               
00462c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00462e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004630   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004632   c422     MOVFF     0x422,0x1a5        usb_active_cfg = SetupPkt.bCfgValue;                                         C:\opensprints\FW\system\usb\usb9\usb9.c
004634   f1a5                                                                                                               
004636   0104     MOVLB     0x4                if(SetupPkt.bCfgValue == 0)                                                  C:\opensprints\FW\system\usb\usb9\usb9.c
004638   5122     MOVF      0x22,0x0,0x1                                                                                    
00463a   e104     BNZ       0x4644                                                                                          
00463c   0101     MOVLB     0x1                    usb_device_state = ADDRESS_STATE;                                        C:\opensprints\FW\system\usb\usb9\usb9.c
00463e   0e05     MOVLW     0x5                                                                                             
004640   6fa3     MOVWF     0xa3,0x1                                                                                        
004642   d005     BRA       0x464e             else                                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                               {                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
004644   0101     MOVLB     0x1                    usb_device_state = CONFIGURED_STATE;                                     C:\opensprints\FW\system\usb\usb9\usb9.c
004646   0e06     MOVLW     0x6                                                                                             
004648   6fa3     MOVWF     0xa3,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   /* Modifiable Section */                                                 C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   #if defined(USB_USE_CDC)                // See autofiles\usbcfg.h        C:\opensprints\FW\system\usb\usb9\usb9.c
00464a   ec1d     CALL      0x3e3a,0x0             CDCInitEP();                                                             C:\opensprints\FW\system\usb\usb9\usb9.c
00464c   f01f                                                                                                               
                                                   #endif                                                                   C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   /* End modifiable section */                                             C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                               }//end if(SetupPkt.bcfgValue == 0)                                           C:\opensprints\FW\system\usb\usb9\usb9.c
00464e   0012     RETURN    0x0            }//end USBStdSetCfgHandler                                                       C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Function:        void USBStdGetStatusHandler(void)                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Overview:        This routine handles the standard GET_STATUS request         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usb9\usb9.c
                                           void USBStdGetStatusHandler(void)                                                C:\opensprints\FW\system\usb\usb9\usb9.c
                                           {                                                                                C:\opensprints\FW\system\usb\usb9\usb9.c
004650   0104     MOVLB     0x4                CtrlTrfData._byte0 = 0;                         // Initialize content        C:\opensprints\FW\system\usb\usb9\usb9.c
004652   6b28     CLRF      0x28,0x1                                                                                        
004654   0104     MOVLB     0x4                CtrlTrfData._byte1 = 0;                                                      C:\opensprints\FW\system\usb\usb9\usb9.c
004656   6b29     CLRF      0x29,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
004658   0104     MOVLB     0x4                switch(SetupPkt.Recipient)                                                   C:\opensprints\FW\system\usb\usb9\usb9.c
00465a   5120     MOVF      0x20,0x0,0x1                                                                                    
00465c   0b1f     ANDLW     0x1f                                                                                            
00465e   0a02     XORLW     0x2                                                                                             
004660   e014     BZ        0x468a                                                                                          
004662   0a03     XORLW     0x3                                                                                             
004664   e00e     BZ        0x4682                                                                                          
004666   0a01     XORLW     0x1                                                                                             
004668   e001     BZ        0x466c                                                                                          
00466a   d034     BRA       0x46d4                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case RCPT_DEV:                                                           C:\opensprints\FW\system\usb\usb9\usb9.c
00466c   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\opensprints\FW\system\usb\usb9\usb9.c
00466e   0e01     MOVLW     0x1                                                                                             
004670   6ff9     MOVWF     0xf9,0x1                                                                                        
                                                       /*                                                                   C:\opensprints\FW\system\usb\usb9\usb9.c
                                                        * _byte0: bit0: Self-Powered Status [0] Bus-Powered [1] Self-Powered C:\opensprints\FW\system\usb\usb9\usb9.c
                                                        *         bit1: RemoteWakeup        [0] Disabled    [1] Enabled     C:\opensprints\FW\system\usb\usb9\usb9.c
                                                        */                                                                  C:\opensprints\FW\system\usb\usb9\usb9.c
                                                       if(self_power == 1)                     // self_power defined in io_cfg.h C:\opensprints\FW\system\usb\usb9\usb9.c
004672   0104     MOVLB     0x4                            CtrlTrfData._byte0|=0b000000001;    // Set bit0                  C:\opensprints\FW\system\usb\usb9\usb9.c
004674   8128     BSF       0x28,0x0,0x1                                                                                    
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
004676   0101     MOVLB     0x1                        if(usb_stat.RemoteWakeup == 1)          // usb_stat defined in usbmmap.c C:\opensprints\FW\system\usb\usb9\usb9.c
004678   a1a4     BTFSS     0xa4,0x0,0x1                                                                                    
00467a   d002     BRA       0x4680                                                                                          
00467c   0104     MOVLB     0x4                            CtrlTrfData._byte0|=0b00000010;     // Set bit1                  C:\opensprints\FW\system\usb\usb9\usb9.c
00467e   8328     BSF       0x28,0x1,0x1                                                                                    
004680   d029     BRA       0x46d4                     break;                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case RCPT_INTF:                                                          C:\opensprints\FW\system\usb\usb9\usb9.c
004682   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;     // No data to update         C:\opensprints\FW\system\usb\usb9\usb9.c
004684   0e01     MOVLW     0x1                                                                                             
004686   6ff9     MOVWF     0xf9,0x1                                                                                        
004688   d025     BRA       0x46d4                     break;                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   case RCPT_EP:                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
00468a   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\opensprints\FW\system\usb\usb9\usb9.c
00468c   0e01     MOVLW     0x1                                                                                             
00468e   6ff9     MOVWF     0xf9,0x1                                                                                        
                                                       /*                                                                   C:\opensprints\FW\system\usb\usb9\usb9.c
                                                        * _byte0: bit0: Halt Status [0] Not Halted [1] Halted               C:\opensprints\FW\system\usb\usb9\usb9.c
                                                        */                                                                  C:\opensprints\FW\system\usb\usb9\usb9.c
004690   0104     MOVLB     0x4                        pDst.bRam = (byte*)&ep0Bo+(SetupPkt.EPNum*8)+(SetupPkt.EPDir*4);     C:\opensprints\FW\system\usb\usb9\usb9.c
004692   5124     MOVF      0x24,0x0,0x1                                                                                    
004694   0b0f     ANDLW     0xf                                                                                             
004696   0d08     MULLW     0x8                                                                                             
004698   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00469a   6a2b     CLRF      0x2b,0x0                                                                                        
00469c   0f00     ADDLW     0x0                                                                                             
00469e   6e2a     MOVWF     0x2a,0x0                                                                                        
0046a0   0e04     MOVLW     0x4                                                                                             
0046a2   222b     ADDWFC    0x2b,0x1,0x0                                                                                    
0046a4   0104     MOVLB     0x4                                                                                             
0046a6   5124     MOVF      0x24,0x0,0x1                                                                                    
0046a8   0b80     ANDLW     0x80                                                                                            
0046aa   e001     BZ        0x46ae                                                                                          
0046ac   0e01     MOVLW     0x1                                                                                             
0046ae   0d04     MULLW     0x4                                                                                             
0046b0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0046b2   0100     MOVLB     0x0                                                                                             
0046b4   242a     ADDWF     0x2a,0x0,0x0                                                                                    
0046b6   6ffc     MOVWF     0xfc,0x1                                                                                        
0046b8   0e00     MOVLW     0x0                                                                                             
0046ba   202b     ADDWFC    0x2b,0x0,0x0                                                                                    
0046bc   6ffd     MOVWF     0xfd,0x1                                                                                        
0046be   c0fc     MOVFF     0xfc,0xfe9                 if(*pDst.bRam & _BSTALL)    // Use _BSTALL as a bit mask             C:\opensprints\FW\system\usb\usb9\usb9.c
0046c0   ffe9                                                                                                               
0046c2   c0fd     MOVFF     0xfd,0xfea                                                                                      
0046c4   ffea                                                                                                               
0046c6   50ef     MOVF      0xef,0x0,0x0                                                                                    
0046c8   0b04     ANDLW     0x4                                                                                             
0046ca   e003     BZ        0x46d2                                                                                          
0046cc   0104     MOVLB     0x4                            CtrlTrfData._byte0=0x01;// Set bit0                              C:\opensprints\FW\system\usb\usb9\usb9.c
0046ce   0e01     MOVLW     0x1                                                                                             
0046d0   6f28     MOVWF     0x28,0x1                                                                                        
0046d2   d000     BRA       0x46d4                     break;                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                               }//end switch                                                                C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
0046d4   0100     MOVLB     0x0                if(ctrl_trf_session_owner == MUID_USB9)                                      C:\opensprints\FW\system\usb\usb9\usb9.c
0046d6   05f9     DECF      0xf9,0x0,0x1                                                                                    
0046d8   e10a     BNZ       0x46ee                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
0046da   0100     MOVLB     0x0                    pSrc.bRam = (byte*)&CtrlTrfData;            // Set Source                C:\opensprints\FW\system\usb\usb9\usb9.c
0046dc   0e28     MOVLW     0x28                                                                                            
0046de   6ffa     MOVWF     0xfa,0x1                                                                                        
0046e0   0e04     MOVLW     0x4                                                                                             
0046e2   6ffb     MOVWF     0xfb,0x1                                                                                        
0046e4   0101     MOVLB     0x1                    usb_stat.ctrl_trf_mem = _RAM;               // Set memory type           C:\opensprints\FW\system\usb\usb9\usb9.c
0046e6   93a4     BCF       0xa4,0x1,0x1                                                                                    
0046e8   0100     MOVLB     0x0                    LSB(wCount) = 2;                            // Set data count            C:\opensprints\FW\system\usb\usb9\usb9.c
0046ea   0e02     MOVLW     0x2                                                                                             
0046ec   6ffe     MOVWF     0xfe,0x1                                                                                        
                                               }//end if(...)                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
0046ee   0012     RETURN    0x0            }//end USBStdGetStatusHandler                                                    C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Function:        void USBStdFeatureReqHandler(void)                           C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Overview:        This routine handles the standard SET & CLEAR FEATURES       C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                  requests                                                     C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *                                                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usb9\usb9.c
                                           void USBStdFeatureReqHandler(void)                                               C:\opensprints\FW\system\usb\usb9\usb9.c
                                           {                                                                                C:\opensprints\FW\system\usb\usb9\usb9.c
0046f0   0104     MOVLB     0x4                if((SetupPkt.bFeature == DEVICE_REMOTE_WAKEUP)&&                             C:\opensprints\FW\system\usb\usb9\usb9.c
0046f2   0522     DECF      0x22,0x0,0x1                                                                                    
0046f4   e111     BNZ       0x4718                (SetupPkt.Recipient == RCPT_DEV))                                         C:\opensprints\FW\system\usb\usb9\usb9.c
0046f6   0104     MOVLB     0x4                                                                                             
0046f8   5120     MOVF      0x20,0x0,0x1                                                                                    
0046fa   0b1f     ANDLW     0x1f                                                                                            
0046fc   0900     IORLW     0x0                                                                                             
0046fe   e10c     BNZ       0x4718                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
004700   0100     MOVLB     0x0                    ctrl_trf_session_owner = MUID_USB9;                                      C:\opensprints\FW\system\usb\usb9\usb9.c
004702   0e01     MOVLW     0x1                                                                                             
004704   6ff9     MOVWF     0xf9,0x1                                                                                        
004706   0e03     MOVLW     0x3                    if(SetupPkt.bRequest == SET_FEATURE)                                     C:\opensprints\FW\system\usb\usb9\usb9.c
004708   0104     MOVLB     0x4                                                                                             
00470a   5d21     SUBWF     0x21,0x0,0x1                                                                                    
00470c   e103     BNZ       0x4714                                                                                          
00470e   0101     MOVLB     0x1                        usb_stat.RemoteWakeup = 1;                                           C:\opensprints\FW\system\usb\usb9\usb9.c
004710   81a4     BSF       0xa4,0x0,0x1                                                                                    
004712   d002     BRA       0x4718                 else                                                                     C:\opensprints\FW\system\usb\usb9\usb9.c
004714   0101     MOVLB     0x1                        usb_stat.RemoteWakeup = 0;                                           C:\opensprints\FW\system\usb\usb9\usb9.c
004716   91a4     BCF       0xa4,0x0,0x1                                                                                    
                                               }//end if                                                                    C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
004718   0104     MOVLB     0x4                if((SetupPkt.bFeature == ENDPOINT_HALT)&&                                    C:\opensprints\FW\system\usb\usb9\usb9.c
00471a   5122     MOVF      0x22,0x0,0x1                                                                                    
00471c   e13e     BNZ       0x479a                (SetupPkt.Recipient == RCPT_EP)&&                                         C:\opensprints\FW\system\usb\usb9\usb9.c
00471e   0104     MOVLB     0x4                                                                                             
004720   5120     MOVF      0x20,0x0,0x1                                                                                    
004722   0b1f     ANDLW     0x1f                                                                                            
004724   0802     SUBLW     0x2                                                                                             
004726   e139     BNZ       0x479a                                                                                          
004728   0104     MOVLB     0x4                   (SetupPkt.EPNum != 0))                                                    C:\opensprints\FW\system\usb\usb9\usb9.c
00472a   5124     MOVF      0x24,0x0,0x1                                                                                    
00472c   0b0f     ANDLW     0xf                                                                                             
00472e   0900     IORLW     0x0                                                                                             
004730   e034     BZ        0x479a                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
004732   0100     MOVLB     0x0                    ctrl_trf_session_owner = MUID_USB9;                                      C:\opensprints\FW\system\usb\usb9\usb9.c
004734   0e01     MOVLW     0x1                                                                                             
004736   6ff9     MOVWF     0xf9,0x1                                                                                        
                                                   /* Must do address calculation here */                                   C:\opensprints\FW\system\usb\usb9\usb9.c
004738   0104     MOVLB     0x4                    pDst.bRam = (byte*)&ep0Bo+(SetupPkt.EPNum*8)+(SetupPkt.EPDir*4);         C:\opensprints\FW\system\usb\usb9\usb9.c
00473a   5124     MOVF      0x24,0x0,0x1                                                                                    
00473c   0b0f     ANDLW     0xf                                                                                             
00473e   0d08     MULLW     0x8                                                                                             
004740   50f3     MOVF      0xf3,0x0,0x0                                                                                    
004742   6a2b     CLRF      0x2b,0x0                                                                                        
004744   0f00     ADDLW     0x0                                                                                             
004746   6e2a     MOVWF     0x2a,0x0                                                                                        
004748   0e04     MOVLW     0x4                                                                                             
00474a   222b     ADDWFC    0x2b,0x1,0x0                                                                                    
00474c   0104     MOVLB     0x4                                                                                             
00474e   5124     MOVF      0x24,0x0,0x1                                                                                    
004750   0b80     ANDLW     0x80                                                                                            
004752   e001     BZ        0x4756                                                                                          
004754   0e01     MOVLW     0x1                                                                                             
004756   0d04     MULLW     0x4                                                                                             
004758   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00475a   0100     MOVLB     0x0                                                                                             
00475c   242a     ADDWF     0x2a,0x0,0x0                                                                                    
00475e   6ffc     MOVWF     0xfc,0x1                                                                                        
004760   0e00     MOVLW     0x0                                                                                             
004762   202b     ADDWFC    0x2b,0x0,0x0                                                                                    
004764   6ffd     MOVWF     0xfd,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
004766   0e03     MOVLW     0x3                    if(SetupPkt.bRequest == SET_FEATURE)                                     C:\opensprints\FW\system\usb\usb9\usb9.c
004768   0104     MOVLB     0x4                                                                                             
00476a   5d21     SUBWF     0x21,0x0,0x1                                                                                    
00476c   e107     BNZ       0x477c                                                                                          
00476e   0e84     MOVLW     0x84                       *pDst.bRam = _USIE|_BSTALL;                                          C:\opensprints\FW\system\usb\usb9\usb9.c
004770   c0fc     MOVFF     0xfc,0xfe9                                                                                      
004772   ffe9                                                                                                               
004774   c0fd     MOVFF     0xfd,0xfea                                                                                      
004776   ffea                                                                                                               
004778   6eef     MOVWF     0xef,0x0                                                                                        
00477a   d00f     BRA       0x479a                 else                                                                     C:\opensprints\FW\system\usb\usb9\usb9.c
                                                   {                                                                        C:\opensprints\FW\system\usb\usb9\usb9.c
00477c   0104     MOVLB     0x4                        if(SetupPkt.EPDir == 1) // IN                                        C:\opensprints\FW\system\usb\usb9\usb9.c
00477e   af24     BTFSS     0x24,0x7,0x1                                                                                    
004780   d006     BRA       0x478e                                                                                          
004782   c0fc     MOVFF     0xfc,0xfe9                     *pDst.bRam = _UCPU;                                              C:\opensprints\FW\system\usb\usb9\usb9.c
004784   ffe9                                                                                                               
004786   c0fd     MOVFF     0xfd,0xfea                                                                                      
004788   ffea                                                                                                               
00478a   6aef     CLRF      0xef,0x0                                                                                        
00478c   d006     BRA       0x479a                     else                                                                 C:\opensprints\FW\system\usb\usb9\usb9.c
00478e   0e88     MOVLW     0x88                           *pDst.bRam = _USIE|_DAT0|_DTSEN;                                 C:\opensprints\FW\system\usb\usb9\usb9.c
004790   c0fc     MOVFF     0xfc,0xfe9                                                                                      
004792   ffe9                                                                                                               
004794   c0fd     MOVFF     0xfd,0xfea                                                                                      
004796   ffea                                                                                                               
004798   6eef     MOVWF     0xef,0x0                                                                                        
                                                   }//end if                                                                C:\opensprints\FW\system\usb\usb9\usb9.c
                                               }//end if                                                                    C:\opensprints\FW\system\usb\usb9\usb9.c
00479a   0012     RETURN    0x0            }//end USBStdFeatureReqHandler                                                   C:\opensprints\FW\system\usb\usb9\usb9.c
                                                                                                                            C:\opensprints\FW\system\usb\usb9\usb9.c
                                           /** EOF usb9.c ***************************************************************/  C:\opensprints\FW\system\usb\usb9\usb9.c
                                           /*********************************************************************           C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            *********************************************************************           C:\opensprints\FW\autofiles\usbdsc.c
                                            * FileName:        usbdsc.c                                                     C:\opensprints\FW\autofiles\usbdsc.c
                                            * Dependencies:    See INCLUDES section below                                   C:\opensprints\FW\autofiles\usbdsc.c
                                            * Processor:       PIC18                                                        C:\opensprints\FW\autofiles\usbdsc.c
                                            * Compiler:        C18 2.30.01+                                                 C:\opensprints\FW\autofiles\usbdsc.c
                                            * Company:         Microchip Technology, Inc.                                   C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * Software License Agreement                                                    C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\opensprints\FW\autofiles\usbdsc.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\opensprints\FW\autofiles\usbdsc.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\opensprints\FW\autofiles\usbdsc.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\opensprints\FW\autofiles\usbdsc.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\opensprints\FW\autofiles\usbdsc.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\opensprints\FW\autofiles\usbdsc.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\opensprints\FW\autofiles\usbdsc.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\opensprints\FW\autofiles\usbdsc.c
                                            * civil liability for the breach of the terms and conditions of this            C:\opensprints\FW\autofiles\usbdsc.c
                                            * license.                                                                      C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\opensprints\FW\autofiles\usbdsc.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\opensprints\FW\autofiles\usbdsc.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\opensprints\FW\autofiles\usbdsc.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\opensprints\FW\autofiles\usbdsc.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\opensprints\FW\autofiles\usbdsc.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            ********************************************************************/           C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           /*********************************************************************           C:\opensprints\FW\autofiles\usbdsc.c
                                            * -usbdsc.c-                                                                    C:\opensprints\FW\autofiles\usbdsc.c
                                            * This file contains the USB descriptor information. It is used                 C:\opensprints\FW\autofiles\usbdsc.c
                                            * in conjunction with the usbdsc.h file. When a descriptor is added             C:\opensprints\FW\autofiles\usbdsc.c
                                            * or removed from the main configuration descriptor, i.e. CFG01,                C:\opensprints\FW\autofiles\usbdsc.c
                                            * the user must also change the descriptor structure defined in                 C:\opensprints\FW\autofiles\usbdsc.c
                                            * the usbdsc.h file. The structure is used to calculate the                     C:\opensprints\FW\autofiles\usbdsc.c
                                            * descriptor size, i.e. sizeof(CFG01).                                          C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * A typical configuration descriptor consists of:                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * At least one configuration descriptor (USB_CFG_DSC)                           C:\opensprints\FW\autofiles\usbdsc.c
                                            * One or more interface descriptors (USB_INTF_DSC)                              C:\opensprints\FW\autofiles\usbdsc.c
                                            * One or more endpoint descriptors (USB_EP_DSC)                                 C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * Naming Convention:                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                            * To resolve ambiguity, the naming convention are as followed:                  C:\opensprints\FW\autofiles\usbdsc.c
                                            * - USB_CFG_DSC type should be named cdxx, where xx is the                      C:\opensprints\FW\autofiles\usbdsc.c
                                            *   configuration number. This number should match the actual                   C:\opensprints\FW\autofiles\usbdsc.c
                                            *   index value of this configuration.                                          C:\opensprints\FW\autofiles\usbdsc.c
                                            * - USB_INTF_DSC type should be named i<yy>a<zz>, where yy is the               C:\opensprints\FW\autofiles\usbdsc.c
                                            *   interface number and zz is the alternate interface number.                  C:\opensprints\FW\autofiles\usbdsc.c
                                            * - USB_EP_DSC type should be named ep<##><d>_i<yy>a<zz>, where                 C:\opensprints\FW\autofiles\usbdsc.c
                                            *   ## is the endpoint number and d is the direction of transfer.               C:\opensprints\FW\autofiles\usbdsc.c
                                            *   The interface name should also be listed as a suffix to identify            C:\opensprints\FW\autofiles\usbdsc.c
                                            *   which interface does the endpoint belong to.                                C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * Example:                                                                      C:\opensprints\FW\autofiles\usbdsc.c
                                            * If a device has one configuration, two interfaces; interface 0                C:\opensprints\FW\autofiles\usbdsc.c
                                            * has two endpoints (in and out), and interface 1 has one endpoint(in).         C:\opensprints\FW\autofiles\usbdsc.c
                                            * Then the CFG01 structure in the usbdsc.h should be:                           C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * #define CFG01 rom struct                            \                         C:\opensprints\FW\autofiles\usbdsc.c
                                            * {   USB_CFG_DSC             cd01;                   \                         C:\opensprints\FW\autofiles\usbdsc.c
                                            *     USB_INTF_DSC            i00a00;                 \                         C:\opensprints\FW\autofiles\usbdsc.c
                                            *     USB_EP_DSC              ep01o_i00a00;           \                         C:\opensprints\FW\autofiles\usbdsc.c
                                            *     USB_EP_DSC              ep01i_i00a00;           \                         C:\opensprints\FW\autofiles\usbdsc.c
                                            *     USB_INTF_DSC            i01a00;                 \                         C:\opensprints\FW\autofiles\usbdsc.c
                                            *     USB_EP_DSC              ep02i_i01a00;           \                         C:\opensprints\FW\autofiles\usbdsc.c
                                            * } cfg01                                                                       C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * Note the hierarchy of the descriptors above, it follows the USB               C:\opensprints\FW\autofiles\usbdsc.c
                                            * specification requirement. All endpoints belonging to an interface            C:\opensprints\FW\autofiles\usbdsc.c
                                            * should be listed immediately after that interface.                            C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\opensprints\FW\autofiles\usbdsc.c
                                            * Filling in the descriptor values in the usbdsc.c file:                        C:\opensprints\FW\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\opensprints\FW\autofiles\usbdsc.c
                                            * Most items should be self-explanatory, however, a few will be                 C:\opensprints\FW\autofiles\usbdsc.c
                                            * explained for clarification.                                                  C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * [Configuration Descriptor(USB_CFG_DSC)]                                       C:\opensprints\FW\autofiles\usbdsc.c
                                            * The configuration attribute must always have the _DEFAULT                     C:\opensprints\FW\autofiles\usbdsc.c
                                            * definition at the minimum. Additional options can be ORed                     C:\opensprints\FW\autofiles\usbdsc.c
                                            * to the _DEFAULT attribute. Available options are _SELF and _RWU.              C:\opensprints\FW\autofiles\usbdsc.c
                                            * These definitions are defined in the usbdefs_std_dsc.h file. The              C:\opensprints\FW\autofiles\usbdsc.c
                                            * _SELF tells the USB host that this device is self-powered. The                C:\opensprints\FW\autofiles\usbdsc.c
                                            * _RWU tells the USB host that this device supports Remote Wakeup.              C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * [Endpoint Descriptor(USB_EP_DSC)]                                             C:\opensprints\FW\autofiles\usbdsc.c
                                            * Assume the following example:                                                 C:\opensprints\FW\autofiles\usbdsc.c
                                            * sizeof(USB_EP_DSC),DSC_EP,_EP01_OUT,_BULK,64,0x00                             C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * The first two parameters are self-explanatory. They specify the               C:\opensprints\FW\autofiles\usbdsc.c
                                            * length of this endpoint descriptor (7) and the descriptor type.               C:\opensprints\FW\autofiles\usbdsc.c
                                            * The next parameter identifies the endpoint, the definitions are               C:\opensprints\FW\autofiles\usbdsc.c
                                            * defined in usbdefs_std_dsc.h and has the following naming                     C:\opensprints\FW\autofiles\usbdsc.c
                                            * convention:                                                                   C:\opensprints\FW\autofiles\usbdsc.c
                                            * _EP<##>_<dir>                                                                 C:\opensprints\FW\autofiles\usbdsc.c
                                            * where ## is the endpoint number and dir is the direction of                   C:\opensprints\FW\autofiles\usbdsc.c
                                            * transfer. The dir has the value of either 'OUT' or 'IN'.                      C:\opensprints\FW\autofiles\usbdsc.c
                                            * The next parameter identifies the type of the endpoint. Available             C:\opensprints\FW\autofiles\usbdsc.c
                                            * options are _BULK, _INT, _ISO, and _CTRL. The _CTRL is not                    C:\opensprints\FW\autofiles\usbdsc.c
                                            * typically used because the default control transfer endpoint is               C:\opensprints\FW\autofiles\usbdsc.c
                                            * not defined in the USB descriptors. When _ISO option is used,                 C:\opensprints\FW\autofiles\usbdsc.c
                                            * addition options can be ORed to _ISO. Example:                                C:\opensprints\FW\autofiles\usbdsc.c
                                            * _ISO|_AD|_FE                                                                  C:\opensprints\FW\autofiles\usbdsc.c
                                            * This describes the endpoint as an isochronous pipe with adaptive              C:\opensprints\FW\autofiles\usbdsc.c
                                            * and feedback attributes. See usbdefs_std_dsc.h and the USB                    C:\opensprints\FW\autofiles\usbdsc.c
                                            * specification for details. The next parameter defines the size of             C:\opensprints\FW\autofiles\usbdsc.c
                                            * the endpoint. The last parameter in the polling interval.                     C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\opensprints\FW\autofiles\usbdsc.c
                                            * Adding a USB String                                                           C:\opensprints\FW\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\opensprints\FW\autofiles\usbdsc.c
                                            * A string descriptor array should have the following format:                   C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * rom struct{byte bLength;byte bDscType;word string[size];}sdxxx={              C:\opensprints\FW\autofiles\usbdsc.c
                                            * sizeof(sdxxx),DSC_STR,<text>};                                                C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * The above structure provides a means for the C compiler to                    C:\opensprints\FW\autofiles\usbdsc.c
                                            * calculate the length of string descriptor sdxxx, where xxx is the             C:\opensprints\FW\autofiles\usbdsc.c
                                            * index number. The first two bytes of the descriptor are descriptor            C:\opensprints\FW\autofiles\usbdsc.c
                                            * length and type. The rest <text> are string texts which must be               C:\opensprints\FW\autofiles\usbdsc.c
                                            * in the unicode format. The unicode format is achieved by declaring            C:\opensprints\FW\autofiles\usbdsc.c
                                            * each character as a word type. The whole text string is declared              C:\opensprints\FW\autofiles\usbdsc.c
                                            * as a word array with the number of characters equals to <size>.               C:\opensprints\FW\autofiles\usbdsc.c
                                            * <size> has to be manually counted and entered into the array                  C:\opensprints\FW\autofiles\usbdsc.c
                                            * declaration. Let's study this through an example:                             C:\opensprints\FW\autofiles\usbdsc.c
                                            * if the string is "USB" , then the string descriptor should be:                C:\opensprints\FW\autofiles\usbdsc.c
                                            * (Using index 02)                                                              C:\opensprints\FW\autofiles\usbdsc.c
                                            * rom struct{byte bLength;byte bDscType;word string[3];}sd002={                 C:\opensprints\FW\autofiles\usbdsc.c
                                            * sizeof(sd002),DSC_STR,'U','S','B'};                                           C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * A USB project may have multiple strings and the firmware supports             C:\opensprints\FW\autofiles\usbdsc.c
                                            * the management of multiple strings through a look-up table.                   C:\opensprints\FW\autofiles\usbdsc.c
                                            * The look-up table is defined as:                                              C:\opensprints\FW\autofiles\usbdsc.c
                                            * rom const unsigned char *rom USB_SD_Ptr[]={&sd000,&sd001,&sd002};             C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * The above declaration has 3 strings, sd000, sd001, and sd002.                 C:\opensprints\FW\autofiles\usbdsc.c
                                            * Strings can be removed or added. sd000 is a specialized string                C:\opensprints\FW\autofiles\usbdsc.c
                                            * descriptor. It defines the language code, usually this is                     C:\opensprints\FW\autofiles\usbdsc.c
                                            * US English (0x0409). The index of the string must match the index             C:\opensprints\FW\autofiles\usbdsc.c
                                            * position of the USB_SD_Ptr array, &sd000 must be in position                  C:\opensprints\FW\autofiles\usbdsc.c
                                            * USB_SD_Ptr[0], &sd001 must be in position USB_SD_Ptr[1] and so on.            C:\opensprints\FW\autofiles\usbdsc.c
                                            * The look-up table USB_SD_Ptr is used by the get string handler                C:\opensprints\FW\autofiles\usbdsc.c
                                            * function in usb9.c.                                                           C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * The look-up table scheme also applies to the configuration                    C:\opensprints\FW\autofiles\usbdsc.c
                                            * descriptor. A USB device may have multiple configuration                      C:\opensprints\FW\autofiles\usbdsc.c
                                            * descriptors, i.e. CFG01, CFG02, etc. To add a configuration                   C:\opensprints\FW\autofiles\usbdsc.c
                                            * descriptor, user must implement a structure similar to CFG01.                 C:\opensprints\FW\autofiles\usbdsc.c
                                            * The next step is to add the configuration descriptor name, i.e.               C:\opensprints\FW\autofiles\usbdsc.c
                                            * cfg01, cfg02,.., to the look-up table USB_CD_Ptr. USB_CD_Ptr[0]               C:\opensprints\FW\autofiles\usbdsc.c
                                            * is a dummy place holder since configuration 0 is the un-configured            C:\opensprints\FW\autofiles\usbdsc.c
                                            * state according to the definition in the USB specification.                   C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            ********************************************************************/           C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           /*********************************************************************           C:\opensprints\FW\autofiles\usbdsc.c
                                            * Descriptor specific type definitions are defined in:                          C:\opensprints\FW\autofiles\usbdsc.c
                                            * system\usb\usbdefs\usbdefs_std_dsc.h                                          C:\opensprints\FW\autofiles\usbdsc.c
                                            *                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                            * Configuration information is defined in:                                      C:\opensprints\FW\autofiles\usbdsc.c
                                            * autofiles\usbcfg.h                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                            ********************************************************************/           C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           /** I N C L U D E S *************************************************/           C:\opensprints\FW\autofiles\usbdsc.c
                                           #include "system\typedefs.h"                                                     C:\opensprints\FW\autofiles\usbdsc.c
                                           #include "system\usb\usb.h"                                                      C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           /** C O N S T A N T S ************************************************/          C:\opensprints\FW\autofiles\usbdsc.c
                                           #pragma romdata                                                                  C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           /* Device Descriptor */                                                          C:\opensprints\FW\autofiles\usbdsc.c
                                           rom USB_DEV_DSC device_dsc=                                                      C:\opensprints\FW\autofiles\usbdsc.c
                                           {                                                                                C:\opensprints\FW\autofiles\usbdsc.c
                                               sizeof(USB_DEV_DSC),    // Size of this descriptor in bytes                  C:\opensprints\FW\autofiles\usbdsc.c
                                               DSC_DEV,                // DEVICE descriptor type                            C:\opensprints\FW\autofiles\usbdsc.c
                                               0x0200,                 // USB Spec Release Number in BCD format             C:\opensprints\FW\autofiles\usbdsc.c
                                               CDC_DEVICE,             // Class Code                                        C:\opensprints\FW\autofiles\usbdsc.c
                                               0x00,                   // Subclass code                                     C:\opensprints\FW\autofiles\usbdsc.c
                                               0x00,                   // Protocol code                                     C:\opensprints\FW\autofiles\usbdsc.c
                                               EP0_BUFF_SIZE,          // Max packet size for EP0, see usbcfg.h             C:\opensprints\FW\autofiles\usbdsc.c
                                               0x04D8,                 // Vendor ID                                         C:\opensprints\FW\autofiles\usbdsc.c
                                               0x000A,                 // Product ID: CDC RS-232 Emulation Demo             C:\opensprints\FW\autofiles\usbdsc.c
                                               0x0000,                 // Device release number in BCD format               C:\opensprints\FW\autofiles\usbdsc.c
                                               0x01,                   // Manufacturer string index                         C:\opensprints\FW\autofiles\usbdsc.c
                                               0x02,                   // Product string index                              C:\opensprints\FW\autofiles\usbdsc.c
                                               0x00,                   // Device serial number string index                 C:\opensprints\FW\autofiles\usbdsc.c
                                               0x01                    // Number of possible configurations                 C:\opensprints\FW\autofiles\usbdsc.c
                                           };                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           /* Configuration 1 Descriptor */                                                 C:\opensprints\FW\autofiles\usbdsc.c
                                           CFG01=                                                                           C:\opensprints\FW\autofiles\usbdsc.c
                                           {                                                                                C:\opensprints\FW\autofiles\usbdsc.c
                                               /* Configuration Descriptor */                                               C:\opensprints\FW\autofiles\usbdsc.c
                                               sizeof(USB_CFG_DSC),    // Size of this descriptor in bytes                  C:\opensprints\FW\autofiles\usbdsc.c
                                               DSC_CFG,                // CONFIGURATION descriptor type                     C:\opensprints\FW\autofiles\usbdsc.c
                                               sizeof(cfg01),          // Total length of data for this cfg                 C:\opensprints\FW\autofiles\usbdsc.c
                                               2,                      // Number of interfaces in this cfg                  C:\opensprints\FW\autofiles\usbdsc.c
                                               1,                      // Index value of this configuration                 C:\opensprints\FW\autofiles\usbdsc.c
                                               0,                      // Configuration string index                        C:\opensprints\FW\autofiles\usbdsc.c
                                               _DEFAULT,               // Attributes, see usbdefs_std_dsc.h                 C:\opensprints\FW\autofiles\usbdsc.c
                                               50,                     // Max power consumption (2X mA)                     C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                               /* Interface Descriptor */                                                   C:\opensprints\FW\autofiles\usbdsc.c
                                               sizeof(USB_INTF_DSC),   // Size of this descriptor in bytes                  C:\opensprints\FW\autofiles\usbdsc.c
                                               DSC_INTF,               // INTERFACE descriptor type                         C:\opensprints\FW\autofiles\usbdsc.c
                                               0,                      // Interface Number                                  C:\opensprints\FW\autofiles\usbdsc.c
                                               0,                      // Alternate Setting Number                          C:\opensprints\FW\autofiles\usbdsc.c
                                               1,                      // Number of endpoints in this intf                  C:\opensprints\FW\autofiles\usbdsc.c
                                               COMM_INTF,              // Class code                                        C:\opensprints\FW\autofiles\usbdsc.c
                                               ABSTRACT_CONTROL_MODEL, // Subclass code                                     C:\opensprints\FW\autofiles\usbdsc.c
                                               V25TER,                 // Protocol code                                     C:\opensprints\FW\autofiles\usbdsc.c
                                               0,                      // Interface string index                            C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                               /* CDC Class-Specific Descriptors */                                         C:\opensprints\FW\autofiles\usbdsc.c
                                               sizeof(USB_CDC_HEADER_FN_DSC),CS_INTERFACE,DSC_FN_HEADER,0x0110,             C:\opensprints\FW\autofiles\usbdsc.c
                                               sizeof(USB_CDC_ACM_FN_DSC),CS_INTERFACE,DSC_FN_ACM,0x02,                     C:\opensprints\FW\autofiles\usbdsc.c
                                               sizeof(USB_CDC_UNION_FN_DSC),CS_INTERFACE,DSC_FN_UNION,CDC_COMM_INTF_ID,CDC_DATA_INTF_ID, C:\opensprints\FW\autofiles\usbdsc.c
                                               sizeof(USB_CDC_CALL_MGT_FN_DSC),CS_INTERFACE,DSC_FN_CALL_MGT,0x00,CDC_DATA_INTF_ID, C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                               /* Endpoint Descriptor */                                                    C:\opensprints\FW\autofiles\usbdsc.c
                                               sizeof(USB_EP_DSC),DSC_EP,_EP02_IN,_INT,CDC_INT_EP_SIZE,0x02,                C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                               /* Interface Descriptor */                                                   C:\opensprints\FW\autofiles\usbdsc.c
                                               sizeof(USB_INTF_DSC),   // Size of this descriptor in bytes                  C:\opensprints\FW\autofiles\usbdsc.c
                                               DSC_INTF,               // INTERFACE descriptor type                         C:\opensprints\FW\autofiles\usbdsc.c
                                               1,                      // Interface Number                                  C:\opensprints\FW\autofiles\usbdsc.c
                                               0,                      // Alternate Setting Number                          C:\opensprints\FW\autofiles\usbdsc.c
                                               2,                      // Number of endpoints in this intf                  C:\opensprints\FW\autofiles\usbdsc.c
                                               DATA_INTF,              // Class code                                        C:\opensprints\FW\autofiles\usbdsc.c
                                               0,                      // Subclass code                                     C:\opensprints\FW\autofiles\usbdsc.c
                                               NO_PROTOCOL,            // Protocol code                                     C:\opensprints\FW\autofiles\usbdsc.c
                                               0,                      // Interface string index                            C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                               /* Endpoint Descriptors */                                                   C:\opensprints\FW\autofiles\usbdsc.c
                                               sizeof(USB_EP_DSC),DSC_EP,_EP03_OUT,_BULK,CDC_BULK_OUT_EP_SIZE,0x00,         C:\opensprints\FW\autofiles\usbdsc.c
                                               sizeof(USB_EP_DSC),DSC_EP,_EP03_IN,_BULK,CDC_BULK_IN_EP_SIZE,0x00            C:\opensprints\FW\autofiles\usbdsc.c
                                           };                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           rom struct{byte bLength;byte bDscType;word string[1];}sd000={                    C:\opensprints\FW\autofiles\usbdsc.c
                                           sizeof(sd000),DSC_STR,0x0409};                                                   C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           rom struct{byte bLength;byte bDscType;word string[25];}sd001={                   C:\opensprints\FW\autofiles\usbdsc.c
                                           sizeof(sd001),DSC_STR,                                                           C:\opensprints\FW\autofiles\usbdsc.c
                                           'M','i','c','r','o','c','h','i','p',' ',                                         C:\opensprints\FW\autofiles\usbdsc.c
                                           'T','e','c','h','n','o','l','o','g','y',' ','I','n','c','.'};                    C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           rom struct{byte bLength;byte bDscType;word string[25];}sd002={                   C:\opensprints\FW\autofiles\usbdsc.c
                                           sizeof(sd002),DSC_STR,                                                           C:\opensprints\FW\autofiles\usbdsc.c
                                           'C','D','C',' ','R','S','-','2','3','2',' ',                                     C:\opensprints\FW\autofiles\usbdsc.c
                                           'E','m','u','l','a','t','i','o','n',' ','D','e','m','o'};                        C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           rom const unsigned char *rom USB_CD_Ptr[]={&cfg01,&cfg01};                       C:\opensprints\FW\autofiles\usbdsc.c
                                           rom const unsigned char *rom USB_SD_Ptr[]={&sd000,&sd001,&sd002};                C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           rom pFunc ClassReqHandler[1]=                                                    C:\opensprints\FW\autofiles\usbdsc.c
                                           {                                                                                C:\opensprints\FW\autofiles\usbdsc.c
                                               &USBCheckCDCRequest                                                          C:\opensprints\FW\autofiles\usbdsc.c
                                           };                                                                               C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           #pragma code                                                                     C:\opensprints\FW\autofiles\usbdsc.c
                                                                                                                            C:\opensprints\FW\autofiles\usbdsc.c
                                           /** EOF usbdsc.c ****************************************************/           C:\opensprints\FW\autofiles\usbdsc.c
                                           /*********************************************************************           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *********************************************************************           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * FileName:        usbctrltrf.c                                                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Dependencies:    See INCLUDES section below                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Processor:       PIC18                                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Compiler:        C18 2.30.01+                                                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Company:         Microchip Technology, Inc.                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Software License Agreement                                                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * civil liability for the breach of the terms and conditions of this            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * license.                                                                      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Author               Date        Comment                                      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            ********************************************************************/           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /** I N C L U D E S **********************************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           #include <p18cxxx.h>                                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           #include "system\typedefs.h"                                                     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           #include "system\usb\usb.h"                                                      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /** V A R I A B L E S ********************************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           #pragma udata                                                                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           byte ctrl_trf_state;                // Control Transfer State                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           byte ctrl_trf_session_owner;        // Current transfer session owner            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           POINTER pSrc;                       // Data source pointer                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           POINTER pDst;                       // Data destination pointer                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           WORD wCount;                        // Data counter                              C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfSetupHandler(void);                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfOutHandler(void);                                                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfInHandler(void);                                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           #pragma code                                                                     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlEPService(void)                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    USTAT is loaded with a valid endpoint address.               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        USBCtrlEPService checks for three transaction types that     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  it knows how to service and services them:                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  1. EP0 SETUP                                                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  2. EP0 OUT                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  3. EP0 IN                                                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  It ignores all other types (i.e. EP1, EP2, etc.)             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlEPService(void)                                                      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004144   506c     MOVF      0x6c,0x0,0x0       if(USTAT == EP00_OUT)                                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004146   e002     BZ        0x414c                                                                                          
004148   0e00     MOVLW     0x0                                                                                             
00414a   d001     BRA       0x414e                                                                                          
00414c   0e01     MOVLW     0x1                                                                                             
00414e   0900     IORLW     0x0                                                                                             
004150   e00b     BZ        0x4168                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004152   0104     MOVLB     0x4                    if(ep0Bo.Stat.PID == SETUP_TOKEN)           // EP0 SETUP                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004154   5100     MOVF      0x0,0x0,0x1                                                                                     
004156   0b3c     ANDLW     0x3c                                                                                            
004158   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
00415a   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
00415c   080d     SUBLW     0xd                                                                                             
00415e   e102     BNZ       0x4164                                                                                          
004160   d80c     RCALL     0x417a                     USBCtrlTrfSetupHandler();                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004162   d001     BRA       0x4166                 else                                        // EP0 OUT                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004164   d842     RCALL     0x41ea                     USBCtrlTrfOutHandler();                                              C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               }                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004166   d008     BRA       0x4178             else if(USTAT == EP00_IN)                       // EP0 IN                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004168   506c     MOVF      0x6c,0x0,0x0                                                                                    
00416a   e002     BZ        0x4170                                                                                          
00416c   0e00     MOVLW     0x0                                                                                             
00416e   d001     BRA       0x4172                                                                                          
004170   0e01     MOVLW     0x1                                                                                             
004172   0904     IORLW     0x4                                                                                             
004174   e001     BZ        0x4178                                                                                          
004176   d84b     RCALL     0x420e                 USBCtrlTrfInHandler();                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004178   0012     RETURN    0x0            }//end USBCtrlEPService                                                          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfSetupHandler(void)                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    SetupPkt buffer is loaded with valid USB Setup Data          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine is a task dispatcher and has 3 stages.          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  1. It initializes the control transfer state machine.        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  2. It calls on each of the module that may know how to       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     service the Setup Request from the host.                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     Module Example: USB9, HID, CDC, MSD, ...                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     As new classes are added, ClassReqHandler table in        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     usbdsc.c should be updated to call all available          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     class handlers.                                           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  3. Once each of the modules has had a chance to check if     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     it is responsible for servicing the request, stage 3      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     then checks direction of the transfer to determine how    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     to prepare EP0 for the control transfer.                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     Refer to USBCtrlEPServiceComplete() for more details.     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            Microchip USB Firmware has three different states for        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  the control transfer state machine:                          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  1. WAIT_SETUP                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  2. CTRL_TRF_TX                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  3. CTRL_TRF_RX                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  Refer to firmware manual to find out how one state           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  is transitioned to another.                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  A Control Transfer is composed of many USB transactions.     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  When transferring data over multiple transactions,           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  it is important to keep track of data source, data           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  destination, and data count. These three parameters are      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  stored in pSrc,pDst, and wCount. A flag is used to           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  note if the data source is from ROM or RAM.                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00417a   cfd9     MOVFF     0xfd9,0xfe6    void USBCtrlTrfSetupHandler(void)                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00417c   ffe6                                                                                                               
00417e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004180   ffd9                                                                                                               
004182   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               byte i;                                                                      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               /* Stage 1 */                                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004184   0100     MOVLB     0x0                ctrl_trf_state = WAIT_SETUP;                                                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004186   6bf8     CLRF      0xf8,0x1                                                                                        
004188   0100     MOVLB     0x0                ctrl_trf_session_owner = MUID_NULL;     // Set owner to NULL                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00418a   6bf9     CLRF      0xf9,0x1                                                                                        
00418c   0100     MOVLB     0x0                wCount._word = 0;                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00418e   6bfe     CLRF      0xfe,0x1                                                                                        
004190   6bff     CLRF      0xff,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               /* Stage 2 */                                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004192   ec3f     CALL      0x447e,0x0         USBCheckStdRequest();                   // See system\usb9\usb9.c            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004194   f022                                                                                                               
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004196   6adf     CLRF      0xdf,0x0           for(i=0;i < (sizeof(ClassReqHandler)/sizeof(pFunc));i++)                     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004198   50df     MOVF      0xdf,0x0,0x0                                                                                    
00419a   6e2a     MOVWF     0x2a,0x0                                                                                        
00419c   6a2b     CLRF      0x2b,0x0                                                                                        
00419e   0e01     MOVLW     0x1                                                                                             
0041a0   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
0041a2   0e00     MOVLW     0x0                                                                                             
0041a4   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
0041a6   e21b     BC        0x41de                                                                                          
0041da   2adf     INCF      0xdf,0x1,0x0                                                                                    
0041dc   d7dd     BRA       0x4198                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0041a8   0100     MOVLB     0x0                    if(ctrl_trf_session_owner != MUID_NULL)break;                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0041aa   51f9     MOVF      0xf9,0x0,0x1                                                                                    
0041ac   e001     BZ        0x41b0                                                                                          
0041ae   d017     BRA       0x41de                                                                                          
0041b0   6af7     CLRF      0xf7,0x0               ClassReqHandler[i]();               // See autofiles\usbdsc.c            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0041b2   34df     RLCF      0xdf,0x0,0x0                                                                                    
0041b4   0bfe     ANDLW     0xfe                                                                                            
0041b6   36f7     RLCF      0xf7,0x1,0x0                                                                                    
0041b8   6ef6     MOVWF     0xf6,0x0                                                                                        
0041ba   0e1f     MOVLW     0x1f                                                                                            
0041bc   26f6     ADDWF     0xf6,0x1,0x0                                                                                    
0041be   0e4c     MOVLW     0x4c                                                                                            
0041c0   22f7     ADDWFC    0xf7,0x1,0x0                                                                                    
0041c2   0009     TBLRDPOSTINC                                                                                              
0041c4   cff5     MOVFF     0xff5,0x2a                                                                                      
0041c6   f02a                                                                                                               
0041c8   0008     TBLRD                                                                                                     
0041ca   cff5     MOVFF     0xff5,0x2b                                                                                      
0041cc   f02b                                                                                                               
0041ce   d004     BRA       0x41d8                                                                                          
0041d0   c02b     MOVFF     0x2b,0xffa                                                                                      
0041d2   fffa                                                                                                               
0041d4   502a     MOVF      0x2a,0x0,0x0                                                                                    
0041d6   6ef9     MOVWF     0xf9,0x0                                                                                        
0041d8   dffb     RCALL     0x41d0                                                                                          
                                               }//end while                                                                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               /* Stage 3 */                                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0041de   d8f0     RCALL     0x43c0             USBCtrlEPServiceComplete();                                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0041e0   52e5     MOVF      0xe5,0x1,0x0   }//end USBCtrlTrfSetupHandler                                                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0041e2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0041e4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0041e6   ffd9                                                                                                               
0041e8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfOutHandler(void)                              C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine handles an OUT transaction according to         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  which control transfer state is currently active.            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            Note that if the the control transfer was from               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  host to device, the session owner should be notified         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  at the end of each OUT transaction to service the            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  received data.                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfOutHandler(void)                                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0041ea   0e02     MOVLW     0x2                if(ctrl_trf_state == CTRL_TRF_RX)                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0041ec   0100     MOVLB     0x0                                                                                             
0041ee   5df8     SUBWF     0xf8,0x0,0x1                                                                                    
0041f0   e10c     BNZ       0x420a                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0041f2   d8a4     RCALL     0x433c                 USBCtrlTrfRxService();                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                   /*                                                                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                    * Don't have to worry about overwriting _KEEP bit                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                    * because if _KEEP was set, TRNIF would not have been                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                    * generated in the first place.                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                    */                                                                      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0041f4   0104     MOVLB     0x4                    if(ep0Bo.Stat.DTS == 0)                                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0041f6   bd00     BTFSC     0x0,0x6,0x1                                                                                     
0041f8   d004     BRA       0x4202                                                                                          
0041fa   0104     MOVLB     0x4                        ep0Bo.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0041fc   0ec8     MOVLW     0xc8                                                                                            
0041fe   6f00     MOVWF     0x0,0x1                                                                                         
004200   d003     BRA       0x4208                 else                                                                     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004202   0104     MOVLB     0x4                        ep0Bo.Stat._byte = _USIE|_DAT0|_DTSEN;                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004204   0e88     MOVLW     0x88                                                                                            
004206   6f00     MOVWF     0x0,0x1                                                                                         
                                               }                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004208   d001     BRA       0x420c             else    // CTRL_TRF_TX                                                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00420a   d929     RCALL     0x445e                 USBPrepareForNextSetupTrf();                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00420c   0012     RETURN    0x0            }//end USBCtrlTrfOutHandler                                                      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfInHandler(void)                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine handles an IN transaction according to          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  which control transfer state is currently active.            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            A Set Address Request must not change the acutal address     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  of the device until the completion of the control            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  transfer. The end of the control transfer for Set Address    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  Request is an IN transaction. Therefore it is necessary      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  to service this unique situation when the condition is       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  right. Macro mUSBCheckAdrPendingState is defined in          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  usb9.h and its function is to specifically service this      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  event.                                                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfInHandler(void)                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00420e   0e04     MOVLW     0x4                mUSBCheckAdrPendingState();         // Must check if in ADR_PENDING_STATE    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004210   0101     MOVLB     0x1                                                                                             
004212   5da3     SUBWF     0xa3,0x0,0x1                                                                                    
004214   e10c     BNZ       0x422e                                                                                          
004216   c422     MOVFF     0x422,0xf6e                                                                                     
004218   ff6e                                                                                                               
00421a   506e     MOVF      0x6e,0x0,0x0                                                                                    
00421c   0800     SUBLW     0x0                                                                                             
00421e   e204     BC        0x4228                                                                                          
004220   0101     MOVLB     0x1                                                                                             
004222   0e05     MOVLW     0x5                                                                                             
004224   6fa3     MOVWF     0xa3,0x1                                                                                        
004226   d003     BRA       0x422e                                                                                          
004228   0101     MOVLB     0x1                                                                                             
00422a   0e03     MOVLW     0x3                                                                                             
00422c   6fa3     MOVWF     0xa3,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00422e   0100     MOVLB     0x0                if(ctrl_trf_state == CTRL_TRF_TX)                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004230   05f8     DECF      0xf8,0x0,0x1                                                                                    
004232   e10c     BNZ       0x424c                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004234   d80d     RCALL     0x4250                 USBCtrlTrfTxService();                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004236   0104     MOVLB     0x4                    if(ep0Bi.Stat.DTS == 0)                                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004238   bd04     BTFSC     0x4,0x6,0x1                                                                                     
00423a   d004     BRA       0x4244                                                                                          
00423c   0104     MOVLB     0x4                        ep0Bi.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00423e   0ec8     MOVLW     0xc8                                                                                            
004240   6f04     MOVWF     0x4,0x1                                                                                         
004242   d003     BRA       0x424a                 else                                                                     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004244   0104     MOVLB     0x4                        ep0Bi.Stat._byte = _USIE|_DAT0|_DTSEN;                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004246   0e88     MOVLW     0x88                                                                                            
004248   6f04     MOVWF     0x4,0x1                                                                                         
                                               }                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00424a   d001     BRA       0x424e             else // CTRL_TRF_RX                                                          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00424c   d908     RCALL     0x445e                 USBPrepareForNextSetupTrf();                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00424e   0012     RETURN    0x0            }//end USBCtrlTrfInHandler                                                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfTxService(void)                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    pSrc, wCount, and usb_stat.ctrl_trf_mem are setup properly.  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine should be called from only two places.          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  One from USBCtrlEPServiceComplete() and one from             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  USBCtrlTrfInHandler(). It takes care of managing a           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  transfer over multiple USB transactions.                     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            This routine works with isochronous endpoint larger than     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  256 bytes and is shown here as an example of how to deal     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  with BC9 and BC8. In reality, a control endpoint can never   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  be larger than 64 bytes.                                     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004250   cfd9     MOVFF     0xfd9,0xfe6    void USBCtrlTrfTxService(void)                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004252   ffe6                                                                                                               
004254   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004256   ffd9                                                                                                               
004258   0e02     MOVLW     0x2                                                                                             
00425a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               WORD byte_to_send;                                                           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                * First, have to figure out how many byte of data to send.                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00425c   0100     MOVLB     0x0                if(wCount._word < EP0_BUFF_SIZE)                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00425e   0e08     MOVLW     0x8                                                                                             
004260   5dfe     SUBWF     0xfe,0x0,0x1                                                                                    
004262   0e00     MOVLW     0x0                                                                                             
004264   59ff     SUBWFB    0xff,0x0,0x1                                                                                    
004266   e205     BC        0x4272                                                                                          
004268   c0fe     MOVFF     0xfe,0xfde             byte_to_send._word = wCount._word;                                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00426a   ffde                                                                                                               
00426c   c0ff     MOVFF     0xff,0xfdd                                                                                      
00426e   ffdd                                                                                                               
004270   d003     BRA       0x4278             else                                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004272   0e08     MOVLW     0x8                    byte_to_send._word = EP0_BUFF_SIZE;                                      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004274   6ede     MOVWF     0xde,0x0                                                                                        
004276   6add     CLRF      0xdd,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                * Next, load the number of bytes to send to BC9..0 in buffer descriptor     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004278   0104     MOVLB     0x4                ep0Bi.Stat.BC9 = 0;                                                          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00427a   9304     BCF       0x4,0x1,0x1                                                                                     
00427c   0104     MOVLB     0x4                ep0Bi.Stat.BC8 = 0;                                                          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00427e   9104     BCF       0x4,0x0,0x1                                                                                     
004280   0e01     MOVLW     0x1                ep0Bi.Stat._byte |= MSB(byte_to_send);                                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004282   50db     MOVF      0xdb,0x0,0x0                                                                                    
004284   0104     MOVLB     0x4                                                                                             
004286   1304     IORWF     0x4,0x1,0x1                                                                                     
004288   cfdf     MOVFF     0xfdf,0x405        ep0Bi.Cnt = LSB(byte_to_send);                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00428a   f405                                                                                                               
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                * Subtract the number of bytes just about to be sent from the total.        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00428c   0e00     MOVLW     0x0                wCount._word = wCount._word - byte_to_send._word;                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00428e   50db     MOVF      0xdb,0x0,0x0                                                                                    
004290   0100     MOVLB     0x0                                                                                             
004292   5ffe     SUBWF     0xfe,0x1,0x1                                                                                    
004294   0e01     MOVLW     0x1                                                                                             
004296   50db     MOVF      0xdb,0x0,0x0                                                                                    
004298   0100     MOVLB     0x0                                                                                             
00429a   5bff     SUBWFB    0xff,0x1,0x1                                                                                    
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00429c   0100     MOVLB     0x0                pDst.bRam = (byte*)&CtrlTrfData;        // Set destination pointer           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00429e   0e28     MOVLW     0x28                                                                                            
0042a0   6ffc     MOVWF     0xfc,0x1                                                                                        
0042a2   0e04     MOVLW     0x4                                                                                             
0042a4   6ffd     MOVWF     0xfd,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042a6   0101     MOVLB     0x1                if(usb_stat.ctrl_trf_mem == _ROM)       // Determine type of memory source   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042a8   a3a4     BTFSS     0xa4,0x1,0x1                                                                                    
0042aa   d020     BRA       0x42ec                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042ac   cfd9     MOVFF     0xfd9,0xfe9            while(byte_to_send._word)                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042ae   ffe9                                                                                                               
0042b0   cfda     MOVFF     0xfda,0xfea                                                                                     
0042b2   ffea                                                                                                               
0042b4   50ee     MOVF      0xee,0x0,0x0                                                                                    
0042b6   10ed     IORWF     0xed,0x0,0x0                                                                                    
0042b8   e018     BZ        0x42ea                                                                                          
0042e8   d7e1     BRA       0x42ac                                                                                          
                                                   {                                                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042ba   c0fa     MOVFF     0xfa,0xff6                 *pDst.bRam = *pSrc.bRom;                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042bc   fff6                                                                                                               
0042be   c0fb     MOVFF     0xfb,0xff7                                                                                      
0042c0   fff7                                                                                                               
0042c2   0008     TBLRD                                                                                                     
0042c4   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0042c6   c0fc     MOVFF     0xfc,0xfe9                                                                                      
0042c8   ffe9                                                                                                               
0042ca   c0fd     MOVFF     0xfd,0xfea                                                                                      
0042cc   ffea                                                                                                               
0042ce   6eef     MOVWF     0xef,0x0                                                                                        
0042d0   0100     MOVLB     0x0                        pDst.bRam++;                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042d2   2bfc     INCF      0xfc,0x1,0x1                                                                                    
0042d4   0e00     MOVLW     0x0                                                                                             
0042d6   23fd     ADDWFC    0xfd,0x1,0x1                                                                                    
0042d8   0100     MOVLB     0x0                        pSrc.bRom++;                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042da   2bfa     INCF      0xfa,0x1,0x1                                                                                    
0042dc   0e00     MOVLW     0x0                                                                                             
0042de   23fb     ADDWFC    0xfb,0x1,0x1                                                                                    
0042e0   06df     DECF      0xdf,0x1,0x0               byte_to_send._word--;                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042e2   0e01     MOVLW     0x1                                                                                             
0042e4   e201     BC        0x42e8                                                                                          
0042e6   06db     DECF      0xdb,0x1,0x0                                                                                    
                                                   }//end while(byte_to_send._word)                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               }                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042ea   d01e     BRA       0x4328             else // RAM                                                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               {                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042ec   cfd9     MOVFF     0xfd9,0xfe9            while(byte_to_send._word)                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042ee   ffe9                                                                                                               
0042f0   cfda     MOVFF     0xfda,0xfea                                                                                     
0042f2   ffea                                                                                                               
0042f4   50ee     MOVF      0xee,0x0,0x0                                                                                    
0042f6   10ed     IORWF     0xed,0x0,0x0                                                                                    
0042f8   e017     BZ        0x4328                                                                                          
004326   d7e2     BRA       0x42ec                                                                                          
                                                   {                                                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042fa   c0fa     MOVFF     0xfa,0xfe9                 *pDst.bRam = *pSrc.bRam;                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0042fc   ffe9                                                                                                               
0042fe   c0fb     MOVFF     0xfb,0xfea                                                                                      
004300   ffea                                                                                                               
004302   50ef     MOVF      0xef,0x0,0x0                                                                                    
004304   c0fc     MOVFF     0xfc,0xfe9                                                                                      
004306   ffe9                                                                                                               
004308   c0fd     MOVFF     0xfd,0xfea                                                                                      
00430a   ffea                                                                                                               
00430c   6eef     MOVWF     0xef,0x0                                                                                        
00430e   0100     MOVLB     0x0                        pDst.bRam++;                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004310   2bfc     INCF      0xfc,0x1,0x1                                                                                    
004312   0e00     MOVLW     0x0                                                                                             
004314   23fd     ADDWFC    0xfd,0x1,0x1                                                                                    
004316   0100     MOVLB     0x0                        pSrc.bRam++;                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004318   2bfa     INCF      0xfa,0x1,0x1                                                                                    
00431a   0e00     MOVLW     0x0                                                                                             
00431c   23fb     ADDWFC    0xfb,0x1,0x1                                                                                    
00431e   06df     DECF      0xdf,0x1,0x0               byte_to_send._word--;                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004320   0e01     MOVLW     0x1                                                                                             
004322   e201     BC        0x4326                                                                                          
004324   06db     DECF      0xdb,0x1,0x0                                                                                    
                                                   }//end while(byte_to_send._word)                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               }//end if(usb_stat.ctrl_trf_mem == _ROM)                                     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004328   0e02     MOVLW     0x2            }//end USBCtrlTrfTxService                                                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00432a   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00432c   e202     BC        0x4332                                                                                          
00432e   6ae1     CLRF      0xe1,0x0                                                                                        
004330   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004332   6ee1     MOVWF     0xe1,0x0                                                                                        
004334   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004336   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004338   ffd9                                                                                                               
00433a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfRxService(void)                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    pDst and wCount are setup properly.                          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  pSrc is always &CtrlTrfData                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  usb_stat.ctrl_trf_mem is always _RAM.                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  wCount should be set to 0 at the start of each control       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  transfer.                                                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        *** This routine is only partially complete. Check for       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  new version of the firmware.                                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00433c   cfd9     MOVFF     0xfd9,0xfe6    void USBCtrlTrfRxService(void)                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00433e   ffe6                                                                                                               
004340   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004342   ffd9                                                                                                               
004344   0e02     MOVLW     0x2                                                                                             
004346   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               WORD byte_to_read;                                                           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004348   0e03     MOVLW     0x3                MSB(byte_to_read) = 0x03 & ep0Bo.Stat._byte;    // Filter out last 2 bits    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00434a   0104     MOVLB     0x4                                                                                             
00434c   1500     ANDWF     0x0,0x0,0x1                                                                                     
00434e   6ee7     MOVWF     0xe7,0x0                                                                                        
004350   0e01     MOVLW     0x1                                                                                             
004352   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
004354   ffdb                                                                                                               
004356   c401     MOVFF     0x401,0xfdf        LSB(byte_to_read) = ep0Bo.Cnt;                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004358   ffdf                                                                                                               
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                * Accumulate total number of bytes read                                     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00435a   50de     MOVF      0xde,0x0,0x0       wCount._word = wCount._word + byte_to_read._word;                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00435c   0100     MOVLB     0x0                                                                                             
00435e   27fe     ADDWF     0xfe,0x1,0x1                                                                                    
004360   50dd     MOVF      0xdd,0x0,0x0                                                                                    
004362   0100     MOVLB     0x0                                                                                             
004364   23ff     ADDWFC    0xff,0x1,0x1                                                                                    
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004366   0100     MOVLB     0x0                pSrc.bRam = (byte*)&CtrlTrfData;                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004368   0e28     MOVLW     0x28                                                                                            
00436a   6ffa     MOVWF     0xfa,0x1                                                                                        
00436c   0e04     MOVLW     0x4                                                                                             
00436e   6ffb     MOVWF     0xfb,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004370   cfd9     MOVFF     0xfd9,0xfe9        while(byte_to_read._word)                                                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004372   ffe9                                                                                                               
004374   cfda     MOVFF     0xfda,0xfea                                                                                     
004376   ffea                                                                                                               
004378   50ee     MOVF      0xee,0x0,0x0                                                                                    
00437a   10ed     IORWF     0xed,0x0,0x0                                                                                    
00437c   e017     BZ        0x43ac                                                                                          
0043aa   d7e2     BRA       0x4370                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00437e   c0fa     MOVFF     0xfa,0xfe9             *pDst.bRam = *pSrc.bRam;                                                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004380   ffe9                                                                                                               
004382   c0fb     MOVFF     0xfb,0xfea                                                                                      
004384   ffea                                                                                                               
004386   50ef     MOVF      0xef,0x0,0x0                                                                                    
004388   c0fc     MOVFF     0xfc,0xfe9                                                                                      
00438a   ffe9                                                                                                               
00438c   c0fd     MOVFF     0xfd,0xfea                                                                                      
00438e   ffea                                                                                                               
004390   6eef     MOVWF     0xef,0x0                                                                                        
004392   0100     MOVLB     0x0                    pDst.bRam++;                                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004394   2bfc     INCF      0xfc,0x1,0x1                                                                                    
004396   0e00     MOVLW     0x0                                                                                             
004398   23fd     ADDWFC    0xfd,0x1,0x1                                                                                    
00439a   0100     MOVLB     0x0                    pSrc.bRam++;                                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00439c   2bfa     INCF      0xfa,0x1,0x1                                                                                    
00439e   0e00     MOVLW     0x0                                                                                             
0043a0   23fb     ADDWFC    0xfb,0x1,0x1                                                                                    
0043a2   06df     DECF      0xdf,0x1,0x0           byte_to_read._word--;                                                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043a4   0e01     MOVLW     0x1                                                                                             
0043a6   e201     BC        0x43aa                                                                                          
0043a8   06db     DECF      0xdb,0x1,0x0                                                                                    
                                               }//end while(byte_to_read._word)                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043ac   0e02     MOVLW     0x2            }//end USBCtrlTrfRxService                                                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043ae   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0043b0   e202     BC        0x43b6                                                                                          
0043b2   6ae1     CLRF      0xe1,0x0                                                                                        
0043b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0043b6   6ee1     MOVWF     0xe1,0x0                                                                                        
0043b8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0043ba   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0043bc   ffd9                                                                                                               
0043be   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlEPServiceComplete(void)                          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine wrap up the ramaining tasks in servicing        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  a Setup Request. Its main task is to set the endpoint        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  controls appropriately for a given situation. See code       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  below.                                                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  There are three main scenarios:                              C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  a) There was no handler for the Request, in this case        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     a STALL should be sent out.                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  b) The host has requested a read control transfer,           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     endpoints are required to be setup in a specific way.     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  c) The host has requested a write control transfer, or       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     a control data stage is not required, endpoints are       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     required to be setup in a specific way.                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  Packet processing is resumed by clearing PKTDIS bit.         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlEPServiceComplete(void)                                              C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                * PKTDIS bit is set when a Setup Transaction is received.                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                * Clear to resume packet processing.                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043c0   986d     BCF       0x6d,0x4,0x0       UCONbits.PKTDIS = 0;                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043c2   0100     MOVLB     0x0                if(ctrl_trf_session_owner == MUID_NULL)                                      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043c4   51f9     MOVF      0xf9,0x0,0x1                                                                                    
0043c6   e10f     BNZ       0x43e6                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                   /*                                                                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                    * If no one knows how to service this request then stall.               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                    * Must also prepare EP0 to receive the next SETUP transaction.          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                    */                                                                      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043c8   0104     MOVLB     0x4                    ep0Bo.Cnt = EP0_BUFF_SIZE;                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043ca   0e08     MOVLW     0x8                                                                                             
0043cc   6f01     MOVWF     0x1,0x1                                                                                         
0043ce   0104     MOVLB     0x4                    ep0Bo.ADR = (byte*)&SetupPkt;                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043d0   0e20     MOVLW     0x20                                                                                            
0043d2   6f02     MOVWF     0x2,0x1                                                                                         
0043d4   0e04     MOVLW     0x4                                                                                             
0043d6   6f03     MOVWF     0x3,0x1                                                                                         
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043d8   0104     MOVLB     0x4                    ep0Bo.Stat._byte = _USIE|_BSTALL;                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043da   0e84     MOVLW     0x84                                                                                            
0043dc   6f00     MOVWF     0x0,0x1                                                                                         
0043de   0104     MOVLB     0x4                    ep0Bi.Stat._byte = _USIE|_BSTALL;                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043e0   0e84     MOVLW     0x84                                                                                            
0043e2   6f04     MOVWF     0x4,0x1                                                                                         
                                               }                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043e4   d03b     BRA       0x445c             else    // A module has claimed ownership of the control transfer session.   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               {                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043e6   0104     MOVLB     0x4                    if(SetupPkt.DataDir == DEV_TO_HOST)                                      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043e8   af20     BTFSS     0x20,0x7,0x1                                                                                    
0043ea   d025     BRA       0x4436                                                                                          
                                                   {                                                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043ec   0100     MOVLB     0x0                        if(SetupPkt.wLength < wCount._word)                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
0043ee   51fe     MOVF      0xfe,0x0,0x1                                                                                    
0043f0   0104     MOVLB     0x4                                                                                             
0043f2   5d26     SUBWF     0x26,0x0,0x1                                                                                    
0043f4   0100     MOVLB     0x0                                                                                             
0043f6   51ff     MOVF      0xff,0x0,0x1                                                                                    
0043f8   0104     MOVLB     0x4                                                                                             
0043fa   5927     SUBWFB    0x27,0x0,0x1                                                                                    
0043fc   e204     BC        0x4406                                                                                          
0043fe   c426     MOVFF     0x426,0xfe                     wCount._word = SetupPkt.wLength;                                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004400   f0fe                                                                                                               
004402   c427     MOVFF     0x427,0xff                                                                                      
004404   f0ff                                                                                                               
004406   df24     RCALL     0x4250                     USBCtrlTrfTxService();                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004408   0100     MOVLB     0x0                        ctrl_trf_state = CTRL_TRF_TX;                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00440a   0e01     MOVLW     0x1                                                                                             
00440c   6ff8     MOVWF     0xf8,0x1                                                                                        
                                                       /*                                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * Control Read:                                                     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * <SETUP[0]><IN[1]><IN[0]>...<OUT[1]> | <SETUP[0]>                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * 1. Prepare OUT EP to respond to early termination                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * NOTE:                                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * If something went wrong during the control transfer,              C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * the last status stage may not be sent by the host.                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * When this happens, two different things could happen              C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * depending on the host.                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * a) The host could send out a RESET.                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * b) The host could send out a new SETUP transaction                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        *    without sending a RESET first.                                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * To properly handle case (b), the OUT EP must be setup             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * to receive either a zero length OUT transaction, or a             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * new SETUP transaction.                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * Since the SETUP transaction requires the DTS bit to be            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * DAT0 while the zero length OUT status requires the DTS            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * bit to be DAT1, the DTS bit check by the hardware should          C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * be disabled. This way the SIE could accept either of              C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * the two transactions.                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * Furthermore, the Cnt byte should be set to prepare for            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * the SETUP data (8-byte or more), and the buffer address           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * should be pointed to SetupPkt.                                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        */                                                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00440e   0104     MOVLB     0x4                        ep0Bo.Cnt = EP0_BUFF_SIZE;                                           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004410   0e08     MOVLW     0x8                                                                                             
004412   6f01     MOVWF     0x1,0x1                                                                                         
004414   0104     MOVLB     0x4                        ep0Bo.ADR = (byte*)&SetupPkt;                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004416   0e20     MOVLW     0x20                                                                                            
004418   6f02     MOVWF     0x2,0x1                                                                                         
00441a   0e04     MOVLW     0x4                                                                                             
00441c   6f03     MOVWF     0x3,0x1                                                                                         
00441e   0104     MOVLB     0x4                        ep0Bo.Stat._byte = _USIE;           // Note: DTSEN is 0!             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004420   0e80     MOVLW     0x80                                                                                            
004422   6f00     MOVWF     0x0,0x1                                                                                         
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                       /*                                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * 2. Prepare IN EP to transfer data, Cnt should have                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        *    been initialized by responsible request owner.                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        */                                                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004424   0104     MOVLB     0x4                        ep0Bi.ADR = (byte*)&CtrlTrfData;                                     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004426   0e28     MOVLW     0x28                                                                                            
004428   6f06     MOVWF     0x6,0x1                                                                                         
00442a   0e04     MOVLW     0x4                                                                                             
00442c   6f07     MOVWF     0x7,0x1                                                                                         
00442e   0104     MOVLB     0x4                        ep0Bi.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004430   0ec8     MOVLW     0xc8                                                                                            
004432   6f04     MOVWF     0x4,0x1                                                                                         
                                                   }                                                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004434   d013     BRA       0x445c                 else    // (SetupPkt.DataDir == HOST_TO_DEV)                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                   {                                                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004436   0100     MOVLB     0x0                        ctrl_trf_state = CTRL_TRF_RX;                                        C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004438   0e02     MOVLW     0x2                                                                                             
00443a   6ff8     MOVWF     0xf8,0x1                                                                                        
                                                       /*                                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * Control Write:                                                    C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * <SETUP[0]><OUT[1]><OUT[0]>...<IN[1]> | <SETUP[0]>                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * 1. Prepare IN EP to respond to early termination                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        *    This is the same as a Zero Length Packet Response              C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        *    for control transfer without a data stage                      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        */                                                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00443c   0104     MOVLB     0x4                        ep0Bi.Cnt = 0;                                                       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00443e   6b05     CLRF      0x5,0x1                                                                                         
004440   0104     MOVLB     0x4                        ep0Bi.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004442   0ec8     MOVLW     0xc8                                                                                            
004444   6f04     MOVWF     0x4,0x1                                                                                         
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                       /*                                                                   C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        * 2. Prepare OUT EP to receive data.                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                        */                                                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004446   0104     MOVLB     0x4                        ep0Bo.Cnt = EP0_BUFF_SIZE;                                           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004448   0e08     MOVLW     0x8                                                                                             
00444a   6f01     MOVWF     0x1,0x1                                                                                         
00444c   0104     MOVLB     0x4                        ep0Bo.ADR = (byte*)&CtrlTrfData;                                     C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00444e   0e28     MOVLW     0x28                                                                                            
004450   6f02     MOVWF     0x2,0x1                                                                                         
004452   0e04     MOVLW     0x4                                                                                             
004454   6f03     MOVWF     0x3,0x1                                                                                         
004456   0104     MOVLB     0x4                        ep0Bo.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004458   0ec8     MOVLW     0xc8                                                                                            
00445a   6f00     MOVWF     0x0,0x1                                                                                         
                                                   }//end if(SetupPkt.DataDir == DEV_TO_HOST)                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                               }//end if(ctrl_trf_session_owner == MUID_NULL)                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00445c   0012     RETURN    0x0            }//end USBCtrlEPServiceComplete                                                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBPrepareForNextSetupTrf(void)                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        The routine forces EP0 OUT to be ready for a new Setup       C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  transaction, and forces EP0 IN to be owned by CPU.           C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBPrepareForNextSetupTrf(void)                                             C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00445e   0100     MOVLB     0x0                ctrl_trf_state = WAIT_SETUP;            // See usbctrltrf.h                  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004460   6bf8     CLRF      0xf8,0x1                                                                                        
004462   0104     MOVLB     0x4                ep0Bo.Cnt = EP0_BUFF_SIZE;              // Defined in usbcfg.h               C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004464   0e08     MOVLW     0x8                                                                                             
004466   6f01     MOVWF     0x1,0x1                                                                                         
004468   0104     MOVLB     0x4                ep0Bo.ADR = (byte*)&SetupPkt;                                                C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00446a   0e20     MOVLW     0x20                                                                                            
00446c   6f02     MOVWF     0x2,0x1                                                                                         
00446e   0e04     MOVLW     0x4                                                                                             
004470   6f03     MOVWF     0x3,0x1                                                                                         
004472   0104     MOVLB     0x4                ep0Bo.Stat._byte = _USIE|_DAT0|_DTSEN;  // EP0 buff dsc init, see usbmmap.h  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
004474   0e88     MOVLW     0x88                                                                                            
004476   6f00     MOVWF     0x0,0x1                                                                                         
004478   0104     MOVLB     0x4                ep0Bi.Stat._byte = _UCPU;               // EP0 IN buffer initialization      C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
00447a   6b04     CLRF      0x4,0x1                                                                                         
00447c   0012     RETURN    0x0            }//end USBPrepareForNextSetupTrf                                                 C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /** EOF usbctrltrf.c *********************************************************/  C:\opensprints\FW\system\usb\usbctrltrf\usbctrltrf.c
                                           /*********************************************************************           C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            *********************************************************************           C:\opensprints\FW\user\user.c
                                            * FileName:        user.c                                                       C:\opensprints\FW\user\user.c
                                            * Dependencies:    See INCLUDES section below                                   C:\opensprints\FW\user\user.c
                                            * Processor:       PIC18                                                        C:\opensprints\FW\user\user.c
                                            * Compiler:        C18 2.30.01+                                                 C:\opensprints\FW\user\user.c
                                            * Company:         Microchip Technology, Inc.                                   C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * Software License Agreement                                                    C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\opensprints\FW\user\user.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\opensprints\FW\user\user.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\opensprints\FW\user\user.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\opensprints\FW\user\user.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\opensprints\FW\user\user.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\opensprints\FW\user\user.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\opensprints\FW\user\user.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\opensprints\FW\user\user.c
                                            * civil liability for the breach of the terms and conditions of this            C:\opensprints\FW\user\user.c
                                            * license.                                                                      C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\opensprints\FW\user\user.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\opensprints\FW\user\user.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\opensprints\FW\user\user.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\opensprints\FW\user\user.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\opensprints\FW\user\user.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * Author               Date        Comment                                      C:\opensprints\FW\user\user.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\opensprints\FW\user\user.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\opensprints\FW\user\user.c
                                            * Brian Schmalz		03/15/06	Added user code to impliment                          C:\opensprints\FW\user\user.c
                                            *									firmware version D v1.0 for UBW                                       C:\opensprints\FW\user\user.c
                                            *									project. See www.greta.dhs.org/UBW                                    C:\opensprints\FW\user\user.c
                                            * Brian Schmalz		05/04/06	Starting version 1.1, which will                      C:\opensprints\FW\user\user.c
                                            * 									include several fixes. See website.                                  C:\opensprints\FW\user\user.c
                                            * BPS					06/21/06	Starting v1.2 -                                              C:\opensprints\FW\user\user.c
                                            * - Fixed problem with I packets (from T command) filling up TX buffer          C:\opensprints\FW\user\user.c
                                            * 		and not letting any incoming commands be received. (strange)                C:\opensprints\FW\user\user.c
                                            * - Adding several commands - Analog inputs being the biggest set.              C:\opensprints\FW\user\user.c
                                            * - Also Byte read/Byte write (PEEK/POKE) anywhere in memory                    C:\opensprints\FW\user\user.c
                                            * - Individual pin I/O and direction                                            C:\opensprints\FW\user\user.c
                                            * BPS					08/16/06	v1.3 - Fixed bug with USB startup                            C:\opensprints\FW\user\user.c
                                            * BPS					09/09/06	v1.4 - Starting 1.4                                          C:\opensprints\FW\user\user.c
                                            * - Fixed Microchip bug with early silicon - UCONbits.PKTDIS = 0;               C:\opensprints\FW\user\user.c
                                            * - Adding BO and BC commands for parallel output to graphics pannels           C:\opensprints\FW\user\user.c
                                            * BPS					12/06/06	v1.4 - More work on 1.4                                      C:\opensprints\FW\user\user.c
                                            * - Re-wrote all I/O buffering code for increased speed and functionality       C:\opensprints\FW\user\user.c
                                            * - Re-wrote error handling code                                                C:\opensprints\FW\user\user.c
                                            * - Added delays to BC/BO commands to help Corey                                C:\opensprints\FW\user\user.c
                                            * BPS					01/06/07	v1.4 - Added RC command for servos                           C:\opensprints\FW\user\user.c
                                            * BPS					03/07/07	v1.4.1 - Changed blink rate for SFE                          C:\opensprints\FW\user\user.c
                                            * BPS					05/24/07	v1.4.2 - Fixed RC command bug - it                           C:\opensprints\FW\user\user.c
                                            *									wouldn't shut off.                                                    C:\opensprints\FW\user\user.c
                                            * Luke Orland			2007/08/28	added some stuff                                     C:\opensprints\FW\user\user.c
                                            * Luke Orland			2007/09/29  added race test mode and timeclock                  C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            ********************************************************************/           C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           /** I N C L U D E S **********************************************************/  C:\opensprints\FW\user\user.c
                                           #include <p18cxxx.h>                                                             C:\opensprints\FW\user\user.c
                                           #include <usart.h>                                                               C:\opensprints\FW\user\user.c
                                           #include <stdio.h>                                                               C:\opensprints\FW\user\user.c
                                           #include <ctype.h>                                                               C:\opensprints\FW\user\user.c
                                           #include <delays.h>                                                              C:\opensprints\FW\user\user.c
                                           #include "system\typedefs.h"                                                     C:\opensprints\FW\user\user.c
                                           #include "system\usb\usb.h"                                                      C:\opensprints\FW\user\user.c
                                           #include "io_cfg.h"             // I/O pin mapping                               C:\opensprints\FW\user\user.c
                                           #include "user\user.h"                                                           C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           /** D E F I N E S ********************************************************/      C:\opensprints\FW\user\user.c
                                           #define bitset(var,bitno) ((var) |= (1 << (bitno)))                              C:\opensprints\FW\user\user.c
                                           #define bitclr(var,bitno) ((var) &= ~(1 << (bitno)))                             C:\opensprints\FW\user\user.c
                                           #define bittst(var,bitno) (var& (1 << (bitno)))                                  C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // For the RC command, we define a little data structure that holds the          C:\opensprints\FW\user\user.c
                                           // values assoicated with a particular servo connection                          C:\opensprints\FW\user\user.c
                                           // It's port, pin, value (position) and state (INACTIVE, PRIMED or TIMING)       C:\opensprints\FW\user\user.c
                                           // Later on we make an array of these (19 elements long - 19 pins) to track      C:\opensprints\FW\user\user.c
                                           // the values of all of the servos.                                              C:\opensprints\FW\user\user.c
                                           typedef enum {                                                                   C:\opensprints\FW\user\user.c
                                           	 kOFF = 1                                                                       C:\opensprints\FW\user\user.c
                                           	,kWAITING                                                                       C:\opensprints\FW\user\user.c
                                           	,kPRIMED                                                                        C:\opensprints\FW\user\user.c
                                           	,kTIMING                                                                        C:\opensprints\FW\user\user.c
                                           } tRC_state;                                                                     C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #define kRC_DATA_SIZE			24				// In structs, since there are 3 ports of 8 bits each C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #define kTX_BUF_SIZE 			64				// In bytes                                        C:\opensprints\FW\user\user.c
                                           #define kRX_BUF_SIZE			64				// In bytes                                         C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #define kUSART_TX_BUF_SIZE		64				// In bytes                                    C:\opensprints\FW\user\user.c
                                           #define kUSART_RX_BUF_SIZE		64				// In bytes                                    C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Enum for extract_num() function parameter                                     C:\opensprints\FW\user\user.c
                                           typedef enum {                                                                   C:\opensprints\FW\user\user.c
                                           	 kCHAR                                                                          C:\opensprints\FW\user\user.c
                                           	,kUCHAR                                                                         C:\opensprints\FW\user\user.c
                                           	,kINT                                                                           C:\opensprints\FW\user\user.c
                                           	,kUINT                                                                          C:\opensprints\FW\user\user.c
                                           	,kASCII_CHAR                                                                    C:\opensprints\FW\user\user.c
                                           	,kUCASE_ASCII_CHAR                                                              C:\opensprints\FW\user\user.c
                                           } tExtractType;                                                                  C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #define advance_RX_buf_out()						\                                              C:\opensprints\FW\user\user.c
                                           { 													\                                                                 C:\opensprints\FW\user\user.c
                                           	g_RX_buf_out++;									\                                                       C:\opensprints\FW\user\user.c
                                           	if (kRX_BUF_SIZE == g_RX_buf_out)				\                                          C:\opensprints\FW\user\user.c
                                           	{												\                                                                  C:\opensprints\FW\user\user.c
                                           		g_RX_buf_out = 0;							\                                                      C:\opensprints\FW\user\user.c
                                           	}												\                                                                  C:\opensprints\FW\user\user.c
                                           }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #define kISR_FIFO_A_DEPTH		3                                                     C:\opensprints\FW\user\user.c
                                           #define kISR_FIFO_D_DEPTH		3                                                     C:\opensprints\FW\user\user.c
                                           #define kPR2_RELOAD				250		// For 1ms TMR2 tick                                 C:\opensprints\FW\user\user.c
                                           #define kCR						0x0D                                                            C:\opensprints\FW\user\user.c
                                           #define kLF						0x0A                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // defines for the error_byte byte - each bit has a meaning                      C:\opensprints\FW\user\user.c
                                           #define kERROR_BYTE_TX_BUF_OVERRUN			2                                           C:\opensprints\FW\user\user.c
                                           #define kERROR_BYTE_RX_BUFFER_OVERRUN		3                                         C:\opensprints\FW\user\user.c
                                           #define kERROR_BYTE_MISSING_PARAMETER		4                                         C:\opensprints\FW\user\user.c
                                           #define kERROR_BYTE_PRINTED_ERROR			5			// We've already printed out an error    C:\opensprints\FW\user\user.c
                                           #define kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT	6                                    C:\opensprints\FW\user\user.c
                                           #define kERROR_BYTE_EXTRA_CHARACTERS 		7                                         C:\opensprints\FW\user\user.c
                                           #define kERROR_BYTE_UNKNOWN_COMMAND			8			// Part of command parser, not error handler C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           /** V A R I A B L E S ********************************************************/  C:\opensprints\FW\user\user.c
                                           #pragma udata access fast_vars                                                   C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Rate variable - how fast does interrupt fire to capture inputs?               C:\opensprints\FW\user\user.c
                                           near unsigned int time_between_updates;                                          C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           near volatile unsigned int ISR_D_RepeatRate;			// How many 1ms ticks between Digital updates C:\opensprints\FW\user\user.c
                                           near volatile unsigned char ISR_D_FIFO_in;				// In pointer                      C:\opensprints\FW\user\user.c
                                           near volatile unsigned char ISR_D_FIFO_out;				// Out pointer                    C:\opensprints\FW\user\user.c
                                           near volatile unsigned char ISR_D_FIFO_length;			// Current FIFO depth           C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           near volatile unsigned int ISR_A_RepeatRate;			// How many 1ms ticks between Analog updates C:\opensprints\FW\user\user.c
                                           near volatile unsigned char ISR_A_FIFO_in;				// In pointer                      C:\opensprints\FW\user\user.c
                                           near volatile unsigned char ISR_A_FIFO_out;				// Out pointer                    C:\opensprints\FW\user\user.c
                                           near volatile unsigned char ISR_A_FIFO_length;			// Current FIFO depth           C:\opensprints\FW\user\user.c
                                           near volatile unsigned char AnalogEnable;				// Maximum ADC channel to convert   C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // This byte has each of its bits used as a seperate error flag                  C:\opensprints\FW\user\user.c
                                           near unsigned char error_byte;                                                   C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // RC servo variables                                                            C:\opensprints\FW\user\user.c
                                           // First the main array of data for each servo                                   C:\opensprints\FW\user\user.c
                                           near unsigned char g_RC_primed_ptr;                                              C:\opensprints\FW\user\user.c
                                           near unsigned char g_RC_next_ptr;                                                C:\opensprints\FW\user\user.c
                                           near unsigned char g_RC_timing_ptr;                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Used only in LowISR                                                           C:\opensprints\FW\user\user.c
                                           near unsigned int D_tick_counter;                                                C:\opensprints\FW\user\user.c
                                           near unsigned int A_tick_counter;                                                C:\opensprints\FW\user\user.c
                                           near unsigned char A_cur_channel;                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // ROM strings                                                                   C:\opensprints\FW\user\user.c
                                           const rom char st_OK[] = {"OK\r\n"};                                             C:\opensprints\FW\user\user.c
                                           const rom char st_LFCR[] = {"\r\n"};                                             C:\opensprints\FW\user\user.c
                                           const rom char st_version[] = {"opensprints FW 0.32 based on UBW FW D Version 1.4.2\r\n"}; C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #pragma udata ISR_buf=0x100                                                      C:\opensprints\FW\user\user.c
                                           volatile unsigned int ISR_A_FIFO[12][kISR_FIFO_A_DEPTH];	// Stores the most recent analog conversions C:\opensprints\FW\user\user.c
                                           volatile unsigned char ISR_D_FIFO[3][kISR_FIFO_D_DEPTH];	// FIFO of actual data  C:\opensprints\FW\user\user.c
                                           volatile tRC_state g_RC_state[kRC_DATA_SIZE];				// Stores states for each pin for RC command C:\opensprints\FW\user\user.c
                                           volatile unsigned int g_RC_value[kRC_DATA_SIZE];			// Stores reload values for TMR0 C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #pragma udata com_buf=0x200                                                      C:\opensprints\FW\user\user.c
                                           // USB Transmit buffer for packets (back to PC)                                  C:\opensprints\FW\user\user.c
                                           unsigned char g_TX_buf[kTX_BUF_SIZE];                                            C:\opensprints\FW\user\user.c
                                           // USB Receiving buffer for commands as they come from PC                        C:\opensprints\FW\user\user.c
                                           unsigned char g_RX_buf[kRX_BUF_SIZE];                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // USART Receiving buffer for data coming from the USART                         C:\opensprints\FW\user\user.c
                                           unsigned char g_USART_RX_buf[kUSART_RX_BUF_SIZE];                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // USART Transmit buffer for data going to the USART                             C:\opensprints\FW\user\user.c
                                           unsigned char g_USART_TX_buf[kUSART_TX_BUF_SIZE];                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // These variables are in normal storage space                                   C:\opensprints\FW\user\user.c
                                           #pragma udata                                                                    C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // These are used for the Fast Parallel Output routines                          C:\opensprints\FW\user\user.c
                                           unsigned char g_BO_init;                                                         C:\opensprints\FW\user\user.c
                                           unsigned char g_BO_strobe_mask;                                                  C:\opensprints\FW\user\user.c
                                           unsigned char g_BO_wait_mask;                                                    C:\opensprints\FW\user\user.c
                                           unsigned char g_BO_wait_delay;                                                   C:\opensprints\FW\user\user.c
                                           unsigned char g_BO_strobe_delay;                                                 C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Pointers to USB transmit (back to PC) buffer                                  C:\opensprints\FW\user\user.c
                                           unsigned char g_TX_buf_in;                                                       C:\opensprints\FW\user\user.c
                                           unsigned char g_TX_buf_out;                                                      C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Pointers to USB receive (from PC) buffer                                      C:\opensprints\FW\user\user.c
                                           unsigned char g_RX_buf_in;                                                       C:\opensprints\FW\user\user.c
                                           unsigned char g_RX_buf_out;                                                      C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // In and out pointers to our USART input buffer                                 C:\opensprints\FW\user\user.c
                                           unsigned char g_USART_RX_buf_in;                                                 C:\opensprints\FW\user\user.c
                                           unsigned char g_USART_RX_buf_out;                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // In and out pointers to our USART output buffer                                C:\opensprints\FW\user\user.c
                                           unsigned char g_USART_TX_buf_in;                                                 C:\opensprints\FW\user\user.c
                                           unsigned char g_USART_TX_buf_out;                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Normally set to TRUE. Able to set FALSE to not send "OK" message after packet recepetion C:\opensprints\FW\user\user.c
                                           BOOL	g_ack_enable;                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // sensor stuff                                                                  C:\opensprints\FW\user\user.c
                                           BOOL is_racing = FALSE;                                                          C:\opensprints\FW\user\user.c
                                           BOOL raceTestMode = FALSE;                                                       C:\opensprints\FW\user\user.c
                                           unsigned int raceTimeMins;                                                       C:\opensprints\FW\user\user.c
                                           unsigned int raceTimeCentisecs;                                                  C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\opensprints\FW\user\user.c
                                           void BlinkUSBStatus (void);		// Handles blinking the USB status LED              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           BOOL SwitchIsPressed (void);	// Check to see if the user (PRG) switch is pressed C:\opensprints\FW\user\user.c
                                           void parse_packet (void);		// Take a full packet and dispatch it to the right function C:\opensprints\FW\user\user.c
                                           signed short long extract_number (tExtractType type); // Pull a number paramter out of the packet C:\opensprints\FW\user\user.c
                                           signed char extract_digit (signed short long * acc, unsigned char digits); // Pull a character out of the packet C:\opensprints\FW\user\user.c
                                           void parse_R_packet (void);		// R for resetting UBW                              C:\opensprints\FW\user\user.c
                                           void parse_C_packet (void);		// C for configuring I/O and analog pins            C:\opensprints\FW\user\user.c
                                           void parse_CX_packet (void); 	// CX For configuring serial port                  C:\opensprints\FW\user\user.c
                                           void parse_O_packet (void);		// O for output digital to pins                     C:\opensprints\FW\user\user.c
                                           void parse_I_packet (void);		// I for input digital from pins                    C:\opensprints\FW\user\user.c
                                           void parse_V_packet (void);		// V for printing version                           C:\opensprints\FW\user\user.c
                                           void parse_A_packet (void);		// A for requesting analog inputs                   C:\opensprints\FW\user\user.c
                                           void parse_T_packet (void);		// T for setting up timed I/O (digital or analog)   C:\opensprints\FW\user\user.c
                                           void parse_PI_packet (void);	// PI for reading a single pin                      C:\opensprints\FW\user\user.c
                                           void parse_PO_packet (void);	// PO for setting a single pin state                C:\opensprints\FW\user\user.c
                                           void parse_PD_packet (void);	// PD for setting a pin's direction                 C:\opensprints\FW\user\user.c
                                           void parse_MR_packet (void);	// MR for Memory Read                               C:\opensprints\FW\user\user.c
                                           void parse_MW_packet (void); 	// MW for Memory Write                             C:\opensprints\FW\user\user.c
                                           void parse_TX_packet (void);	// TX for transmitting serial                       C:\opensprints\FW\user\user.c
                                           void parse_RX_packet (void);	// RX for receiving serial                          C:\opensprints\FW\user\user.c
                                           void parse_RC_packet (void);	// RC is for outputing RC servo pulses              C:\opensprints\FW\user\user.c
                                           void parse_BO_packet (void);	// BO sends data to fast parallel output            C:\opensprints\FW\user\user.c
                                           void parse_BC_packet (void);	// BC configures fast parallel outputs              C:\opensprints\FW\user\user.c
                                           void parse_BS_packet (void);	// BS sends binary data to fast parallel output     C:\opensprints\FW\user\user.c
                                           void parse_CU_packet (void);	// CU configures UBW (system wide parameters)       C:\opensprints\FW\user\user.c
                                           void parse_SS_packet (void);	// SS Send SPI                                      C:\opensprints\FW\user\user.c
                                           void parse_RS_packet (void);	// RS Receive SPI                                   C:\opensprints\FW\user\user.c
                                           void parse_CS_packet (void);	// CS Configure SPI                                 C:\opensprints\FW\user\user.c
                                           void parse_SI_packet (void);	// SI Send I2C                                      C:\opensprints\FW\user\user.c
                                           void parse_RI_packet (void);	// RI Receive I2C                                   C:\opensprints\FW\user\user.c
                                           void parse_CI_packet (void);	// CI Configure I2C                                 C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           void check_and_send_TX_data (void); // See if there is any data to send to PC, and if so, do it C:\opensprints\FW\user\user.c
                                           void print_ack (void);			// Print "OK" after packet is parsed                    C:\opensprints\FW\user\user.c
                                           int _user_putc (char c);		// Our UBS based stream character printer              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // OpenSprints prototypes                                                        C:\opensprints\FW\user\user.c
                                           void BlinkOpenSprintsStatus (void);		// Handles blinking the USB status LED      C:\opensprints\FW\user\user.c
                                           void DoRaceCountdown (void);                                                     C:\opensprints\FW\user\user.c
                                           void CheckStartSwitch (void);                                                    C:\opensprints\FW\user\user.c
                                           void ManageSensorProgress (void);                                                C:\opensprints\FW\user\user.c
                                           void UpdateProgressLeds (void);                                                  C:\opensprints\FW\user\user.c
                                           void InitNoPcRace(void);                                                         C:\opensprints\FW\user\user.c
                                           void UpdateProgressLeds(void);                                                   C:\opensprints\FW\user\user.c
                                           void DetermineProgressLedStates(void);                                           C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           BOOL isCountingDown=FALSE;                                                       C:\opensprints\FW\user\user.c
                                           unsigned int countdownSecs=0;                                                    C:\opensprints\FW\user\user.c
                                           unsigned long countdownTimer;                                                    C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           void parse_GO_packet (void);	// start sending sensor messages to PC              C:\opensprints\FW\user\user.c
                                           void parse_ST_packet (void);	// stop sending sensor messages to PC               C:\opensprints\FW\user\user.c
                                           void parse_HW_packet (void);	// test mode. periodic sensor messages to PC        C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           void StartFlashingSensor0Leds(void);                                             C:\opensprints\FW\user\user.c
                                           void StartFlashingSensor1Leds(void);                                             C:\opensprints\FW\user\user.c
                                           void StopFlashingSensor0Leds(void);                                              C:\opensprints\FW\user\user.c
                                           void StopFlashingSensor1Leds(void);                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #pragma code                                                                     C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #pragma interruptlow low_ISR                                                     C:\opensprints\FW\user\user.c
000844   cfd8     MOVFF     0xfd8,0xfe4    void low_ISR(void)                                                               C:\opensprints\FW\user\user.c
000846   ffe4                                                                                                               
000848   cfe0     MOVFF     0xfe0,0xfe4                                                                                     
00084a   ffe4                                                                                                               
00084c   6ee4     MOVWF     0xe4,0x0                                                                                        
00084e   cfda     MOVFF     0xfda,0xfe4                                                                                     
000850   ffe4                                                                                                               
000852   cfe2     MOVFF     0xfe2,0xfda                                                                                     
000854   ffda                                                                                                               
000856   cfe9     MOVFF     0xfe9,0xfe4                                                                                     
000858   ffe4                                                                                                               
00085a   cfea     MOVFF     0xfea,0xfe4                                                                                     
00085c   ffe4                                                                                                               
00085e   cff3     MOVFF     0xff3,0xfe4                                                                                     
000860   ffe4                                                                                                               
000862   cff4     MOVFF     0xff4,0xfe4                                                                                     
000864   ffe4                                                                                                               
000866   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {	                                                                               C:\opensprints\FW\user\user.c
                                           	// Do we have a Timer2 interrupt? (1ms rate)                                    C:\opensprints\FW\user\user.c
000868   a29e     BTFSS     0x9e,0x1,0x0   	if (PIR1bits.TMR2IF)                                                            C:\opensprints\FW\user\user.c
00086a   d112     BRA       0xa90                                                                                           
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// Clear the interrupt                                                         C:\opensprints\FW\user\user.c
00086c   929e     BCF       0x9e,0x1,0x0   		PIR1bits.TMR2IF = 0;                                                           C:\opensprints\FW\user\user.c
                                           		                                                                               C:\opensprints\FW\user\user.c
                                           		// The most time critical part of this interrupt service routine is the        C:\opensprints\FW\user\user.c
                                           		// handling of the RC command's servo output pulses.                           C:\opensprints\FW\user\user.c
                                           		// Each time we get this interrupt, we look to see if the next pin on the      C:\opensprints\FW\user\user.c
                                           		// list has a value greater than zero. If so, we arm set it high and set       C:\opensprints\FW\user\user.c
                                           		// it's state to PRIMED. Then we advance the pointers to the next pair.        C:\opensprints\FW\user\user.c
00086e   0e03     MOVLW     0x3            		if (kPRIMED == g_RC_state[g_RC_primed_ptr])                                    C:\opensprints\FW\user\user.c
000870   6e38     MOVWF     0x38,0x0                                                                                        
000872   500e     MOVF      0xe,0x0,0x0                                                                                     
000874   6aea     CLRF      0xea,0x0                                                                                        
000876   0f51     ADDLW     0x51                                                                                            
000878   6ee9     MOVWF     0xe9,0x0                                                                                        
00087a   0e01     MOVLW     0x1                                                                                             
00087c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00087e   50ef     MOVF      0xef,0x0,0x0                                                                                    
000880   5c38     SUBWF     0x38,0x0,0x0                                                                                    
000882   e130     BNZ       0x8e4                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// This is easy, throw the value into the timer                               C:\opensprints\FW\user\user.c
000884   500e     MOVF      0xe,0x0,0x0    			TMR0H = g_RC_value[g_RC_primed_ptr] >> 8;                                     C:\opensprints\FW\user\user.c
000886   6ee9     MOVWF     0xe9,0x0                                                                                        
000888   6aea     CLRF      0xea,0x0                                                                                        
00088a   90d8     BCF       0xd8,0x0,0x0                                                                                    
00088c   36e9     RLCF      0xe9,0x1,0x0                                                                                    
00088e   36ea     RLCF      0xea,0x1,0x0                                                                                    
000890   0e69     MOVLW     0x69                                                                                            
000892   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000894   0e01     MOVLW     0x1                                                                                             
000896   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000898   cfee     MOVFF     0xfee,0x38                                                                                      
00089a   f038                                                                                                               
00089c   cfef     MOVFF     0xfef,0x39                                                                                      
00089e   f039                                                                                                               
0008a0   c039     MOVFF     0x39,0x38                                                                                       
0008a2   f038                                                                                                               
0008a4   6a39     CLRF      0x39,0x0                                                                                        
0008a6   5038     MOVF      0x38,0x0,0x0                                                                                    
0008a8   6ed7     MOVWF     0xd7,0x0                                                                                        
0008aa   500e     MOVF      0xe,0x0,0x0    			TMR0L = g_RC_value[g_RC_primed_ptr] & 0xFF;                                   C:\opensprints\FW\user\user.c
0008ac   6ee9     MOVWF     0xe9,0x0                                                                                        
0008ae   6aea     CLRF      0xea,0x0                                                                                        
0008b0   90d8     BCF       0xd8,0x0,0x0                                                                                    
0008b2   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0008b4   36ea     RLCF      0xea,0x1,0x0                                                                                    
0008b6   0e69     MOVLW     0x69                                                                                            
0008b8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0008ba   0e01     MOVLW     0x1                                                                                             
0008bc   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0008be   cfee     MOVFF     0xfee,0x38                                                                                      
0008c0   f038                                                                                                               
0008c2   cfef     MOVFF     0xfef,0x39                                                                                      
0008c4   f039                                                                                                               
0008c6   5038     MOVF      0x38,0x0,0x0                                                                                    
0008c8   6ed6     MOVWF     0xd6,0x0                                                                                        
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           			// Then make sure the timer's interrupt enable is set                         C:\opensprints\FW\user\user.c
0008ca   8af2     BSF       0xf2,0x5,0x0   			INTCONbits.TMR0IE = 1;                                                        C:\opensprints\FW\user\user.c
                                           			// And be sure to clear the flag too                                          C:\opensprints\FW\user\user.c
0008cc   94f2     BCF       0xf2,0x2,0x0   			INTCONbits.TMR0IF = 0;                                                        C:\opensprints\FW\user\user.c
                                           			// Turn on Timer0                                                             C:\opensprints\FW\user\user.c
0008ce   8ed5     BSF       0xd5,0x7,0x0   			T0CONbits.TMR0ON = 1;                                                         C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           			// And set this pin's state to timing                                         C:\opensprints\FW\user\user.c
0008d0   500e     MOVF      0xe,0x0,0x0    			g_RC_state[g_RC_primed_ptr] = kTIMING;                                        C:\opensprints\FW\user\user.c
0008d2   6aea     CLRF      0xea,0x0                                                                                        
0008d4   0f51     ADDLW     0x51                                                                                            
0008d6   6ee9     MOVWF     0xe9,0x0                                                                                        
0008d8   0e01     MOVLW     0x1                                                                                             
0008da   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0008dc   0e04     MOVLW     0x4                                                                                             
0008de   6eef     MOVWF     0xef,0x0                                                                                        
                                           			                                                                              C:\opensprints\FW\user\user.c
                                           			// Remember which pin is now timing                                           C:\opensprints\FW\user\user.c
0008e0   500e     MOVF      0xe,0x0,0x0    			g_RC_timing_ptr = g_RC_primed_ptr;                                            C:\opensprints\FW\user\user.c
0008e2   6e10     MOVWF     0x10,0x0                                                                                        
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
0008e4   0e02     MOVLW     0x2            		if (kWAITING == g_RC_state[g_RC_next_ptr])                                     C:\opensprints\FW\user\user.c
0008e6   6e38     MOVWF     0x38,0x0                                                                                        
0008e8   500f     MOVF      0xf,0x0,0x0                                                                                     
0008ea   6aea     CLRF      0xea,0x0                                                                                        
0008ec   0f51     ADDLW     0x51                                                                                            
0008ee   6ee9     MOVWF     0xe9,0x0                                                                                        
0008f0   0e01     MOVLW     0x1                                                                                             
0008f2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0008f4   50ef     MOVF      0xef,0x0,0x0                                                                                    
0008f6   5c38     SUBWF     0x38,0x0,0x0                                                                                    
0008f8   e149     BNZ       0x98c                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// If the value is zero, then shut this pin off                               C:\opensprints\FW\user\user.c
                                           			// otherwise, prime it for sending a pulse                                    C:\opensprints\FW\user\user.c
0008fa   500f     MOVF      0xf,0x0,0x0    			if (0 == g_RC_value[g_RC_next_ptr])                                           C:\opensprints\FW\user\user.c
0008fc   6ee9     MOVWF     0xe9,0x0                                                                                        
0008fe   6aea     CLRF      0xea,0x0                                                                                        
000900   90d8     BCF       0xd8,0x0,0x0                                                                                    
000902   36e9     RLCF      0xe9,0x1,0x0                                                                                    
000904   36ea     RLCF      0xea,0x1,0x0                                                                                    
000906   0e69     MOVLW     0x69                                                                                            
000908   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00090a   0e01     MOVLW     0x1                                                                                             
00090c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00090e   50ee     MOVF      0xee,0x0,0x0                                                                                    
000910   10ed     IORWF     0xed,0x0,0x0                                                                                    
000912   e109     BNZ       0x926                                                                                           
                                           			{                                                                             C:\opensprints\FW\user\user.c
000914   500f     MOVF      0xf,0x0,0x0    				g_RC_state[g_RC_next_ptr] = kOFF;                                            C:\opensprints\FW\user\user.c
000916   6aea     CLRF      0xea,0x0                                                                                        
000918   0f51     ADDLW     0x51                                                                                            
00091a   6ee9     MOVWF     0xe9,0x0                                                                                        
00091c   0e01     MOVLW     0x1                                                                                             
00091e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000920   0e01     MOVLW     0x1                                                                                             
000922   6eef     MOVWF     0xef,0x0                                                                                        
                                           			}                                                                             C:\opensprints\FW\user\user.c
000924   d033     BRA       0x98c          			else                                                                          C:\opensprints\FW\user\user.c
                                           			{                                                                             C:\opensprints\FW\user\user.c
                                           				// Set the bit high                                                          C:\opensprints\FW\user\user.c
000926   0e08     MOVLW     0x8            				if (g_RC_next_ptr < 8)                                                       C:\opensprints\FW\user\user.c
000928   5c0f     SUBWF     0xf,0x0,0x0                                                                                     
00092a   e20c     BC        0x944                                                                                           
                                           				{                                                                            C:\opensprints\FW\user\user.c
00092c   0e07     MOVLW     0x7            					bitset (LATA, g_RC_next_ptr & 0x7);                                         C:\opensprints\FW\user\user.c
00092e   140f     ANDWF     0xf,0x0,0x0                                                                                     
000930   6e38     MOVWF     0x38,0x0                                                                                        
000932   0e01     MOVLW     0x1                                                                                             
000934   5238     MOVF      0x38,0x1,0x0                                                                                    
000936   e004     BZ        0x940                                                                                           
000938   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
00093a   0bfe     ANDLW     0xfe                                                                                            
00093c   0638     DECF      0x38,0x1,0x0                                                                                    
00093e   e1fc     BNZ       0x938                                                                                           
000940   1289     IORWF     0x89,0x1,0x0                                                                                    
                                           				}                                                                            C:\opensprints\FW\user\user.c
000942   d01a     BRA       0x978          				else if (g_RC_next_ptr < 16)                                                 C:\opensprints\FW\user\user.c
000944   0e10     MOVLW     0x10                                                                                            
000946   5c0f     SUBWF     0xf,0x0,0x0                                                                                     
000948   e20c     BC        0x962                                                                                           
                                           				{                                                                            C:\opensprints\FW\user\user.c
00094a   0e07     MOVLW     0x7            					bitset (LATB, g_RC_next_ptr & 0x7);                                         C:\opensprints\FW\user\user.c
00094c   140f     ANDWF     0xf,0x0,0x0                                                                                     
00094e   6e38     MOVWF     0x38,0x0                                                                                        
000950   0e01     MOVLW     0x1                                                                                             
000952   5238     MOVF      0x38,0x1,0x0                                                                                    
000954   e004     BZ        0x95e                                                                                           
000956   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
000958   0bfe     ANDLW     0xfe                                                                                            
00095a   0638     DECF      0x38,0x1,0x0                                                                                    
00095c   e1fc     BNZ       0x956                                                                                           
00095e   128a     IORWF     0x8a,0x1,0x0                                                                                    
                                           				}                                                                            C:\opensprints\FW\user\user.c
000960   d00b     BRA       0x978          				else                                                                         C:\opensprints\FW\user\user.c
                                           				{                                                                            C:\opensprints\FW\user\user.c
000962   0e07     MOVLW     0x7            					bitset (LATC, g_RC_next_ptr & 0x7);                                         C:\opensprints\FW\user\user.c
000964   140f     ANDWF     0xf,0x0,0x0                                                                                     
000966   6e38     MOVWF     0x38,0x0                                                                                        
000968   0e01     MOVLW     0x1                                                                                             
00096a   5238     MOVF      0x38,0x1,0x0                                                                                    
00096c   e004     BZ        0x976                                                                                           
00096e   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
000970   0bfe     ANDLW     0xfe                                                                                            
000972   0638     DECF      0x38,0x1,0x0                                                                                    
000974   e1fc     BNZ       0x96e                                                                                           
000976   128b     IORWF     0x8b,0x1,0x0                                                                                    
                                           				}                                                                            C:\opensprints\FW\user\user.c
                                           				// Set the state to primed so we know to do next                             C:\opensprints\FW\user\user.c
000978   500f     MOVF      0xf,0x0,0x0    				g_RC_state[g_RC_next_ptr] = kPRIMED;                                         C:\opensprints\FW\user\user.c
00097a   6aea     CLRF      0xea,0x0                                                                                        
00097c   0f51     ADDLW     0x51                                                                                            
00097e   6ee9     MOVWF     0xe9,0x0                                                                                        
000980   0e01     MOVLW     0x1                                                                                             
000982   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000984   0e03     MOVLW     0x3                                                                                             
000986   6eef     MOVWF     0xef,0x0                                                                                        
                                           				// And remember which pin is primed                                          C:\opensprints\FW\user\user.c
000988   500f     MOVF      0xf,0x0,0x0    				g_RC_primed_ptr = g_RC_next_ptr;                                             C:\opensprints\FW\user\user.c
00098a   6e0e     MOVWF     0xe,0x0                                                                                         
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		// And always advance the main pointer                                         C:\opensprints\FW\user\user.c
                                           		// NOTE: we need to skip RA6, RA7, and RC3, RC4, and RC5                       C:\opensprints\FW\user\user.c
                                           		// (Because UBW doesn't bring those pins out to headers)                       C:\opensprints\FW\user\user.c
00098c   2a0f     INCF      0xf,0x1,0x0    		g_RC_next_ptr++;                                                               C:\opensprints\FW\user\user.c
00098e   0e06     MOVLW     0x6            		if (6 == g_RC_next_ptr)                                                        C:\opensprints\FW\user\user.c
000990   5c0f     SUBWF     0xf,0x0,0x0                                                                                     
000992   e103     BNZ       0x99a                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
000994   0e08     MOVLW     0x8            			g_RC_next_ptr = 8;                                                            C:\opensprints\FW\user\user.c
000996   6e0f     MOVWF     0xf,0x0                                                                                         
                                           		}                                                                              C:\opensprints\FW\user\user.c
000998   d00a     BRA       0x9ae          		else if (19 == g_RC_next_ptr)                                                  C:\opensprints\FW\user\user.c
00099a   0e13     MOVLW     0x13                                                                                            
00099c   5c0f     SUBWF     0xf,0x0,0x0                                                                                     
00099e   e103     BNZ       0x9a6                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
0009a0   0e16     MOVLW     0x16           			g_RC_next_ptr = 22;                                                           C:\opensprints\FW\user\user.c
0009a2   6e0f     MOVWF     0xf,0x0                                                                                         
                                           		}                                                                              C:\opensprints\FW\user\user.c
0009a4   d004     BRA       0x9ae          		else if (kRC_DATA_SIZE == g_RC_next_ptr)                                       C:\opensprints\FW\user\user.c
0009a6   0e18     MOVLW     0x18                                                                                            
0009a8   5c0f     SUBWF     0xf,0x0,0x0                                                                                     
0009aa   e101     BNZ       0x9ae                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
0009ac   6a0f     CLRF      0xf,0x0        			g_RC_next_ptr = 0;                                                            C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           				                                                                             C:\opensprints\FW\user\user.c
                                           		// See if it's time to fire off an I packet                                    C:\opensprints\FW\user\user.c
0009ae   0e00     MOVLW     0x0            		if (ISR_D_RepeatRate > 0)                                                      C:\opensprints\FW\user\user.c
0009b0   80d8     BSF       0xd8,0x0,0x0                                                                                    
0009b2   5402     SUBFWB    0x2,0x0,0x0                                                                                     
0009b4   0e00     MOVLW     0x0                                                                                             
0009b6   5403     SUBFWB    0x3,0x0,0x0                                                                                     
0009b8   e23f     BC        0xa38                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
0009ba   2a11     INCF      0x11,0x1,0x0   			D_tick_counter++;                                                             C:\opensprints\FW\user\user.c
0009bc   0e00     MOVLW     0x0                                                                                             
0009be   2212     ADDWFC    0x12,0x1,0x0                                                                                    
0009c0   5002     MOVF      0x2,0x0,0x0    			if (D_tick_counter >= ISR_D_RepeatRate)                                       C:\opensprints\FW\user\user.c
0009c2   5c11     SUBWF     0x11,0x0,0x0                                                                                    
0009c4   5003     MOVF      0x3,0x0,0x0                                                                                     
0009c6   5812     SUBWFB    0x12,0x0,0x0                                                                                    
0009c8   e337     BNC       0xa38                                                                                           
                                           			{                                                                             C:\opensprints\FW\user\user.c
0009ca   0100     MOVLB     0x0            				raceTimeCentisecs++;                                                         C:\opensprints\FW\user\user.c
0009cc   2b70     INCF      0x70,0x1,0x1                                                                                    
0009ce   0e00     MOVLW     0x0                                                                                             
0009d0   2371     ADDWFC    0x71,0x1,0x1                                                                                    
0009d2   0100     MOVLB     0x0            				if (raceTimeCentisecs >= 6000)                                               C:\opensprints\FW\user\user.c
0009d4   0e70     MOVLW     0x70                                                                                            
0009d6   5d70     SUBWF     0x70,0x0,0x1                                                                                    
0009d8   0e17     MOVLW     0x17                                                                                            
0009da   5971     SUBWFB    0x71,0x0,0x1                                                                                    
0009dc   e307     BNC       0x9ec                                                                                           
                                           				{                                                                            C:\opensprints\FW\user\user.c
0009de   0100     MOVLB     0x0            					raceTimeCentisecs=0;                                                        C:\opensprints\FW\user\user.c
0009e0   6b70     CLRF      0x70,0x1                                                                                        
0009e2   6b71     CLRF      0x71,0x1                                                                                        
0009e4   0100     MOVLB     0x0            					raceTimeMins++;                                                             C:\opensprints\FW\user\user.c
0009e6   2b6e     INCF      0x6e,0x1,0x1                                                                                    
0009e8   0e00     MOVLW     0x0                                                                                             
0009ea   236f     ADDWFC    0x6f,0x1,0x1                                                                                    
                                           				}                                                                            C:\opensprints\FW\user\user.c
0009ec   6a11     CLRF      0x11,0x0       				D_tick_counter = 0;                                                          C:\opensprints\FW\user\user.c
0009ee   6a12     CLRF      0x12,0x0                                                                                        
                                           				// Tell the main code to send an I packet                                    C:\opensprints\FW\user\user.c
0009f0   0e03     MOVLW     0x3            				if (ISR_D_FIFO_length < kISR_FIFO_D_DEPTH)                                   C:\opensprints\FW\user\user.c
0009f2   5c06     SUBWF     0x6,0x0,0x0                                                                                     
0009f4   e21f     BC        0xa34                                                                                           
                                           				{                                                                            C:\opensprints\FW\user\user.c
                                           					// And copy over our port values                                            C:\opensprints\FW\user\user.c
0009f6   5004     MOVF      0x4,0x0,0x0    					ISR_D_FIFO[0][ISR_D_FIFO_in] = PORTA;                                       C:\opensprints\FW\user\user.c
0009f8   6aea     CLRF      0xea,0x0                                                                                        
0009fa   0f48     ADDLW     0x48                                                                                            
0009fc   6ee9     MOVWF     0xe9,0x0                                                                                        
0009fe   0e01     MOVLW     0x1                                                                                             
000a00   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a02   cf80     MOVFF     0xf80,0xfef                                                                                     
000a04   ffef                                                                                                               
000a06   5004     MOVF      0x4,0x0,0x0    					ISR_D_FIFO[1][ISR_D_FIFO_in] = PORTB;                                       C:\opensprints\FW\user\user.c
000a08   6aea     CLRF      0xea,0x0                                                                                        
000a0a   0f4b     ADDLW     0x4b                                                                                            
000a0c   6ee9     MOVWF     0xe9,0x0                                                                                        
000a0e   0e01     MOVLW     0x1                                                                                             
000a10   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a12   cf81     MOVFF     0xf81,0xfef                                                                                     
000a14   ffef                                                                                                               
000a16   5004     MOVF      0x4,0x0,0x0    					ISR_D_FIFO[2][ISR_D_FIFO_in] = PORTC;                                       C:\opensprints\FW\user\user.c
000a18   6aea     CLRF      0xea,0x0                                                                                        
000a1a   0f4e     ADDLW     0x4e                                                                                            
000a1c   6ee9     MOVWF     0xe9,0x0                                                                                        
000a1e   0e01     MOVLW     0x1                                                                                             
000a20   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a22   cf82     MOVFF     0xf82,0xfef                                                                                     
000a24   ffef                                                                                                               
000a26   2a04     INCF      0x4,0x1,0x0    					ISR_D_FIFO_in++;                                                            C:\opensprints\FW\user\user.c
000a28   0e03     MOVLW     0x3            					if (ISR_D_FIFO_in >= kISR_FIFO_D_DEPTH)                                     C:\opensprints\FW\user\user.c
000a2a   5c04     SUBWF     0x4,0x0,0x0                                                                                     
000a2c   e301     BNC       0xa30                                                                                           
                                           					{                                                                           C:\opensprints\FW\user\user.c
000a2e   6a04     CLRF      0x4,0x0        						ISR_D_FIFO_in = 0;	                                                        C:\opensprints\FW\user\user.c
                                           					}                                                                           C:\opensprints\FW\user\user.c
000a30   2a06     INCF      0x6,0x1,0x0    					ISR_D_FIFO_length++;                                                        C:\opensprints\FW\user\user.c
                                           				}                                                                            C:\opensprints\FW\user\user.c
000a32   d002     BRA       0xa38          				else                                                                         C:\opensprints\FW\user\user.c
                                           				{                                                                            C:\opensprints\FW\user\user.c
                                           					// Stop the madness! Something is wrong, we're                              C:\opensprints\FW\user\user.c
                                           					// not getting our packets out. So kill the                                 C:\opensprints\FW\user\user.c
                                           					// timer.                                                                   C:\opensprints\FW\user\user.c
000a34   6a02     CLRF      0x2,0x0        					ISR_D_RepeatRate = 0;                                                       C:\opensprints\FW\user\user.c
000a36   6a03     CLRF      0x3,0x0                                                                                         
                                           				}                                                                            C:\opensprints\FW\user\user.c
                                           			}	                                                                            C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		                                                                               C:\opensprints\FW\user\user.c
                                           		// See if it's time to fire off an A packet                                    C:\opensprints\FW\user\user.c
000a38   0e00     MOVLW     0x0            		if ((ISR_A_RepeatRate > 0) && (AnalogEnable > 0))                              C:\opensprints\FW\user\user.c
000a3a   80d8     BSF       0xd8,0x0,0x0                                                                                    
000a3c   5407     SUBFWB    0x7,0x0,0x0                                                                                     
000a3e   0e00     MOVLW     0x0                                                                                             
000a40   5408     SUBFWB    0x8,0x0,0x0                                                                                     
000a42   e219     BC        0xa76                                                                                           
000a44   500c     MOVF      0xc,0x0,0x0                                                                                     
000a46   0800     SUBLW     0x0                                                                                             
000a48   e216     BC        0xa76                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
000a4a   2a13     INCF      0x13,0x1,0x0   			A_tick_counter++;                                                             C:\opensprints\FW\user\user.c
000a4c   0e00     MOVLW     0x0                                                                                             
000a4e   2214     ADDWFC    0x14,0x1,0x0                                                                                    
000a50   5007     MOVF      0x7,0x0,0x0    			if (A_tick_counter >= ISR_A_RepeatRate)                                       C:\opensprints\FW\user\user.c
000a52   5c13     SUBWF     0x13,0x0,0x0                                                                                    
000a54   5008     MOVF      0x8,0x0,0x0                                                                                     
000a56   5814     SUBWFB    0x14,0x0,0x0                                                                                    
000a58   e30e     BNC       0xa76                                                                                           
                                           			{                                                                             C:\opensprints\FW\user\user.c
000a5a   6a13     CLRF      0x13,0x0       				A_tick_counter = 0;                                                          C:\opensprints\FW\user\user.c
000a5c   6a14     CLRF      0x14,0x0                                                                                        
                                           				// Tell the main code to send an A packet                                    C:\opensprints\FW\user\user.c
000a5e   0e03     MOVLW     0x3            				if (ISR_A_FIFO_length < kISR_FIFO_A_DEPTH)                                   C:\opensprints\FW\user\user.c
000a60   5c0b     SUBWF     0xb,0x0,0x0                                                                                     
000a62   e207     BC        0xa72                                                                                           
                                           				{                                                                            C:\opensprints\FW\user\user.c
000a64   2a09     INCF      0x9,0x1,0x0    					ISR_A_FIFO_in++;                                                            C:\opensprints\FW\user\user.c
000a66   0e03     MOVLW     0x3            					if (ISR_A_FIFO_in >= kISR_FIFO_A_DEPTH)                                     C:\opensprints\FW\user\user.c
000a68   5c09     SUBWF     0x9,0x0,0x0                                                                                     
000a6a   e301     BNC       0xa6e                                                                                           
                                           					{                                                                           C:\opensprints\FW\user\user.c
000a6c   6a09     CLRF      0x9,0x0        						ISR_A_FIFO_in = 0;	                                                        C:\opensprints\FW\user\user.c
                                           					}                                                                           C:\opensprints\FW\user\user.c
000a6e   2a0b     INCF      0xb,0x1,0x0    					ISR_A_FIFO_length++;                                                        C:\opensprints\FW\user\user.c
                                           				}                                                                            C:\opensprints\FW\user\user.c
000a70   d002     BRA       0xa76          				else                                                                         C:\opensprints\FW\user\user.c
                                           				{                                                                            C:\opensprints\FW\user\user.c
                                           					// Stop the madness! Something is wrong, we're                              C:\opensprints\FW\user\user.c
                                           					// not getting our packets out. So kill the A                               C:\opensprints\FW\user\user.c
                                           					// packets.                                                                 C:\opensprints\FW\user\user.c
000a72   6a07     CLRF      0x7,0x0        					ISR_A_RepeatRate = 0;                                                       C:\opensprints\FW\user\user.c
000a74   6a08     CLRF      0x8,0x0                                                                                         
                                           				}                                                                            C:\opensprints\FW\user\user.c
                                           			}	                                                                            C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		// See if it's time to start analog conversions                                C:\opensprints\FW\user\user.c
000a76   500c     MOVF      0xc,0x0,0x0    		if (AnalogEnable > 0)                                                          C:\opensprints\FW\user\user.c
000a78   0800     SUBLW     0x0                                                                                             
000a7a   e20a     BC        0xa90                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Set the channel to zero to start off with                                  C:\opensprints\FW\user\user.c
000a7c   6a15     CLRF      0x15,0x0       			A_cur_channel = 0;                                                            C:\opensprints\FW\user\user.c
000a7e   5015     MOVF      0x15,0x0,0x0   			ADCON0 = (A_cur_channel << 2) + 1;                                            C:\opensprints\FW\user\user.c
000a80   0d04     MULLW     0x4                                                                                             
000a82   28f3     INCF      0xf3,0x0,0x0                                                                                    
000a84   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           			// Clear the interrupt                                                        C:\opensprints\FW\user\user.c
000a86   9c9e     BCF       0x9e,0x6,0x0   			PIR1bits.ADIF = 0;                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           			// And make sure to always use low priority.                                  C:\opensprints\FW\user\user.c
000a88   9c9f     BCF       0x9f,0x6,0x0   			IPR1bits.ADIP = 0;                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           			// Set the interrupt enable                                                   C:\opensprints\FW\user\user.c
000a8a   8c9d     BSF       0x9d,0x6,0x0   			PIE1bits.ADIE = 1;                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           			// Make sure it's on!                                                         C:\opensprints\FW\user\user.c
000a8c   80c2     BSF       0xc2,0x0,0x0   			ADCON0bits.ADON = 1;                                                          C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           			// And tell the A/D to GO!                                                    C:\opensprints\FW\user\user.c
000a8e   82c2     BSF       0xc2,0x1,0x0   			ADCON0bits.GO_DONE = 1;                                                       C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		                                                                               C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Do we have an analog interrupt?                                              C:\opensprints\FW\user\user.c
000a90   ac9e     BTFSS     0x9e,0x6,0x0   	if (PIR1bits.ADIF)                                                              C:\opensprints\FW\user\user.c
000a92   d02d     BRA       0xaee                                                                                           
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// Clear the interrupt                                                         C:\opensprints\FW\user\user.c
000a94   9c9e     BCF       0x9e,0x6,0x0   		PIR1bits.ADIF = 0;                                                             C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		// Read out the value that we just converted, and store it.                    C:\opensprints\FW\user\user.c
000aac   5015     MOVF      0x15,0x0,0x0   		ISR_A_FIFO[A_cur_channel][ISR_A_FIFO_in] =                                     C:\opensprints\FW\user\user.c
000aae   0d06     MULLW     0x6                                                                                             
000ab0   cff3     MOVFF     0xff3,0x38                                                                                      
000ab2   f038                                                                                                               
000ab4   cff4     MOVFF     0xff4,0x39                                                                                      
000ab6   f039                                                                                                               
000ab8   0e00     MOVLW     0x0                                                                                             
000aba   2638     ADDWF     0x38,0x1,0x0                                                                                    
000abc   0e01     MOVLW     0x1                                                                                             
000abe   2239     ADDWFC    0x39,0x1,0x0                                                                                    
000ac0   5009     MOVF      0x9,0x0,0x0                                                                                     
000ac2   0d02     MULLW     0x2                                                                                             
000ac4   5038     MOVF      0x38,0x0,0x0                                                                                    
000ac6   24f3     ADDWF     0xf3,0x0,0x0                                                                                    
000ac8   6ee9     MOVWF     0xe9,0x0                                                                                        
000aca   5039     MOVF      0x39,0x0,0x0                                                                                    
000acc   20f4     ADDWFC    0xf4,0x0,0x0                                                                                    
000ace   6eea     MOVWF     0xea,0x0                                                                                        
000aa0   50c3     MOVF      0xc3,0x0,0x0   			(unsigned int)ADRESL                                                          C:\opensprints\FW\user\user.c
                                           			|                                                                             C:\opensprints\FW\user\user.c
000a96   50c4     MOVF      0xc4,0x0,0x0   			((unsigned int)ADRESH << 8);                                                  C:\opensprints\FW\user\user.c
000a98   6e3c     MOVWF     0x3c,0x0                                                                                        
000a9a   c03c     MOVFF     0x3c,0x3d                                                                                       
000a9c   f03d                                                                                                               
000a9e   6a3c     CLRF      0x3c,0x0                                                                                        
000aa2   0100     MOVLB     0x0                                                                                             
000aa4   103c     IORWF     0x3c,0x0,0x0                                                                                    
000aa6   6e3a     MOVWF     0x3a,0x0                                                                                        
000aa8   c03d     MOVFF     0x3d,0x3b                                                                                       
000aaa   f03b                                                                                                               
000ad0   c03a     MOVFF     0x3a,0xfee                                                                                      
000ad2   ffee                                                                                                               
000ad4   c03b     MOVFF     0x3b,0xfed                                                                                      
000ad6   ffed                                                                                                               
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           		// Incriment the channel and write the new one in                              C:\opensprints\FW\user\user.c
000ad8   2a15     INCF      0x15,0x1,0x0   		A_cur_channel++;                                                               C:\opensprints\FW\user\user.c
000ada   500c     MOVF      0xc,0x0,0x0    		if (A_cur_channel >= AnalogEnable)                                             C:\opensprints\FW\user\user.c
000adc   5c15     SUBWF     0x15,0x0,0x0                                                                                    
000ade   e302     BNC       0xae4                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// We're done, so just sit and wait                                           C:\opensprints\FW\user\user.c
                                           			// Turn off our interrupts though.                                            C:\opensprints\FW\user\user.c
000ae0   9c9d     BCF       0x9d,0x6,0x0   			PIE1bits.ADIE = 0;                                                            C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
000ae2   d005     BRA       0xaee          		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Update the channel number                                                  C:\opensprints\FW\user\user.c
000ae4   5015     MOVF      0x15,0x0,0x0   			ADCON0 = (A_cur_channel << 2) + 1;                                            C:\opensprints\FW\user\user.c
000ae6   0d04     MULLW     0x4                                                                                             
000ae8   28f3     INCF      0xf3,0x0,0x0                                                                                    
000aea   6ec2     MOVWF     0xc2,0x0                                                                                        
                                           			// And start the next conversion                                              C:\opensprints\FW\user\user.c
000aec   82c2     BSF       0xc2,0x1,0x0   			ADCON0bits.GO_DONE = 1;                                                       C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Do we have a TMR0 interrupt? (RC command)                                    C:\opensprints\FW\user\user.c
                                           	// TMR0 is in 16 bit mode, and counts up to FFFF and overflows, generating      C:\opensprints\FW\user\user.c
                                           	// this interrupt.                                                              C:\opensprints\FW\user\user.c
000aee   a4f2     BTFSS     0xf2,0x2,0x0   	if (INTCONbits.TMR0IF)                                                          C:\opensprints\FW\user\user.c
000af0   d042     BRA       0xb76                                                                                           
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// Turn off Timer0                                                             C:\opensprints\FW\user\user.c
000af2   9ed5     BCF       0xd5,0x7,0x0   		T0CONbits.TMR0ON = 0;                                                          C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		// Clear the interrupt                                                         C:\opensprints\FW\user\user.c
000af4   94f2     BCF       0xf2,0x2,0x0   		INTCONbits.TMR0IF = 0;                                                         C:\opensprints\FW\user\user.c
                                           		                                                                               C:\opensprints\FW\user\user.c
                                           		// And disable it                                                              C:\opensprints\FW\user\user.c
000af6   9af2     BCF       0xf2,0x5,0x0   		INTCONbits.TMR0IE = 0;                                                         C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		// Only do our stuff if the pin is in the proper state                         C:\opensprints\FW\user\user.c
000af8   0e04     MOVLW     0x4            		if (kTIMING == g_RC_state[g_RC_timing_ptr])                                    C:\opensprints\FW\user\user.c
000afa   6e38     MOVWF     0x38,0x0                                                                                        
000afc   5010     MOVF      0x10,0x0,0x0                                                                                    
000afe   6aea     CLRF      0xea,0x0                                                                                        
000b00   0f51     ADDLW     0x51                                                                                            
000b02   6ee9     MOVWF     0xe9,0x0                                                                                        
000b04   0e01     MOVLW     0x1                                                                                             
000b06   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000b08   50ef     MOVF      0xef,0x0,0x0                                                                                    
000b0a   5c38     SUBWF     0x38,0x0,0x0                                                                                    
000b0c   e134     BNZ       0xb76                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// All we need to do is clear the pin and change its state to kWAITING        C:\opensprints\FW\user\user.c
000b0e   0e08     MOVLW     0x8            			if (g_RC_timing_ptr < 8)                                                      C:\opensprints\FW\user\user.c
000b10   5c10     SUBWF     0x10,0x0,0x0                                                                                    
000b12   e20d     BC        0xb2e                                                                                           
                                           			{                                                                             C:\opensprints\FW\user\user.c
000b14   0e07     MOVLW     0x7            				bitclr (LATA, g_RC_timing_ptr & 0x7);                                        C:\opensprints\FW\user\user.c
000b16   1410     ANDWF     0x10,0x0,0x0                                                                                    
000b18   6e38     MOVWF     0x38,0x0                                                                                        
000b1a   0e01     MOVLW     0x1                                                                                             
000b1c   5238     MOVF      0x38,0x1,0x0                                                                                    
000b1e   e004     BZ        0xb28                                                                                           
000b20   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
000b22   0bfe     ANDLW     0xfe                                                                                            
000b24   0638     DECF      0x38,0x1,0x0                                                                                    
000b26   e1fc     BNZ       0xb20                                                                                           
000b28   1ce8     COMF      0xe8,0x0,0x0                                                                                    
000b2a   1689     ANDWF     0x89,0x1,0x0                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
000b2c   d01c     BRA       0xb66          			else if (g_RC_timing_ptr < 16)                                                C:\opensprints\FW\user\user.c
000b2e   0e10     MOVLW     0x10                                                                                            
000b30   5c10     SUBWF     0x10,0x0,0x0                                                                                    
000b32   e20d     BC        0xb4e                                                                                           
                                           			{                                                                             C:\opensprints\FW\user\user.c
000b34   0e07     MOVLW     0x7            				bitclr (LATB, g_RC_timing_ptr & 0x7);                                        C:\opensprints\FW\user\user.c
000b36   1410     ANDWF     0x10,0x0,0x0                                                                                    
000b38   6e38     MOVWF     0x38,0x0                                                                                        
000b3a   0e01     MOVLW     0x1                                                                                             
000b3c   5238     MOVF      0x38,0x1,0x0                                                                                    
000b3e   e004     BZ        0xb48                                                                                           
000b40   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
000b42   0bfe     ANDLW     0xfe                                                                                            
000b44   0638     DECF      0x38,0x1,0x0                                                                                    
000b46   e1fc     BNZ       0xb40                                                                                           
000b48   1ce8     COMF      0xe8,0x0,0x0                                                                                    
000b4a   168a     ANDWF     0x8a,0x1,0x0                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
000b4c   d00c     BRA       0xb66          			else                                                                          C:\opensprints\FW\user\user.c
                                           			{                                                                             C:\opensprints\FW\user\user.c
000b4e   0e07     MOVLW     0x7            				bitclr (LATC, g_RC_timing_ptr & 0x7);                                        C:\opensprints\FW\user\user.c
000b50   1410     ANDWF     0x10,0x0,0x0                                                                                    
000b52   6e38     MOVWF     0x38,0x0                                                                                        
000b54   0e01     MOVLW     0x1                                                                                             
000b56   5238     MOVF      0x38,0x1,0x0                                                                                    
000b58   e004     BZ        0xb62                                                                                           
000b5a   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
000b5c   0bfe     ANDLW     0xfe                                                                                            
000b5e   0638     DECF      0x38,0x1,0x0                                                                                    
000b60   e1fc     BNZ       0xb5a                                                                                           
000b62   1ce8     COMF      0xe8,0x0,0x0                                                                                    
000b64   168b     ANDWF     0x8b,0x1,0x0                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
000b66   5010     MOVF      0x10,0x0,0x0   			g_RC_state[g_RC_timing_ptr] = kWAITING;		                                     C:\opensprints\FW\user\user.c
000b68   6aea     CLRF      0xea,0x0                                                                                        
000b6a   0f51     ADDLW     0x51                                                                                            
000b6c   6ee9     MOVWF     0xe9,0x0                                                                                        
000b6e   0e01     MOVLW     0x1                                                                                             
000b70   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000b72   0e02     MOVLW     0x2                                                                                             
000b74   6eef     MOVWF     0xef,0x0                                                                                        
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
000b76   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\opensprints\FW\user\user.c
000b78   cfe5     MOVFF     0xfe5,0xff4                                                                                     
000b7a   fff4                                                                                                               
000b7c   cfe5     MOVFF     0xfe5,0xff3                                                                                     
000b7e   fff3                                                                                                               
000b80   cfe5     MOVFF     0xfe5,0xfea                                                                                     
000b82   ffea                                                                                                               
000b84   cfe5     MOVFF     0xfe5,0xfe9                                                                                     
000b86   ffe9                                                                                                               
000b88   cfe5     MOVFF     0xfe5,0xfda                                                                                     
000b8a   ffda                                                                                                               
000b8c   50e5     MOVF      0xe5,0x0,0x0                                                                                    
000b8e   cfe5     MOVFF     0xfe5,0xfe0                                                                                     
000b90   ffe0                                                                                                               
000b92   cfe5     MOVFF     0xfe5,0xfd8                                                                                     
000b94   ffd8                                                                                                               
000b96   0010     RETFIE    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #pragma interrupt high_ISR                                                       C:\opensprints\FW\user\user.c
000b98   cfda     MOVFF     0xfda,0xfe4    void high_ISR(void)                                                              C:\opensprints\FW\user\user.c
000b9a   ffe4                                                                                                               
000b9c   cfe2     MOVFF     0xfe2,0xfda                                                                                     
000b9e   ffda                                                                                                               
000ba0   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
000ba2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\opensprints\FW\user\user.c
000ba4   cfe5     MOVFF     0xfe5,0xfda                                                                                     
000ba6   ffda                                                                                                               
000ba8   0011     RETFIE    0x1                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
000baa   cfd9     MOVFF     0xfd9,0xfe6    void UserInit(void)                                                              C:\opensprints\FW\user\user.c
000bac   ffe6                                                                                                               
000bae   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000bb0   ffd9                                                                                                               
000bb2   0e02     MOVLW     0x2                                                                                             
000bb4   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	char i, j;                                                                      C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Make all of 3 digital inputs                                                 C:\opensprints\FW\user\user.c
000bb6   6a89     CLRF      0x89,0x0       	LATA = 0x00;                                                                    C:\opensprints\FW\user\user.c
000bb8   6892     SETF      0x92,0x0       	TRISA = 0xFF;                                                                   C:\opensprints\FW\user\user.c
                                           	// Turn all analog inputs into digital inputs                                   C:\opensprints\FW\user\user.c
000bba   0e0f     MOVLW     0xf            	ADCON1 = 0x0F;                                                                  C:\opensprints\FW\user\user.c
000bbc   6ec1     MOVWF     0xc1,0x0                                                                                        
                                           	// Turn off the ADC                                                             C:\opensprints\FW\user\user.c
000bbe   90c2     BCF       0xc2,0x0,0x0   	ADCON0bits.ADON = 0;                                                            C:\opensprints\FW\user\user.c
                                           	// Turn off our own idea of how many analog channels to convert                 C:\opensprints\FW\user\user.c
000bc0   6a0c     CLRF      0xc,0x0        	AnalogEnable = 0;                                                               C:\opensprints\FW\user\user.c
000bc2   0e07     MOVLW     0x7            	CMCON = 0x07;	// Comparators as digital inputs                                  C:\opensprints\FW\user\user.c
000bc4   6eb4     MOVWF     0xb4,0x0                                                                                        
                                           	// Make all of PORTB inputs                                                     C:\opensprints\FW\user\user.c
000bc6   6a8a     CLRF      0x8a,0x0       	LATB = 0x00;                                                                    C:\opensprints\FW\user\user.c
000bc8   6893     SETF      0x93,0x0       	TRISB = 0xFF;                                                                   C:\opensprints\FW\user\user.c
                                           	// Make all of PORTC inputs                                                     C:\opensprints\FW\user\user.c
000bca   6a8b     CLRF      0x8b,0x0       	LATC = 0x00;                                                                    C:\opensprints\FW\user\user.c
000bcc   6894     SETF      0x94,0x0       	TRISC = 0xFF;                                                                   C:\opensprints\FW\user\user.c
                                           #ifdef __18F4550                                                                 C:\opensprints\FW\user\user.c
                                           	// Make all of PORTD and PORTE inputs too                                       C:\opensprints\FW\user\user.c
                                           	LATD = 0x00;                                                                    C:\opensprints\FW\user\user.c
                                           	TRISD = 0xFF;                                                                   C:\opensprints\FW\user\user.c
                                           	LATE = 0x00;                                                                    C:\opensprints\FW\user\user.c
                                           	TRISE = 0xFF;                                                                   C:\opensprints\FW\user\user.c
                                           #endif                                                                           C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Initalize LED I/Os to outputs                                                C:\opensprints\FW\user\user.c
000bce   0efc     MOVLW     0xfc               mInitAllLEDs();                                                              C:\opensprints\FW\user\user.c
000bd0   168b     ANDWF     0x8b,0x1,0x0                                                                                    
000bd2   0efc     MOVLW     0xfc                                                                                            
000bd4   1694     ANDWF     0x94,0x1,0x0                                                                                    
                                           	// Initalize switch as an input                                                 C:\opensprints\FW\user\user.c
000bd6   8494     BSF       0x94,0x2,0x0       mInitSwitch();                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Start off always using "OK" acknoledge.                                      C:\opensprints\FW\user\user.c
000bd8   0100     MOVLB     0x0            	g_ack_enable = TRUE;                                                            C:\opensprints\FW\user\user.c
000bda   0e01     MOVLW     0x1                                                                                             
000bdc   6f6d     MOVWF     0x6d,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Use our own special output function for STDOUT                               C:\opensprints\FW\user\user.c
000bde   0101     MOVLB     0x1            	stdout = _H_USER;                                                               C:\opensprints\FW\user\user.c
000be0   69a9     SETF      0xa9,0x1                                                                                        
000be2   69aa     SETF      0xaa,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Initalize all of the ISR FIFOs                                               C:\opensprints\FW\user\user.c
000be4   6a0a     CLRF      0xa,0x0            ISR_A_FIFO_out = 0;                                                          C:\opensprints\FW\user\user.c
000be6   6a09     CLRF      0x9,0x0            ISR_A_FIFO_in = 0;                                                           C:\opensprints\FW\user\user.c
000be8   6a0b     CLRF      0xb,0x0            ISR_A_FIFO_length = 0;                                                       C:\opensprints\FW\user\user.c
000bea   6a05     CLRF      0x5,0x0            ISR_D_FIFO_out = 0;                                                          C:\opensprints\FW\user\user.c
000bec   6a04     CLRF      0x4,0x0            ISR_D_FIFO_in = 0;                                                           C:\opensprints\FW\user\user.c
000bee   6a06     CLRF      0x6,0x0            ISR_D_FIFO_length = 0;                                                       C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Make sure that our timer stuff starts out disabled                           C:\opensprints\FW\user\user.c
000bf0   6a02     CLRF      0x2,0x0        	ISR_D_RepeatRate = 0;                                                           C:\opensprints\FW\user\user.c
000bf2   6a03     CLRF      0x3,0x0                                                                                         
000bf4   6a07     CLRF      0x7,0x0        	ISR_A_RepeatRate = 0;                                                           C:\opensprints\FW\user\user.c
000bf6   6a08     CLRF      0x8,0x0                                                                                         
000bf8   6a11     CLRF      0x11,0x0       	D_tick_counter = 0;                                                             C:\opensprints\FW\user\user.c
000bfa   6a12     CLRF      0x12,0x0                                                                                        
000bfc   6a13     CLRF      0x13,0x0       	A_tick_counter = 0;                                                             C:\opensprints\FW\user\user.c
000bfe   6a14     CLRF      0x14,0x0                                                                                        
000c00   6a15     CLRF      0x15,0x0       	A_cur_channel = 0;                                                              C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                               // Now init our registers                                                    C:\opensprints\FW\user\user.c
                                           	// The prescaler will be at 16                                                  C:\opensprints\FW\user\user.c
000c02   82ca     BSF       0xca,0x1,0x0       T2CONbits.T2CKPS1 = 1;                                                       C:\opensprints\FW\user\user.c
000c04   80ca     BSF       0xca,0x0,0x0       T2CONbits.T2CKPS0 = 1;                                                       C:\opensprints\FW\user\user.c
                                               // We want the TMR2 post scaler to be a 3                                    C:\opensprints\FW\user\user.c
000c06   9cca     BCF       0xca,0x6,0x0       T2CONbits.T2OUTPS3 = 0;                                                      C:\opensprints\FW\user\user.c
000c08   9aca     BCF       0xca,0x5,0x0       T2CONbits.T2OUTPS2 = 0;                                                      C:\opensprints\FW\user\user.c
000c0a   88ca     BSF       0xca,0x4,0x0       T2CONbits.T2OUTPS1 = 1;                                                      C:\opensprints\FW\user\user.c
000c0c   96ca     BCF       0xca,0x3,0x0       T2CONbits.T2OUTPS0 = 0;                                                      C:\opensprints\FW\user\user.c
                                           	// Set our reload value                                                         C:\opensprints\FW\user\user.c
000c0e   0efa     MOVLW     0xfa           	PR2 = kPR2_RELOAD;                                                              C:\opensprints\FW\user\user.c
000c10   6ecb     MOVWF     0xcb,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Set up the Analog to Digital converter                                       C:\opensprints\FW\user\user.c
                                           	// Clear out the FIFO data                                                      C:\opensprints\FW\user\user.c
000c12   6adf     CLRF      0xdf,0x0       	for (i = 0; i < 12; i++)                                                        C:\opensprints\FW\user\user.c
000c14   cfdf     MOVFF     0xfdf,0x2a                                                                                      
000c16   f02a                                                                                                               
000c18   0e0c     MOVLW     0xc                                                                                             
000c1a   6ee7     MOVWF     0xe7,0x0                                                                                        
000c1c   182a     XORWF     0x2a,0x0,0x0                                                                                    
000c1e   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000c20   d002     BRA       0xc26                                                                                           
000c22   34e7     RLCF      0xe7,0x0,0x0                                                                                    
000c24   d002     BRA       0xc2a                                                                                           
000c26   50e7     MOVF      0xe7,0x0,0x0                                                                                    
000c28   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
000c2a   e238     BC        0xc9c                                                                                           
000c98   2adf     INCF      0xdf,0x1,0x0                                                                                    
000c9a   d7bc     BRA       0xc14                                                                                           
                                           	{                                                                               C:\opensprints\FW\user\user.c
000c2c   0e01     MOVLW     0x1            		for (j = 0; j < kISR_FIFO_A_DEPTH; j++)                                        C:\opensprints\FW\user\user.c
000c2e   6adb     CLRF      0xdb,0x0                                                                                        
000c30   0e01     MOVLW     0x1                                                                                             
000c32   cfdb     MOVFF     0xfdb,0x2a                                                                                      
000c34   f02a                                                                                                               
000c36   0e03     MOVLW     0x3                                                                                             
000c38   6ee7     MOVWF     0xe7,0x0                                                                                        
000c3a   182a     XORWF     0x2a,0x0,0x0                                                                                    
000c3c   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000c3e   d002     BRA       0xc44                                                                                           
000c40   34e7     RLCF      0xe7,0x0,0x0                                                                                    
000c42   d002     BRA       0xc48                                                                                           
000c44   50e7     MOVF      0xe7,0x0,0x0                                                                                    
000c46   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
000c48   e227     BC        0xc98                                                                                           
000c92   0e01     MOVLW     0x1                                                                                             
000c94   2adb     INCF      0xdb,0x1,0x0                                                                                    
000c96   d7cc     BRA       0xc30                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
000c4a   cfdf     MOVFF     0xfdf,0x2a     			ISR_A_FIFO[i][j] = 0;                                                         C:\opensprints\FW\user\user.c
000c4c   f02a                                                                                                               
000c4e   6a2b     CLRF      0x2b,0x0                                                                                        
000c50   be2a     BTFSC     0x2a,0x7,0x0                                                                                    
000c52   682b     SETF      0x2b,0x0                                                                                        
000c54   0e06     MOVLW     0x6                                                                                             
000c56   022b     MULWF     0x2b,0x0                                                                                        
000c58   cff3     MOVFF     0xff3,0x2b                                                                                      
000c5a   f02b                                                                                                               
000c5c   0e06     MOVLW     0x6                                                                                             
000c5e   022a     MULWF     0x2a,0x0                                                                                        
000c60   cff3     MOVFF     0xff3,0x2a                                                                                      
000c62   f02a                                                                                                               
000c64   50f4     MOVF      0xf4,0x0,0x0                                                                                    
000c66   262b     ADDWF     0x2b,0x1,0x0                                                                                    
000c68   0e00     MOVLW     0x0                                                                                             
000c6a   262a     ADDWF     0x2a,0x1,0x0                                                                                    
000c6c   0e01     MOVLW     0x1                                                                                             
000c6e   222b     ADDWFC    0x2b,0x1,0x0                                                                                    
000c70   0e01     MOVLW     0x1                                                                                             
000c72   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000c74   f02c                                                                                                               
000c76   6a2d     CLRF      0x2d,0x0                                                                                        
000c78   be2c     BTFSC     0x2c,0x7,0x0                                                                                    
000c7a   682d     SETF      0x2d,0x0                                                                                        
000c7c   90d8     BCF       0xd8,0x0,0x0                                                                                    
000c7e   362c     RLCF      0x2c,0x1,0x0                                                                                    
000c80   362d     RLCF      0x2d,0x1,0x0                                                                                    
000c82   502a     MOVF      0x2a,0x0,0x0                                                                                    
000c84   242c     ADDWF     0x2c,0x0,0x0                                                                                    
000c86   6ee9     MOVWF     0xe9,0x0                                                                                        
000c88   502b     MOVF      0x2b,0x0,0x0                                                                                    
000c8a   202d     ADDWFC    0x2d,0x0,0x0                                                                                    
000c8c   6eea     MOVWF     0xea,0x0                                                                                        
000c8e   6aee     CLRF      0xee,0x0                                                                                        
000c90   6aed     CLRF      0xed,0x0                                                                                        
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}	                                                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                               // Inialize USB TX and RX buffer management                                  C:\opensprints\FW\user\user.c
000c9c   0100     MOVLB     0x0                g_RX_buf_in = 0;                                                             C:\opensprints\FW\user\user.c
000c9e   6b67     CLRF      0x67,0x1                                                                                        
000ca0   0100     MOVLB     0x0                g_RX_buf_out = 0;                                                            C:\opensprints\FW\user\user.c
000ca2   6b68     CLRF      0x68,0x1                                                                                        
000ca4   0100     MOVLB     0x0            	g_TX_buf_in = 0;                                                                C:\opensprints\FW\user\user.c
000ca6   6b65     CLRF      0x65,0x1                                                                                        
000ca8   0100     MOVLB     0x0            	g_TX_buf_out = 0;                                                               C:\opensprints\FW\user\user.c
000caa   6b66     CLRF      0x66,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// And the USART TX and RX buffer management                                    C:\opensprints\FW\user\user.c
000cac   0100     MOVLB     0x0            	g_USART_RX_buf_in = 0;                                                          C:\opensprints\FW\user\user.c
000cae   6b69     CLRF      0x69,0x1                                                                                        
000cb0   0100     MOVLB     0x0            	g_USART_RX_buf_out = 0;                                                         C:\opensprints\FW\user\user.c
000cb2   6b6a     CLRF      0x6a,0x1                                                                                        
000cb4   0100     MOVLB     0x0            	g_USART_TX_buf_in = 0;                                                          C:\opensprints\FW\user\user.c
000cb6   6b6b     CLRF      0x6b,0x1                                                                                        
000cb8   0100     MOVLB     0x0            	g_USART_TX_buf_out = 0;                                                         C:\opensprints\FW\user\user.c
000cba   6b6c     CLRF      0x6c,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Clear out the RC servo output pointer values                                 C:\opensprints\FW\user\user.c
000cbc   6a0e     CLRF      0xe,0x0        	g_RC_primed_ptr = 0;                                                            C:\opensprints\FW\user\user.c
000cbe   6a0f     CLRF      0xf,0x0        	g_RC_next_ptr = 0;                                                              C:\opensprints\FW\user\user.c
000cc0   6a10     CLRF      0x10,0x0       	g_RC_timing_ptr = 0;                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Clear the RC data structure                                                  C:\opensprints\FW\user\user.c
000cc2   6adf     CLRF      0xdf,0x0       	for (i = 0; i < kRC_DATA_SIZE; i++)                                             C:\opensprints\FW\user\user.c
000cc4   cfdf     MOVFF     0xfdf,0x2a                                                                                      
000cc6   f02a                                                                                                               
000cc8   0e18     MOVLW     0x18                                                                                            
000cca   6ee7     MOVWF     0xe7,0x0                                                                                        
000ccc   182a     XORWF     0x2a,0x0,0x0                                                                                    
000cce   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000cd0   d002     BRA       0xcd6                                                                                           
000cd2   34e7     RLCF      0xe7,0x0,0x0                                                                                    
000cd4   d002     BRA       0xcda                                                                                           
000cd6   50e7     MOVF      0xe7,0x0,0x0                                                                                    
000cd8   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
000cda   e21b     BC        0xd12                                                                                           
000d0e   2adf     INCF      0xdf,0x1,0x0                                                                                    
000d10   d7d9     BRA       0xcc4                                                                                           
                                           	{                                                                               C:\opensprints\FW\user\user.c
000cdc   cfdf     MOVFF     0xfdf,0xfe9    		g_RC_value[i] = 0;                                                             C:\opensprints\FW\user\user.c
000cde   ffe9                                                                                                               
000ce0   6aea     CLRF      0xea,0x0                                                                                        
000ce2   bee9     BTFSC     0xe9,0x7,0x0                                                                                    
000ce4   68ea     SETF      0xea,0x0                                                                                        
000ce6   90d8     BCF       0xd8,0x0,0x0                                                                                    
000ce8   36e9     RLCF      0xe9,0x1,0x0                                                                                    
000cea   36ea     RLCF      0xea,0x1,0x0                                                                                    
000cec   0e69     MOVLW     0x69                                                                                            
000cee   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000cf0   0e01     MOVLW     0x1                                                                                             
000cf2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000cf4   6aee     CLRF      0xee,0x0                                                                                        
000cf6   6aed     CLRF      0xed,0x0                                                                                        
000cf8   cfdf     MOVFF     0xfdf,0xfe9    		g_RC_state[i] = kOFF;                                                          C:\opensprints\FW\user\user.c
000cfa   ffe9                                                                                                               
000cfc   6aea     CLRF      0xea,0x0                                                                                        
000cfe   bee9     BTFSC     0xe9,0x7,0x0                                                                                    
000d00   68ea     SETF      0xea,0x0                                                                                        
000d02   0e51     MOVLW     0x51                                                                                            
000d04   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000d06   0e01     MOVLW     0x1                                                                                             
000d08   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000d0a   0e01     MOVLW     0x1                                                                                             
000d0c   6eef     MOVWF     0xef,0x0                                                                                        
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Enable TMR0 for our RC timing operation                                      C:\opensprints\FW\user\user.c
000d12   86d5     BSF       0xd5,0x3,0x0   	T0CONbits.PSA = 1;		// Do NOT use the prescaler                                 C:\opensprints\FW\user\user.c
000d14   9ad5     BCF       0xd5,0x5,0x0   	T0CONbits.T0CS = 0;		// Use internal clock                                      C:\opensprints\FW\user\user.c
000d16   9cd5     BCF       0xd5,0x6,0x0   	T0CONbits.T08BIT = 0;	// 16 bit timer                                           C:\opensprints\FW\user\user.c
000d18   94f2     BCF       0xf2,0x2,0x0   	INTCONbits.TMR0IF = 0;	// Clear the interrupt flag                              C:\opensprints\FW\user\user.c
000d1a   9af2     BCF       0xf2,0x5,0x0   	INTCONbits.TMR0IE = 0;	// And clear the interrupt enable                        C:\opensprints\FW\user\user.c
000d1c   94f1     BCF       0xf1,0x2,0x0   	INTCON2bits.TMR0IP = 0;	// Low priority                                         C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                               // Enable interrupt priorities                                               C:\opensprints\FW\user\user.c
000d1e   8ed0     BSF       0xd0,0x7,0x0       RCONbits.IPEN = 1;                                                           C:\opensprints\FW\user\user.c
000d20   94ca     BCF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 0;                                                           C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
000d22   829d     BSF       0x9d,0x1,0x0       PIE1bits.TMR2IE = 1;                                                         C:\opensprints\FW\user\user.c
000d24   929f     BCF       0x9f,0x1,0x0       IPR1bits.TMR2IP = 0;                                                         C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
000d26   8ef2     BSF       0xf2,0x7,0x0       INTCONbits.GIEH = 1;	// Turn high priority interrupts on                     C:\opensprints\FW\user\user.c
000d28   8cf2     BSF       0xf2,0x6,0x0       INTCONbits.GIEL = 1;	// Turn low priority interrupts on                      C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Turn on the Timer2                                                           C:\opensprints\FW\user\user.c
000d2a   84ca     BSF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 1;                                                           C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
000d2c   0e02     MOVLW     0x2            }//end UserInit                                                                  C:\opensprints\FW\user\user.c
000d2e   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
000d30   e202     BC        0xd36                                                                                           
000d32   6ae1     CLRF      0xe1,0x0                                                                                        
000d34   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d36   6ee1     MOVWF     0xe1,0x0                                                                                        
000d38   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d3a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000d3c   ffd9                                                                                                               
000d3e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           /******************************************************************************  C:\opensprints\FW\user\user.c
                                            * Function:        void ProcessIO(void)                                         C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * Input:           None                                                         C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * Output:          None                                                         C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * Overview:        In this function, we check for a new packet that just        C:\opensprints\FW\user\user.c
                                            * 					arrived via USB. We do a few checks on the packet to see                 C:\opensprints\FW\user\user.c
                                            *					if it is worthy of us trying to interpret it. If it is,                   C:\opensprints\FW\user\user.c
                                            *					we go and call the proper function based upon the first                   C:\opensprints\FW\user\user.c
                                            *					character of the packet.                                                  C:\opensprints\FW\user\user.c
                                            *					NOTE: We need to see everything in one packet (i.e. we                    C:\opensprints\FW\user\user.c
                                            *					won't treat the USB data as a stream and try to find our                  C:\opensprints\FW\user\user.c
                                            *					start and end of packets within the stream. We just look                  C:\opensprints\FW\user\user.c
                                            *					at the first character of each packet for a command and                   C:\opensprints\FW\user\user.c
                                            * 					check that there's a CR as the last character of the                     C:\opensprints\FW\user\user.c
                                            *					packet.                                                                   C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * Note:            None                                                         C:\opensprints\FW\user\user.c
                                            *****************************************************************************/  C:\opensprints\FW\user\user.c
000d40   cfd9     MOVFF     0xfd9,0xfe6    void ProcessIO(void)                                                             C:\opensprints\FW\user\user.c
000d42   ffe6                                                                                                               
000d44   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000d46   ffd9                                                                                                               
000d48   0e02     MOVLW     0x2                                                                                             
000d4a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	static BOOL in_cr = FALSE;                                                      C:\opensprints\FW\user\user.c
                                           	static byte last_fifo_size;                                                     C:\opensprints\FW\user\user.c
                                               unsigned char tst_char;                                                      C:\opensprints\FW\user\user.c
000d4c   0e01     MOVLW     0x1            	BOOL	got_full_packet = FALSE;                                                   C:\opensprints\FW\user\user.c
000d4e   6adb     CLRF      0xdb,0x0                                                                                        
000d50   0100     MOVLB     0x0            	cdc_rx_len = 0;                                                                 C:\opensprints\FW\user\user.c
000d52   6bd3     CLRF      0xd3,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
000d54   ec57     CALL      0x26ae,0x0     	BlinkOpenSprintsStatus();                                                       C:\opensprints\FW\user\user.c
000d56   f013                                                                                                               
000d58   ec97     CALL      0x292e,0x0     	CheckStartSwitch();                                                             C:\opensprints\FW\user\user.c
000d5a   f014                                                                                                               
000d5c   ece3     CALL      0x2bc6,0x0     	ManageSensorProgress();                                                         C:\opensprints\FW\user\user.c
000d5e   f015                                                                                                               
                                           //	DetermineProgressLedStates();                                                 C:\opensprints\FW\user\user.c
                                           //	UpdateProgressLeds();                                                         C:\opensprints\FW\user\user.c
000d60   ecbf     CALL      0x2f7e,0x0     	HallEffSensors();	// Function by Luke Orland in user.c                          C:\opensprints\FW\user\user.c
000d62   f017                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
000d64   0100     MOVLB     0x0            	if(isCountingDown)                                                              C:\opensprints\FW\user\user.c
000d66   51ed     MOVF      0xed,0x0,0x1                                                                                    
000d68   e002     BZ        0xd6e                                                                                           
                                           	{                                                                               C:\opensprints\FW\user\user.c
000d6a   ec44     CALL      0x2888,0x0     		DoRaceCountdown();                                                             C:\opensprints\FW\user\user.c
000d6c   f014                                                                                                               
                                           	}	                                                                              C:\opensprints\FW\user\user.c
                                           		                                                                               C:\opensprints\FW\user\user.c
                                               // User Application USB tasks                                                C:\opensprints\FW\user\user.c
000d6e   0e06     MOVLW     0x6                if((usb_device_state < CONFIGURED_STATE) || (UCONbits.SUSPND == 1))          C:\opensprints\FW\user\user.c
000d70   0101     MOVLB     0x1                                                                                             
000d72   5da3     SUBWF     0xa3,0x0,0x1                                                                                    
000d74   e303     BNC       0xd7c                                                                                           
000d76   506d     MOVF      0x6d,0x0,0x0                                                                                    
000d78   0b02     ANDLW     0x2                                                                                             
000d7a   e001     BZ        0xd7e                                                                                           
                                           	{	                                                                              C:\opensprints\FW\user\user.c
000d7c   d101     BRA       0xf80          		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Check for any new I packets (from T command) ready to go out                 C:\opensprints\FW\user\user.c
000d7e   5006     MOVF      0x6,0x0,0x0    	while (ISR_D_FIFO_length > 0)                                                   C:\opensprints\FW\user\user.c
000d80   0800     SUBLW     0x0                                                                                             
000d82   e207     BC        0xd92                                                                                           
000d90   d7f6     BRA       0xd7e                                                                                           
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// Spit out an I packet first                                                  C:\opensprints\FW\user\user.c
                                           //		parse_I_packet ();					// Temp commmented out by Luke                        C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		// Then upate our I packet fifo stuff                                          C:\opensprints\FW\user\user.c
000d84   2a05     INCF      0x5,0x1,0x0    		ISR_D_FIFO_out++;                                                              C:\opensprints\FW\user\user.c
000d86   0e03     MOVLW     0x3            		if (ISR_D_FIFO_out == kISR_FIFO_D_DEPTH)                                       C:\opensprints\FW\user\user.c
000d88   5c05     SUBWF     0x5,0x0,0x0                                                                                     
000d8a   e101     BNZ       0xd8e                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
000d8c   6a05     CLRF      0x5,0x0        			ISR_D_FIFO_out = 0;                                                           C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
000d8e   0606     DECF      0x6,0x1,0x0    		ISR_D_FIFO_length--;                                                           C:\opensprints\FW\user\user.c
                                           	}			                                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Check for a new A packet (from T command) ready to go out                    C:\opensprints\FW\user\user.c
000d92   500b     MOVF      0xb,0x0,0x0    	while (ISR_A_FIFO_length > 0)                                                   C:\opensprints\FW\user\user.c
000d94   0800     SUBLW     0x0                                                                                             
000d96   e207     BC        0xda6                                                                                           
000da4   d7f6     BRA       0xd92                                                                                           
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// Spit out an A packet first                                                  C:\opensprints\FW\user\user.c
                                           //		parse_A_packet ();					// Temp commmented out by Luke                        C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		// Then update our A packet fifo stuff                                         C:\opensprints\FW\user\user.c
000d98   2a0a     INCF      0xa,0x1,0x0    		ISR_A_FIFO_out++;                                                              C:\opensprints\FW\user\user.c
000d9a   0e03     MOVLW     0x3            		if (ISR_A_FIFO_out == kISR_FIFO_A_DEPTH)                                       C:\opensprints\FW\user\user.c
000d9c   5c0a     SUBWF     0xa,0x0,0x0                                                                                     
000d9e   e101     BNZ       0xda2                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
000da0   6a0a     CLRF      0xa,0x0        			ISR_A_FIFO_out = 0;                                                           C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
000da2   060b     DECF      0xb,0x1,0x0    		ISR_A_FIFO_length--;                                                           C:\opensprints\FW\user\user.c
                                           	}			                                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Pull in some new data if there is new data to pull in                        C:\opensprints\FW\user\user.c
000da6   0104     MOVLB     0x4            	if(!mCDCUsartRxIsBusy())                                                        C:\opensprints\FW\user\user.c
000da8   bf18     BTFSC     0x18,0x7,0x1                                                                                    
000daa   d065     BRA       0xe76                                                                                           
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// Copy data from dual-ram buffer to user's buffer                             C:\opensprints\FW\user\user.c
000dac   0100     MOVLB     0x0            		for(cdc_rx_len = 0; cdc_rx_len < CDC_BULK_BD_OUT.Cnt; cdc_rx_len++)            C:\opensprints\FW\user\user.c
000dae   6bd3     CLRF      0xd3,0x1                                                                                        
000db0   0104     MOVLB     0x4                                                                                             
000db2   5119     MOVF      0x19,0x0,0x1                                                                                    
000db4   0100     MOVLB     0x0                                                                                             
000db6   5dd3     SUBWF     0xd3,0x0,0x1                                                                                    
000db8   e253     BC        0xe60                                                                                           
000e5a   0100     MOVLB     0x0                                                                                             
000e5c   2bd3     INCF      0xd3,0x1,0x1                                                                                    
000e5e   d7a8     BRA       0xdb0                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Check to see if we are in a CR/LF situation                                C:\opensprints\FW\user\user.c
000dba   0100     MOVLB     0x0            			tst_char = cdc_data_rx[cdc_rx_len];                                           C:\opensprints\FW\user\user.c
000dbc   51d3     MOVF      0xd3,0x0,0x1                                                                                    
000dbe   6aea     CLRF      0xea,0x0                                                                                        
000dc0   0f08     ADDLW     0x8                                                                                             
000dc2   6ee9     MOVWF     0xe9,0x0                                                                                        
000dc4   0e05     MOVLW     0x5                                                                                             
000dc6   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000dc8   cfef     MOVFF     0xfef,0xfdf                                                                                     
000dca   ffdf                                                                                                               
                                           			if (                                                                          C:\opensprints\FW\user\user.c
000dcc   0100     MOVLB     0x0            				!in_cr                                                                       C:\opensprints\FW\user\user.c
000dce   51f0     MOVF      0xf0,0x0,0x1                                                                                    
                                           				&&                                                                           C:\opensprints\FW\user\user.c
                                           				(                                                                            C:\opensprints\FW\user\user.c
000dd2   0e0d     MOVLW     0xd            					kCR == tst_char                                                             C:\opensprints\FW\user\user.c
000dd4   6e2a     MOVWF     0x2a,0x0                                                                                        
000dd6   50df     MOVF      0xdf,0x0,0x0                                                                                    
000dd8   5c2a     SUBWF     0x2a,0x0,0x0   					||                                                                          C:\opensprints\FW\user\user.c
000ddc   0e0a     MOVLW     0xa            					kLF == tst_char                                                             C:\opensprints\FW\user\user.c
000dde   6e2b     MOVWF     0x2b,0x0                                                                                        
000de0   50df     MOVF      0xdf,0x0,0x0                                                                                    
000dda   e005     BZ        0xde6          				)                                                                            C:\opensprints\FW\user\user.c
000de2   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
000de4   e112     BNZ       0xe0a                                                                                           
000dd0   e11c     BNZ       0xe0a          			)                                                                             C:\opensprints\FW\user\user.c
                                           			{                                                                             C:\opensprints\FW\user\user.c
000de6   0100     MOVLB     0x0            				in_cr = TRUE;                                                                C:\opensprints\FW\user\user.c
000de8   0e01     MOVLW     0x1                                                                                             
000dea   6ff0     MOVWF     0xf0,0x1                                                                                        
000dec   0100     MOVLB     0x0            				g_RX_buf[g_RX_buf_in] = kCR;                                                 C:\opensprints\FW\user\user.c
000dee   5167     MOVF      0x67,0x0,0x1                                                                                    
000df0   6aea     CLRF      0xea,0x0                                                                                        
000df2   0f40     ADDLW     0x40                                                                                            
000df4   6ee9     MOVWF     0xe9,0x0                                                                                        
000df6   0e02     MOVLW     0x2                                                                                             
000df8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000dfa   0e0d     MOVLW     0xd                                                                                             
000dfc   6eef     MOVWF     0xef,0x0                                                                                        
000dfe   0100     MOVLB     0x0            				g_RX_buf_in++;                                                               C:\opensprints\FW\user\user.c
000e00   2b67     INCF      0x67,0x1,0x1                                                                                    
                                           			                                                                              C:\opensprints\FW\user\user.c
                                           				// At this point, we know we have a full packet                              C:\opensprints\FW\user\user.c
                                           				// of information from the PC to parse                                       C:\opensprints\FW\user\user.c
000e02   52de     MOVF      0xde,0x1,0x0   				got_full_packet = TRUE;                                                      C:\opensprints\FW\user\user.c
000e04   0e01     MOVLW     0x1                                                                                             
000e06   6edd     MOVWF     0xdd,0x0                                                                                        
                                           			}                                                                             C:\opensprints\FW\user\user.c
000e08   d015     BRA       0xe34          			else if (                                                                     C:\opensprints\FW\user\user.c
000e0a   0e0d     MOVLW     0xd            				tst_char != kCR                                                              C:\opensprints\FW\user\user.c
000e0c   5cdf     SUBWF     0xdf,0x0,0x0   				&&                                                                           C:\opensprints\FW\user\user.c
000e10   0e0a     MOVLW     0xa            				tst_char != kLF                                                              C:\opensprints\FW\user\user.c
000e0e   e011     BZ        0xe32          			)                                                                             C:\opensprints\FW\user\user.c
000e12   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000e14   e00e     BZ        0xe32                                                                                           
                                           			{                                                                             C:\opensprints\FW\user\user.c
                                           				// Only add a byte if it is not a CR or LF                                   C:\opensprints\FW\user\user.c
000e16   0100     MOVLB     0x0            				g_RX_buf[g_RX_buf_in] = tst_char;                                            C:\opensprints\FW\user\user.c
000e18   5167     MOVF      0x67,0x0,0x1                                                                                    
000e1a   6aea     CLRF      0xea,0x0                                                                                        
000e1c   0f40     ADDLW     0x40                                                                                            
000e1e   6ee9     MOVWF     0xe9,0x0                                                                                        
000e20   0e02     MOVLW     0x2                                                                                             
000e22   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000e24   cfdf     MOVFF     0xfdf,0xfef                                                                                     
000e26   ffef                                                                                                               
000e28   0100     MOVLB     0x0            				in_cr = FALSE;                                                               C:\opensprints\FW\user\user.c
000e2a   6bf0     CLRF      0xf0,0x1                                                                                        
000e2c   0100     MOVLB     0x0            				g_RX_buf_in++;                                                               C:\opensprints\FW\user\user.c
000e2e   2b67     INCF      0x67,0x1,0x1                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
000e30   d001     BRA       0xe34          			else                                                                          C:\opensprints\FW\user\user.c
                                           			{                                                                             C:\opensprints\FW\user\user.c
000e32   d013     BRA       0xe5a          				continue;                                                                    C:\opensprints\FW\user\user.c
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           			// Check for buffer wraparound                                                C:\opensprints\FW\user\user.c
000e34   0e40     MOVLW     0x40           			if (kRX_BUF_SIZE == g_RX_buf_in)                                              C:\opensprints\FW\user\user.c
000e36   0100     MOVLB     0x0                                                                                             
000e38   5d67     SUBWF     0x67,0x0,0x1                                                                                    
000e3a   e102     BNZ       0xe40                                                                                           
                                           			{                                                                             C:\opensprints\FW\user\user.c
000e3c   0100     MOVLB     0x0            				g_RX_buf_in = 0;                                                             C:\opensprints\FW\user\user.c
000e3e   6b67     CLRF      0x67,0x1                                                                                        
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           			// If we hit the out pointer, then this is bad.                               C:\opensprints\FW\user\user.c
000e40   0100     MOVLB     0x0            			if (g_RX_buf_in == g_RX_buf_out)                                              C:\opensprints\FW\user\user.c
000e42   5168     MOVF      0x68,0x0,0x1                                                                                    
000e44   0100     MOVLB     0x0                                                                                             
000e46   5d67     SUBWF     0x67,0x0,0x1                                                                                    
000e48   e102     BNZ       0xe4e                                                                                           
                                           			{                                                                             C:\opensprints\FW\user\user.c
000e4a   860d     BSF       0xd,0x3,0x0    				bitset (error_byte, kERROR_BYTE_RX_BUFFER_OVERRUN);                          C:\opensprints\FW\user\user.c
000e4c   d009     BRA       0xe60          				break;                                                                       C:\opensprints\FW\user\user.c
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           			// Now, if we've gotten a full command (user send <CR>) then                  C:\opensprints\FW\user\user.c
                                           			// go call the code that deals with that command, and then                    C:\opensprints\FW\user\user.c
                                           			// keep parsing. (This allows multiple small commands per packet)             C:\opensprints\FW\user\user.c
000e4e   0e01     MOVLW     0x1            			if (got_full_packet)                                                          C:\opensprints\FW\user\user.c
000e50   50db     MOVF      0xdb,0x0,0x0                                                                                    
000e52   e003     BZ        0xe5a                                                                                           
                                           			{                                                                             C:\opensprints\FW\user\user.c
000e54   d915     RCALL     0x1080         				parse_packet ();                                                             C:\opensprints\FW\user\user.c
000e56   0e01     MOVLW     0x1            				got_full_packet = FALSE;                                                     C:\opensprints\FW\user\user.c
000e58   6adb     CLRF      0xdb,0x0                                                                                        
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           		}		                                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		// Prepare dual-ram buffer for next OUT transaction                            C:\opensprints\FW\user\user.c
000e60   0104     MOVLB     0x4            		CDC_BULK_BD_OUT.Cnt = sizeof(cdc_data_rx);                                     C:\opensprints\FW\user\user.c
000e62   0e40     MOVLW     0x40                                                                                            
000e64   6f19     MOVWF     0x19,0x1                                                                                        
000e66   0e40     MOVLW     0x40           		mUSBBufferReady(CDC_BULK_BD_OUT);                                              C:\opensprints\FW\user\user.c
000e68   0104     MOVLB     0x4                                                                                             
000e6a   1718     ANDWF     0x18,0x1,0x1                                                                                    
000e6c   0104     MOVLB     0x4                                                                                             
000e6e   7d18     BTG       0x18,0x6,0x1                                                                                    
000e70   0e88     MOVLW     0x88                                                                                            
000e72   0104     MOVLB     0x4                                                                                             
000e74   1318     IORWF     0x18,0x1,0x1                                                                                    
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Check for any errors logged in error_byte that need to be sent out           C:\opensprints\FW\user\user.c
000e76   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\opensprints\FW\user\user.c
000e78   e101     BNZ       0xe7c                                                                                           
000e7a   d081     BRA       0xf7e                                                                                           
                                           	{                                                                               C:\opensprints\FW\user\user.c
000e7c   a00d     BTFSS     0xd,0x0,0x0    		if (bittst (error_byte, 0))                                                    C:\opensprints\FW\user\user.c
000e7e   d010     BRA       0xea0                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Unused as of yet                                                           C:\opensprints\FW\user\user.c
000e80   0e61     MOVLW     0x61           			printf ((rom char *)"!0 \r\n");                                               C:\opensprints\FW\user\user.c
000e82   6e2a     MOVWF     0x2a,0x0                                                                                        
000e84   0e4a     MOVLW     0x4a                                                                                            
000e86   6e2b     MOVWF     0x2b,0x0                                                                                        
000e88   6a2c     CLRF      0x2c,0x0                                                                                        
000e8a   c02a     MOVFF     0x2a,0xfe6                                                                                      
000e8c   ffe6                                                                                                               
000e8e   c02b     MOVFF     0x2b,0xfe6                                                                                      
000e90   ffe6                                                                                                               
000e92   c02c     MOVFF     0x2c,0xfe6                                                                                      
000e94   ffe6                                                                                                               
000e96   ec60     CALL      0x4cc0,0x0                                                                                      
000e98   f026                                                                                                               
000e9a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e9c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e9e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
000ea0   a20d     BTFSS     0xd,0x1,0x0    		if (bittst (error_byte, 1))                                                    C:\opensprints\FW\user\user.c
000ea2   d010     BRA       0xec4                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Unused as of yet                                                           C:\opensprints\FW\user\user.c
000ea4   0e5b     MOVLW     0x5b           			printf ((rom char *)"!1 \r\n");                                               C:\opensprints\FW\user\user.c
000ea6   6e2a     MOVWF     0x2a,0x0                                                                                        
000ea8   0e4a     MOVLW     0x4a                                                                                            
000eaa   6e2b     MOVWF     0x2b,0x0                                                                                        
000eac   6a2c     CLRF      0x2c,0x0                                                                                        
000eae   c02a     MOVFF     0x2a,0xfe6                                                                                      
000eb0   ffe6                                                                                                               
000eb2   c02b     MOVFF     0x2b,0xfe6                                                                                      
000eb4   ffe6                                                                                                               
000eb6   c02c     MOVFF     0x2c,0xfe6                                                                                      
000eb8   ffe6                                                                                                               
000eba   ec60     CALL      0x4cc0,0x0                                                                                      
000ebc   f026                                                                                                               
000ebe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ec0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ec2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
000ec4   a40d     BTFSS     0xd,0x2,0x0    		if (bittst (error_byte, kERROR_BYTE_TX_BUF_OVERRUN))                           C:\opensprints\FW\user\user.c
000ec6   d010     BRA       0xee8                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
000ec8   0e3f     MOVLW     0x3f           			printf ((rom char *)"!2 Err: TX Buffer overrun\r\n");                         C:\opensprints\FW\user\user.c
000eca   6e2a     MOVWF     0x2a,0x0                                                                                        
000ecc   0e4a     MOVLW     0x4a                                                                                            
000ece   6e2b     MOVWF     0x2b,0x0                                                                                        
000ed0   6a2c     CLRF      0x2c,0x0                                                                                        
000ed2   c02a     MOVFF     0x2a,0xfe6                                                                                      
000ed4   ffe6                                                                                                               
000ed6   c02b     MOVFF     0x2b,0xfe6                                                                                      
000ed8   ffe6                                                                                                               
000eda   c02c     MOVFF     0x2c,0xfe6                                                                                      
000edc   ffe6                                                                                                               
000ede   ec60     CALL      0x4cc0,0x0                                                                                      
000ee0   f026                                                                                                               
000ee2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ee4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ee6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
000ee8   a60d     BTFSS     0xd,0x3,0x0    		if (bittst (error_byte, kERROR_BYTE_RX_BUFFER_OVERRUN))                        C:\opensprints\FW\user\user.c
000eea   d010     BRA       0xf0c                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
000eec   0e23     MOVLW     0x23           			printf ((rom char *)"!3 Err: RX Buffer overrun\r\n");                         C:\opensprints\FW\user\user.c
000eee   6e2a     MOVWF     0x2a,0x0                                                                                        
000ef0   0e4a     MOVLW     0x4a                                                                                            
000ef2   6e2b     MOVWF     0x2b,0x0                                                                                        
000ef4   6a2c     CLRF      0x2c,0x0                                                                                        
000ef6   c02a     MOVFF     0x2a,0xfe6                                                                                      
000ef8   ffe6                                                                                                               
000efa   c02b     MOVFF     0x2b,0xfe6                                                                                      
000efc   ffe6                                                                                                               
000efe   c02c     MOVFF     0x2c,0xfe6                                                                                      
000f00   ffe6                                                                                                               
000f02   ec60     CALL      0x4cc0,0x0                                                                                      
000f04   f026                                                                                                               
000f06   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f08   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f0a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
000f0c   a80d     BTFSS     0xd,0x4,0x0    		if (bittst (error_byte, kERROR_BYTE_MISSING_PARAMETER))                        C:\opensprints\FW\user\user.c
000f0e   d010     BRA       0xf30                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
000f10   0e04     MOVLW     0x4            			printf ((rom char *)"!4 Err: Missing parameter(s)\r\n");                      C:\opensprints\FW\user\user.c
000f12   6e2a     MOVWF     0x2a,0x0                                                                                        
000f14   0e4a     MOVLW     0x4a                                                                                            
000f16   6e2b     MOVWF     0x2b,0x0                                                                                        
000f18   6a2c     CLRF      0x2c,0x0                                                                                        
000f1a   c02a     MOVFF     0x2a,0xfe6                                                                                      
000f1c   ffe6                                                                                                               
000f1e   c02b     MOVFF     0x2b,0xfe6                                                                                      
000f20   ffe6                                                                                                               
000f22   c02c     MOVFF     0x2c,0xfe6                                                                                      
000f24   ffe6                                                                                                               
000f26   ec60     CALL      0x4cc0,0x0                                                                                      
000f28   f026                                                                                                               
000f2a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f2c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f2e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
000f30   aa0d     BTFSS     0xd,0x5,0x0    		if (bittst (error_byte, kERROR_BYTE_PRINTED_ERROR))                            C:\opensprints\FW\user\user.c
000f32   d000     BRA       0xf34                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// We don't need to do anything since something has already been printed out  C:\opensprints\FW\user\user.c
                                           			//printf ((rom char *)"!5\r\n");                                              C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
000f34   ac0d     BTFSS     0xd,0x6,0x0    		if (bittst (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT))                  C:\opensprints\FW\user\user.c
000f36   d010     BRA       0xf58                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
000f38   0ee3     MOVLW     0xe3           			printf ((rom char *)"!6 Err: Invalid paramter value\r\n");                    C:\opensprints\FW\user\user.c
000f3a   6e2a     MOVWF     0x2a,0x0                                                                                        
000f3c   0e49     MOVLW     0x49                                                                                            
000f3e   6e2b     MOVWF     0x2b,0x0                                                                                        
000f40   6a2c     CLRF      0x2c,0x0                                                                                        
000f42   c02a     MOVFF     0x2a,0xfe6                                                                                      
000f44   ffe6                                                                                                               
000f46   c02b     MOVFF     0x2b,0xfe6                                                                                      
000f48   ffe6                                                                                                               
000f4a   c02c     MOVFF     0x2c,0xfe6                                                                                      
000f4c   ffe6                                                                                                               
000f4e   ec60     CALL      0x4cc0,0x0                                                                                      
000f50   f026                                                                                                               
000f52   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f54   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f56   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
000f58   ae0d     BTFSS     0xd,0x7,0x0    		if (bittst (error_byte, kERROR_BYTE_EXTRA_CHARACTERS))                         C:\opensprints\FW\user\user.c
000f5a   d010     BRA       0xf7c                                                                                           
                                           		{                                                                              C:\opensprints\FW\user\user.c
000f5c   0eca     MOVLW     0xca           			printf ((rom char *)"!7 Err: Extra parmater\r\n");                            C:\opensprints\FW\user\user.c
000f5e   6e2a     MOVWF     0x2a,0x0                                                                                        
000f60   0e49     MOVLW     0x49                                                                                            
000f62   6e2b     MOVWF     0x2b,0x0                                                                                        
000f64   6a2c     CLRF      0x2c,0x0                                                                                        
000f66   c02a     MOVFF     0x2a,0xfe6                                                                                      
000f68   ffe6                                                                                                               
000f6a   c02b     MOVFF     0x2b,0xfe6                                                                                      
000f6c   ffe6                                                                                                               
000f6e   c02c     MOVFF     0x2c,0xfe6                                                                                      
000f70   ffe6                                                                                                               
000f72   ec60     CALL      0x4cc0,0x0                                                                                      
000f74   f026                                                                                                               
000f76   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f78   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f7a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
000f7c   6a0d     CLRF      0xd,0x0        		error_byte = 0;                                                                C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Go send any data that needs sending to PC                                    C:\opensprints\FW\user\user.c
000f7e   d835     RCALL     0xfea          	check_and_send_TX_data ();                                                      C:\opensprints\FW\user\user.c
000f80   0e02     MOVLW     0x2            }                                                                                C:\opensprints\FW\user\user.c
000f82   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
000f84   e202     BC        0xf8a                                                                                           
000f86   6ae1     CLRF      0xe1,0x0                                                                                        
000f88   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f8a   6ee1     MOVWF     0xe1,0x0                                                                                        
000f8c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f8e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000f90   ffd9                                                                                                               
000f92   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // This is our replacement for the standard putc routine                         C:\opensprints\FW\user\user.c
                                           // This enables printf() and all related functions to print to                   C:\opensprints\FW\user\user.c
                                           // the UBS output (i.e. to the PC) buffer                                        C:\opensprints\FW\user\user.c
000f94   cfd9     MOVFF     0xfd9,0xfe6    int _user_putc (char c)                                                          C:\opensprints\FW\user\user.c
000f96   ffe6                                                                                                               
000f98   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000f9a   ffd9                                                                                                               
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	// Copy the character into the output buffer                                    C:\opensprints\FW\user\user.c
000f9c   0100     MOVLB     0x0            	g_TX_buf[g_TX_buf_in] = c;                                                      C:\opensprints\FW\user\user.c
000f9e   5165     MOVF      0x65,0x0,0x1                                                                                    
000fa0   6aea     CLRF      0xea,0x0                                                                                        
000fa2   0f00     ADDLW     0x0                                                                                             
000fa4   6ee9     MOVWF     0xe9,0x0                                                                                        
000fa6   0e02     MOVLW     0x2                                                                                             
000fa8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000faa   0efe     MOVLW     0xfe                                                                                            
000fac   cfdb     MOVFF     0xfdb,0xfef                                                                                     
000fae   ffef                                                                                                               
000fb0   0100     MOVLB     0x0            	g_TX_buf_in++;                                                                  C:\opensprints\FW\user\user.c
000fb2   2b65     INCF      0x65,0x1,0x1                                                                                    
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Check for wrap around                                                        C:\opensprints\FW\user\user.c
000fb4   0e40     MOVLW     0x40           	if (kTX_BUF_SIZE == g_TX_buf_in)                                                C:\opensprints\FW\user\user.c
000fb6   0100     MOVLB     0x0                                                                                             
000fb8   5d65     SUBWF     0x65,0x0,0x1                                                                                    
000fba   e102     BNZ       0xfc0                                                                                           
                                           	{                                                                               C:\opensprints\FW\user\user.c
000fbc   0100     MOVLB     0x0            		g_TX_buf_in = 0;                                                               C:\opensprints\FW\user\user.c
000fbe   6b65     CLRF      0x65,0x1                                                                                        
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           	// Also check to see if we bumpted up against our output pointer                C:\opensprints\FW\user\user.c
000fc0   0100     MOVLB     0x0            	if (g_TX_buf_in == g_TX_buf_out)                                                C:\opensprints\FW\user\user.c
000fc2   5166     MOVF      0x66,0x0,0x1                                                                                    
000fc4   0100     MOVLB     0x0                                                                                             
000fc6   5d65     SUBWF     0x65,0x0,0x1                                                                                    
000fc8   e101     BNZ       0xfcc                                                                                           
                                           	{                                                                               C:\opensprints\FW\user\user.c
000fca   840d     BSF       0xd,0x2,0x0    		bitset (error_byte, kERROR_BYTE_TX_BUF_OVERRUN);                               C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
000fcc   0efe     MOVLW     0xfe           	return (c);                                                                     C:\opensprints\FW\user\user.c
000fce   cfdb     MOVFF     0xfdb,0x2a                                                                                      
000fd0   f02a                                                                                                               
000fd2   6a2b     CLRF      0x2b,0x0                                                                                        
000fd4   be2a     BTFSC     0x2a,0x7,0x0                                                                                    
000fd6   682b     SETF      0x2b,0x0                                                                                        
000fd8   c02a     MOVFF     0x2a,0xff3                                                                                      
000fda   fff3                                                                                                               
000fdc   c02b     MOVFF     0x2b,0xff4                                                                                      
000fde   fff4                                                                                                               
000fe0   d000     BRA       0xfe2                                                                                           
000fe2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\opensprints\FW\user\user.c
000fe4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000fe6   ffd9                                                                                                               
000fe8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // In this function, we check to see it is OK to transmit. If so                 C:\opensprints\FW\user\user.c
                                           // we see if there is any data to transmit to PC. If so, we schedule             C:\opensprints\FW\user\user.c
                                           // it for sending.                                                               C:\opensprints\FW\user\user.c
000fea   cfd9     MOVFF     0xfd9,0xfe6    void check_and_send_TX_data (void)                                               C:\opensprints\FW\user\user.c
000fec   ffe6                                                                                                               
000fee   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000ff0   ffd9                                                                                                               
000ff2   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	char temp;                                                                      C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Only send if we're not already sending something                             C:\opensprints\FW\user\user.c
000ff4   0100     MOVLB     0x0            	if (mUSBUSARTIsTxTrfReady ())                                                   C:\opensprints\FW\user\user.c
000ff6   51d4     MOVF      0xd4,0x0,0x1                                                                                    
000ff8   e13e     BNZ       0x1076                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// And only send if there's something there to send                            C:\opensprints\FW\user\user.c
000ffa   0100     MOVLB     0x0            		if (g_TX_buf_out != g_TX_buf_in)                                               C:\opensprints\FW\user\user.c
000ffc   5165     MOVF      0x65,0x0,0x1                                                                                    
000ffe   0100     MOVLB     0x0                                                                                             
001000   5d66     SUBWF     0x66,0x0,0x1                                                                                    
001002   e039     BZ        0x1076                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Now decide if we need to break it up into two parts or not                 C:\opensprints\FW\user\user.c
001004   0100     MOVLB     0x0            			if (g_TX_buf_in > g_TX_buf_out)                                               C:\opensprints\FW\user\user.c
001006   5166     MOVF      0x66,0x0,0x1                                                                                    
001008   0100     MOVLB     0x0                                                                                             
00100a   80d8     BSF       0xd8,0x0,0x0                                                                                    
00100c   5565     SUBFWB    0x65,0x0,0x1                                                                                    
00100e   e21a     BC        0x1044                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
                                           				// Since IN is beyond OUT, only need one chunk                               C:\opensprints\FW\user\user.c
001010   0100     MOVLB     0x0            				temp = g_TX_buf_in - g_TX_buf_out;                                           C:\opensprints\FW\user\user.c
001012   5166     MOVF      0x66,0x0,0x1                                                                                    
001014   0100     MOVLB     0x0                                                                                             
001016   5d65     SUBWF     0x65,0x0,0x1                                                                                    
001018   6edf     MOVWF     0xdf,0x0                                                                                        
00101a   0100     MOVLB     0x0            				mUSBUSARTTxRam (&g_TX_buf[g_TX_buf_out], temp);                              C:\opensprints\FW\user\user.c
00101c   5166     MOVF      0x66,0x0,0x1                                                                                    
00101e   0100     MOVLB     0x0                                                                                             
001020   6fd5     MOVWF     0xd5,0x1                                                                                        
001022   6bd6     CLRF      0xd6,0x1                                                                                        
001024   0e00     MOVLW     0x0                                                                                             
001026   0100     MOVLB     0x0                                                                                             
001028   27d5     ADDWF     0xd5,0x1,0x1                                                                                    
00102a   0e02     MOVLW     0x2                                                                                             
00102c   0100     MOVLB     0x0                                                                                             
00102e   23d6     ADDWFC    0xd6,0x1,0x1                                                                                    
001030   cfdf     MOVFF     0xfdf,0xd9                                                                                      
001032   f0d9                                                                                                               
001034   0100     MOVLB     0x0                                                                                             
001036   6bda     CLRF      0xda,0x1                                                                                        
001038   0100     MOVLB     0x0                                                                                             
00103a   0e01     MOVLW     0x1                                                                                             
00103c   6fd4     MOVWF     0xd4,0x1                                                                                        
                                           				// Now that we've scheduled the data for sending,                            C:\opensprints\FW\user\user.c
                                           				// update the pointer                                                        C:\opensprints\FW\user\user.c
00103e   c065     MOVFF     0x65,0x66      				g_TX_buf_out = g_TX_buf_in;                                                  C:\opensprints\FW\user\user.c
001040   f066                                                                                                               
                                           			}                                                                             C:\opensprints\FW\user\user.c
001042   d019     BRA       0x1076         			else                                                                          C:\opensprints\FW\user\user.c
                                           			{                                                                             C:\opensprints\FW\user\user.c
                                           				// Since IN is before OUT, we need to send from OUT to the end               C:\opensprints\FW\user\user.c
                                           				// of the buffer, then the next time around we'll catch                      C:\opensprints\FW\user\user.c
                                           				// from the beginning to IN.                                                 C:\opensprints\FW\user\user.c
001044   0e40     MOVLW     0x40           				temp = kTX_BUF_SIZE - g_TX_buf_out;                                          C:\opensprints\FW\user\user.c
001046   0100     MOVLB     0x0                                                                                             
001048   80d8     BSF       0xd8,0x0,0x0                                                                                    
00104a   5566     SUBFWB    0x66,0x0,0x1                                                                                    
00104c   6edf     MOVWF     0xdf,0x0                                                                                        
00104e   0100     MOVLB     0x0            				mUSBUSARTTxRam (&g_TX_buf[g_TX_buf_out], temp);                              C:\opensprints\FW\user\user.c
001050   5166     MOVF      0x66,0x0,0x1                                                                                    
001052   0100     MOVLB     0x0                                                                                             
001054   6fd5     MOVWF     0xd5,0x1                                                                                        
001056   6bd6     CLRF      0xd6,0x1                                                                                        
001058   0e00     MOVLW     0x0                                                                                             
00105a   0100     MOVLB     0x0                                                                                             
00105c   27d5     ADDWF     0xd5,0x1,0x1                                                                                    
00105e   0e02     MOVLW     0x2                                                                                             
001060   0100     MOVLB     0x0                                                                                             
001062   23d6     ADDWFC    0xd6,0x1,0x1                                                                                    
001064   cfdf     MOVFF     0xfdf,0xd9                                                                                      
001066   f0d9                                                                                                               
001068   0100     MOVLB     0x0                                                                                             
00106a   6bda     CLRF      0xda,0x1                                                                                        
00106c   0100     MOVLB     0x0                                                                                             
00106e   0e01     MOVLW     0x1                                                                                             
001070   6fd4     MOVWF     0xd4,0x1                                                                                        
                                           				// Now that we've scheduled the data for sending,                            C:\opensprints\FW\user\user.c
                                           				// update the pointer                                                        C:\opensprints\FW\user\user.c
001072   0100     MOVLB     0x0            				g_TX_buf_out = 0;                                                            C:\opensprints\FW\user\user.c
001074   6b66     CLRF      0x66,0x1                                                                                        
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
001076   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\opensprints\FW\user\user.c
001078   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00107a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00107c   ffd9                                                                                                               
00107e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Look at the new packet, see what command it is, and                           C:\opensprints\FW\user\user.c
                                           // route it appropriately. We come in knowing that                               C:\opensprints\FW\user\user.c
                                           // our packet is in g_RX_buf[], and that the beginning                           C:\opensprints\FW\user\user.c
                                           // of the packet is at g_RX_buf_out, and the end (CR) is at                      C:\opensprints\FW\user\user.c
                                           // g_RX_buf_in. Note that because of buffer wrapping,                            C:\opensprints\FW\user\user.c
                                           // g_RX_buf_in may be less than g_RX_buf_out.                                    C:\opensprints\FW\user\user.c
001080   cfd9     MOVFF     0xfd9,0xfe6    void parse_packet(void)                                                          C:\opensprints\FW\user\user.c
001082   ffe6                                                                                                               
001084   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001086   ffd9                                                                                                               
001088   0e04     MOVLW     0x4                                                                                             
00108a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
00108c   6ade     CLRF      0xde,0x0       	unsigned int	command = 0;                                                       C:\opensprints\FW\user\user.c
00108e   6add     CLRF      0xdd,0x0                                                                                        
001090   0e02     MOVLW     0x2            	unsigned char	cmd1 = 0;                                                         C:\opensprints\FW\user\user.c
001092   6adb     CLRF      0xdb,0x0                                                                                        
001094   0e03     MOVLW     0x3            	unsigned char	cmd2 = 0;                                                         C:\opensprints\FW\user\user.c
001096   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Always grab the first character (which is the first byte of the command)     C:\opensprints\FW\user\user.c
001098   0100     MOVLB     0x0            	cmd1 = toupper (g_RX_buf[g_RX_buf_out]);                                        C:\opensprints\FW\user\user.c
00109a   5168     MOVF      0x68,0x0,0x1                                                                                    
00109c   6aea     CLRF      0xea,0x0                                                                                        
00109e   0f40     ADDLW     0x40                                                                                            
0010a0   6ee9     MOVWF     0xe9,0x0                                                                                        
0010a2   0e02     MOVLW     0x2                                                                                             
0010a4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0010a6   50ef     MOVF      0xef,0x0,0x0                                                                                    
0010a8   6ee6     MOVWF     0xe6,0x0                                                                                        
0010aa   6ae6     CLRF      0xe6,0x0                                                                                        
0010ac   ec59     CALL      0x4eb2,0x0                                                                                      
0010ae   f027                                                                                                               
0010b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0010b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0010b4   0e02     MOVLW     0x2                                                                                             
0010b6   cff3     MOVFF     0xff3,0xfdb                                                                                     
0010b8   ffdb                                                                                                               
0010ba   0100     MOVLB     0x0            	advance_RX_buf_out();                                                           C:\opensprints\FW\user\user.c
0010bc   2b68     INCF      0x68,0x1,0x1                                                                                    
0010be   0e40     MOVLW     0x40                                                                                            
0010c0   0100     MOVLB     0x0                                                                                             
0010c2   5d68     SUBWF     0x68,0x0,0x1                                                                                    
0010c4   e102     BNZ       0x10ca                                                                                          
0010c6   0100     MOVLB     0x0                                                                                             
0010c8   6b68     CLRF      0x68,0x1                                                                                        
0010ca   0e02     MOVLW     0x2            	command = cmd1;                                                                 C:\opensprints\FW\user\user.c
0010cc   50db     MOVF      0xdb,0x0,0x0                                                                                    
0010ce   6ede     MOVWF     0xde,0x0                                                                                        
0010d0   6add     CLRF      0xdd,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Only grab second one if it is not a comma                                    C:\opensprints\FW\user\user.c
0010d2   0100     MOVLB     0x0            	if (g_RX_buf[g_RX_buf_out] != ',' && g_RX_buf[g_RX_buf_out] != kCR)             C:\opensprints\FW\user\user.c
0010d4   5168     MOVF      0x68,0x0,0x1                                                                                    
0010d6   6aea     CLRF      0xea,0x0                                                                                        
0010d8   0f40     ADDLW     0x40                                                                                            
0010da   6ee9     MOVWF     0xe9,0x0                                                                                        
0010dc   0e02     MOVLW     0x2                                                                                             
0010de   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0010e0   50ef     MOVF      0xef,0x0,0x0                                                                                    
0010e2   082c     SUBLW     0x2c                                                                                            
0010e4   e035     BZ        0x1150                                                                                          
0010e6   0100     MOVLB     0x0                                                                                             
0010e8   5168     MOVF      0x68,0x0,0x1                                                                                    
0010ea   6aea     CLRF      0xea,0x0                                                                                        
0010ec   0f40     ADDLW     0x40                                                                                            
0010ee   6ee9     MOVWF     0xe9,0x0                                                                                        
0010f0   0e02     MOVLW     0x2                                                                                             
0010f2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0010f4   50ef     MOVF      0xef,0x0,0x0                                                                                    
0010f6   080d     SUBLW     0xd                                                                                             
0010f8   e02b     BZ        0x1150                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0010fa   0100     MOVLB     0x0            		cmd2 = toupper (g_RX_buf[g_RX_buf_out]);                                       C:\opensprints\FW\user\user.c
0010fc   5168     MOVF      0x68,0x0,0x1                                                                                    
0010fe   6aea     CLRF      0xea,0x0                                                                                        
001100   0f40     ADDLW     0x40                                                                                            
001102   6ee9     MOVWF     0xe9,0x0                                                                                        
001104   0e02     MOVLW     0x2                                                                                             
001106   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001108   50ef     MOVF      0xef,0x0,0x0                                                                                    
00110a   6ee6     MOVWF     0xe6,0x0                                                                                        
00110c   6ae6     CLRF      0xe6,0x0                                                                                        
00110e   ec59     CALL      0x4eb2,0x0                                                                                      
001110   f027                                                                                                               
001112   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001114   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001116   0e03     MOVLW     0x3                                                                                             
001118   cff3     MOVFF     0xff3,0xfdb                                                                                     
00111a   ffdb                                                                                                               
00111c   0100     MOVLB     0x0            		advance_RX_buf_out();                                                          C:\opensprints\FW\user\user.c
00111e   2b68     INCF      0x68,0x1,0x1                                                                                    
001120   0e40     MOVLW     0x40                                                                                            
001122   0100     MOVLB     0x0                                                                                             
001124   5d68     SUBWF     0x68,0x0,0x1                                                                                    
001126   e102     BNZ       0x112c                                                                                          
001128   0100     MOVLB     0x0                                                                                             
00112a   6b68     CLRF      0x68,0x1                                                                                        
00112c   0e02     MOVLW     0x2            		command = ((unsigned int)(cmd1) << 8) + cmd2;                                  C:\opensprints\FW\user\user.c
00112e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001130   f02c                                                                                                               
001132   c02c     MOVFF     0x2c,0x2d                                                                                       
001134   f02d                                                                                                               
001136   6a2c     CLRF      0x2c,0x0                                                                                        
001138   0e03     MOVLW     0x3                                                                                             
00113a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00113c   0100     MOVLB     0x0                                                                                             
00113e   242c     ADDWF     0x2c,0x0,0x0                                                                                    
001140   6e2a     MOVWF     0x2a,0x0                                                                                        
001142   0e00     MOVLW     0x0                                                                                             
001144   202d     ADDWFC    0x2d,0x0,0x0                                                                                    
001146   6e2b     MOVWF     0x2b,0x0                                                                                        
001148   c02a     MOVFF     0x2a,0xfde                                                                                      
00114a   ffde                                                                                                               
00114c   c02b     MOVFF     0x2b,0xfdd                                                                                      
00114e   ffdd                                                                                                               
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Now 'command' is equal to one or two bytes of our command                    C:\opensprints\FW\user\user.c
001150   0e00     MOVLW     0x0            	switch (command)                                                                C:\opensprints\FW\user\user.c
001152   cfdb     MOVFF     0xfdb,0x1e                                                                                      
001154   f01e                                                                                                               
001156   0e01     MOVLW     0x1                                                                                             
001158   cfdb     MOVFF     0xfdb,0x1f                                                                                      
00115a   f01f                                                                                                               
00115c   0e57     MOVLW     0x57                                                                                            
00115e   181e     XORWF     0x1e,0x0,0x0                                                                                    
001160   e102     BNZ       0x1166                                                                                          
001162   0e48     MOVLW     0x48                                                                                            
001164   181f     XORWF     0x1f,0x0,0x0                                                                                    
001166   e101     BNZ       0x116a                                                                                          
001168   d0f5     BRA       0x1354                                                                                          
00116a   0e54     MOVLW     0x54                                                                                            
00116c   181e     XORWF     0x1e,0x0,0x0                                                                                    
00116e   e102     BNZ       0x1174                                                                                          
001170   0e53     MOVLW     0x53                                                                                            
001172   181f     XORWF     0x1f,0x0,0x0                                                                                    
001174   e101     BNZ       0x1178                                                                                          
001176   d0eb     BRA       0x134e                                                                                          
001178   0e4f     MOVLW     0x4f                                                                                            
00117a   181e     XORWF     0x1e,0x0,0x0                                                                                    
00117c   e102     BNZ       0x1182                                                                                          
00117e   0e47     MOVLW     0x47                                                                                            
001180   181f     XORWF     0x1f,0x0,0x0                                                                                    
001182   e101     BNZ       0x1186                                                                                          
001184   d0e1     BRA       0x1348                                                                                          
001186   0e49     MOVLW     0x49                                                                                            
001188   181e     XORWF     0x1e,0x0,0x0                                                                                    
00118a   e102     BNZ       0x1190                                                                                          
00118c   0e43     MOVLW     0x43                                                                                            
00118e   181f     XORWF     0x1f,0x0,0x0                                                                                    
001190   e101     BNZ       0x1194                                                                                          
001192   d0d7     BRA       0x1342                                                                                          
001194   0e49     MOVLW     0x49                                                                                            
001196   181e     XORWF     0x1e,0x0,0x0                                                                                    
001198   e102     BNZ       0x119e                                                                                          
00119a   0e52     MOVLW     0x52                                                                                            
00119c   181f     XORWF     0x1f,0x0,0x0                                                                                    
00119e   e101     BNZ       0x11a2                                                                                          
0011a0   d0cd     BRA       0x133c                                                                                          
0011a2   0e49     MOVLW     0x49                                                                                            
0011a4   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011a6   e102     BNZ       0x11ac                                                                                          
0011a8   0e53     MOVLW     0x53                                                                                            
0011aa   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011ac   e101     BNZ       0x11b0                                                                                          
0011ae   d0c3     BRA       0x1336                                                                                          
0011b0   0e53     MOVLW     0x53                                                                                            
0011b2   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011b4   e102     BNZ       0x11ba                                                                                          
0011b6   0e43     MOVLW     0x43                                                                                            
0011b8   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011ba   e101     BNZ       0x11be                                                                                          
0011bc   d0b9     BRA       0x1330                                                                                          
0011be   0e53     MOVLW     0x53                                                                                            
0011c0   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011c2   e102     BNZ       0x11c8                                                                                          
0011c4   0e52     MOVLW     0x52                                                                                            
0011c6   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011c8   e101     BNZ       0x11cc                                                                                          
0011ca   d0af     BRA       0x132a                                                                                          
0011cc   0e53     MOVLW     0x53                                                                                            
0011ce   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011d0   e102     BNZ       0x11d6                                                                                          
0011d2   0e53     MOVLW     0x53                                                                                            
0011d4   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011d6   e101     BNZ       0x11da                                                                                          
0011d8   d0a5     BRA       0x1324                                                                                          
0011da   0e53     MOVLW     0x53                                                                                            
0011dc   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011de   e102     BNZ       0x11e4                                                                                          
0011e0   0e42     MOVLW     0x42                                                                                            
0011e2   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011e4   e101     BNZ       0x11e8                                                                                          
0011e6   d09b     BRA       0x131e                                                                                          
0011e8   0e43     MOVLW     0x43                                                                                            
0011ea   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011ec   e102     BNZ       0x11f2                                                                                          
0011ee   0e42     MOVLW     0x42                                                                                            
0011f0   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011f2   e101     BNZ       0x11f6                                                                                          
0011f4   d091     BRA       0x1318                                                                                          
0011f6   0e43     MOVLW     0x43                                                                                            
0011f8   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011fa   e102     BNZ       0x1200                                                                                          
0011fc   0e52     MOVLW     0x52                                                                                            
0011fe   181f     XORWF     0x1f,0x0,0x0                                                                                    
001200   e101     BNZ       0x1204                                                                                          
001202   d087     BRA       0x1312                                                                                          
001204   0e4f     MOVLW     0x4f                                                                                            
001206   181e     XORWF     0x1e,0x0,0x0                                                                                    
001208   e102     BNZ       0x120e                                                                                          
00120a   0e42     MOVLW     0x42                                                                                            
00120c   181f     XORWF     0x1f,0x0,0x0                                                                                    
00120e   e101     BNZ       0x1212                                                                                          
001210   d07d     BRA       0x130c                                                                                          
001212   0e57     MOVLW     0x57                                                                                            
001214   181e     XORWF     0x1e,0x0,0x0                                                                                    
001216   e102     BNZ       0x121c                                                                                          
001218   0e4d     MOVLW     0x4d                                                                                            
00121a   181f     XORWF     0x1f,0x0,0x0                                                                                    
00121c   e075     BZ        0x1308                                                                                          
00121e   0e52     MOVLW     0x52                                                                                            
001220   181e     XORWF     0x1e,0x0,0x0                                                                                    
001222   e102     BNZ       0x1228                                                                                          
001224   0e4d     MOVLW     0x4d                                                                                            
001226   181f     XORWF     0x1f,0x0,0x0                                                                                    
001228   e06d     BZ        0x1304                                                                                          
00122a   0e44     MOVLW     0x44                                                                                            
00122c   181e     XORWF     0x1e,0x0,0x0                                                                                    
00122e   e102     BNZ       0x1234                                                                                          
001230   0e50     MOVLW     0x50                                                                                            
001232   181f     XORWF     0x1f,0x0,0x0                                                                                    
001234   e065     BZ        0x1300                                                                                          
001236   0e4f     MOVLW     0x4f                                                                                            
001238   181e     XORWF     0x1e,0x0,0x0                                                                                    
00123a   e102     BNZ       0x1240                                                                                          
00123c   0e50     MOVLW     0x50                                                                                            
00123e   181f     XORWF     0x1f,0x0,0x0                                                                                    
001240   e05d     BZ        0x12fc                                                                                          
001242   0e49     MOVLW     0x49                                                                                            
001244   181e     XORWF     0x1e,0x0,0x0                                                                                    
001246   e102     BNZ       0x124c                                                                                          
001248   0e50     MOVLW     0x50                                                                                            
00124a   181f     XORWF     0x1f,0x0,0x0                                                                                    
00124c   e055     BZ        0x12f8                                                                                          
00124e   0e58     MOVLW     0x58                                                                                            
001250   181e     XORWF     0x1e,0x0,0x0                                                                                    
001252   e102     BNZ       0x1258                                                                                          
001254   0e54     MOVLW     0x54                                                                                            
001256   181f     XORWF     0x1f,0x0,0x0                                                                                    
001258   e04c     BZ        0x12f2                                                                                          
00125a   0e54     MOVLW     0x54                                                                                            
00125c   181e     XORWF     0x1e,0x0,0x0                                                                                    
00125e   e101     BNZ       0x1262                                                                                          
001260   501f     MOVF      0x1f,0x0,0x0                                                                                    
001262   e045     BZ        0x12ee                                                                                          
001264   0e41     MOVLW     0x41                                                                                            
001266   181e     XORWF     0x1e,0x0,0x0                                                                                    
001268   e101     BNZ       0x126c                                                                                          
00126a   501f     MOVF      0x1f,0x0,0x0                                                                                    
00126c   e03e     BZ        0x12ea                                                                                          
00126e   0e56     MOVLW     0x56                                                                                            
001270   181e     XORWF     0x1e,0x0,0x0                                                                                    
001272   e101     BNZ       0x1276                                                                                          
001274   501f     MOVF      0x1f,0x0,0x0                                                                                    
001276   e037     BZ        0x12e6                                                                                          
001278   0e49     MOVLW     0x49                                                                                            
00127a   181e     XORWF     0x1e,0x0,0x0                                                                                    
00127c   e101     BNZ       0x1280                                                                                          
00127e   501f     MOVF      0x1f,0x0,0x0                                                                                    
001280   e030     BZ        0x12e2                                                                                          
001282   0e4f     MOVLW     0x4f                                                                                            
001284   181e     XORWF     0x1e,0x0,0x0                                                                                    
001286   e101     BNZ       0x128a                                                                                          
001288   501f     MOVF      0x1f,0x0,0x0                                                                                    
00128a   e029     BZ        0x12de                                                                                          
00128c   0e55     MOVLW     0x55                                                                                            
00128e   181e     XORWF     0x1e,0x0,0x0                                                                                    
001290   e102     BNZ       0x1296                                                                                          
001292   0e43     MOVLW     0x43                                                                                            
001294   181f     XORWF     0x1f,0x0,0x0                                                                                    
001296   e021     BZ        0x12da                                                                                          
001298   0e58     MOVLW     0x58                                                                                            
00129a   181e     XORWF     0x1e,0x0,0x0                                                                                    
00129c   e102     BNZ       0x12a2                                                                                          
00129e   0e43     MOVLW     0x43                                                                                            
0012a0   181f     XORWF     0x1f,0x0,0x0                                                                                    
0012a2   e018     BZ        0x12d4                                                                                          
0012a4   0e43     MOVLW     0x43                                                                                            
0012a6   181e     XORWF     0x1e,0x0,0x0                                                                                    
0012a8   e101     BNZ       0x12ac                                                                                          
0012aa   501f     MOVF      0x1f,0x0,0x0                                                                                    
0012ac   e011     BZ        0x12d0                                                                                          
0012ae   0e52     MOVLW     0x52                                                                                            
0012b0   181e     XORWF     0x1e,0x0,0x0                                                                                    
0012b2   e101     BNZ       0x12b6                                                                                          
0012b4   501f     MOVF      0x1f,0x0,0x0                                                                                    
0012b6   e00a     BZ        0x12cc                                                                                          
0012b8   0e58     MOVLW     0x58                                                                                            
0012ba   181e     XORWF     0x1e,0x0,0x0                                                                                    
0012bc   e102     BNZ       0x12c2                                                                                          
0012be   0e52     MOVLW     0x52                                                                                            
0012c0   181f     XORWF     0x1f,0x0,0x0                                                                                    
0012c2   e001     BZ        0x12c6                                                                                          
0012c4   d04a     BRA       0x135a                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		case ('R' * 256) + 'X':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// For receiving serial                                                       C:\opensprints\FW\user\user.c
0012c6   ecf2     CALL      0x1be4,0x0     			parse_RX_packet ();                                                           C:\opensprints\FW\user\user.c
0012c8   f00d                                                                                                               
0012ca   d086     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case 'R':                                                                      C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Reset command (resets everything to power-on state)                        C:\opensprints\FW\user\user.c
0012cc   d8bc     RCALL     0x1446         			parse_R_packet ();                                                            C:\opensprints\FW\user\user.c
0012ce   d084     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case 'C':                                                                      C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Configure command (configure ports for Input or Ouptut)                    C:\opensprints\FW\user\user.c
0012d0   d93f     RCALL     0x1550         			parse_C_packet ();                                                            C:\opensprints\FW\user\user.c
0012d2   d082     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}		                                                                            C:\opensprints\FW\user\user.c
                                           		case ('C' * 256) + 'X':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// For configuring serial port                                                C:\opensprints\FW\user\user.c
0012d4   ecf4     CALL      0x1be8,0x0     			parse_CX_packet ();                                                           C:\opensprints\FW\user\user.c
0012d6   f00d                                                                                                               
0012d8   d07f     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('C' * 256) + 'U':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// For configuring UBW                                                        C:\opensprints\FW\user\user.c
0012da   d8b9     RCALL     0x144e         			parse_CU_packet ();                                                           C:\opensprints\FW\user\user.c
0012dc   d07d     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case 'O':                                                                      C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Output command (tell the ports to output something)                        C:\opensprints\FW\user\user.c
0012de   d995     RCALL     0x160a         			parse_O_packet ();                                                            C:\opensprints\FW\user\user.c
0012e0   d07b     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case 'I':                                                                      C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Input command (return the current status of the ports)                     C:\opensprints\FW\user\user.c
0012e2   d9c6     RCALL     0x1670         			parse_I_packet ();                                                            C:\opensprints\FW\user\user.c
0012e4   d079     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case 'V':                                                                      C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Version command                                                            C:\opensprints\FW\user\user.c
0012e6   d9df     RCALL     0x16a6         			parse_V_packet ();                                                            C:\opensprints\FW\user\user.c
0012e8   d077     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case 'A':                                                                      C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Analog command                                                             C:\opensprints\FW\user\user.c
0012ea   d9ee     RCALL     0x16c8         			parse_A_packet ();                                                            C:\opensprints\FW\user\user.c
0012ec   d075     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case 'T':                                                                      C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// For timed I/O                                                              C:\opensprints\FW\user\user.c
0012ee   d8ef     RCALL     0x14ce         			parse_T_packet ();                                                            C:\opensprints\FW\user\user.c
0012f0   d073     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}	                                                                             C:\opensprints\FW\user\user.c
                                           		case ('T' * 256) + 'X':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// For transmitting serial                                                    C:\opensprints\FW\user\user.c
0012f2   ecf0     CALL      0x1be0,0x0     			parse_TX_packet ();                                                           C:\opensprints\FW\user\user.c
0012f4   f00d                                                                                                               
0012f6   d070     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('P' * 256) + 'I':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// PI for reading a single pin                                                C:\opensprints\FW\user\user.c
0012f8   db5a     RCALL     0x19ae         			parse_PI_packet ();                                                           C:\opensprints\FW\user\user.c
0012fa   d06e     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('P' * 256) + 'O':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// PO for setting a single pin                                                C:\opensprints\FW\user\user.c
0012fc   dbd8     RCALL     0x1aae         			parse_PO_packet ();                                                           C:\opensprints\FW\user\user.c
0012fe   d06c     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		                                                                               C:\opensprints\FW\user\user.c
                                           		case ('P' * 256) + 'D':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// PD for setting a pin's direction                                           C:\opensprints\FW\user\user.c
001300   daba     RCALL     0x1876         			parse_PD_packet ();                                                           C:\opensprints\FW\user\user.c
001302   d06a     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('M' * 256) + 'R':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// MR for Memory Read                                                         C:\opensprints\FW\user\user.c
001304   da77     RCALL     0x17f4         			parse_MR_packet ();                                                           C:\opensprints\FW\user\user.c
001306   d068     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('M' * 256) + 'W':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// MW for Memory Write                                                        C:\opensprints\FW\user\user.c
001308   da40     RCALL     0x178a         			parse_MW_packet ();                                                           C:\opensprints\FW\user\user.c
00130a   d066     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('B' * 256) + 'O':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// MR for Fast Parallel Output                                                C:\opensprints\FW\user\user.c
00130c   ece2     CALL      0x1dc4,0x0     			parse_BO_packet ();		                                                         C:\opensprints\FW\user\user.c
00130e   f00e                                                                                                               
001310   d063     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('R' * 256) + 'C':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// RC for RC servo output                                                     C:\opensprints\FW\user\user.c
001312   ecf6     CALL      0x1bec,0x0     			parse_RC_packet ();		                                                         C:\opensprints\FW\user\user.c
001314   f00d                                                                                                               
001316   d060     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('B' * 256) + 'C':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// BC for Fast Parallel Configure                                             C:\opensprints\FW\user\user.c
001318   ec9b     CALL      0x1d36,0x0     			parse_BC_packet ();                                                           C:\opensprints\FW\user\user.c
00131a   f00e                                                                                                               
00131c   d05d     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('B' * 256) + 'S':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// BS for Fast Binary Stream output                                           C:\opensprints\FW\user\user.c
00131e   ec29     CALL      0x2052,0x0     			parse_BS_packet ();                                                           C:\opensprints\FW\user\user.c
001320   f010                                                                                                               
001322   d05a     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('S' * 256) + 'S':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// SS for Send SPI                                                            C:\opensprints\FW\user\user.c
001324   ece5     CALL      0x21ca,0x0     			parse_SS_packet ();                                                           C:\opensprints\FW\user\user.c
001326   f010                                                                                                               
001328   d057     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('R' * 256) + 'S':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// RS for Receive SPI                                                         C:\opensprints\FW\user\user.c
00132a   ece8     CALL      0x21d0,0x0     			parse_RS_packet ();                                                           C:\opensprints\FW\user\user.c
00132c   f010                                                                                                               
00132e   d054     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('C' * 256) + 'S':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// CS for Configure SPI                                                       C:\opensprints\FW\user\user.c
001330   eceb     CALL      0x21d6,0x0     			parse_CS_packet ();                                                           C:\opensprints\FW\user\user.c
001332   f010                                                                                                               
001334   d051     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('S' * 256) + 'I':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// SI for Send I2C                                                            C:\opensprints\FW\user\user.c
001336   ecee     CALL      0x21dc,0x0     			parse_SI_packet ();                                                           C:\opensprints\FW\user\user.c
001338   f010                                                                                                               
00133a   d04e     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('R' * 256) + 'I':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// RI for Receive I2C                                                         C:\opensprints\FW\user\user.c
00133c   ecf1     CALL      0x21e2,0x0     			parse_RI_packet ();                                                           C:\opensprints\FW\user\user.c
00133e   f010                                                                                                               
001340   d04b     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		case ('C' * 256) + 'I':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// CI for Configure I2C                                                       C:\opensprints\FW\user\user.c
001342   ecf4     CALL      0x21e8,0x0     			parse_CI_packet ();                                                           C:\opensprints\FW\user\user.c
001344   f010                                                                                                               
001346   d048     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		case ('G' * 256) + 'O':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
001348   ecf7     CALL      0x21ee,0x0     			parse_GO_packet ();                                                           C:\opensprints\FW\user\user.c
00134a   f010                                                                                                               
00134c   d045     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		case ('S' * 256) + 'T':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
00134e   ec05     CALL      0x220a,0x0     			parse_ST_packet ();                                                           C:\opensprints\FW\user\user.c
001350   f011                                                                                                               
001352   d042     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		case ('H' * 256) + 'W':                                                        C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
001354   ec0a     CALL      0x2214,0x0     			parse_HW_packet();                                                            C:\opensprints\FW\user\user.c
001356   f011                                                                                                               
001358   d03f     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		default:                                                                       C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
00135a   0e03     MOVLW     0x3            			if (0 == cmd2)                                                                C:\opensprints\FW\user\user.c
00135c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00135e   e11a     BNZ       0x1394                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
                                           				// Send back 'unknown command' error                                         C:\opensprints\FW\user\user.c
                                           				printf (                                                                     C:\opensprints\FW\user\user.c
                                           					 (rom char *)"!8 Err: Unknown command '%c:%2X'\r\n"                         C:\opensprints\FW\user\user.c
001370   0ea7     MOVLW     0xa7           					,cmd1                                                                       C:\opensprints\FW\user\user.c
001372   6e2a     MOVWF     0x2a,0x0                                                                                        
001374   0e49     MOVLW     0x49                                                                                            
001376   6e2b     MOVWF     0x2b,0x0                                                                                        
001378   6a2c     CLRF      0x2c,0x0                                                                                        
00137a   c02a     MOVFF     0x2a,0xfe6                                                                                      
00137c   ffe6                                                                                                               
00137e   c02b     MOVFF     0x2b,0xfe6                                                                                      
001380   ffe6                                                                                                               
001382   c02c     MOVFF     0x2c,0xfe6                                                                                      
001384   ffe6                                                                                                               
001368   0e02     MOVLW     0x2            					,cmd1                                                                       C:\opensprints\FW\user\user.c
00136a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00136c   ffe6                                                                                                               
00136e   6ae6     CLRF      0xe6,0x0                                                                                        
001360   0e02     MOVLW     0x2            				);                                                                           C:\opensprints\FW\user\user.c
001362   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001364   ffe6                                                                                                               
001366   6ae6     CLRF      0xe6,0x0                                                                                        
001386   ec60     CALL      0x4cc0,0x0                                                                                      
001388   f026                                                                                                               
00138a   6e2d     MOVWF     0x2d,0x0                                                                                        
00138c   0e07     MOVLW     0x7                                                                                             
00138e   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001390   502d     MOVF      0x2d,0x0,0x0                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
001392   d021     BRA       0x13d6         			else                                                                          C:\opensprints\FW\user\user.c
                                           			{                                                                             C:\opensprints\FW\user\user.c
                                           				// Send back 'unknown command' error                                         C:\opensprints\FW\user\user.c
                                           				printf (                                                                     C:\opensprints\FW\user\user.c
                                           					 (rom char *)"!8 Err: Unknown command '%c%c:%2X%2X'\r\n"                    C:\opensprints\FW\user\user.c
0013b4   0e7f     MOVLW     0x7f           					,cmd1                                                                       C:\opensprints\FW\user\user.c
0013b6   6e2a     MOVWF     0x2a,0x0                                                                                        
0013b8   0e49     MOVLW     0x49                                                                                            
0013ba   6e2b     MOVWF     0x2b,0x0                                                                                        
0013bc   6a2c     CLRF      0x2c,0x0                                                                                        
0013be   c02a     MOVFF     0x2a,0xfe6                                                                                      
0013c0   ffe6                                                                                                               
0013c2   c02b     MOVFF     0x2b,0xfe6                                                                                      
0013c4   ffe6                                                                                                               
0013c6   c02c     MOVFF     0x2c,0xfe6                                                                                      
0013c8   ffe6                                                                                                               
0013ac   0e02     MOVLW     0x2            					,cmd2                                                                       C:\opensprints\FW\user\user.c
0013ae   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0013b0   ffe6                                                                                                               
0013b2   6ae6     CLRF      0xe6,0x0                                                                                        
0013a4   0e03     MOVLW     0x3            					,cmd1                                                                       C:\opensprints\FW\user\user.c
0013a6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0013a8   ffe6                                                                                                               
0013aa   6ae6     CLRF      0xe6,0x0                                                                                        
00139c   0e02     MOVLW     0x2            					,cmd2                                                                       C:\opensprints\FW\user\user.c
00139e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0013a0   ffe6                                                                                                               
0013a2   6ae6     CLRF      0xe6,0x0                                                                                        
001394   0e03     MOVLW     0x3            				);                                                                           C:\opensprints\FW\user\user.c
001396   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001398   ffe6                                                                                                               
00139a   6ae6     CLRF      0xe6,0x0                                                                                        
0013ca   ec60     CALL      0x4cc0,0x0                                                                                      
0013cc   f026                                                                                                               
0013ce   6e2d     MOVWF     0x2d,0x0                                                                                        
0013d0   0e0b     MOVLW     0xb                                                                                             
0013d2   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0013d4   502d     MOVF      0x2d,0x0,0x0                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
0013d6   d000     BRA       0x13d8         			break;                                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Double check that our output pointer is now at the ending <CR>               C:\opensprints\FW\user\user.c
                                           	// If it is not, this indicates that there were extra characters that           C:\opensprints\FW\user\user.c
                                           	// the command parsing routine didn't eat. This would be an error and needs     C:\opensprints\FW\user\user.c
                                           	// to be reported. (Ignore for Reset command because FIFO pointers get cleared.) C:\opensprints\FW\user\user.c
                                           	if (                                                                            C:\opensprints\FW\user\user.c
0013d8   0100     MOVLB     0x0            		(g_RX_buf[g_RX_buf_out] != kCR && 0 == error_byte)                             C:\opensprints\FW\user\user.c
0013da   5168     MOVF      0x68,0x0,0x1                                                                                    
0013dc   6aea     CLRF      0xea,0x0                                                                                        
0013de   0f40     ADDLW     0x40                                                                                            
0013e0   6ee9     MOVWF     0xe9,0x0                                                                                        
0013e2   0e02     MOVLW     0x2                                                                                             
0013e4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0013e6   50ef     MOVF      0xef,0x0,0x0                                                                                    
0013e8   080d     SUBLW     0xd                                                                                             
0013ea   e00d     BZ        0x1406                                                                                          
0013ec   500d     MOVF      0xd,0x0,0x0                                                                                     
0013ee   e10b     BNZ       0x1406                                                                                          
                                           		&&                                                                             C:\opensprints\FW\user\user.c
0013f0   0e52     MOVLW     0x52           		('R' != command)                                                               C:\opensprints\FW\user\user.c
0013f2   6e2a     MOVWF     0x2a,0x0                                                                                        
0013f4   6a2b     CLRF      0x2b,0x0                                                                                        
0013f6   50df     MOVF      0xdf,0x0,0x0                                                                                    
0013f8   182a     XORWF     0x2a,0x0,0x0                                                                                    
0013fa   e103     BNZ       0x1402                                                                                          
0013fc   52de     MOVF      0xde,0x1,0x0                                                                                    
0013fe   50dd     MOVF      0xdd,0x0,0x0                                                                                    
001400   182b     XORWF     0x2b,0x0,0x0                                                                                    
001402   e001     BZ        0x1406         	)                                                                               C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
001404   8e0d     BSF       0xd,0x7,0x0    		bitset (error_byte, kERROR_BYTE_EXTRA_CHARACTERS);                             C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Clean up by skipping over any bytes we haven't eaten                         C:\opensprints\FW\user\user.c
                                           	// This is safe since we parse each packet as we get a <CR>                     C:\opensprints\FW\user\user.c
                                           	// (i.e. g_RX_buf_in doesn't move while we are in this routine)                 C:\opensprints\FW\user\user.c
001406   c067     MOVFF     0x67,0x68      	g_RX_buf_out = g_RX_buf_in;                                                     C:\opensprints\FW\user\user.c
001408   f068                                                                                                               
00140a   0e04     MOVLW     0x4            }                                                                                C:\opensprints\FW\user\user.c
00140c   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00140e   e202     BC        0x1414                                                                                          
001410   6ae1     CLRF      0xe1,0x0                                                                                        
001412   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001414   6ee1     MOVWF     0xe1,0x0                                                                                        
001416   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001418   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00141a   ffd9                                                                                                               
00141c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Print out the positive acknoledgement that the packet was received            C:\opensprints\FW\user\user.c
                                           // if we have acks turned on.                                                    C:\opensprints\FW\user\user.c
                                           void print_ack(void)                                                             C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
00141e   0100     MOVLB     0x0            	if (g_ack_enable)                                                               C:\opensprints\FW\user\user.c
001420   516d     MOVF      0x6d,0x0,0x1                                                                                    
001422   e010     BZ        0x1444                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001424   0e46     MOVLW     0x46           		printf ((rom char *)st_OK);                                                    C:\opensprints\FW\user\user.c
001426   6e2a     MOVWF     0x2a,0x0                                                                                        
001428   0e4f     MOVLW     0x4f                                                                                            
00142a   6e2b     MOVWF     0x2b,0x0                                                                                        
00142c   6a2c     CLRF      0x2c,0x0                                                                                        
00142e   c02a     MOVFF     0x2a,0xfe6                                                                                      
001430   ffe6                                                                                                               
001432   c02b     MOVFF     0x2b,0xfe6                                                                                      
001434   ffe6                                                                                                               
001436   c02c     MOVFF     0x2c,0xfe6                                                                                      
001438   ffe6                                                                                                               
00143a   ec60     CALL      0x4cc0,0x0                                                                                      
00143c   f026                                                                                                               
00143e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001440   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001442   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\opensprints\FW\user\user.c
001444   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Return all I/Os to their default power-on values                              C:\opensprints\FW\user\user.c
                                           void parse_R_packet(void)                                                        C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
001446   ecd5     CALL      0xbaa,0x0      	UserInit ();                                                                    C:\opensprints\FW\user\user.c
001448   f005                                                                                                               
00144a   dfe9     RCALL     0x141e         	print_ack ();                                                                   C:\opensprints\FW\user\user.c
00144c   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // CU is "Configure UBW" and controls system-wide configruation values           C:\opensprints\FW\user\user.c
                                           // "CU,<parameter_number>,<paramter_value><CR>"                                  C:\opensprints\FW\user\user.c
                                           // <paramter_number>	<parameter_value>                                           C:\opensprints\FW\user\user.c
                                           // 1					{1|0} turns on or off the 'ack' ("OK" at end of packets)                C:\opensprints\FW\user\user.c
00144e   cfd9     MOVFF     0xfd9,0xfe6    void parse_CU_packet(void)                                                       C:\opensprints\FW\user\user.c
001450   ffe6                                                                                                               
001452   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001454   ffd9                                                                                                               
001456   0e03     MOVLW     0x3                                                                                             
001458   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned char parameter_number;                                                 C:\opensprints\FW\user\user.c
                                           	signed int paramater_value;                                                     C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
00145a   0e01     MOVLW     0x1            	parameter_number = extract_number (kUCHAR);                                     C:\opensprints\FW\user\user.c
00145c   6ee6     MOVWF     0xe6,0x0                                                                                        
00145e   ec0f     CALL      0x221e,0x0                                                                                      
001460   f011                                                                                                               
001462   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001464   501d     MOVF      0x1d,0x0,0x0                                                                                    
001466   6edf     MOVWF     0xdf,0x0                                                                                        
001468   0e02     MOVLW     0x2            	paramater_value = extract_number (kINT);                                        C:\opensprints\FW\user\user.c
00146a   6ee6     MOVWF     0xe6,0x0                                                                                        
00146c   ec0f     CALL      0x221e,0x0                                                                                      
00146e   f011                                                                                                               
001470   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001472   52de     MOVF      0xde,0x1,0x0                                                                                    
001474   c01d     MOVFF     0x1d,0xfde                                                                                      
001476   ffde                                                                                                               
001478   c01e     MOVFF     0x1e,0xfdd                                                                                      
00147a   ffdd                                                                                                               
00147c   52dd     MOVF      0xdd,0x1,0x0                                                                                    
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Bail if we got a conversion error                                            C:\opensprints\FW\user\user.c
00147e   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\opensprints\FW\user\user.c
001480   e001     BZ        0x1484                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001482   d01b     BRA       0x14ba         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
001484   04df     DECF      0xdf,0x0,0x0   	if (1 == parameter_number)                                                      C:\opensprints\FW\user\user.c
001486   e118     BNZ       0x14b8                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001488   50d9     MOVF      0xd9,0x0,0x0   		if (0 == paramater_value || 1 == paramater_value)                              C:\opensprints\FW\user\user.c
00148a   0f01     ADDLW     0x1                                                                                             
00148c   6ee9     MOVWF     0xe9,0x0                                                                                        
00148e   cfda     MOVFF     0xfda,0xfea                                                                                     
001490   ffea                                                                                                               
001492   50ee     MOVF      0xee,0x0,0x0                                                                                    
001494   10ed     IORWF     0xed,0x0,0x0                                                                                    
001496   e00b     BZ        0x14ae                                                                                          
001498   0e01     MOVLW     0x1                                                                                             
00149a   6e2a     MOVWF     0x2a,0x0                                                                                        
00149c   6a2b     CLRF      0x2b,0x0                                                                                        
00149e   0e01     MOVLW     0x1                                                                                             
0014a0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0014a2   182a     XORWF     0x2a,0x0,0x0                                                                                    
0014a4   e103     BNZ       0x14ac                                                                                          
0014a6   0e02     MOVLW     0x2                                                                                             
0014a8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0014aa   182b     XORWF     0x2b,0x0,0x0                                                                                    
0014ac   e104     BNZ       0x14b6                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
0014ae   0e01     MOVLW     0x1            			g_ack_enable = paramater_value;			                                            C:\opensprints\FW\user\user.c
0014b0   cfdb     MOVFF     0xfdb,0x6d                                                                                      
0014b2   f06d                                                                                                               
                                           		}                                                                              C:\opensprints\FW\user\user.c
0014b4   d001     BRA       0x14b8         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
0014b6   8c0d     BSF       0xd,0x6,0x0    			bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                     C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
0014b8   dfb2     RCALL     0x141e         	print_ack();                                                                    C:\opensprints\FW\user\user.c
0014ba   0e03     MOVLW     0x3            }                                                                                C:\opensprints\FW\user\user.c
0014bc   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0014be   e202     BC        0x14c4                                                                                          
0014c0   6ae1     CLRF      0xe1,0x0                                                                                        
0014c2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0014c4   6ee1     MOVWF     0xe1,0x0                                                                                        
0014c6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0014c8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0014ca   ffd9                                                                                                               
0014cc   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // "T" Packet                                                                    C:\opensprints\FW\user\user.c
                                           // Causes PIC to sample digital or analog inputs at a regular interval and send  C:\opensprints\FW\user\user.c
                                           // I (or A) packets back at that interval.                                       C:\opensprints\FW\user\user.c
                                           // Send T,0,0<CR> to stop I (or A) packets                                       C:\opensprints\FW\user\user.c
                                           // FORMAT: T,<TIME_BETWEEN_UPDATES_IN_MS>,<MODE><CR>                             C:\opensprints\FW\user\user.c
                                           // <MODE> is 0 for digital (I packets) and 1 for analog (A packets)              C:\opensprints\FW\user\user.c
                                           // EXAMPLE: "T,4000,0<CR>" to send an I packet back every 4 seconds.             C:\opensprints\FW\user\user.c
                                           // EXAMPLE: "T,2000,1<CR>" to send an A packet back every 2 seconds.             C:\opensprints\FW\user\user.c
0014ce   cfd9     MOVFF     0xfd9,0xfe6    void parse_T_packet(void)                                                        C:\opensprints\FW\user\user.c
0014d0   ffe6                                                                                                               
0014d2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0014d4   ffd9                                                                                                               
0014d6   0e03     MOVLW     0x3                                                                                             
0014d8   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned int value;                                                             C:\opensprints\FW\user\user.c
0014da   0e02     MOVLW     0x2            	unsigned char mode = 0;                                                         C:\opensprints\FW\user\user.c
0014dc   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Extract the <TIME_BETWEEN_UPDATES_IN_MS> value                               C:\opensprints\FW\user\user.c
0014de   0e03     MOVLW     0x3            	time_between_updates = extract_number (kUINT);                                  C:\opensprints\FW\user\user.c
0014e0   6ee6     MOVWF     0xe6,0x0                                                                                        
0014e2   ec0f     CALL      0x221e,0x0                                                                                      
0014e4   f011                                                                                                               
0014e6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0014e8   c01d     MOVFF     0x1d,0x0                                                                                        
0014ea   f000                                                                                                               
0014ec   c01e     MOVFF     0x1e,0x1                                                                                        
0014ee   f001                                                                                                               
                                           	// Extract the <MODE> value                                                     C:\opensprints\FW\user\user.c
0014f0   0e01     MOVLW     0x1            	mode = extract_number (kUCHAR);                                                 C:\opensprints\FW\user\user.c
0014f2   6ee6     MOVWF     0xe6,0x0                                                                                        
0014f4   ec0f     CALL      0x221e,0x0                                                                                      
0014f6   f011                                                                                                               
0014f8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0014fa   0e02     MOVLW     0x2                                                                                             
0014fc   c01d     MOVFF     0x1d,0xfdb                                                                                      
0014fe   ffdb                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Bail if we got a conversion error                                            C:\opensprints\FW\user\user.c
001500   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\opensprints\FW\user\user.c
001502   e001     BZ        0x1506                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001504   d01b     BRA       0x153c         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Now start up the timer at the right rate or shut                             C:\opensprints\FW\user\user.c
                                           	// it down.                                                                     C:\opensprints\FW\user\user.c
001506   0e02     MOVLW     0x2            	if (0 == mode)                                                                  C:\opensprints\FW\user\user.c
001508   50db     MOVF      0xdb,0x0,0x0                                                                                    
00150a   e10c     BNZ       0x1524                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
00150c   5000     MOVF      0x0,0x0,0x0    		if (0 == time_between_updates)                                                 C:\opensprints\FW\user\user.c
00150e   1001     IORWF     0x1,0x0,0x0                                                                                     
001510   e103     BNZ       0x1518                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Turn off sending of I packets.                                             C:\opensprints\FW\user\user.c
001512   6a02     CLRF      0x2,0x0        			ISR_D_RepeatRate = 0;                                                         C:\opensprints\FW\user\user.c
001514   6a03     CLRF      0x3,0x0                                                                                         
                                           		}                                                                              C:\opensprints\FW\user\user.c
001516   d005     BRA       0x1522         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
001518   84ca     BSF       0xca,0x2,0x0   			T2CONbits.TMR2ON = 1;                                                         C:\opensprints\FW\user\user.c
                                           		                                                                               C:\opensprints\FW\user\user.c
                                           			// Eventually gaurd this section from interrupts                              C:\opensprints\FW\user\user.c
00151a   c000     MOVFF     0x0,0x2        			ISR_D_RepeatRate = time_between_updates;                                      C:\opensprints\FW\user\user.c
00151c   f002                                                                                                               
00151e   c001     MOVFF     0x1,0x3                                                                                         
001520   f003                                                                                                               
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}	                                                                              C:\opensprints\FW\user\user.c
001522   d00b     BRA       0x153a         	else                                                                            C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
001524   5000     MOVF      0x0,0x0,0x0    		if (0 == time_between_updates)                                                 C:\opensprints\FW\user\user.c
001526   1001     IORWF     0x1,0x0,0x0                                                                                     
001528   e103     BNZ       0x1530                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Turn off sending of A packets.                                             C:\opensprints\FW\user\user.c
00152a   6a07     CLRF      0x7,0x0        			ISR_A_RepeatRate = 0;                                                         C:\opensprints\FW\user\user.c
00152c   6a08     CLRF      0x8,0x0                                                                                         
                                           		}                                                                              C:\opensprints\FW\user\user.c
00152e   d005     BRA       0x153a         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
001530   84ca     BSF       0xca,0x2,0x0   			T2CONbits.TMR2ON = 1;                                                         C:\opensprints\FW\user\user.c
                                           		                                                                               C:\opensprints\FW\user\user.c
                                           			// Eventually gaurd this section from interrupts                              C:\opensprints\FW\user\user.c
001532   c000     MOVFF     0x0,0x7        			ISR_A_RepeatRate = time_between_updates;                                      C:\opensprints\FW\user\user.c
001534   f007                                                                                                               
001536   c001     MOVFF     0x1,0x8                                                                                         
001538   f008                                                                                                               
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
00153a   df71     RCALL     0x141e         	print_ack ();                                                                   C:\opensprints\FW\user\user.c
00153c   0e03     MOVLW     0x3            }                                                                                C:\opensprints\FW\user\user.c
00153e   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001540   e202     BC        0x1546                                                                                          
001542   6ae1     CLRF      0xe1,0x0                                                                                        
001544   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001546   6ee1     MOVWF     0xe1,0x0                                                                                        
001548   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00154a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00154c   ffd9                                                                                                               
00154e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // FORMAT: C,<portA_IO>,<portB_IO>,<portC_IO>,<analog_config><CR>                C:\opensprints\FW\user\user.c
                                           // EXAMPLE: "C,255,0,4,0<CR>"                                                    C:\opensprints\FW\user\user.c
                                           // <portX_IO> is the byte sent to the Data Direction (DDR) regsiter for          C:\opensprints\FW\user\user.c
                                           // each port. A 1 in a bit location means input, a 0 means output.               C:\opensprints\FW\user\user.c
                                           // <analog_config> is a value between 0 and 12. It tells the UBW                 C:\opensprints\FW\user\user.c
                                           // how many analog inputs to enable. If a zero is sent for this                  C:\opensprints\FW\user\user.c
                                           // parameter, all analog inputs are disabled.                                    C:\opensprints\FW\user\user.c
                                           // For the other values, see the following chart to know what pins are           C:\opensprints\FW\user\user.c
                                           // used for what:                                                                C:\opensprints\FW\user\user.c
                                           //                                                                               C:\opensprints\FW\user\user.c
                                           // Note that in the following chart, PortE is references. This port              C:\opensprints\FW\user\user.c
                                           // only exists on the 40 and 44 pin versions of the UBW. For the                 C:\opensprints\FW\user\user.c
                                           // 28 pin versions of the UBW, all PortE based analog pins will return           C:\opensprints\FW\user\user.c
                                           // zero.                                                                         C:\opensprints\FW\user\user.c
                                           //                                                                               C:\opensprints\FW\user\user.c
                                           // <analog_config>	Analog Inputs Enabled	Pins Used For Analog Inputs             C:\opensprints\FW\user\user.c
                                           // ---------------	---------------------	-------------------------------         C:\opensprints\FW\user\user.c
                                           //	0				<none>					<none>                                                        C:\opensprints\FW\user\user.c
                                           //	1				AN0						A0                                                              C:\opensprints\FW\user\user.c
                                           //	2				AN0,AN1					A0,A1	                                                       C:\opensprints\FW\user\user.c
                                           //	3				AN0,AN1,AN2				A0,A1,A2	                                                 C:\opensprints\FW\user\user.c
                                           //	4				AN0,AN1,AN2,AN3			A0,A1,A2,A3	                                           C:\opensprints\FW\user\user.c
                                           //	5				AN0,AN1,AN2,AN3,AN4		A0,A1,A2,A3,A5		                                    C:\opensprints\FW\user\user.c
                                           //	6				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0                                   C:\opensprints\FW\user\user.c
                                           //						AN5						                                                                C:\opensprints\FW\user\user.c
                                           //	7				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0,E1                                C:\opensprints\FW\user\user.c
                                           //						AN5,AN6						                                                            C:\opensprints\FW\user\user.c
                                           //	8				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0,E1,E2                             C:\opensprints\FW\user\user.c
                                           //						AN5,AN6,AN7						                                                        C:\opensprints\FW\user\user.c
                                           //	9				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0,E1,E2,B2                          C:\opensprints\FW\user\user.c
                                           //						AN5,AN6,AN7,AN8						                                                    C:\opensprints\FW\user\user.c
                                           //	10				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0,E1,E2,B2,B3                      C:\opensprints\FW\user\user.c
                                           //						AN5,AN6,AN7,AN8,                                                         C:\opensprints\FW\user\user.c
                                           //						AN9						                                                                C:\opensprints\FW\user\user.c
                                           //	11				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0,E1,E2,B2,B3,B1                   C:\opensprints\FW\user\user.c
                                           //						AN5,AN6,AN7,AN8,                                                         C:\opensprints\FW\user\user.c
                                           //						AB9,AN10						                                                           C:\opensprints\FW\user\user.c
                                           //	12				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0,E1,E2,B2,B3,B1,B4                C:\opensprints\FW\user\user.c
                                           //						AN5,AN6,AN7,AN8,                                                         C:\opensprints\FW\user\user.c
                                           //						AN9,AN10,AN11                                                            C:\opensprints\FW\user\user.c
                                           // NOTE: it is up to the user to tell the proper port direction bits to be       C:\opensprints\FW\user\user.c
                                           // inputs for the analog channels they wish to use.                              C:\opensprints\FW\user\user.c
001550   cfd9     MOVFF     0xfd9,0xfe6    void parse_C_packet(void)                                                        C:\opensprints\FW\user\user.c
001552   ffe6                                                                                                               
001554   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001556   ffd9                                                                                                               
001558   0e04     MOVLW     0x4                                                                                             
00155a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned char PA, PB, PC, AA;                                                   C:\opensprints\FW\user\user.c
                                           #ifdef __18F4550                                                                 C:\opensprints\FW\user\user.c
                                           	unsigned char PD, PE;                                                           C:\opensprints\FW\user\user.c
                                           #endif                                                                           C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Extract each of the four values.                                             C:\opensprints\FW\user\user.c
00155c   0e01     MOVLW     0x1            	PA = extract_number (kUCHAR);                                                   C:\opensprints\FW\user\user.c
00155e   6ee6     MOVWF     0xe6,0x0                                                                                        
001560   ec0f     CALL      0x221e,0x0                                                                                      
001562   f011                                                                                                               
001564   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001566   501d     MOVF      0x1d,0x0,0x0                                                                                    
001568   6edf     MOVWF     0xdf,0x0                                                                                        
00156a   0e01     MOVLW     0x1            	PB = extract_number (kUCHAR);                                                   C:\opensprints\FW\user\user.c
00156c   6ee6     MOVWF     0xe6,0x0                                                                                        
00156e   ec0f     CALL      0x221e,0x0                                                                                      
001570   f011                                                                                                               
001572   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001574   0e01     MOVLW     0x1                                                                                             
001576   c01d     MOVFF     0x1d,0xfdb                                                                                      
001578   ffdb                                                                                                               
00157a   0e01     MOVLW     0x1            	PC = extract_number (kUCHAR);                                                   C:\opensprints\FW\user\user.c
00157c   6ee6     MOVWF     0xe6,0x0                                                                                        
00157e   ec0f     CALL      0x221e,0x0                                                                                      
001580   f011                                                                                                               
001582   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001584   0e02     MOVLW     0x2                                                                                             
001586   c01d     MOVFF     0x1d,0xfdb                                                                                      
001588   ffdb                                                                                                               
                                           #ifdef __18F4550                                                                 C:\opensprints\FW\user\user.c
                                           	PD = extract_number (kUCHAR);                                                   C:\opensprints\FW\user\user.c
                                           	PE = extract_number (kUCHAR);                                                   C:\opensprints\FW\user\user.c
                                           #endif                                                                           C:\opensprints\FW\user\user.c
00158a   0e01     MOVLW     0x1            	AA = extract_number (kUCHAR);                                                   C:\opensprints\FW\user\user.c
00158c   6ee6     MOVWF     0xe6,0x0                                                                                        
00158e   ec0f     CALL      0x221e,0x0                                                                                      
001590   f011                                                                                                               
001592   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001594   0e03     MOVLW     0x3                                                                                             
001596   c01d     MOVFF     0x1d,0xfdb                                                                                      
001598   ffdb                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Bail if we got a conversion error                                            C:\opensprints\FW\user\user.c
00159a   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\opensprints\FW\user\user.c
00159c   e001     BZ        0x15a0                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
00159e   d02b     BRA       0x15f6         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Now write those values to the data direction registers.                      C:\opensprints\FW\user\user.c
0015a0   50df     MOVF      0xdf,0x0,0x0   	TRISA = PA;                                                                     C:\opensprints\FW\user\user.c
0015a2   6e92     MOVWF     0x92,0x0                                                                                        
0015a4   0e01     MOVLW     0x1            	TRISB = PB;                                                                     C:\opensprints\FW\user\user.c
0015a6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0015a8   6e93     MOVWF     0x93,0x0                                                                                        
0015aa   0e02     MOVLW     0x2            	TRISC = PC;                                                                     C:\opensprints\FW\user\user.c
0015ac   50db     MOVF      0xdb,0x0,0x0                                                                                    
0015ae   6e94     MOVWF     0x94,0x0                                                                                        
                                           #ifdef __18F4550                                                                 C:\opensprints\FW\user\user.c
                                           	TRISD = PD;                                                                     C:\opensprints\FW\user\user.c
                                           	TRISE = PE;                                                                     C:\opensprints\FW\user\user.c
                                           #endif                                                                           C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           	// Handle the analog value.                                                     C:\opensprints\FW\user\user.c
                                           	// Maximum value of 12.                                                         C:\opensprints\FW\user\user.c
0015b0   0e03     MOVLW     0x3            	if (AA > 12)                                                                    C:\opensprints\FW\user\user.c
0015b2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0015b4   080c     SUBLW     0xc                                                                                             
0015b6   e205     BC        0x15c2                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0015b8   0e0c     MOVLW     0xc            		AA = 12;                                                                       C:\opensprints\FW\user\user.c
0015ba   6ef3     MOVWF     0xf3,0x0                                                                                        
0015bc   0e03     MOVLW     0x3                                                                                             
0015be   cff3     MOVFF     0xff3,0xfdb                                                                                     
0015c0   ffdb                                                                                                               
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           	// If we are turning off Analog inputs                                          C:\opensprints\FW\user\user.c
0015c2   0e03     MOVLW     0x3            	if (0 == AA)                                                                    C:\opensprints\FW\user\user.c
0015c4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0015c6   e105     BNZ       0x15d2                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// Turn all analog inputs into digital inputs                                  C:\opensprints\FW\user\user.c
0015c8   0e0f     MOVLW     0xf            		ADCON1 = 0x0F;                                                                 C:\opensprints\FW\user\user.c
0015ca   6ec1     MOVWF     0xc1,0x0                                                                                        
                                           		// Turn off the ADC                                                            C:\opensprints\FW\user\user.c
0015cc   90c2     BCF       0xc2,0x0,0x0   		ADCON0bits.ADON = 0;                                                           C:\opensprints\FW\user\user.c
                                           		// Turn off our own idea of how many analog channels to convert                C:\opensprints\FW\user\user.c
0015ce   6a0c     CLRF      0xc,0x0        		AnalogEnable = 0;                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
0015d0   d011     BRA       0x15f4         	else                                                                            C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// Some protection from ISR                                                    C:\opensprints\FW\user\user.c
0015d2   6a0c     CLRF      0xc,0x0        		AnalogEnable = 0;                                                              C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           		// We're turning some on.                                                      C:\opensprints\FW\user\user.c
                                           		// Start by selecting channel zero		                                           C:\opensprints\FW\user\user.c
0015d4   6ac2     CLRF      0xc2,0x0       		ADCON0 = 0;                                                                    C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           		// Then enabling the proper number of channels                                 C:\opensprints\FW\user\user.c
0015d6   0e03     MOVLW     0x3            		ADCON1 = 15 - AA;                                                              C:\opensprints\FW\user\user.c
0015d8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0015da   ffe6                                                                                                               
0015dc   0e0f     MOVLW     0xf                                                                                             
0015de   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0015e0   80d8     BSF       0xd8,0x0,0x0                                                                                    
0015e2   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
0015e4   6ec1     MOVWF     0xc1,0x0                                                                                        
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           		// Set up ADCON2 options                                                       C:\opensprints\FW\user\user.c
                                           		// A/D Result right justified                                                  C:\opensprints\FW\user\user.c
                                           		// Acq time = 20 Tad (?)                                                       C:\opensprints\FW\user\user.c
                                           		// Tad = Fosc/64                                                               C:\opensprints\FW\user\user.c
0015e6   0ebe     MOVLW     0xbe           		ADCON2 = 0b10111110;                                                           C:\opensprints\FW\user\user.c
0015e8   6ec0     MOVWF     0xc0,0x0                                                                                        
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           		// Turn on the ADC                                                             C:\opensprints\FW\user\user.c
0015ea   80c2     BSF       0xc2,0x0,0x0   		ADCON0bits.ADON = 1;                                                           C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           		// Tell ourselves how many channels to convert, and turn on ISR conversions    C:\opensprints\FW\user\user.c
0015ec   0e03     MOVLW     0x3            		AnalogEnable = AA;                                                             C:\opensprints\FW\user\user.c
0015ee   50db     MOVF      0xdb,0x0,0x0                                                                                    
0015f0   6e0c     MOVWF     0xc,0x0                                                                                         
                                           	                                                                                C:\opensprints\FW\user\user.c
0015f2   84ca     BSF       0xca,0x2,0x0   		T2CONbits.TMR2ON = 1;                                                          C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
0015f4   df14     RCALL     0x141e         	print_ack ();                                                                   C:\opensprints\FW\user\user.c
0015f6   0e04     MOVLW     0x4            }                                                                                C:\opensprints\FW\user\user.c
0015f8   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0015fa   e202     BC        0x1600                                                                                          
0015fc   6ae1     CLRF      0xe1,0x0                                                                                        
0015fe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001600   6ee1     MOVWF     0xe1,0x0                                                                                        
001602   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001604   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001606   ffd9                                                                                                               
001608   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Outputs values to the ports pins that are set up as outputs.                  C:\opensprints\FW\user\user.c
                                           // Example "O,121,224,002<CR>"                                                   C:\opensprints\FW\user\user.c
00160a   cfd9     MOVFF     0xfd9,0xfe6    void parse_O_packet(void)                                                        C:\opensprints\FW\user\user.c
00160c   ffe6                                                                                                               
00160e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001610   ffd9                                                                                                               
001612   0e03     MOVLW     0x3                                                                                             
001614   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned char PA, PB, PC;                                                       C:\opensprints\FW\user\user.c
                                           #ifdef __18F4550                                                                 C:\opensprints\FW\user\user.c
                                           	unsigned char PD, PE;                                                           C:\opensprints\FW\user\user.c
                                           #endif                                                                           C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Extract each of the values.                                                  C:\opensprints\FW\user\user.c
001616   0e01     MOVLW     0x1            	PA = extract_number (kUCHAR);                                                   C:\opensprints\FW\user\user.c
001618   6ee6     MOVWF     0xe6,0x0                                                                                        
00161a   ec0f     CALL      0x221e,0x0                                                                                      
00161c   f011                                                                                                               
00161e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001620   501d     MOVF      0x1d,0x0,0x0                                                                                    
001622   6edf     MOVWF     0xdf,0x0                                                                                        
001624   0e01     MOVLW     0x1            	PB = extract_number (kUCHAR);                                                   C:\opensprints\FW\user\user.c
001626   6ee6     MOVWF     0xe6,0x0                                                                                        
001628   ec0f     CALL      0x221e,0x0                                                                                      
00162a   f011                                                                                                               
00162c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00162e   0e01     MOVLW     0x1                                                                                             
001630   c01d     MOVFF     0x1d,0xfdb                                                                                      
001632   ffdb                                                                                                               
001634   0e01     MOVLW     0x1            	PC = extract_number (kUCHAR);                                                   C:\opensprints\FW\user\user.c
001636   6ee6     MOVWF     0xe6,0x0                                                                                        
001638   ec0f     CALL      0x221e,0x0                                                                                      
00163a   f011                                                                                                               
00163c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00163e   0e02     MOVLW     0x2                                                                                             
001640   c01d     MOVFF     0x1d,0xfdb                                                                                      
001642   ffdb                                                                                                               
                                           #ifdef __18F4550                                                                 C:\opensprints\FW\user\user.c
                                           	PD = extract_number (kUCHAR);                                                   C:\opensprints\FW\user\user.c
                                           	PE = extract_number (kUCHAR);                                                   C:\opensprints\FW\user\user.c
                                           #endif                                                                           C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Bail if we got a conversion error                                            C:\opensprints\FW\user\user.c
001644   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\opensprints\FW\user\user.c
001646   e001     BZ        0x164a                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001648   d009     BRA       0x165c         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	// Now write those values to the data port registers.                           C:\opensprints\FW\user\user.c
00164a   50df     MOVF      0xdf,0x0,0x0   	LATA = PA;                                                                      C:\opensprints\FW\user\user.c
00164c   6e89     MOVWF     0x89,0x0                                                                                        
00164e   0e01     MOVLW     0x1            	LATB = PB;                                                                      C:\opensprints\FW\user\user.c
001650   50db     MOVF      0xdb,0x0,0x0                                                                                    
001652   6e8a     MOVWF     0x8a,0x0                                                                                        
001654   0e02     MOVLW     0x2            	LATC = PC;                                                                      C:\opensprints\FW\user\user.c
001656   50db     MOVF      0xdb,0x0,0x0                                                                                    
001658   6e8b     MOVWF     0x8b,0x0                                                                                        
                                           #ifdef __18F4550                                                                 C:\opensprints\FW\user\user.c
                                           	LATD = PD;                                                                      C:\opensprints\FW\user\user.c
                                           	LATE = PE;                                                                      C:\opensprints\FW\user\user.c
                                           #endif                                                                           C:\opensprints\FW\user\user.c
                                           		                                                                               C:\opensprints\FW\user\user.c
00165a   dee1     RCALL     0x141e         	print_ack ();                                                                   C:\opensprints\FW\user\user.c
00165c   0e03     MOVLW     0x3            }                                                                                C:\opensprints\FW\user\user.c
00165e   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001660   e202     BC        0x1666                                                                                          
001662   6ae1     CLRF      0xe1,0x0                                                                                        
001664   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001666   6ee1     MOVWF     0xe1,0x0                                                                                        
001668   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00166a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00166c   ffd9                                                                                                               
00166e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Read in the three I/O ports (A,B,C) and create                                C:\opensprints\FW\user\user.c
                                           // a packet to send back with all of values.                                     C:\opensprints\FW\user\user.c
                                           // Example: "I,143,221,010<CR>"                                                  C:\opensprints\FW\user\user.c
                                           // Remember that on UBW 28 pin boards, we only have                              C:\opensprints\FW\user\user.c
                                           // Port A bits 0 through 5                                                       C:\opensprints\FW\user\user.c
                                           // Port B bits 0 through 7                                                       C:\opensprints\FW\user\user.c
                                           // Port C bits 0,1,2 and 7,8                                                     C:\opensprints\FW\user\user.c
                                           // And that Port C bits 0,1,2 are used for                                       C:\opensprints\FW\user\user.c
                                           // 		User1 LED, User2 LED and Program switch respectively.                       C:\opensprints\FW\user\user.c
                                           // The rest will be read in as zeros.                                            C:\opensprints\FW\user\user.c
                                           void parse_I_packet(void)                                                        C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           #ifdef __18F4550                                                                 C:\opensprints\FW\user\user.c
                                           	printf (                                                                        C:\opensprints\FW\user\user.c
                                           		(rom char*)"I,%03i,%03i,%03i,%03i,%03i\r\n",                                   C:\opensprints\FW\user\user.c
                                           		PORTA,                                                                         C:\opensprints\FW\user\user.c
                                           		PORTB,                                                                         C:\opensprints\FW\user\user.c
                                           		PORTC,                                                                         C:\opensprints\FW\user\user.c
                                           		PORTD,                                                                         C:\opensprints\FW\user\user.c
                                           		PORTE                                                                          C:\opensprints\FW\user\user.c
                                           	);                                                                              C:\opensprints\FW\user\user.c
                                           #else                                                                            C:\opensprints\FW\user\user.c
                                           	printf (                                                                        C:\opensprints\FW\user\user.c
001682   0e6c     MOVLW     0x6c           		(rom char*)"I,%03i,%03i,%03i\r\n",                                             C:\opensprints\FW\user\user.c
001684   6e2a     MOVWF     0x2a,0x0                                                                                        
001686   0e49     MOVLW     0x49                                                                                            
001688   6e2b     MOVWF     0x2b,0x0                                                                                        
00168a   6a2c     CLRF      0x2c,0x0                                                                                        
00168c   c02a     MOVFF     0x2a,0xfe6                                                                                      
00168e   ffe6                                                                                                               
001690   c02b     MOVFF     0x2b,0xfe6                                                                                      
001692   ffe6                                                                                                               
001694   c02c     MOVFF     0x2c,0xfe6                                                                                      
001696   ffe6                                                                                                               
00167c   5080     MOVF      0x80,0x0,0x0   		PORTA,                                                                         C:\opensprints\FW\user\user.c
00167e   6ee6     MOVWF     0xe6,0x0                                                                                        
001680   6ae6     CLRF      0xe6,0x0                                                                                        
001676   5081     MOVF      0x81,0x0,0x0   		PORTB,                                                                         C:\opensprints\FW\user\user.c
001678   6ee6     MOVWF     0xe6,0x0                                                                                        
00167a   6ae6     CLRF      0xe6,0x0                                                                                        
001670   5082     MOVF      0x82,0x0,0x0   		PORTC                                                                          C:\opensprints\FW\user\user.c
001672   6ee6     MOVWF     0xe6,0x0       	);                                                                              C:\opensprints\FW\user\user.c
001674   6ae6     CLRF      0xe6,0x0                                                                                        
001698   ec60     CALL      0x4cc0,0x0                                                                                      
00169a   f026                                                                                                               
00169c   6e2d     MOVWF     0x2d,0x0                                                                                        
00169e   0e09     MOVLW     0x9                                                                                             
0016a0   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0016a2   502d     MOVF      0x2d,0x0,0x0                                                                                    
                                           #endif                                                                           C:\opensprints\FW\user\user.c
0016a4   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // All we do here is just print out our version number                           C:\opensprints\FW\user\user.c
                                           void parse_V_packet(void)                                                        C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
0016a6   0e4e     MOVLW     0x4e           	printf ((rom char *)st_version);                                                C:\opensprints\FW\user\user.c
0016a8   6e2a     MOVWF     0x2a,0x0                                                                                        
0016aa   0e4f     MOVLW     0x4f                                                                                            
0016ac   6e2b     MOVWF     0x2b,0x0                                                                                        
0016ae   6a2c     CLRF      0x2c,0x0                                                                                        
0016b0   c02a     MOVFF     0x2a,0xfe6                                                                                      
0016b2   ffe6                                                                                                               
0016b4   c02b     MOVFF     0x2b,0xfe6                                                                                      
0016b6   ffe6                                                                                                               
0016b8   c02c     MOVFF     0x2c,0xfe6                                                                                      
0016ba   ffe6                                                                                                               
0016bc   ec60     CALL      0x4cc0,0x0                                                                                      
0016be   f026                                                                                                               
0016c0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016c2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016c4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016c6   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // A is for read Analog inputs                                                   C:\opensprints\FW\user\user.c
                                           // Just print out the last analog values for each of the                         C:\opensprints\FW\user\user.c
                                           // enabled channels. The number of value returned in the                         C:\opensprints\FW\user\user.c
                                           // A packet depend upon the number of analog inputs enabled.                     C:\opensprints\FW\user\user.c
                                           // The user can enabled any number of analog inputs between                      C:\opensprints\FW\user\user.c
                                           // 0 and 12. (none enabled, through all 12 analog inputs enabled).               C:\opensprints\FW\user\user.c
                                           // Returned packet will look like "A,0,0,0,0,0,0<CR>" if                         C:\opensprints\FW\user\user.c
                                           // six analog inputs are enabled but they are all                                C:\opensprints\FW\user\user.c
                                           // grounded. Note that each one is a 10 bit                                      C:\opensprints\FW\user\user.c
                                           // value, where 0 means the intput was at ground, and                            C:\opensprints\FW\user\user.c
                                           // 1024 means it was at +5 V. (Or whatever the USB +5                            C:\opensprints\FW\user\user.c
                                           // pin is at.)                                                                   C:\opensprints\FW\user\user.c
0016c8   cfd9     MOVFF     0xfd9,0xfe6    void parse_A_packet(void)                                                        C:\opensprints\FW\user\user.c
0016ca   ffe6                                                                                                               
0016cc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0016ce   ffd9                                                                                                               
0016d0   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
0016d2   6adf     CLRF      0xdf,0x0       	char channel = 0;                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Put the beginning of the packet in place                                     C:\opensprints\FW\user\user.c
0016d4   0e6a     MOVLW     0x6a           	printf ((rom char *)"A");                                                       C:\opensprints\FW\user\user.c
0016d6   6e2a     MOVWF     0x2a,0x0                                                                                        
0016d8   0e49     MOVLW     0x49                                                                                            
0016da   6e2b     MOVWF     0x2b,0x0                                                                                        
0016dc   6a2c     CLRF      0x2c,0x0                                                                                        
0016de   c02a     MOVFF     0x2a,0xfe6                                                                                      
0016e0   ffe6                                                                                                               
0016e2   c02b     MOVFF     0x2b,0xfe6                                                                                      
0016e4   ffe6                                                                                                               
0016e6   c02c     MOVFF     0x2c,0xfe6                                                                                      
0016e8   ffe6                                                                                                               
0016ea   ec60     CALL      0x4cc0,0x0                                                                                      
0016ec   f026                                                                                                               
0016ee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016f0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016f2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           	// Now add each analog value                                                    C:\opensprints\FW\user\user.c
0016f4   6adf     CLRF      0xdf,0x0       	for (channel = 0; channel < AnalogEnable; channel++)                            C:\opensprints\FW\user\user.c
0016f6   500c     MOVF      0xc,0x0,0x0                                                                                     
0016f8   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0016fa   e232     BC        0x1760                                                                                          
00175c   2adf     INCF      0xdf,0x1,0x0                                                                                    
00175e   d7cb     BRA       0x16f6                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		printf(                                                                        C:\opensprints\FW\user\user.c
                                           			(rom char *)",%04u"                                                           C:\opensprints\FW\user\user.c
0016fc   cfdf     MOVFF     0xfdf,0x2a     			,ISR_A_FIFO[channel][ISR_A_FIFO_out]                                          C:\opensprints\FW\user\user.c
0016fe   f02a                                                                                                               
001700   6a2b     CLRF      0x2b,0x0                                                                                        
001702   be2a     BTFSC     0x2a,0x7,0x0                                                                                    
001704   682b     SETF      0x2b,0x0                                                                                        
001706   0e06     MOVLW     0x6                                                                                             
001708   022b     MULWF     0x2b,0x0                                                                                        
00170a   cff3     MOVFF     0xff3,0x2b                                                                                      
00170c   f02b                                                                                                               
00170e   0e06     MOVLW     0x6                                                                                             
001710   022a     MULWF     0x2a,0x0                                                                                        
001712   cff3     MOVFF     0xff3,0x2a                                                                                      
001714   f02a                                                                                                               
001716   50f4     MOVF      0xf4,0x0,0x0                                                                                    
001718   262b     ADDWF     0x2b,0x1,0x0                                                                                    
00171a   0e00     MOVLW     0x0                                                                                             
00171c   262a     ADDWF     0x2a,0x1,0x0                                                                                    
00171e   0e01     MOVLW     0x1                                                                                             
001720   222b     ADDWFC    0x2b,0x1,0x0                                                                                    
001722   500a     MOVF      0xa,0x0,0x0                                                                                     
001724   0d02     MULLW     0x2                                                                                             
001726   502a     MOVF      0x2a,0x0,0x0                                                                                    
001728   24f3     ADDWF     0xf3,0x0,0x0                                                                                    
00172a   6ee9     MOVWF     0xe9,0x0                                                                                        
00172c   502b     MOVF      0x2b,0x0,0x0                                                                                    
00172e   20f4     ADDWFC    0xf4,0x0,0x0                                                                                    
001730   6eea     MOVWF     0xea,0x0                                                                                        
00173a   0e64     MOVLW     0x64                                                                                            
00173c   6e2c     MOVWF     0x2c,0x0                                                                                        
00173e   0e49     MOVLW     0x49                                                                                            
001740   6e2d     MOVWF     0x2d,0x0                                                                                        
001742   6a2e     CLRF      0x2e,0x0                                                                                        
001744   c02c     MOVFF     0x2c,0xfe6                                                                                      
001746   ffe6                                                                                                               
001748   c02d     MOVFF     0x2d,0xfe6                                                                                      
00174a   ffe6                                                                                                               
00174c   c02e     MOVFF     0x2e,0xfe6                                                                                      
00174e   ffe6                                                                                                               
001732   cfee     MOVFF     0xfee,0xfe6    		);                                                                             C:\opensprints\FW\user\user.c
001734   ffe6                                                                                                               
001736   cfef     MOVFF     0xfef,0xfe6                                                                                     
001738   ffe6                                                                                                               
001750   ec60     CALL      0x4cc0,0x0                                                                                      
001752   f026                                                                                                               
001754   6e2f     MOVWF     0x2f,0x0                                                                                        
001756   0e05     MOVLW     0x5                                                                                             
001758   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00175a   502f     MOVF      0x2f,0x0,0x0                                                                                    
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           	// Add \r\n and terminating zero.                                               C:\opensprints\FW\user\user.c
001760   0e4b     MOVLW     0x4b           	printf ((rom char *)st_LFCR);                                                   C:\opensprints\FW\user\user.c
001762   6e2a     MOVWF     0x2a,0x0                                                                                        
001764   0e4f     MOVLW     0x4f                                                                                            
001766   6e2b     MOVWF     0x2b,0x0                                                                                        
001768   6a2c     CLRF      0x2c,0x0                                                                                        
00176a   c02a     MOVFF     0x2a,0xfe6                                                                                      
00176c   ffe6                                                                                                               
00176e   c02b     MOVFF     0x2b,0xfe6                                                                                      
001770   ffe6                                                                                                               
001772   c02c     MOVFF     0x2c,0xfe6                                                                                      
001774   ffe6                                                                                                               
001776   ec60     CALL      0x4cc0,0x0                                                                                      
001778   f026                                                                                                               
00177a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00177c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00177e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001780   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\opensprints\FW\user\user.c
001782   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001784   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001786   ffd9                                                                                                               
001788   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // MW is for Memory Write                                                        C:\opensprints\FW\user\user.c
                                           // "MW,<location>,<value><CR>"                                                   C:\opensprints\FW\user\user.c
                                           // <location> is a decimal value between 0 and 4096 indicating the RAM address to write to  C:\opensprints\FW\user\user.c
                                           // <value> is a decimal value between 0 and 255 that is the value to write       C:\opensprints\FW\user\user.c
00178a   cfd9     MOVFF     0xfd9,0xfe6    void parse_MW_packet(void)                                                       C:\opensprints\FW\user\user.c
00178c   ffe6                                                                                                               
00178e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001790   ffd9                                                                                                               
001792   0e03     MOVLW     0x3                                                                                             
001794   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned int location;                                                          C:\opensprints\FW\user\user.c
                                           	unsigned char value;                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
001796   0e03     MOVLW     0x3            	location = extract_number (kUINT);                                              C:\opensprints\FW\user\user.c
001798   6ee6     MOVWF     0xe6,0x0                                                                                        
00179a   ec0f     CALL      0x221e,0x0                                                                                      
00179c   f011                                                                                                               
00179e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0017a0   c01d     MOVFF     0x1d,0xfde                                                                                      
0017a2   ffde                                                                                                               
0017a4   c01e     MOVFF     0x1e,0xfdd                                                                                      
0017a6   ffdd                                                                                                               
0017a8   0e01     MOVLW     0x1            	value = extract_number (kUCHAR);                                                C:\opensprints\FW\user\user.c
0017aa   6ee6     MOVWF     0xe6,0x0                                                                                        
0017ac   ec0f     CALL      0x221e,0x0                                                                                      
0017ae   f011                                                                                                               
0017b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0017b2   0e02     MOVLW     0x2                                                                                             
0017b4   c01d     MOVFF     0x1d,0xfdb                                                                                      
0017b6   ffdb                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Bail if we got a conversion error                                            C:\opensprints\FW\user\user.c
0017b8   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\opensprints\FW\user\user.c
0017ba   e001     BZ        0x17be                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0017bc   d011     BRA       0x17e0         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	// Limit check the address and write the byte in                                C:\opensprints\FW\user\user.c
0017be   cfde     MOVFF     0xfde,0x2a     	if (location < 4096)                                                            C:\opensprints\FW\user\user.c
0017c0   f02a                                                                                                               
0017c2   cfdd     MOVFF     0xfdd,0x2b                                                                                      
0017c4   f02b                                                                                                               
0017c6   0e00     MOVLW     0x0                                                                                             
0017c8   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
0017ca   0e10     MOVLW     0x10                                                                                            
0017cc   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
0017ce   e207     BC        0x17de                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0017d0   cfde     MOVFF     0xfde,0xfe9    		*((unsigned char *)location) = value;                                          C:\opensprints\FW\user\user.c
0017d2   ffe9                                                                                                               
0017d4   cfdd     MOVFF     0xfdd,0xfea                                                                                     
0017d6   ffea                                                                                                               
0017d8   0e02     MOVLW     0x2                                                                                             
0017da   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0017dc   ffef                                                                                                               
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
0017de   de1f     RCALL     0x141e         	print_ack ();                                                                   C:\opensprints\FW\user\user.c
0017e0   0e03     MOVLW     0x3            }                                                                                C:\opensprints\FW\user\user.c
0017e2   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0017e4   e202     BC        0x17ea                                                                                          
0017e6   6ae1     CLRF      0xe1,0x0                                                                                        
0017e8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0017ea   6ee1     MOVWF     0xe1,0x0                                                                                        
0017ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0017ee   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0017f0   ffd9                                                                                                               
0017f2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // MR is for Memory Read                                                         C:\opensprints\FW\user\user.c
                                           // "MW,<location><CR>"                                                           C:\opensprints\FW\user\user.c
                                           // <location> is a decimal value between 0 and 4096 indicating the RAM address to read from  C:\opensprints\FW\user\user.c
                                           // The UBW will then send a "MR,<value><CR>" packet back to the PC               C:\opensprints\FW\user\user.c
                                           // where <value> is the byte value read from the address                         C:\opensprints\FW\user\user.c
0017f4   cfd9     MOVFF     0xfd9,0xfe6    void parse_MR_packet(void)                                                       C:\opensprints\FW\user\user.c
0017f6   ffe6                                                                                                               
0017f8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0017fa   ffd9                                                                                                               
0017fc   0e03     MOVLW     0x3                                                                                             
0017fe   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned int location;                                                          C:\opensprints\FW\user\user.c
                                           	unsigned char value;                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
001800   0e03     MOVLW     0x3            	location = extract_number (kUINT);                                              C:\opensprints\FW\user\user.c
001802   6ee6     MOVWF     0xe6,0x0                                                                                        
001804   ec0f     CALL      0x221e,0x0                                                                                      
001806   f011                                                                                                               
001808   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00180a   c01d     MOVFF     0x1d,0xfde                                                                                      
00180c   ffde                                                                                                               
00180e   c01e     MOVFF     0x1e,0xfdd                                                                                      
001810   ffdd                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Bail if we got a conversion error                                            C:\opensprints\FW\user\user.c
001812   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\opensprints\FW\user\user.c
001814   e001     BZ        0x1818                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001816   d025     BRA       0x1862         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Limit check the address and write the byte in                                C:\opensprints\FW\user\user.c
001818   cfde     MOVFF     0xfde,0x2a     	if (location < 4096)                                                            C:\opensprints\FW\user\user.c
00181a   f02a                                                                                                               
00181c   cfdd     MOVFF     0xfdd,0x2b                                                                                      
00181e   f02b                                                                                                               
001820   0e00     MOVLW     0x0                                                                                             
001822   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001824   0e10     MOVLW     0x10                                                                                            
001826   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
001828   e207     BC        0x1838                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
00182a   cfde     MOVFF     0xfde,0xfe9    		value = *((unsigned char *)location);                                          C:\opensprints\FW\user\user.c
00182c   ffe9                                                                                                               
00182e   cfdd     MOVFF     0xfdd,0xfea                                                                                     
001830   ffea                                                                                                               
001832   0e02     MOVLW     0x2                                                                                             
001834   cfef     MOVFF     0xfef,0xfdb                                                                                     
001836   ffdb                                                                                                               
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           	// Now send back the MR packet                                                  C:\opensprints\FW\user\user.c
                                           	printf (                                                                        C:\opensprints\FW\user\user.c
                                           		(rom char *)"MR,%03u\r\n"                                                      C:\opensprints\FW\user\user.c
001840   0e5a     MOVLW     0x5a           		,value                                                                         C:\opensprints\FW\user\user.c
001842   6e2a     MOVWF     0x2a,0x0                                                                                        
001844   0e49     MOVLW     0x49                                                                                            
001846   6e2b     MOVWF     0x2b,0x0                                                                                        
001848   6a2c     CLRF      0x2c,0x0                                                                                        
00184a   c02a     MOVFF     0x2a,0xfe6                                                                                      
00184c   ffe6                                                                                                               
00184e   c02b     MOVFF     0x2b,0xfe6                                                                                      
001850   ffe6                                                                                                               
001852   c02c     MOVFF     0x2c,0xfe6                                                                                      
001854   ffe6                                                                                                               
001838   0e02     MOVLW     0x2            	);                                                                              C:\opensprints\FW\user\user.c
00183a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00183c   ffe6                                                                                                               
00183e   6ae6     CLRF      0xe6,0x0                                                                                        
001856   ec60     CALL      0x4cc0,0x0                                                                                      
001858   f026                                                                                                               
00185a   6e2d     MOVWF     0x2d,0x0                                                                                        
00185c   0e05     MOVLW     0x5                                                                                             
00185e   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001860   502d     MOVF      0x2d,0x0,0x0                                                                                    
001862   0e03     MOVLW     0x3            }                                                                                C:\opensprints\FW\user\user.c
001864   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001866   e202     BC        0x186c                                                                                          
001868   6ae1     CLRF      0xe1,0x0                                                                                        
00186a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00186c   6ee1     MOVWF     0xe1,0x0                                                                                        
00186e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001870   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001872   ffd9                                                                                                               
001874   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // PD is for Pin Direction                                                       C:\opensprints\FW\user\user.c
                                           // "PD,<port>,<pin>,<direction><CR>"                                             C:\opensprints\FW\user\user.c
                                           // <port> is "A", "B", "C" and indicates the port                                C:\opensprints\FW\user\user.c
                                           // <pin> is a number between 0 and 7 and indicates which pin to change direction on C:\opensprints\FW\user\user.c
                                           // <direction> is "1" for input, "0" for output                                  C:\opensprints\FW\user\user.c
001876   cfd9     MOVFF     0xfd9,0xfe6    void parse_PD_packet(void)                                                       C:\opensprints\FW\user\user.c
001878   ffe6                                                                                                               
00187a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00187c   ffd9                                                                                                               
00187e   0e03     MOVLW     0x3                                                                                             
001880   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned char port;                                                             C:\opensprints\FW\user\user.c
                                           	unsigned char pin;                                                              C:\opensprints\FW\user\user.c
                                           	unsigned char direction;                                                        C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
001882   0e05     MOVLW     0x5            	port = extract_number (kUCASE_ASCII_CHAR);                                      C:\opensprints\FW\user\user.c
001884   6ee6     MOVWF     0xe6,0x0                                                                                        
001886   ec0f     CALL      0x221e,0x0                                                                                      
001888   f011                                                                                                               
00188a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00188c   501d     MOVF      0x1d,0x0,0x0                                                                                    
00188e   6edf     MOVWF     0xdf,0x0                                                                                        
001890   0e01     MOVLW     0x1            	pin = extract_number (kUCHAR);                                                  C:\opensprints\FW\user\user.c
001892   6ee6     MOVWF     0xe6,0x0                                                                                        
001894   ec0f     CALL      0x221e,0x0                                                                                      
001896   f011                                                                                                               
001898   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00189a   0e01     MOVLW     0x1                                                                                             
00189c   c01d     MOVFF     0x1d,0xfdb                                                                                      
00189e   ffdb                                                                                                               
0018a0   0e01     MOVLW     0x1            	direction = extract_number (kUCHAR);                                            C:\opensprints\FW\user\user.c
0018a2   6ee6     MOVWF     0xe6,0x0                                                                                        
0018a4   ec0f     CALL      0x221e,0x0                                                                                      
0018a6   f011                                                                                                               
0018a8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0018aa   0e02     MOVLW     0x2                                                                                             
0018ac   c01d     MOVFF     0x1d,0xfdb                                                                                      
0018ae   ffdb                                                                                                               
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           	// Bail if we got a conversion error                                            C:\opensprints\FW\user\user.c
0018b0   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\opensprints\FW\user\user.c
0018b2   e001     BZ        0x18b6                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0018b4   d072     BRA       0x199a         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Limit check the parameters                                                   C:\opensprints\FW\user\user.c
0018b6   0e02     MOVLW     0x2            	if (direction > 1)                                                              C:\opensprints\FW\user\user.c
0018b8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018ba   0801     SUBLW     0x1                                                                                             
0018bc   e202     BC        0x18c2                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0018be   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
0018c0   d06c     BRA       0x199a         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
0018c2   0e01     MOVLW     0x1            	if (pin > 7)                                                                    C:\opensprints\FW\user\user.c
0018c4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018c6   0807     SUBLW     0x7                                                                                             
0018c8   e202     BC        0x18ce                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0018ca   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
0018cc   d066     BRA       0x199a         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
0018ce   0e41     MOVLW     0x41           	if ('A' == port)                                                                C:\opensprints\FW\user\user.c
0018d0   6e2a     MOVWF     0x2a,0x0                                                                                        
0018d2   50df     MOVF      0xdf,0x0,0x0                                                                                    
0018d4   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
0018d6   e11c     BNZ       0x1910                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0018d8   0e02     MOVLW     0x2            		if (0 == direction)                                                            C:\opensprints\FW\user\user.c
0018da   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018dc   e10d     BNZ       0x18f8                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
0018de   0e01     MOVLW     0x1            			bitclr (DDRA, pin);  	                                                        C:\opensprints\FW\user\user.c
0018e0   6ef3     MOVWF     0xf3,0x0                                                                                        
0018e2   0e01     MOVLW     0x1                                                                                             
0018e4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018e6   e004     BZ        0x18f0                                                                                          
0018e8   90d8     BCF       0xd8,0x0,0x0                                                                                    
0018ea   36f3     RLCF      0xf3,0x1,0x0                                                                                    
0018ec   06e8     DECF      0xe8,0x1,0x0                                                                                    
0018ee   e1fc     BNZ       0x18e8                                                                                          
0018f0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0018f2   1ce8     COMF      0xe8,0x0,0x0                                                                                    
0018f4   1692     ANDWF     0x92,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
0018f6   d00b     BRA       0x190e         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
0018f8   0e01     MOVLW     0x1            			bitset (DDRA, pin);  	                                                        C:\opensprints\FW\user\user.c
0018fa   6ef3     MOVWF     0xf3,0x0                                                                                        
0018fc   0e01     MOVLW     0x1                                                                                             
0018fe   50db     MOVF      0xdb,0x0,0x0                                                                                    
001900   e004     BZ        0x190a                                                                                          
001902   90d8     BCF       0xd8,0x0,0x0                                                                                    
001904   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001906   06e8     DECF      0xe8,0x1,0x0                                                                                    
001908   e1fc     BNZ       0x1902                                                                                          
00190a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00190c   1292     IORWF     0x92,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
00190e   d044     BRA       0x1998         	else if ('B' == port)                                                           C:\opensprints\FW\user\user.c
001910   0e42     MOVLW     0x42                                                                                            
001912   6e2a     MOVWF     0x2a,0x0                                                                                        
001914   50df     MOVF      0xdf,0x0,0x0                                                                                    
001916   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001918   e11c     BNZ       0x1952                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
00191a   0e02     MOVLW     0x2            		if (0 == direction)                                                            C:\opensprints\FW\user\user.c
00191c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00191e   e10d     BNZ       0x193a                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
001920   0e01     MOVLW     0x1            			bitclr (DDRB, pin);  	                                                        C:\opensprints\FW\user\user.c
001922   6ef3     MOVWF     0xf3,0x0                                                                                        
001924   0e01     MOVLW     0x1                                                                                             
001926   50db     MOVF      0xdb,0x0,0x0                                                                                    
001928   e004     BZ        0x1932                                                                                          
00192a   90d8     BCF       0xd8,0x0,0x0                                                                                    
00192c   36f3     RLCF      0xf3,0x1,0x0                                                                                    
00192e   06e8     DECF      0xe8,0x1,0x0                                                                                    
001930   e1fc     BNZ       0x192a                                                                                          
001932   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001934   1ce8     COMF      0xe8,0x0,0x0                                                                                    
001936   1693     ANDWF     0x93,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
001938   d00b     BRA       0x1950         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
00193a   0e01     MOVLW     0x1            			bitset (DDRB, pin);  	                                                        C:\opensprints\FW\user\user.c
00193c   6ef3     MOVWF     0xf3,0x0                                                                                        
00193e   0e01     MOVLW     0x1                                                                                             
001940   50db     MOVF      0xdb,0x0,0x0                                                                                    
001942   e004     BZ        0x194c                                                                                          
001944   90d8     BCF       0xd8,0x0,0x0                                                                                    
001946   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001948   06e8     DECF      0xe8,0x1,0x0                                                                                    
00194a   e1fc     BNZ       0x1944                                                                                          
00194c   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00194e   1293     IORWF     0x93,0x1,0x0                                                                                    
                                           		}		                                                                            C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
001950   d023     BRA       0x1998         	else if ('C' == port)                                                           C:\opensprints\FW\user\user.c
001952   0e43     MOVLW     0x43                                                                                            
001954   6e2a     MOVWF     0x2a,0x0                                                                                        
001956   50df     MOVF      0xdf,0x0,0x0                                                                                    
001958   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
00195a   e11c     BNZ       0x1994                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
00195c   0e02     MOVLW     0x2            		if (0 == direction)                                                            C:\opensprints\FW\user\user.c
00195e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001960   e10d     BNZ       0x197c                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
001962   0e01     MOVLW     0x1            			bitclr (DDRC, pin);  	                                                        C:\opensprints\FW\user\user.c
001964   6ef3     MOVWF     0xf3,0x0                                                                                        
001966   0e01     MOVLW     0x1                                                                                             
001968   50db     MOVF      0xdb,0x0,0x0                                                                                    
00196a   e004     BZ        0x1974                                                                                          
00196c   90d8     BCF       0xd8,0x0,0x0                                                                                    
00196e   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001970   06e8     DECF      0xe8,0x1,0x0                                                                                    
001972   e1fc     BNZ       0x196c                                                                                          
001974   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001976   1ce8     COMF      0xe8,0x0,0x0                                                                                    
001978   1694     ANDWF     0x94,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
00197a   d00b     BRA       0x1992         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
00197c   0e01     MOVLW     0x1            			bitset (DDRC, pin);  	                                                        C:\opensprints\FW\user\user.c
00197e   6ef3     MOVWF     0xf3,0x0                                                                                        
001980   0e01     MOVLW     0x1                                                                                             
001982   50db     MOVF      0xdb,0x0,0x0                                                                                    
001984   e004     BZ        0x198e                                                                                          
001986   90d8     BCF       0xd8,0x0,0x0                                                                                    
001988   36f3     RLCF      0xf3,0x1,0x0                                                                                    
00198a   06e8     DECF      0xe8,0x1,0x0                                                                                    
00198c   e1fc     BNZ       0x1986                                                                                          
00198e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001990   1294     IORWF     0x94,0x1,0x0                                                                                    
                                           		}		                                                                            C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           #ifdef __18F4550                                                                 C:\opensprints\FW\user\user.c
                                           	else if ('D' == port)                                                           C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		if (0 == direction)                                                            C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			bitclr (DDRD, pin);  	                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			bitset (DDRD, pin);  	                                                        C:\opensprints\FW\user\user.c
                                           		}		                                                                            C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	else if ('E' == port)                                                           C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		if (0 == direction)                                                            C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			bitclr (DDRE, pin);  	                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			bitset (DDRE, pin);  	                                                        C:\opensprints\FW\user\user.c
                                           		}		                                                                            C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           #endif                                                                           C:\opensprints\FW\user\user.c
001992   d002     BRA       0x1998         	else                                                                            C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
001994   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
001996   d001     BRA       0x199a         		return;	                                                                       C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
001998   dd42     RCALL     0x141e         	print_ack ();                                                                   C:\opensprints\FW\user\user.c
00199a   0e03     MOVLW     0x3            }                                                                                C:\opensprints\FW\user\user.c
00199c   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00199e   e202     BC        0x19a4                                                                                          
0019a0   6ae1     CLRF      0xe1,0x0                                                                                        
0019a2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0019a4   6ee1     MOVWF     0xe1,0x0                                                                                        
0019a6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0019a8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0019aa   ffd9                                                                                                               
0019ac   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // PI is for Pin Input                                                           C:\opensprints\FW\user\user.c
                                           // "PI,<port>,<pin><CR>"                                                         C:\opensprints\FW\user\user.c
                                           // <port> is "A", "B", "C" and indicates the port                                C:\opensprints\FW\user\user.c
                                           // <pin> is a number between 0 and 7 and indicates which pin to read             C:\opensprints\FW\user\user.c
                                           // The command returns a "PI,<value><CR>" packet,                                C:\opensprints\FW\user\user.c
                                           // where <value> is the value (0 or 1 for digital, 0 to 1024 for Analog)         C:\opensprints\FW\user\user.c
                                           // value for that pin.                                                           C:\opensprints\FW\user\user.c
0019ae   cfd9     MOVFF     0xfd9,0xfe6    void parse_PI_packet(void)                                                       C:\opensprints\FW\user\user.c
0019b0   ffe6                                                                                                               
0019b2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0019b4   ffd9                                                                                                               
0019b6   0e03     MOVLW     0x3                                                                                             
0019b8   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned char port;                                                             C:\opensprints\FW\user\user.c
                                           	unsigned char pin;                                                              C:\opensprints\FW\user\user.c
0019ba   0e02     MOVLW     0x2            	unsigned char value = 0;                                                        C:\opensprints\FW\user\user.c
0019bc   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
0019be   0e05     MOVLW     0x5            	port = extract_number (kUCASE_ASCII_CHAR);                                      C:\opensprints\FW\user\user.c
0019c0   6ee6     MOVWF     0xe6,0x0                                                                                        
0019c2   ec0f     CALL      0x221e,0x0                                                                                      
0019c4   f011                                                                                                               
0019c6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0019c8   501d     MOVF      0x1d,0x0,0x0                                                                                    
0019ca   6edf     MOVWF     0xdf,0x0                                                                                        
0019cc   0e01     MOVLW     0x1            	pin = extract_number (kUCHAR);                                                  C:\opensprints\FW\user\user.c
0019ce   6ee6     MOVWF     0xe6,0x0                                                                                        
0019d0   ec0f     CALL      0x221e,0x0                                                                                      
0019d2   f011                                                                                                               
0019d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0019d6   0e01     MOVLW     0x1                                                                                             
0019d8   c01d     MOVFF     0x1d,0xfdb                                                                                      
0019da   ffdb                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Bail if we got a conversion error                                            C:\opensprints\FW\user\user.c
0019dc   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\opensprints\FW\user\user.c
0019de   e001     BZ        0x19e2                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0019e0   d05c     BRA       0x1a9a         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Limit check the parameters                                                   C:\opensprints\FW\user\user.c
0019e2   0e01     MOVLW     0x1            	if (pin > 7)                                                                    C:\opensprints\FW\user\user.c
0019e4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0019e6   0807     SUBLW     0x7                                                                                             
0019e8   e202     BC        0x19ee                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0019ea   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
0019ec   d056     BRA       0x1a9a         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           	// Then test the bit in question based upon port                                C:\opensprints\FW\user\user.c
0019ee   0e41     MOVLW     0x41           	if ('A' == port)                                                                C:\opensprints\FW\user\user.c
0019f0   6e2a     MOVWF     0x2a,0x0                                                                                        
0019f2   50df     MOVF      0xdf,0x0,0x0                                                                                    
0019f4   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
0019f6   e110     BNZ       0x1a18                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0019f8   0e01     MOVLW     0x1            		value = bittst (PORTA, pin);  	                                                C:\opensprints\FW\user\user.c
0019fa   6ef3     MOVWF     0xf3,0x0                                                                                        
0019fc   0e01     MOVLW     0x1                                                                                             
0019fe   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a00   e004     BZ        0x1a0a                                                                                          
001a02   90d8     BCF       0xd8,0x0,0x0                                                                                    
001a04   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001a06   06e8     DECF      0xe8,0x1,0x0                                                                                    
001a08   e1fc     BNZ       0x1a02                                                                                          
001a0a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001a0c   1480     ANDWF     0x80,0x0,0x0                                                                                    
001a0e   6ee7     MOVWF     0xe7,0x0                                                                                        
001a10   0e02     MOVLW     0x2                                                                                             
001a12   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001a14   ffdb                                                                                                               
                                           	}                                                                               C:\opensprints\FW\user\user.c
001a16   d02c     BRA       0x1a70         	else if ('B' == port)                                                           C:\opensprints\FW\user\user.c
001a18   0e42     MOVLW     0x42                                                                                            
001a1a   6e2a     MOVWF     0x2a,0x0                                                                                        
001a1c   50df     MOVF      0xdf,0x0,0x0                                                                                    
001a1e   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001a20   e110     BNZ       0x1a42                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001a22   0e01     MOVLW     0x1            		value = bittst (PORTB, pin);  	                                                C:\opensprints\FW\user\user.c
001a24   6ef3     MOVWF     0xf3,0x0                                                                                        
001a26   0e01     MOVLW     0x1                                                                                             
001a28   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a2a   e004     BZ        0x1a34                                                                                          
001a2c   90d8     BCF       0xd8,0x0,0x0                                                                                    
001a2e   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001a30   06e8     DECF      0xe8,0x1,0x0                                                                                    
001a32   e1fc     BNZ       0x1a2c                                                                                          
001a34   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001a36   1481     ANDWF     0x81,0x0,0x0                                                                                    
001a38   6ee7     MOVWF     0xe7,0x0                                                                                        
001a3a   0e02     MOVLW     0x2                                                                                             
001a3c   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001a3e   ffdb                                                                                                               
                                           	}                                                                               C:\opensprints\FW\user\user.c
001a40   d017     BRA       0x1a70         	else if ('C' == port)                                                           C:\opensprints\FW\user\user.c
001a42   0e43     MOVLW     0x43                                                                                            
001a44   6e2a     MOVWF     0x2a,0x0                                                                                        
001a46   50df     MOVF      0xdf,0x0,0x0                                                                                    
001a48   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001a4a   e110     BNZ       0x1a6c                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001a4c   0e01     MOVLW     0x1            		value = bittst (PORTC, pin);  	                                                C:\opensprints\FW\user\user.c
001a4e   6ef3     MOVWF     0xf3,0x0                                                                                        
001a50   0e01     MOVLW     0x1                                                                                             
001a52   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a54   e004     BZ        0x1a5e                                                                                          
001a56   90d8     BCF       0xd8,0x0,0x0                                                                                    
001a58   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001a5a   06e8     DECF      0xe8,0x1,0x0                                                                                    
001a5c   e1fc     BNZ       0x1a56                                                                                          
001a5e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001a60   1482     ANDWF     0x82,0x0,0x0                                                                                    
001a62   6ee7     MOVWF     0xe7,0x0                                                                                        
001a64   0e02     MOVLW     0x2                                                                                             
001a66   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001a68   ffdb                                                                                                               
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           #ifdef __18F4550                                                                 C:\opensprints\FW\user\user.c
                                           	else if ('D' == port)                                                           C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		value = bittst (PORTD, pin);  	                                                C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	else if ('E' == port)                                                           C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		value = bittst (PORTE, pin);  	                                                C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           #endif                                                                           C:\opensprints\FW\user\user.c
001a6a   d002     BRA       0x1a70         	else                                                                            C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
001a6c   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
001a6e   d015     BRA       0x1a9a         		return;	                                                                       C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           	// Now send back our response                                                   C:\opensprints\FW\user\user.c
                                           	printf(                                                                         C:\opensprints\FW\user\user.c
                                           		 (rom char *)"PI,%1u\r\n"                                                      C:\opensprints\FW\user\user.c
001a78   0e51     MOVLW     0x51           		,value                                                                         C:\opensprints\FW\user\user.c
001a7a   6e2a     MOVWF     0x2a,0x0                                                                                        
001a7c   0e49     MOVLW     0x49                                                                                            
001a7e   6e2b     MOVWF     0x2b,0x0                                                                                        
001a80   6a2c     CLRF      0x2c,0x0                                                                                        
001a82   c02a     MOVFF     0x2a,0xfe6                                                                                      
001a84   ffe6                                                                                                               
001a86   c02b     MOVFF     0x2b,0xfe6                                                                                      
001a88   ffe6                                                                                                               
001a8a   c02c     MOVFF     0x2c,0xfe6                                                                                      
001a8c   ffe6                                                                                                               
001a70   0e02     MOVLW     0x2            	);                                                                              C:\opensprints\FW\user\user.c
001a72   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001a74   ffe6                                                                                                               
001a76   6ae6     CLRF      0xe6,0x0                                                                                        
001a8e   ec60     CALL      0x4cc0,0x0                                                                                      
001a90   f026                                                                                                               
001a92   6e2d     MOVWF     0x2d,0x0                                                                                        
001a94   0e05     MOVLW     0x5                                                                                             
001a96   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001a98   502d     MOVF      0x2d,0x0,0x0                                                                                    
001a9a   0e03     MOVLW     0x3            }                                                                                C:\opensprints\FW\user\user.c
001a9c   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001a9e   e202     BC        0x1aa4                                                                                          
001aa0   6ae1     CLRF      0xe1,0x0                                                                                        
001aa2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001aa4   6ee1     MOVWF     0xe1,0x0                                                                                        
001aa6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001aa8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001aaa   ffd9                                                                                                               
001aac   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // PO is for Pin Output                                                          C:\opensprints\FW\user\user.c
                                           // "PO,<port>,<pin>,<value><CR>"                                                 C:\opensprints\FW\user\user.c
                                           // <port> is "A", "B", "C" and indicates the port                                C:\opensprints\FW\user\user.c
                                           // <pin> is a number between 0 and 7 and indicates which pin to write out the value to C:\opensprints\FW\user\user.c
                                           // <value> is "1" or "0" and indicates the state to change the pin to            C:\opensprints\FW\user\user.c
001aae   cfd9     MOVFF     0xfd9,0xfe6    void parse_PO_packet(void)                                                       C:\opensprints\FW\user\user.c
001ab0   ffe6                                                                                                               
001ab2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001ab4   ffd9                                                                                                               
001ab6   0e03     MOVLW     0x3                                                                                             
001ab8   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned char port;                                                             C:\opensprints\FW\user\user.c
                                           	unsigned char pin;                                                              C:\opensprints\FW\user\user.c
                                           	unsigned char value;                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
001aba   0e05     MOVLW     0x5            	port = extract_number (kUCASE_ASCII_CHAR);                                      C:\opensprints\FW\user\user.c
001abc   6ee6     MOVWF     0xe6,0x0                                                                                        
001abe   dbaf     RCALL     0x221e                                                                                          
001ac0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001ac2   501d     MOVF      0x1d,0x0,0x0                                                                                    
001ac4   6edf     MOVWF     0xdf,0x0                                                                                        
001ac6   0e01     MOVLW     0x1            	pin = extract_number (kUCHAR);                                                  C:\opensprints\FW\user\user.c
001ac8   6ee6     MOVWF     0xe6,0x0                                                                                        
001aca   dba9     RCALL     0x221e                                                                                          
001acc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001ace   0e01     MOVLW     0x1                                                                                             
001ad0   c01d     MOVFF     0x1d,0xfdb                                                                                      
001ad2   ffdb                                                                                                               
001ad4   0e01     MOVLW     0x1            	value = extract_number (kUCHAR);                                                C:\opensprints\FW\user\user.c
001ad6   6ee6     MOVWF     0xe6,0x0                                                                                        
001ad8   dba2     RCALL     0x221e                                                                                          
001ada   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001adc   0e02     MOVLW     0x2                                                                                             
001ade   c01d     MOVFF     0x1d,0xfdb                                                                                      
001ae0   ffdb                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Bail if we got a conversion error                                            C:\opensprints\FW\user\user.c
001ae2   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\opensprints\FW\user\user.c
001ae4   e001     BZ        0x1ae8                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001ae6   d072     BRA       0x1bcc         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Limit check the parameters                                                   C:\opensprints\FW\user\user.c
001ae8   0e02     MOVLW     0x2            	if (value > 1)                                                                  C:\opensprints\FW\user\user.c
001aea   50db     MOVF      0xdb,0x0,0x0                                                                                    
001aec   0801     SUBLW     0x1                                                                                             
001aee   e202     BC        0x1af4                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001af0   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
001af2   d06c     BRA       0x1bcc         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
001af4   0e01     MOVLW     0x1            	if (pin > 7)                                                                    C:\opensprints\FW\user\user.c
001af6   50db     MOVF      0xdb,0x0,0x0                                                                                    
001af8   0807     SUBLW     0x7                                                                                             
001afa   e202     BC        0x1b00                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001afc   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
001afe   d066     BRA       0x1bcc         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
001b00   0e41     MOVLW     0x41           	if ('A' == port)                                                                C:\opensprints\FW\user\user.c
001b02   6e2a     MOVWF     0x2a,0x0                                                                                        
001b04   50df     MOVF      0xdf,0x0,0x0                                                                                    
001b06   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001b08   e11c     BNZ       0x1b42                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001b0a   0e02     MOVLW     0x2            		if (0 == value)                                                                C:\opensprints\FW\user\user.c
001b0c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b0e   e10d     BNZ       0x1b2a                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
001b10   0e01     MOVLW     0x1            			bitclr (LATA, pin);  	                                                        C:\opensprints\FW\user\user.c
001b12   6ef3     MOVWF     0xf3,0x0                                                                                        
001b14   0e01     MOVLW     0x1                                                                                             
001b16   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b18   e004     BZ        0x1b22                                                                                          
001b1a   90d8     BCF       0xd8,0x0,0x0                                                                                    
001b1c   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001b1e   06e8     DECF      0xe8,0x1,0x0                                                                                    
001b20   e1fc     BNZ       0x1b1a                                                                                          
001b22   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001b24   1ce8     COMF      0xe8,0x0,0x0                                                                                    
001b26   1689     ANDWF     0x89,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
001b28   d00b     BRA       0x1b40         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
001b2a   0e01     MOVLW     0x1            			bitset (LATA, pin);  	                                                        C:\opensprints\FW\user\user.c
001b2c   6ef3     MOVWF     0xf3,0x0                                                                                        
001b2e   0e01     MOVLW     0x1                                                                                             
001b30   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b32   e004     BZ        0x1b3c                                                                                          
001b34   90d8     BCF       0xd8,0x0,0x0                                                                                    
001b36   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001b38   06e8     DECF      0xe8,0x1,0x0                                                                                    
001b3a   e1fc     BNZ       0x1b34                                                                                          
001b3c   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001b3e   1289     IORWF     0x89,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
001b40   d044     BRA       0x1bca         	else if ('B' == port)                                                           C:\opensprints\FW\user\user.c
001b42   0e42     MOVLW     0x42                                                                                            
001b44   6e2a     MOVWF     0x2a,0x0                                                                                        
001b46   50df     MOVF      0xdf,0x0,0x0                                                                                    
001b48   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001b4a   e11c     BNZ       0x1b84                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001b4c   0e02     MOVLW     0x2            		if (0 == value)                                                                C:\opensprints\FW\user\user.c
001b4e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b50   e10d     BNZ       0x1b6c                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
001b52   0e01     MOVLW     0x1            			bitclr (LATB, pin);  	                                                        C:\opensprints\FW\user\user.c
001b54   6ef3     MOVWF     0xf3,0x0                                                                                        
001b56   0e01     MOVLW     0x1                                                                                             
001b58   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b5a   e004     BZ        0x1b64                                                                                          
001b5c   90d8     BCF       0xd8,0x0,0x0                                                                                    
001b5e   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001b60   06e8     DECF      0xe8,0x1,0x0                                                                                    
001b62   e1fc     BNZ       0x1b5c                                                                                          
001b64   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001b66   1ce8     COMF      0xe8,0x0,0x0                                                                                    
001b68   168a     ANDWF     0x8a,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
001b6a   d00b     BRA       0x1b82         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
001b6c   0e01     MOVLW     0x1            			bitset (LATB, pin);  	                                                        C:\opensprints\FW\user\user.c
001b6e   6ef3     MOVWF     0xf3,0x0                                                                                        
001b70   0e01     MOVLW     0x1                                                                                             
001b72   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b74   e004     BZ        0x1b7e                                                                                          
001b76   90d8     BCF       0xd8,0x0,0x0                                                                                    
001b78   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001b7a   06e8     DECF      0xe8,0x1,0x0                                                                                    
001b7c   e1fc     BNZ       0x1b76                                                                                          
001b7e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001b80   128a     IORWF     0x8a,0x1,0x0                                                                                    
                                           		}		                                                                            C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
001b82   d023     BRA       0x1bca         	else if ('C' == port)                                                           C:\opensprints\FW\user\user.c
001b84   0e43     MOVLW     0x43                                                                                            
001b86   6e2a     MOVWF     0x2a,0x0                                                                                        
001b88   50df     MOVF      0xdf,0x0,0x0                                                                                    
001b8a   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001b8c   e11c     BNZ       0x1bc6                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001b8e   0e02     MOVLW     0x2            		if (0 == value)                                                                C:\opensprints\FW\user\user.c
001b90   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b92   e10d     BNZ       0x1bae                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
001b94   0e01     MOVLW     0x1            			bitclr (LATC, pin);  	                                                        C:\opensprints\FW\user\user.c
001b96   6ef3     MOVWF     0xf3,0x0                                                                                        
001b98   0e01     MOVLW     0x1                                                                                             
001b9a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b9c   e004     BZ        0x1ba6                                                                                          
001b9e   90d8     BCF       0xd8,0x0,0x0                                                                                    
001ba0   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001ba2   06e8     DECF      0xe8,0x1,0x0                                                                                    
001ba4   e1fc     BNZ       0x1b9e                                                                                          
001ba6   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001ba8   1ce8     COMF      0xe8,0x0,0x0                                                                                    
001baa   168b     ANDWF     0x8b,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
001bac   d00b     BRA       0x1bc4         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
001bae   0e01     MOVLW     0x1            			bitset (LATC, pin);  	                                                        C:\opensprints\FW\user\user.c
001bb0   6ef3     MOVWF     0xf3,0x0                                                                                        
001bb2   0e01     MOVLW     0x1                                                                                             
001bb4   50db     MOVF      0xdb,0x0,0x0                                                                                    
001bb6   e004     BZ        0x1bc0                                                                                          
001bb8   90d8     BCF       0xd8,0x0,0x0                                                                                    
001bba   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001bbc   06e8     DECF      0xe8,0x1,0x0                                                                                    
001bbe   e1fc     BNZ       0x1bb8                                                                                          
001bc0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001bc2   128b     IORWF     0x8b,0x1,0x0                                                                                    
                                           		}		                                                                            C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           #ifdef __18F4550                                                                 C:\opensprints\FW\user\user.c
                                           	else if ('D' == port)                                                           C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		if (0 == value)                                                                C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			bitclr (LATD, pin);  	                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			bitset (LATD, pin);  	                                                        C:\opensprints\FW\user\user.c
                                           		}		                                                                            C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	else if ('E' == port)                                                           C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		if (0 == value)                                                                C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			bitclr (LATE, pin);  	                                                        C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			bitset (LATE, pin);  	                                                        C:\opensprints\FW\user\user.c
                                           		}		                                                                            C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           #endif                                                                           C:\opensprints\FW\user\user.c
001bc4   d002     BRA       0x1bca         	else                                                                            C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
001bc6   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
001bc8   d001     BRA       0x1bcc         		return;	                                                                       C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
001bca   dc29     RCALL     0x141e         	print_ack ();                                                                   C:\opensprints\FW\user\user.c
001bcc   0e03     MOVLW     0x3            }                                                                                C:\opensprints\FW\user\user.c
001bce   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001bd0   e202     BC        0x1bd6                                                                                          
001bd2   6ae1     CLRF      0xe1,0x0                                                                                        
001bd4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001bd6   6ee1     MOVWF     0xe1,0x0                                                                                        
001bd8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001bda   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001bdc   ffd9                                                                                                               
001bde   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // TX is for Serial Transmit                                                     C:\opensprints\FW\user\user.c
                                           // "TX,<data_length>,<variable_length_data><CR>"                                 C:\opensprints\FW\user\user.c
                                           // <data_length> is a count of the number of bytes in the <variable_length_data> field. C:\opensprints\FW\user\user.c
                                           // It must never be larger than the number of bytes that are currently free in the C:\opensprints\FW\user\user.c
                                           // software TX buffer or some data will get lost.                                C:\opensprints\FW\user\user.c
                                           // <variable_length_data> are the bytes that you want the UBW to send. It will store them C:\opensprints\FW\user\user.c
                                           // in its software TX buffer until there is time to send them out the TX pin.    C:\opensprints\FW\user\user.c
                                           // If you send in "0" for a <data_length" (and thus nothing for <variable_length_data> C:\opensprints\FW\user\user.c
                                           // then the UBW will send back a "TX,<free_buffer_space><CR>" packet,            C:\opensprints\FW\user\user.c
                                           // where <free_buffer_space> is the number of bytes currently available in the   C:\opensprints\FW\user\user.c
                                           // software TX buffer.                                                           C:\opensprints\FW\user\user.c
                                           void parse_TX_packet(void)                                                       C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
001be0   dc1e     RCALL     0x141e         	print_ack ();                                                                   C:\opensprints\FW\user\user.c
001be2   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // RX is for Serial Receive                                                      C:\opensprints\FW\user\user.c
                                           // "RX,<length_request><CR>"                                                     C:\opensprints\FW\user\user.c
                                           // <length_request> is the maximum number of characters that you want the UBW to send C:\opensprints\FW\user\user.c
                                           // back to you in the RX packet. If you use "0" for <length_request> then the UBW C:\opensprints\FW\user\user.c
                                           // will just send you the current number of bytes in it's RX buffer, and if      C:\opensprints\FW\user\user.c
                                           // there have been any buffer overruns since the last time a <length_request> of  C:\opensprints\FW\user\user.c
                                           // "0" was received by the UBW.                                                  C:\opensprints\FW\user\user.c
                                           // This command will send back a "RX,<length>,<variable_length_data><CR>"        C:\opensprints\FW\user\user.c
                                           // or "RX,<buffer_fullness>,<status><CR>" packet depending upon if you send      C:\opensprints\FW\user\user.c
                                           // "0" or something else for <length_request>                                    C:\opensprints\FW\user\user.c
                                           // <length> in the returning RX packet is a count of the number of bytes         C:\opensprints\FW\user\user.c
                                           // in the <variable_length_data> field. It will never be more than the           C:\opensprints\FW\user\user.c
                                           // <length_request> you sent in.                                                 C:\opensprints\FW\user\user.c
                                           // <variable_length_data> is the data (in raw form - byte for byte what was received -  C:\opensprints\FW\user\user.c
                                           // i.e. not translated in any way, into ASCII values or anything else) that the UBW C:\opensprints\FW\user\user.c
                                           // received. This may include <CR>s and NULLs among any other bytes, so make sure C:\opensprints\FW\user\user.c
                                           // your PC application treates the RX packet coming back from the UBW in a speical way C:\opensprints\FW\user\user.c
                                           // so as not to screw up normal packet processing if any special caracters are received. C:\opensprints\FW\user\user.c
                                           // <buffer_fullness> is a valule between 0 and MAX_SERIAL_RX_BUFFER_SIZE that records C:\opensprints\FW\user\user.c
                                           // the total number of bytes, at that point in time, that the UBW is holding, waiting C:\opensprints\FW\user\user.c
                                           // to pass on to the PC.                                                         C:\opensprints\FW\user\user.c
                                           // <status> has several bits.                                                    C:\opensprints\FW\user\user.c
                                           //	Bit 0 = Software RX Buffer Overrun (1 means software RX buffer (on RX pin)    C:\opensprints\FW\user\user.c
                                           //		has been overrun and data has been lost) This will happen if you don't       C:\opensprints\FW\user\user.c
                                           //		read the data out of the UWB often enough and the data is coming in too fast. C:\opensprints\FW\user\user.c
                                           //	Bit 1 = Software TX Buffer Overrun (1 means software TX buffer (on TX pin)    C:\opensprints\FW\user\user.c
                                           //		as been overrun and data hs been lost. This will happen if you send too much C:\opensprints\FW\user\user.c
                                           //		data to the UBW and you have the serial port set to a low baud rate.         C:\opensprints\FW\user\user.c
                                           void parse_RX_packet(void)                                                       C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
001be4   dc1c     RCALL     0x141e         	print_ack ();                                                                   C:\opensprints\FW\user\user.c
001be6   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // CX is for setting up serial port parameters                                   C:\opensprints\FW\user\user.c
                                           // TBD                                                                           C:\opensprints\FW\user\user.c
                                           void parse_CX_packet(void)                                                       C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
001be8   dc1a     RCALL     0x141e         	print_ack ();                                                                   C:\opensprints\FW\user\user.c
001bea   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // RC is for outputting RC servo pulses on a pin                                 C:\opensprints\FW\user\user.c
                                           // "RC,<port>,<pin>,<value><CR>"                                                 C:\opensprints\FW\user\user.c
                                           // <port> is "A", "B", "C" and indicates the port                                C:\opensprints\FW\user\user.c
                                           // <pin> is a number between 0 and 7 and indicates which pin to output the new value on C:\opensprints\FW\user\user.c
                                           // <value> is an unsigned 16 bit number between 0 and 11890.                     C:\opensprints\FW\user\user.c
                                           // If <value> is "0" then the RC output on that pin is disabled.                 C:\opensprints\FW\user\user.c
                                           // Otherwise <value> = 1 means 1ms pulse, <value> = 11890 means 2ms pulse,       C:\opensprints\FW\user\user.c
                                           // any value inbetween means proportional pulse values between those two         C:\opensprints\FW\user\user.c
                                           // Note: The pin used for RC output must be set as an output, or not much will happen. C:\opensprints\FW\user\user.c
                                           // The RC command will continue to send out pulses at the last set value on      C:\opensprints\FW\user\user.c
                                           // each pin that has RC output with a repition rate of 1 pulse about every 19ms. C:\opensprints\FW\user\user.c
                                           // If you have RC output enabled on a pin, outputting a digital value to that pin C:\opensprints\FW\user\user.c
                                           // will be overwritten the next time the RC pulses. Make sure to turn off the RC C:\opensprints\FW\user\user.c
                                           // output if you want to use the pin for something else.                         C:\opensprints\FW\user\user.c
001bec   cfd9     MOVFF     0xfd9,0xfe6    void parse_RC_packet(void)                                                       C:\opensprints\FW\user\user.c
001bee   ffe6                                                                                                               
001bf0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001bf2   ffd9                                                                                                               
001bf4   0e04     MOVLW     0x4                                                                                             
001bf6   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned char port;                                                             C:\opensprints\FW\user\user.c
                                           	unsigned char pin;                                                              C:\opensprints\FW\user\user.c
                                           	unsigned int value;                                                             C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
001bf8   0e05     MOVLW     0x5            	port = extract_number (kUCASE_ASCII_CHAR);                                      C:\opensprints\FW\user\user.c
001bfa   6ee6     MOVWF     0xe6,0x0                                                                                        
001bfc   db10     RCALL     0x221e                                                                                          
001bfe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001c00   501d     MOVF      0x1d,0x0,0x0                                                                                    
001c02   6edf     MOVWF     0xdf,0x0                                                                                        
001c04   0e01     MOVLW     0x1            	pin = extract_number (kUCHAR);                                                  C:\opensprints\FW\user\user.c
001c06   6ee6     MOVWF     0xe6,0x0                                                                                        
001c08   db0a     RCALL     0x221e                                                                                          
001c0a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001c0c   0e01     MOVLW     0x1                                                                                             
001c0e   c01d     MOVFF     0x1d,0xfdb                                                                                      
001c10   ffdb                                                                                                               
001c12   0e03     MOVLW     0x3            	value = extract_number (kUINT);                                                 C:\opensprints\FW\user\user.c
001c14   6ee6     MOVWF     0xe6,0x0                                                                                        
001c16   db03     RCALL     0x221e                                                                                          
001c18   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001c1a   0e02     MOVLW     0x2                                                                                             
001c1c   c01d     MOVFF     0x1d,0xfdb                                                                                      
001c1e   ffdb                                                                                                               
001c20   0e03     MOVLW     0x3                                                                                             
001c22   c01e     MOVFF     0x1e,0xfdb                                                                                      
001c24   ffdb                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Bail if we got a conversion error                                            C:\opensprints\FW\user\user.c
001c26   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\opensprints\FW\user\user.c
001c28   e001     BZ        0x1c2c                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001c2a   d07b     BRA       0x1d22         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Max value user can input. (min is zero)                                      C:\opensprints\FW\user\user.c
001c2c   50d9     MOVF      0xd9,0x0,0x0   	if (value > 11890)                                                              C:\opensprints\FW\user\user.c
001c2e   0f02     ADDLW     0x2                                                                                             
001c30   6ee9     MOVWF     0xe9,0x0                                                                                        
001c32   cfda     MOVFF     0xfda,0xfea                                                                                     
001c34   ffea                                                                                                               
001c36   0e72     MOVLW     0x72                                                                                            
001c38   80d8     BSF       0xd8,0x0,0x0                                                                                    
001c3a   54ee     SUBFWB    0xee,0x0,0x0                                                                                    
001c3c   0e2e     MOVLW     0x2e                                                                                            
001c3e   54ed     SUBFWB    0xed,0x0,0x0                                                                                    
001c40   e202     BC        0x1c46                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001c42   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
001c44   d06e     BRA       0x1d22         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           	// Now get Value in the form that TMR0 needs it                                 C:\opensprints\FW\user\user.c
                                           	// TMR0 needs to get filled with values from 65490 (1ms) to 53600 (2ms)         C:\opensprints\FW\user\user.c
001c46   50d9     MOVF      0xd9,0x0,0x0   	if (value != 0)                                                                 C:\opensprints\FW\user\user.c
001c48   0f02     ADDLW     0x2                                                                                             
001c4a   6ee9     MOVWF     0xe9,0x0                                                                                        
001c4c   cfda     MOVFF     0xfda,0xfea                                                                                     
001c4e   ffea                                                                                                               
001c50   50ee     MOVF      0xee,0x0,0x0                                                                                    
001c52   10ed     IORWF     0xed,0x0,0x0                                                                                    
001c54   e01f     BZ        0x1c94                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001c56   682d     SETF      0x2d,0x0       		value = (65535 - (value + 45));                                                C:\opensprints\FW\user\user.c
001c58   682e     SETF      0x2e,0x0                                                                                        
001c5a   6a2f     CLRF      0x2f,0x0                                                                                        
001c5c   0e2d     MOVLW     0x2d                                                                                            
001c5e   6ee7     MOVWF     0xe7,0x0                                                                                        
001c60   0e02     MOVLW     0x2                                                                                             
001c62   cfdb     MOVFF     0xfdb,0x30                                                                                      
001c64   f030                                                                                                               
001c66   0e03     MOVLW     0x3                                                                                             
001c68   cfdb     MOVFF     0xfdb,0x31                                                                                      
001c6a   f031                                                                                                               
001c6c   50e7     MOVF      0xe7,0x0,0x0                                                                                    
001c6e   2630     ADDWF     0x30,0x1,0x0                                                                                    
001c70   0e00     MOVLW     0x0                                                                                             
001c72   2231     ADDWFC    0x31,0x1,0x0                                                                                    
001c74   6a32     CLRF      0x32,0x0                                                                                        
001c76   5030     MOVF      0x30,0x0,0x0                                                                                    
001c78   5c2d     SUBWF     0x2d,0x0,0x0                                                                                    
001c7a   6e2a     MOVWF     0x2a,0x0                                                                                        
001c7c   5031     MOVF      0x31,0x0,0x0                                                                                    
001c7e   582e     SUBWFB    0x2e,0x0,0x0                                                                                    
001c80   6e2b     MOVWF     0x2b,0x0                                                                                        
001c82   5032     MOVF      0x32,0x0,0x0                                                                                    
001c84   582f     SUBWFB    0x2f,0x0,0x0                                                                                    
001c86   6e2c     MOVWF     0x2c,0x0                                                                                        
001c88   0e02     MOVLW     0x2                                                                                             
001c8a   c02a     MOVFF     0x2a,0xfdb                                                                                      
001c8c   ffdb                                                                                                               
001c8e   0e03     MOVLW     0x3                                                                                             
001c90   c02b     MOVFF     0x2b,0xfdb                                                                                      
001c92   ffdb                                                                                                               
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
001c94   0e01     MOVLW     0x1            	if (pin > 7)                                                                    C:\opensprints\FW\user\user.c
001c96   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c98   0807     SUBLW     0x7                                                                                             
001c9a   e202     BC        0x1ca0                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001c9c   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
001c9e   d041     BRA       0x1d22         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
001ca0   0e41     MOVLW     0x41           	if ('A' == port)                                                                C:\opensprints\FW\user\user.c
001ca2   6e2a     MOVWF     0x2a,0x0                                                                                        
001ca4   50df     MOVF      0xdf,0x0,0x0                                                                                    
001ca6   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001ca8   e102     BNZ       0x1cae                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001caa   6adf     CLRF      0xdf,0x0       		port = 0;                                                                      C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
001cac   d012     BRA       0x1cd2         	else if ('B' == port)                                                           C:\opensprints\FW\user\user.c
001cae   0e42     MOVLW     0x42                                                                                            
001cb0   6e2a     MOVWF     0x2a,0x0                                                                                        
001cb2   50df     MOVF      0xdf,0x0,0x0                                                                                    
001cb4   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001cb6   e103     BNZ       0x1cbe                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001cb8   0e08     MOVLW     0x8            		port = 8;                                                                      C:\opensprints\FW\user\user.c
001cba   6edf     MOVWF     0xdf,0x0                                                                                        
                                           	}                                                                               C:\opensprints\FW\user\user.c
001cbc   d00a     BRA       0x1cd2         	else if ('C' == port)                                                           C:\opensprints\FW\user\user.c
001cbe   0e43     MOVLW     0x43                                                                                            
001cc0   6e2a     MOVWF     0x2a,0x0                                                                                        
001cc2   50df     MOVF      0xdf,0x0,0x0                                                                                    
001cc4   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001cc6   e103     BNZ       0x1cce                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001cc8   0e10     MOVLW     0x10           		port = 16;                                                                     C:\opensprints\FW\user\user.c
001cca   6edf     MOVWF     0xdf,0x0                                                                                        
                                           	}                                                                               C:\opensprints\FW\user\user.c
001ccc   d002     BRA       0x1cd2         	else                                                                            C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
001cce   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
001cd0   d028     BRA       0x1d22         		return;	                                                                       C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Store the new RC time value                                                  C:\opensprints\FW\user\user.c
001cd2   0e01     MOVLW     0x1            	g_RC_value[pin + port] = value;                                                 C:\opensprints\FW\user\user.c
001cd4   50db     MOVF      0xdb,0x0,0x0                                                                                    
001cd6   24df     ADDWF     0xdf,0x0,0x0                                                                                    
001cd8   6ee9     MOVWF     0xe9,0x0                                                                                        
001cda   6aea     CLRF      0xea,0x0                                                                                        
001cdc   90d8     BCF       0xd8,0x0,0x0                                                                                    
001cde   36e9     RLCF      0xe9,0x1,0x0                                                                                    
001ce0   36ea     RLCF      0xea,0x1,0x0                                                                                    
001ce2   0e69     MOVLW     0x69                                                                                            
001ce4   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001ce6   0e01     MOVLW     0x1                                                                                             
001ce8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001cea   0e02     MOVLW     0x2                                                                                             
001cec   cfdb     MOVFF     0xfdb,0xfee                                                                                     
001cee   ffee                                                                                                               
001cf0   0e03     MOVLW     0x3                                                                                             
001cf2   cfdb     MOVFF     0xfdb,0xfed                                                                                     
001cf4   ffed                                                                                                               
                                           	// Only set this state if we are off - if we are already running on             C:\opensprints\FW\user\user.c
                                           	// this pin, then the new value will be picked up next time around (19ms)       C:\opensprints\FW\user\user.c
001cf6   0e01     MOVLW     0x1            	if (kOFF == g_RC_state[pin + port])                                             C:\opensprints\FW\user\user.c
001cf8   50db     MOVF      0xdb,0x0,0x0                                                                                    
001cfa   24df     ADDWF     0xdf,0x0,0x0                                                                                    
001cfc   6aea     CLRF      0xea,0x0                                                                                        
001cfe   0f51     ADDLW     0x51                                                                                            
001d00   6ee9     MOVWF     0xe9,0x0                                                                                        
001d02   0e01     MOVLW     0x1                                                                                             
001d04   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001d06   04ef     DECF      0xef,0x0,0x0                                                                                    
001d08   e10a     BNZ       0x1d1e                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001d0a   0e01     MOVLW     0x1            		g_RC_state[pin + port] = kWAITING;                                             C:\opensprints\FW\user\user.c
001d0c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d0e   24df     ADDWF     0xdf,0x0,0x0                                                                                    
001d10   6aea     CLRF      0xea,0x0                                                                                        
001d12   0f51     ADDLW     0x51                                                                                            
001d14   6ee9     MOVWF     0xe9,0x0                                                                                        
001d16   0e01     MOVLW     0x1                                                                                             
001d18   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001d1a   0e02     MOVLW     0x2                                                                                             
001d1c   6eef     MOVWF     0xef,0x0                                                                                        
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
001d1e   ec0f     CALL      0x141e,0x0     	print_ack ();                                                                   C:\opensprints\FW\user\user.c
001d20   f00a                                                                                                               
001d22   0e04     MOVLW     0x4            }                                                                                C:\opensprints\FW\user\user.c
001d24   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001d26   e202     BC        0x1d2c                                                                                          
001d28   6ae1     CLRF      0xe1,0x0                                                                                        
001d2a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d2c   6ee1     MOVWF     0xe1,0x0                                                                                        
001d2e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d30   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001d32   ffd9                                                                                                               
001d34   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // BC is for Bulk Configure                                                      C:\opensprints\FW\user\user.c
                                           // BC,<port A init>,<waitmask>,<wait delay>,<strobemask>,<strobe delay><CR>      C:\opensprints\FW\user\user.c
                                           // This command sets up the mask and strobe bits on port A for the               C:\opensprints\FW\user\user.c
                                           // BO (Bulk Output) command below. Also suck in wait delay, strobe delay, etc.   C:\opensprints\FW\user\user.c
001d36   cfd9     MOVFF     0xfd9,0xfe6    void parse_BC_packet(void)                                                       C:\opensprints\FW\user\user.c
001d38   ffe6                                                                                                               
001d3a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001d3c   ffd9                                                                                                               
001d3e   0e05     MOVLW     0x5                                                                                             
001d40   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned char BO_init;                                                          C:\opensprints\FW\user\user.c
                                           	unsigned char BO_strobe_mask;                                                   C:\opensprints\FW\user\user.c
                                           	unsigned char BO_wait_mask;                                                     C:\opensprints\FW\user\user.c
                                           	unsigned char BO_wait_delay;                                                    C:\opensprints\FW\user\user.c
                                           	unsigned char BO_strobe_delay;                                                  C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
001d42   0e01     MOVLW     0x1            	BO_init = extract_number (kUCHAR);                                              C:\opensprints\FW\user\user.c
001d44   6ee6     MOVWF     0xe6,0x0                                                                                        
001d46   da6b     RCALL     0x221e                                                                                          
001d48   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d4a   501d     MOVF      0x1d,0x0,0x0                                                                                    
001d4c   6edf     MOVWF     0xdf,0x0                                                                                        
001d4e   0e01     MOVLW     0x1            	BO_wait_mask = extract_number (kUCHAR);                                         C:\opensprints\FW\user\user.c
001d50   6ee6     MOVWF     0xe6,0x0                                                                                        
001d52   da65     RCALL     0x221e                                                                                          
001d54   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d56   0e02     MOVLW     0x2                                                                                             
001d58   c01d     MOVFF     0x1d,0xfdb                                                                                      
001d5a   ffdb                                                                                                               
001d5c   0e01     MOVLW     0x1            	BO_wait_delay = extract_number (kUCHAR);                                        C:\opensprints\FW\user\user.c
001d5e   6ee6     MOVWF     0xe6,0x0                                                                                        
001d60   da5e     RCALL     0x221e                                                                                          
001d62   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d64   0e03     MOVLW     0x3                                                                                             
001d66   c01d     MOVFF     0x1d,0xfdb                                                                                      
001d68   ffdb                                                                                                               
001d6a   0e01     MOVLW     0x1            	BO_strobe_mask = extract_number (kUCHAR);                                       C:\opensprints\FW\user\user.c
001d6c   6ee6     MOVWF     0xe6,0x0                                                                                        
001d6e   da57     RCALL     0x221e                                                                                          
001d70   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d72   0e01     MOVLW     0x1                                                                                             
001d74   c01d     MOVFF     0x1d,0xfdb                                                                                      
001d76   ffdb                                                                                                               
001d78   0e01     MOVLW     0x1            	BO_strobe_delay = extract_number (kUCHAR);                                      C:\opensprints\FW\user\user.c
001d7a   6ee6     MOVWF     0xe6,0x0                                                                                        
001d7c   da50     RCALL     0x221e                                                                                          
001d7e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d80   0e04     MOVLW     0x4                                                                                             
001d82   c01d     MOVFF     0x1d,0xfdb                                                                                      
001d84   ffdb                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Bail if we got a conversion error                                            C:\opensprints\FW\user\user.c
001d86   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\opensprints\FW\user\user.c
001d88   e001     BZ        0x1d8c                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001d8a   d012     BRA       0x1db0         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Copy over values to their gloabls                                            C:\opensprints\FW\user\user.c
001d8c   cfdf     MOVFF     0xfdf,0x60     	g_BO_init = BO_init;                                                            C:\opensprints\FW\user\user.c
001d8e   f060                                                                                                               
001d90   0e02     MOVLW     0x2            	g_BO_wait_mask = BO_wait_mask;                                                  C:\opensprints\FW\user\user.c
001d92   cfdb     MOVFF     0xfdb,0x62                                                                                      
001d94   f062                                                                                                               
001d96   0e01     MOVLW     0x1            	g_BO_strobe_mask = BO_strobe_mask;                                              C:\opensprints\FW\user\user.c
001d98   cfdb     MOVFF     0xfdb,0x61                                                                                      
001d9a   f061                                                                                                               
001d9c   0e03     MOVLW     0x3            	g_BO_wait_delay = BO_wait_delay;                                                C:\opensprints\FW\user\user.c
001d9e   cfdb     MOVFF     0xfdb,0x63                                                                                      
001da0   f063                                                                                                               
001da2   0e04     MOVLW     0x4            	g_BO_strobe_delay = BO_strobe_delay;                                            C:\opensprints\FW\user\user.c
001da4   cfdb     MOVFF     0xfdb,0x64                                                                                      
001da6   f064                                                                                                               
                                           	// And initalize Port A                                                         C:\opensprints\FW\user\user.c
001da8   c060     MOVFF     0x60,0xf89     	LATA = g_BO_init;                                                               C:\opensprints\FW\user\user.c
001daa   ff89                                                                                                               
                                           	                                                                                C:\opensprints\FW\user\user.c
001dac   ec0f     CALL      0x141e,0x0     	print_ack ();                                                                   C:\opensprints\FW\user\user.c
001dae   f00a                                                                                                               
001db0   0e05     MOVLW     0x5            }                                                                                C:\opensprints\FW\user\user.c
001db2   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001db4   e202     BC        0x1dba                                                                                          
001db6   6ae1     CLRF      0xe1,0x0                                                                                        
001db8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001dba   6ee1     MOVWF     0xe1,0x0                                                                                        
001dbc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001dbe   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001dc0   ffd9                                                                                                               
001dc2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Bulk Output (BO)                                                              C:\opensprints\FW\user\user.c
                                           // BO,4AF2C124<CR>                                                               C:\opensprints\FW\user\user.c
                                           // After the inital comma, pull in hex values and spit them out to port A        C:\opensprints\FW\user\user.c
                                           // Note that the procedure here is as follows:                                   C:\opensprints\FW\user\user.c
                                           //	1) Write new value to PortB                                                   C:\opensprints\FW\user\user.c
                                           //	2) Assert <strobemask>                                                        C:\opensprints\FW\user\user.c
                                           //	3) Wait for <strobdelay> (if not zero)                                        C:\opensprints\FW\user\user.c
                                           //	4) Deassert <strobemask>                                                      C:\opensprints\FW\user\user.c
                                           //	5) Wait for <waitmask> to be asserted                                         C:\opensprints\FW\user\user.c
                                           //	6) Wait for <waitmask> to be deasserted                                       C:\opensprints\FW\user\user.c
                                           //	7) If 5) or 6) takes longer than <waitdelay> then just move on to next byte   C:\opensprints\FW\user\user.c
                                           //	Repeat for each byte                                                          C:\opensprints\FW\user\user.c
001dc4   cfd9     MOVFF     0xfd9,0xfe6    void parse_BO_packet(void)                                                       C:\opensprints\FW\user\user.c
001dc6   ffe6                                                                                                               
001dc8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001dca   ffd9                                                                                                               
001dcc   0e04     MOVLW     0x4                                                                                             
001dce   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned char BO_data_byte;                                                     C:\opensprints\FW\user\user.c
                                           	unsigned char new_port_A_value;                                                 C:\opensprints\FW\user\user.c
                                           	unsigned char tmp;                                                              C:\opensprints\FW\user\user.c
001dd0   0e03     MOVLW     0x3            	unsigned char wait_count = 0;                                                   C:\opensprints\FW\user\user.c
001dd2   6adb     CLRF      0xdb,0x0                                                                                        
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           	// Check for comma where ptr points                                             C:\opensprints\FW\user\user.c
001dd4   0100     MOVLB     0x0            	if (g_RX_buf[g_RX_buf_out] != ',')                                              C:\opensprints\FW\user\user.c
001dd6   5168     MOVF      0x68,0x0,0x1                                                                                    
001dd8   6aea     CLRF      0xea,0x0                                                                                        
001dda   0f40     ADDLW     0x40                                                                                            
001ddc   6ee9     MOVWF     0xe9,0x0                                                                                        
001dde   0e02     MOVLW     0x2                                                                                             
001de0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001de2   50ef     MOVF      0xef,0x0,0x0                                                                                    
001de4   082c     SUBLW     0x2c                                                                                            
001de6   e01d     BZ        0x1e22                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
001de8   0100     MOVLB     0x0            		printf ((rom char *)"!5 Err: Need comma next, found: '%c'\r\n", g_RX_buf[g_RX_buf_out]); C:\opensprints\FW\user\user.c
001dea   5168     MOVF      0x68,0x0,0x1                                                                                    
001dec   6aea     CLRF      0xea,0x0                                                                                        
001dee   0f40     ADDLW     0x40                                                                                            
001df0   6ee9     MOVWF     0xe9,0x0                                                                                        
001df2   0e02     MOVLW     0x2                                                                                             
001df4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001df6   50ef     MOVF      0xef,0x0,0x0                                                                                    
001df8   6ee6     MOVWF     0xe6,0x0                                                                                        
001dfa   6ae6     CLRF      0xe6,0x0                                                                                        
001dfc   0e2a     MOVLW     0x2a                                                                                            
001dfe   6e2a     MOVWF     0x2a,0x0                                                                                        
001e00   0e49     MOVLW     0x49                                                                                            
001e02   6e2b     MOVWF     0x2b,0x0                                                                                        
001e04   6a2c     CLRF      0x2c,0x0                                                                                        
001e06   c02a     MOVFF     0x2a,0xfe6                                                                                      
001e08   ffe6                                                                                                               
001e0a   c02b     MOVFF     0x2b,0xfe6                                                                                      
001e0c   ffe6                                                                                                               
001e0e   c02c     MOVFF     0x2c,0xfe6                                                                                      
001e10   ffe6                                                                                                               
001e12   ec60     CALL      0x4cc0,0x0                                                                                      
001e14   f026                                                                                                               
001e16   6e2d     MOVWF     0x2d,0x0                                                                                        
001e18   0e05     MOVLW     0x5                                                                                             
001e1a   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001e1c   502d     MOVF      0x2d,0x0,0x0                                                                                    
001e1e   8a0d     BSF       0xd,0x5,0x0    		bitset (error_byte, kERROR_BYTE_PRINTED_ERROR);                                C:\opensprints\FW\user\user.c
001e20   d10e     BRA       0x203e         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Move to the next character                                                   C:\opensprints\FW\user\user.c
001e22   0100     MOVLB     0x0            	advance_RX_buf_out ();                                                          C:\opensprints\FW\user\user.c
001e24   2b68     INCF      0x68,0x1,0x1                                                                                    
001e26   0e40     MOVLW     0x40                                                                                            
001e28   0100     MOVLB     0x0                                                                                             
001e2a   5d68     SUBWF     0x68,0x0,0x1                                                                                    
001e2c   e102     BNZ       0x1e32                                                                                          
001e2e   0100     MOVLB     0x0                                                                                             
001e30   6b68     CLRF      0x68,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Make sure Port A is correct                                                  C:\opensprints\FW\user\user.c
001e32   c060     MOVFF     0x60,0xf89     	LATA = g_BO_init;                                                               C:\opensprints\FW\user\user.c
001e34   ff89                                                                                                               
001e36   0100     MOVLB     0x0            	new_port_A_value = ((~LATA & g_BO_strobe_mask)) | (LATA & ~g_BO_strobe_mask);   C:\opensprints\FW\user\user.c
001e38   1d61     COMF      0x61,0x0,0x1                                                                                    
001e3a   1489     ANDWF     0x89,0x0,0x0                                                                                    
001e3c   6e2a     MOVWF     0x2a,0x0                                                                                        
001e3e   1c89     COMF      0x89,0x0,0x0                                                                                    
001e40   0100     MOVLB     0x0                                                                                             
001e42   1561     ANDWF     0x61,0x0,0x1                                                                                    
001e44   102a     IORWF     0x2a,0x0,0x0                                                                                    
001e46   6ee7     MOVWF     0xe7,0x0                                                                                        
001e48   0e01     MOVLW     0x1                                                                                             
001e4a   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001e4c   ffdb                                                                                                               
                                           	                                                                                C:\opensprints\FW\user\user.c
001e4e   0100     MOVLB     0x0            	while (g_RX_buf[g_RX_buf_out] != 13)                                            C:\opensprints\FW\user\user.c
001e50   5168     MOVF      0x68,0x0,0x1                                                                                    
001e52   6aea     CLRF      0xea,0x0                                                                                        
001e54   0f40     ADDLW     0x40                                                                                            
001e56   6ee9     MOVWF     0xe9,0x0                                                                                        
001e58   0e02     MOVLW     0x2                                                                                             
001e5a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001e5c   50ef     MOVF      0xef,0x0,0x0                                                                                    
001e5e   080d     SUBLW     0xd                                                                                             
001e60   e101     BNZ       0x1e64                                                                                          
001e62   d0eb     BRA       0x203a                                                                                          
002038   d70a     BRA       0x1e4e                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// Pull in a nibble from the input buffer                                      C:\opensprints\FW\user\user.c
001e64   0100     MOVLB     0x0            		tmp = toupper (g_RX_buf[g_RX_buf_out]);                                        C:\opensprints\FW\user\user.c
001e66   5168     MOVF      0x68,0x0,0x1                                                                                    
001e68   6aea     CLRF      0xea,0x0                                                                                        
001e6a   0f40     ADDLW     0x40                                                                                            
001e6c   6ee9     MOVWF     0xe9,0x0                                                                                        
001e6e   0e02     MOVLW     0x2                                                                                             
001e70   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001e72   50ef     MOVF      0xef,0x0,0x0                                                                                    
001e74   6ee6     MOVWF     0xe6,0x0                                                                                        
001e76   6ae6     CLRF      0xe6,0x0                                                                                        
001e78   ec59     CALL      0x4eb2,0x0                                                                                      
001e7a   f027                                                                                                               
001e7c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001e7e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001e80   0e02     MOVLW     0x2                                                                                             
001e82   cff3     MOVFF     0xff3,0xfdb                                                                                     
001e84   ffdb                                                                                                               
001e86   0e30     MOVLW     0x30           		if (tmp >= '0' && tmp <= '9')                                                  C:\opensprints\FW\user\user.c
001e88   6ef3     MOVWF     0xf3,0x0                                                                                        
001e8a   0e02     MOVLW     0x2                                                                                             
001e8c   cfdb     MOVFF     0xfdb,0xff4                                                                                     
001e8e   fff4                                                                                                               
001e90   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001e92   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
001e94   e30f     BNC       0x1eb4                                                                                          
001e96   0e02     MOVLW     0x2                                                                                             
001e98   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e9a   0839     SUBLW     0x39                                                                                            
001e9c   e30b     BNC       0x1eb4                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
001e9e   0e30     MOVLW     0x30           			tmp -= '0';	                                                                  C:\opensprints\FW\user\user.c
001ea0   6e2a     MOVWF     0x2a,0x0                                                                                        
001ea2   0e02     MOVLW     0x2                                                                                             
001ea4   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001ea6   ffe7                                                                                                               
001ea8   502a     MOVF      0x2a,0x0,0x0                                                                                    
001eaa   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001eac   0e02     MOVLW     0x2                                                                                             
001eae   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001eb0   ffdb                                                                                                               
                                           		}                                                                              C:\opensprints\FW\user\user.c
001eb2   d019     BRA       0x1ee6         		else if (tmp >= 'A' && tmp <= 'F')                                             C:\opensprints\FW\user\user.c
001eb4   0e41     MOVLW     0x41                                                                                            
001eb6   6ef3     MOVWF     0xf3,0x0                                                                                        
001eb8   0e02     MOVLW     0x2                                                                                             
001eba   cfdb     MOVFF     0xfdb,0xff4                                                                                     
001ebc   fff4                                                                                                               
001ebe   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001ec0   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
001ec2   e30f     BNC       0x1ee2                                                                                          
001ec4   0e02     MOVLW     0x2                                                                                             
001ec6   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ec8   0846     SUBLW     0x46                                                                                            
001eca   e30b     BNC       0x1ee2                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
001ecc   0e37     MOVLW     0x37           			tmp -= 55;                                                                    C:\opensprints\FW\user\user.c
001ece   6e2a     MOVWF     0x2a,0x0                                                                                        
001ed0   0e02     MOVLW     0x2                                                                                             
001ed2   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001ed4   ffe7                                                                                                               
001ed6   502a     MOVF      0x2a,0x0,0x0                                                                                    
001ed8   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001eda   0e02     MOVLW     0x2                                                                                             
001edc   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001ede   ffdb                                                                                                               
                                           		}                                                                              C:\opensprints\FW\user\user.c
001ee0   d002     BRA       0x1ee6         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
001ee2   8c0d     BSF       0xd,0x6,0x0    			bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                     C:\opensprints\FW\user\user.c
001ee4   d0ac     BRA       0x203e         			return;                                                                       C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
001ee6   0e02     MOVLW     0x2            		BO_data_byte = tmp << 4;                                                       C:\opensprints\FW\user\user.c
001ee8   38db     SWAPF     0xdb,0x0,0x0                                                                                    
001eea   0bf0     ANDLW     0xf0                                                                                            
001eec   6edf     MOVWF     0xdf,0x0                                                                                        
001eee   0100     MOVLB     0x0            		advance_RX_buf_out ();                                                         C:\opensprints\FW\user\user.c
001ef0   2b68     INCF      0x68,0x1,0x1                                                                                    
001ef2   0e40     MOVLW     0x40                                                                                            
001ef4   0100     MOVLB     0x0                                                                                             
001ef6   5d68     SUBWF     0x68,0x0,0x1                                                                                    
001ef8   e102     BNZ       0x1efe                                                                                          
001efa   0100     MOVLB     0x0                                                                                             
001efc   6b68     CLRF      0x68,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		// Check for CR next                                                           C:\opensprints\FW\user\user.c
001efe   0e0d     MOVLW     0xd            		if (kCR == g_RX_buf[g_RX_buf_out])                                             C:\opensprints\FW\user\user.c
001f00   6e2a     MOVWF     0x2a,0x0                                                                                        
001f02   0100     MOVLB     0x0                                                                                             
001f04   5168     MOVF      0x68,0x0,0x1                                                                                    
001f06   6aea     CLRF      0xea,0x0                                                                                        
001f08   0f40     ADDLW     0x40                                                                                            
001f0a   6ee9     MOVWF     0xe9,0x0                                                                                        
001f0c   0e02     MOVLW     0x2                                                                                             
001f0e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001f10   50ef     MOVF      0xef,0x0,0x0                                                                                    
001f12   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001f14   e102     BNZ       0x1f1a                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
001f16   880d     BSF       0xd,0x4,0x0    			bitset (error_byte, kERROR_BYTE_MISSING_PARAMETER);                           C:\opensprints\FW\user\user.c
001f18   d092     BRA       0x203e         			return;                                                                       C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
001f1a   0100     MOVLB     0x0            		tmp =  toupper (g_RX_buf[g_RX_buf_out]);                                       C:\opensprints\FW\user\user.c
001f1c   5168     MOVF      0x68,0x0,0x1                                                                                    
001f1e   6aea     CLRF      0xea,0x0                                                                                        
001f20   0f40     ADDLW     0x40                                                                                            
001f22   6ee9     MOVWF     0xe9,0x0                                                                                        
001f24   0e02     MOVLW     0x2                                                                                             
001f26   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001f28   50ef     MOVF      0xef,0x0,0x0                                                                                    
001f2a   6ee6     MOVWF     0xe6,0x0                                                                                        
001f2c   6ae6     CLRF      0xe6,0x0                                                                                        
001f2e   ec59     CALL      0x4eb2,0x0                                                                                      
001f30   f027                                                                                                               
001f32   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001f34   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001f36   0e02     MOVLW     0x2                                                                                             
001f38   cff3     MOVFF     0xff3,0xfdb                                                                                     
001f3a   ffdb                                                                                                               
001f3c   0e30     MOVLW     0x30           		if (tmp >= '0' && tmp <= '9')                                                  C:\opensprints\FW\user\user.c
001f3e   6ef3     MOVWF     0xf3,0x0                                                                                        
001f40   0e02     MOVLW     0x2                                                                                             
001f42   cfdb     MOVFF     0xfdb,0xff4                                                                                     
001f44   fff4                                                                                                               
001f46   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001f48   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
001f4a   e30f     BNC       0x1f6a                                                                                          
001f4c   0e02     MOVLW     0x2                                                                                             
001f4e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f50   0839     SUBLW     0x39                                                                                            
001f52   e30b     BNC       0x1f6a                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
001f54   0e30     MOVLW     0x30           			tmp -= '0';	                                                                  C:\opensprints\FW\user\user.c
001f56   6e2a     MOVWF     0x2a,0x0                                                                                        
001f58   0e02     MOVLW     0x2                                                                                             
001f5a   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001f5c   ffe7                                                                                                               
001f5e   502a     MOVF      0x2a,0x0,0x0                                                                                    
001f60   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001f62   0e02     MOVLW     0x2                                                                                             
001f64   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001f66   ffdb                                                                                                               
                                           		}                                                                              C:\opensprints\FW\user\user.c
001f68   d019     BRA       0x1f9c         		else if (tmp >= 'A' && tmp <= 'F')                                             C:\opensprints\FW\user\user.c
001f6a   0e41     MOVLW     0x41                                                                                            
001f6c   6ef3     MOVWF     0xf3,0x0                                                                                        
001f6e   0e02     MOVLW     0x2                                                                                             
001f70   cfdb     MOVFF     0xfdb,0xff4                                                                                     
001f72   fff4                                                                                                               
001f74   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001f76   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
001f78   e30f     BNC       0x1f98                                                                                          
001f7a   0e02     MOVLW     0x2                                                                                             
001f7c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f7e   0846     SUBLW     0x46                                                                                            
001f80   e30b     BNC       0x1f98                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
001f82   0e37     MOVLW     0x37           			tmp -= 55;                                                                    C:\opensprints\FW\user\user.c
001f84   6e2a     MOVWF     0x2a,0x0                                                                                        
001f86   0e02     MOVLW     0x2                                                                                             
001f88   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001f8a   ffe7                                                                                                               
001f8c   502a     MOVF      0x2a,0x0,0x0                                                                                    
001f8e   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001f90   0e02     MOVLW     0x2                                                                                             
001f92   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001f94   ffdb                                                                                                               
                                           		}                                                                              C:\opensprints\FW\user\user.c
001f96   d002     BRA       0x1f9c         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
001f98   8c0d     BSF       0xd,0x6,0x0    			bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                     C:\opensprints\FW\user\user.c
001f9a   d051     BRA       0x203e         			return;                                                                       C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
001f9c   0e02     MOVLW     0x2            		BO_data_byte = BO_data_byte + tmp;                                             C:\opensprints\FW\user\user.c
001f9e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fa0   24df     ADDWF     0xdf,0x0,0x0                                                                                    
001fa2   6edf     MOVWF     0xdf,0x0                                                                                        
001fa4   0100     MOVLB     0x0            		advance_RX_buf_out ();                                                         C:\opensprints\FW\user\user.c
001fa6   2b68     INCF      0x68,0x1,0x1                                                                                    
001fa8   0e40     MOVLW     0x40                                                                                            
001faa   0100     MOVLB     0x0                                                                                             
001fac   5d68     SUBWF     0x68,0x0,0x1                                                                                    
001fae   e102     BNZ       0x1fb4                                                                                          
001fb0   0100     MOVLB     0x0                                                                                             
001fb2   6b68     CLRF      0x68,0x1                                                                                        
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           		// Output the byte on Port B                                                   C:\opensprints\FW\user\user.c
001fb4   50df     MOVF      0xdf,0x0,0x0   		LATB = BO_data_byte;                                                           C:\opensprints\FW\user\user.c
001fb6   6e8a     MOVWF     0x8a,0x0                                                                                        
                                           		                                                                               C:\opensprints\FW\user\user.c
                                           		// And strobe the Port A bits that we're supposed to                           C:\opensprints\FW\user\user.c
001fb8   0e01     MOVLW     0x1            		LATA = new_port_A_value;                                                       C:\opensprints\FW\user\user.c
001fba   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fbc   6e89     MOVWF     0x89,0x0                                                                                        
001fbe   0100     MOVLB     0x0            		if (g_BO_strobe_delay)                                                         C:\opensprints\FW\user\user.c
001fc0   5164     MOVF      0x64,0x0,0x1                                                                                    
001fc2   e005     BZ        0x1fce                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
001fc4   c064     MOVFF     0x64,0xfe6     			Delay10TCYx (g_BO_strobe_delay);                                              C:\opensprints\FW\user\user.c
001fc6   ffe6                                                                                                               
001fc8   ec07     CALL      0x500e,0x0                                                                                      
001fca   f028                                                                                                               
001fcc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
001fce   c060     MOVFF     0x60,0xf89     		LATA = g_BO_init;                                                              C:\opensprints\FW\user\user.c
001fd0   ff89                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
001fd2   0100     MOVLB     0x0            		if (g_BO_wait_delay)                                                           C:\opensprints\FW\user\user.c
001fd4   5163     MOVF      0x63,0x0,0x1                                                                                    
001fd6   e030     BZ        0x2038                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Now we spin on the wait bit specified in WaitMask                          C:\opensprints\FW\user\user.c
                                           			// (Used for Busy Bits) We also have to wait here                             C:\opensprints\FW\user\user.c
                                           			// for a maximum of g_BO_wait_delay, which is in 10 clock units               C:\opensprints\FW\user\user.c
                                           			// First we wait for the wait mask to become asserted                         C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           			// Set the wait counter to the number of delays we want                       C:\opensprints\FW\user\user.c
001fd8   0e03     MOVLW     0x3            			wait_count = g_BO_wait_delay;                                                 C:\opensprints\FW\user\user.c
001fda   c063     MOVFF     0x63,0xfdb                                                                                      
001fdc   ffdb                                                                                                               
002006   d7eb     BRA       0x1fde         			while (                                                                       C:\opensprints\FW\user\user.c
001fde   0100     MOVLB     0x0            				((g_BO_init & g_BO_wait_mask) == (PORTA & g_BO_wait_mask))                   C:\opensprints\FW\user\user.c
001fe0   5160     MOVF      0x60,0x0,0x1                                                                                    
001fe2   0100     MOVLB     0x0                                                                                             
001fe4   1562     ANDWF     0x62,0x0,0x1                                                                                    
001fe6   6e2a     MOVWF     0x2a,0x0                                                                                        
001fe8   0100     MOVLB     0x0                                                                                             
001fea   5162     MOVF      0x62,0x0,0x1                                                                                    
001fec   1480     ANDWF     0x80,0x0,0x0                                                                                    
001fee   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
                                           				&&                                                                           C:\opensprints\FW\user\user.c
001ff2   0e03     MOVLW     0x3            				(wait_count != 0)                                                            C:\opensprints\FW\user\user.c
001ff4   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ff0   e10b     BNZ       0x2008         			)                                                                             C:\opensprints\FW\user\user.c
001ff6   e008     BZ        0x2008                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
001ff8   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
001ffa   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
001ffc   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
001ffe   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
002000   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
002002   0e03     MOVLW     0x3            				wait_count--;                                                                C:\opensprints\FW\user\user.c
002004   06db     DECF      0xdb,0x1,0x0                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           			// Set the wait counter to the number of delays we want                       C:\opensprints\FW\user\user.c
002008   0e03     MOVLW     0x3            			wait_count = g_BO_wait_delay;                                                 C:\opensprints\FW\user\user.c
00200a   c063     MOVFF     0x63,0xfdb                                                                                      
00200c   ffdb                                                                                                               
                                           			// Then we wait for the wait mask to become de-asserted                       C:\opensprints\FW\user\user.c
002036   d7eb     BRA       0x200e         			while (                                                                       C:\opensprints\FW\user\user.c
00200e   0100     MOVLB     0x0            				((g_BO_init & g_BO_wait_mask) != (PORTA & g_BO_wait_mask))                   C:\opensprints\FW\user\user.c
002010   5160     MOVF      0x60,0x0,0x1                                                                                    
002012   0100     MOVLB     0x0                                                                                             
002014   1562     ANDWF     0x62,0x0,0x1                                                                                    
002016   6e2a     MOVWF     0x2a,0x0                                                                                        
002018   0100     MOVLB     0x0                                                                                             
00201a   5162     MOVF      0x62,0x0,0x1                                                                                    
00201c   1480     ANDWF     0x80,0x0,0x0                                                                                    
00201e   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
                                           				&&                                                                           C:\opensprints\FW\user\user.c
002022   0e03     MOVLW     0x3            				(wait_count != 0)                                                            C:\opensprints\FW\user\user.c
002024   50db     MOVF      0xdb,0x0,0x0                                                                                    
002020   e00b     BZ        0x2038         			)                                                                             C:\opensprints\FW\user\user.c
002026   e008     BZ        0x2038                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
002028   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
00202a   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
00202c   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
00202e   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
002030   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
002032   0e03     MOVLW     0x3            				wait_count--;                                                                C:\opensprints\FW\user\user.c
002034   06db     DECF      0xdb,0x1,0x0                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
00203a   ec0f     CALL      0x141e,0x0     	print_ack ();                                                                   C:\opensprints\FW\user\user.c
00203c   f00a                                                                                                               
00203e   0e04     MOVLW     0x4            }                                                                                C:\opensprints\FW\user\user.c
002040   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
002042   e202     BC        0x2048                                                                                          
002044   6ae1     CLRF      0xe1,0x0                                                                                        
002046   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002048   6ee1     MOVWF     0xe1,0x0                                                                                        
00204a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00204c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00204e   ffd9                                                                                                               
002050   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Bulk Stream (BS) (he he, couldn't think of a better name)                     C:\opensprints\FW\user\user.c
                                           // BS,<count>,<binary_data><CR>                                                  C:\opensprints\FW\user\user.c
                                           // This command is extremely similar to the BO command                           C:\opensprints\FW\user\user.c
                                           // except that instead of ASCII HEX values, it actually                          C:\opensprints\FW\user\user.c
                                           // takes raw binary data.                                                        C:\opensprints\FW\user\user.c
                                           // So in order for the UBW to know when the end of the stream                    C:\opensprints\FW\user\user.c
                                           // is, we need to have a <count> of bytes.                                       C:\opensprints\FW\user\user.c
                                           // <count> represents the number of bytes after the second comma                 C:\opensprints\FW\user\user.c
                                           // that will be the actual binary data to be streamed out port B.                C:\opensprints\FW\user\user.c
                                           // Then, <binary_data> must be exactly that length.                              C:\opensprints\FW\user\user.c
                                           // <count> must be between 1 and 56 (currently - in the future                   C:\opensprints\FW\user\user.c
                                           // it would be nice to extend the upper limit)                                   C:\opensprints\FW\user\user.c
                                           // The UBW will pull in one byte at a time within the <binary_data>              C:\opensprints\FW\user\user.c
                                           // section and output it to PORTB exactly as the BO command does.                C:\opensprints\FW\user\user.c
                                           // It will do this for <count> bytes. It will then pull in another               C:\opensprints\FW\user\user.c
                                           // byte (which must be a carrige return) and be done.                            C:\opensprints\FW\user\user.c
                                           // The whole point of this command is to improve data throughput                 C:\opensprints\FW\user\user.c
                                           // from the PC to the UBW. This form of data is also more efficient              C:\opensprints\FW\user\user.c
                                           // for the UBW to process.                                                       C:\opensprints\FW\user\user.c
002052   cfd9     MOVFF     0xfd9,0xfe6    void parse_BS_packet(void)                                                       C:\opensprints\FW\user\user.c
002054   ffe6                                                                                                               
002056   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002058   ffd9                                                                                                               
00205a   0e05     MOVLW     0x5                                                                                             
00205c   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned char BO_data_byte;                                                     C:\opensprints\FW\user\user.c
                                           	unsigned char new_port_A_value;                                                 C:\opensprints\FW\user\user.c
                                           	unsigned char tmp;                                                              C:\opensprints\FW\user\user.c
00205e   0e03     MOVLW     0x3            	unsigned char wait_count = 0;                                                   C:\opensprints\FW\user\user.c
002060   6adb     CLRF      0xdb,0x0                                                                                        
002062   0e04     MOVLW     0x4            	unsigned char byte_count = 0;	                                                  C:\opensprints\FW\user\user.c
002064   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Get byte_count                                                               C:\opensprints\FW\user\user.c
002066   0e01     MOVLW     0x1            	byte_count = extract_number (kUCHAR);                                           C:\opensprints\FW\user\user.c
002068   6ee6     MOVWF     0xe6,0x0                                                                                        
00206a   d8d9     RCALL     0x221e                                                                                          
00206c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00206e   0e04     MOVLW     0x4                                                                                             
002070   c01d     MOVFF     0x1d,0xfdb                                                                                      
002072   ffdb                                                                                                               
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           	// Limit check it                                                               C:\opensprints\FW\user\user.c
002074   0e04     MOVLW     0x4            	if (0 == byte_count || byte_count > 56)                                         C:\opensprints\FW\user\user.c
002076   50db     MOVF      0xdb,0x0,0x0                                                                                    
002078   e004     BZ        0x2082                                                                                          
00207a   0e04     MOVLW     0x4                                                                                             
00207c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00207e   0838     SUBLW     0x38                                                                                            
002080   e202     BC        0x2086                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002082   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
002084   d098     BRA       0x21b6         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Check for comma where ptr points                                             C:\opensprints\FW\user\user.c
002086   0100     MOVLB     0x0            	if (g_RX_buf[g_RX_buf_out] != ',')                                              C:\opensprints\FW\user\user.c
002088   5168     MOVF      0x68,0x0,0x1                                                                                    
00208a   6aea     CLRF      0xea,0x0                                                                                        
00208c   0f40     ADDLW     0x40                                                                                            
00208e   6ee9     MOVWF     0xe9,0x0                                                                                        
002090   0e02     MOVLW     0x2                                                                                             
002092   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002094   50ef     MOVF      0xef,0x0,0x0                                                                                    
002096   082c     SUBLW     0x2c                                                                                            
002098   e01d     BZ        0x20d4                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
00209a   0100     MOVLB     0x0            		printf ((rom char *)"!5 Err: Need comma next, found: '%c'\r\n", g_RX_buf[g_RX_buf_out]); C:\opensprints\FW\user\user.c
00209c   5168     MOVF      0x68,0x0,0x1                                                                                    
00209e   6aea     CLRF      0xea,0x0                                                                                        
0020a0   0f40     ADDLW     0x40                                                                                            
0020a2   6ee9     MOVWF     0xe9,0x0                                                                                        
0020a4   0e02     MOVLW     0x2                                                                                             
0020a6   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0020a8   50ef     MOVF      0xef,0x0,0x0                                                                                    
0020aa   6ee6     MOVWF     0xe6,0x0                                                                                        
0020ac   6ae6     CLRF      0xe6,0x0                                                                                        
0020ae   0e2a     MOVLW     0x2a                                                                                            
0020b0   6e2a     MOVWF     0x2a,0x0                                                                                        
0020b2   0e49     MOVLW     0x49                                                                                            
0020b4   6e2b     MOVWF     0x2b,0x0                                                                                        
0020b6   6a2c     CLRF      0x2c,0x0                                                                                        
0020b8   c02a     MOVFF     0x2a,0xfe6                                                                                      
0020ba   ffe6                                                                                                               
0020bc   c02b     MOVFF     0x2b,0xfe6                                                                                      
0020be   ffe6                                                                                                               
0020c0   c02c     MOVFF     0x2c,0xfe6                                                                                      
0020c2   ffe6                                                                                                               
0020c4   ec60     CALL      0x4cc0,0x0                                                                                      
0020c6   f026                                                                                                               
0020c8   6e2d     MOVWF     0x2d,0x0                                                                                        
0020ca   0e05     MOVLW     0x5                                                                                             
0020cc   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0020ce   502d     MOVF      0x2d,0x0,0x0                                                                                    
0020d0   8a0d     BSF       0xd,0x5,0x0    		bitset (error_byte, kERROR_BYTE_PRINTED_ERROR);                                C:\opensprints\FW\user\user.c
0020d2   d071     BRA       0x21b6         		return;                                                                        C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Move to the next character                                                   C:\opensprints\FW\user\user.c
0020d4   0100     MOVLB     0x0            	advance_RX_buf_out ();                                                          C:\opensprints\FW\user\user.c
0020d6   2b68     INCF      0x68,0x1,0x1                                                                                    
0020d8   0e40     MOVLW     0x40                                                                                            
0020da   0100     MOVLB     0x0                                                                                             
0020dc   5d68     SUBWF     0x68,0x0,0x1                                                                                    
0020de   e102     BNZ       0x20e4                                                                                          
0020e0   0100     MOVLB     0x0                                                                                             
0020e2   6b68     CLRF      0x68,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Make sure Port A is correct                                                  C:\opensprints\FW\user\user.c
0020e4   c060     MOVFF     0x60,0xf89     	LATA = g_BO_init;                                                               C:\opensprints\FW\user\user.c
0020e6   ff89                                                                                                               
0020e8   0100     MOVLB     0x0            	new_port_A_value = ((~LATA & g_BO_strobe_mask)) | (LATA & ~g_BO_strobe_mask);   C:\opensprints\FW\user\user.c
0020ea   1d61     COMF      0x61,0x0,0x1                                                                                    
0020ec   1489     ANDWF     0x89,0x0,0x0                                                                                    
0020ee   6e2a     MOVWF     0x2a,0x0                                                                                        
0020f0   1c89     COMF      0x89,0x0,0x0                                                                                    
0020f2   0100     MOVLB     0x0                                                                                             
0020f4   1561     ANDWF     0x61,0x0,0x1                                                                                    
0020f6   102a     IORWF     0x2a,0x0,0x0                                                                                    
0020f8   6ee7     MOVWF     0xe7,0x0                                                                                        
0020fa   0e01     MOVLW     0x1                                                                                             
0020fc   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0020fe   ffdb                                                                                                               
                                           	                                                                                C:\opensprints\FW\user\user.c
002100   0e04     MOVLW     0x4            	while (byte_count != 0)                                                         C:\opensprints\FW\user\user.c
002102   50db     MOVF      0xdb,0x0,0x0                                                                                    
002104   e056     BZ        0x21b2                                                                                          
0021b0   d7a7     BRA       0x2100                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// Pull in a single byte from input buffer                                     C:\opensprints\FW\user\user.c
002106   0100     MOVLB     0x0            		BO_data_byte = g_RX_buf[g_RX_buf_out];                                         C:\opensprints\FW\user\user.c
002108   5168     MOVF      0x68,0x0,0x1                                                                                    
00210a   6aea     CLRF      0xea,0x0                                                                                        
00210c   0f40     ADDLW     0x40                                                                                            
00210e   6ee9     MOVWF     0xe9,0x0                                                                                        
002110   0e02     MOVLW     0x2                                                                                             
002112   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002114   cfef     MOVFF     0xfef,0xfdf                                                                                     
002116   ffdf                                                                                                               
002118   0100     MOVLB     0x0            		advance_RX_buf_out ();                                                         C:\opensprints\FW\user\user.c
00211a   2b68     INCF      0x68,0x1,0x1                                                                                    
00211c   0e40     MOVLW     0x40                                                                                            
00211e   0100     MOVLB     0x0                                                                                             
002120   5d68     SUBWF     0x68,0x0,0x1                                                                                    
002122   e102     BNZ       0x2128                                                                                          
002124   0100     MOVLB     0x0                                                                                             
002126   6b68     CLRF      0x68,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           		// Count this byte                                                             C:\opensprints\FW\user\user.c
002128   0e04     MOVLW     0x4            		byte_count--;                                                                  C:\opensprints\FW\user\user.c
00212a   06db     DECF      0xdb,0x1,0x0                                                                                    
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           		// Output the byte on Port B                                                   C:\opensprints\FW\user\user.c
00212c   50df     MOVF      0xdf,0x0,0x0   		LATB = BO_data_byte;                                                           C:\opensprints\FW\user\user.c
00212e   6e8a     MOVWF     0x8a,0x0                                                                                        
                                           		                                                                               C:\opensprints\FW\user\user.c
                                           		// And strobe the Port A bits that we're supposed to                           C:\opensprints\FW\user\user.c
002130   0e01     MOVLW     0x1            		LATA = new_port_A_value;                                                       C:\opensprints\FW\user\user.c
002132   50db     MOVF      0xdb,0x0,0x0                                                                                    
002134   6e89     MOVWF     0x89,0x0                                                                                        
002136   0100     MOVLB     0x0            		if (g_BO_strobe_delay)                                                         C:\opensprints\FW\user\user.c
002138   5164     MOVF      0x64,0x0,0x1                                                                                    
00213a   e005     BZ        0x2146                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
00213c   c064     MOVFF     0x64,0xfe6     			Delay10TCYx (g_BO_strobe_delay);                                              C:\opensprints\FW\user\user.c
00213e   ffe6                                                                                                               
002140   ec07     CALL      0x500e,0x0                                                                                      
002142   f028                                                                                                               
002144   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
002146   c060     MOVFF     0x60,0xf89     		LATA = g_BO_init;                                                              C:\opensprints\FW\user\user.c
002148   ff89                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
00214a   0100     MOVLB     0x0            		if (g_BO_wait_delay)                                                           C:\opensprints\FW\user\user.c
00214c   5163     MOVF      0x63,0x0,0x1                                                                                    
00214e   e030     BZ        0x21b0                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// Now we spin on the wait bit specified in WaitMask                          C:\opensprints\FW\user\user.c
                                           			// (Used for Busy Bits) We also have to wait here                             C:\opensprints\FW\user\user.c
                                           			// for a maximum of g_BO_wait_delay, which is in 10 clock units               C:\opensprints\FW\user\user.c
                                           			// First we wait for the wait mask to become asserted                         C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           			// Set the wait counter to the number of delays we want                       C:\opensprints\FW\user\user.c
002150   0e03     MOVLW     0x3            			wait_count = g_BO_wait_delay;                                                 C:\opensprints\FW\user\user.c
002152   c063     MOVFF     0x63,0xfdb                                                                                      
002154   ffdb                                                                                                               
00217e   d7eb     BRA       0x2156         			while (                                                                       C:\opensprints\FW\user\user.c
002156   0100     MOVLB     0x0            				((g_BO_init & g_BO_wait_mask) == (PORTA & g_BO_wait_mask))                   C:\opensprints\FW\user\user.c
002158   5160     MOVF      0x60,0x0,0x1                                                                                    
00215a   0100     MOVLB     0x0                                                                                             
00215c   1562     ANDWF     0x62,0x0,0x1                                                                                    
00215e   6e2a     MOVWF     0x2a,0x0                                                                                        
002160   0100     MOVLB     0x0                                                                                             
002162   5162     MOVF      0x62,0x0,0x1                                                                                    
002164   1480     ANDWF     0x80,0x0,0x0                                                                                    
002166   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
                                           				&&                                                                           C:\opensprints\FW\user\user.c
00216a   0e03     MOVLW     0x3            				(wait_count != 0)                                                            C:\opensprints\FW\user\user.c
00216c   50db     MOVF      0xdb,0x0,0x0                                                                                    
002168   e10b     BNZ       0x2180         			)                                                                             C:\opensprints\FW\user\user.c
00216e   e008     BZ        0x2180                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
002170   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
002172   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
002174   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
002176   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
002178   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
00217a   0e03     MOVLW     0x3            				wait_count--;                                                                C:\opensprints\FW\user\user.c
00217c   06db     DECF      0xdb,0x1,0x0                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           			// Set the wait counter to the number of delays we want                       C:\opensprints\FW\user\user.c
002180   0e03     MOVLW     0x3            			wait_count = g_BO_wait_delay;                                                 C:\opensprints\FW\user\user.c
002182   c063     MOVFF     0x63,0xfdb                                                                                      
002184   ffdb                                                                                                               
                                           			// Then we wait for the wait mask to become de-asserted                       C:\opensprints\FW\user\user.c
0021ae   d7eb     BRA       0x2186         			while (                                                                       C:\opensprints\FW\user\user.c
002186   0100     MOVLB     0x0            				((g_BO_init & g_BO_wait_mask) != (PORTA & g_BO_wait_mask))                   C:\opensprints\FW\user\user.c
002188   5160     MOVF      0x60,0x0,0x1                                                                                    
00218a   0100     MOVLB     0x0                                                                                             
00218c   1562     ANDWF     0x62,0x0,0x1                                                                                    
00218e   6e2a     MOVWF     0x2a,0x0                                                                                        
002190   0100     MOVLB     0x0                                                                                             
002192   5162     MOVF      0x62,0x0,0x1                                                                                    
002194   1480     ANDWF     0x80,0x0,0x0                                                                                    
002196   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
                                           				&&                                                                           C:\opensprints\FW\user\user.c
00219a   0e03     MOVLW     0x3            				(wait_count != 0)                                                            C:\opensprints\FW\user\user.c
00219c   50db     MOVF      0xdb,0x0,0x0                                                                                    
002198   e00b     BZ        0x21b0         			)                                                                             C:\opensprints\FW\user\user.c
00219e   e008     BZ        0x21b0                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
0021a0   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
0021a2   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
0021a4   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
0021a6   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
0021a8   0000     NOP                      				Delay1TCY ();                                                                C:\opensprints\FW\user\user.c
0021aa   0e03     MOVLW     0x3            				wait_count--;                                                                C:\opensprints\FW\user\user.c
0021ac   06db     DECF      0xdb,0x1,0x0                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
0021b2   ec0f     CALL      0x141e,0x0     	print_ack ();                                                                   C:\opensprints\FW\user\user.c
0021b4   f00a                                                                                                               
0021b6   0e05     MOVLW     0x5            }                                                                                C:\opensprints\FW\user\user.c
0021b8   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0021ba   e202     BC        0x21c0                                                                                          
0021bc   6ae1     CLRF      0xe1,0x0                                                                                        
0021be   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0021c0   6ee1     MOVWF     0xe1,0x0                                                                                        
0021c2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0021c4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0021c6   ffd9                                                                                                               
0021c8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // SS Send SPI                                                                   C:\opensprints\FW\user\user.c
                                           void parse_SS_packet (void)                                                      C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
0021ca   ec0f     CALL      0x141e,0x0     	print_ack ();                                                                   C:\opensprints\FW\user\user.c
0021cc   f00a                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
0021ce   0012     RETURN    0x0            }	                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // RS Receive SPI                                                                C:\opensprints\FW\user\user.c
                                           void parse_RS_packet (void)                                                      C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
0021d0   ec0f     CALL      0x141e,0x0     	print_ack ();                                                                   C:\opensprints\FW\user\user.c
0021d2   f00a                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
0021d4   0012     RETURN    0x0            }	                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // CS Configure SPI                                                              C:\opensprints\FW\user\user.c
                                           void parse_CS_packet (void)                                                      C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
0021d6   ec0f     CALL      0x141e,0x0     	print_ack ();                                                                   C:\opensprints\FW\user\user.c
0021d8   f00a                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
0021da   0012     RETURN    0x0            }	                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // SI Send I2C                                                                   C:\opensprints\FW\user\user.c
                                           void parse_SI_packet (void)                                                      C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
0021dc   ec0f     CALL      0x141e,0x0     	print_ack ();                                                                   C:\opensprints\FW\user\user.c
0021de   f00a                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
0021e0   0012     RETURN    0x0            }	                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // RI Receive I2C                                                                C:\opensprints\FW\user\user.c
                                           void parse_RI_packet (void)                                                      C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
0021e2   ec0f     CALL      0x141e,0x0     	print_ack ();                                                                   C:\opensprints\FW\user\user.c
0021e4   f00a                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
0021e6   0012     RETURN    0x0            }	                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // CI Configure I2C                                                              C:\opensprints\FW\user\user.c
                                           void parse_CI_packet (void)                                                      C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
0021e8   ec0f     CALL      0x141e,0x0     	print_ack ();                                                                   C:\opensprints\FW\user\user.c
0021ea   f00a                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
0021ec   0012     RETURN    0x0            }	                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           void parse_GO_packet (void)                                                      C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
0021ee   0100     MOVLB     0x0            	is_racing = TRUE;				// make it possible to start monitoring sensors            C:\opensprints\FW\user\user.c
0021f0   0e01     MOVLW     0x1                                                                                             
0021f2   6feb     MOVWF     0xeb,0x1                                                                                        
0021f4   0100     MOVLB     0x0            	raceTimeCentisecs=0;			// restart the stopwatch                                 C:\opensprints\FW\user\user.c
0021f6   6b70     CLRF      0x70,0x1                                                                                        
0021f8   6b71     CLRF      0x71,0x1                                                                                        
0021fa   0100     MOVLB     0x0            	raceTimeMins=0;                                                                 C:\opensprints\FW\user\user.c
0021fc   6b6e     CLRF      0x6e,0x1                                                                                        
0021fe   6b6f     CLRF      0x6f,0x1                                                                                        
002200   84ca     BSF       0xca,0x2,0x0   	T2CONbits.TMR2ON=1;				// turn on the timer                                     C:\opensprints\FW\user\user.c
002202   0e0a     MOVLW     0xa            	ISR_D_RepeatRate = 10;			// every 10ms advance the timer                        C:\opensprints\FW\user\user.c
002204   6e02     MOVWF     0x2,0x0                                                                                         
002206   6a03     CLRF      0x3,0x0                                                                                         
002208   0012     RETURN    0x0            }	                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           void parse_ST_packet (void)                                                      C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
00220a   0100     MOVLB     0x0            	is_racing = FALSE;				// stop monitoring sensors                                C:\opensprints\FW\user\user.c
00220c   6beb     CLRF      0xeb,0x1                                                                                        
00220e   0100     MOVLB     0x0            	raceTestMode = FALSE;                                                           C:\opensprints\FW\user\user.c
002210   6bec     CLRF      0xec,0x1                                                                                        
002212   0012     RETURN    0x0            }	                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           void parse_HW_packet (void)                                                      C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
002214   0100     MOVLB     0x0            	raceTestMode = TRUE;                                                            C:\opensprints\FW\user\user.c
002216   0e01     MOVLW     0x1                                                                                             
002218   6fec     MOVWF     0xec,0x1                                                                                        
00221a   dfe9     RCALL     0x21ee         	parse_GO_packet();                                                              C:\opensprints\FW\user\user.c
00221c   0012     RETURN    0x0            }	                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Look at the string pointed to by ptr                                          C:\opensprints\FW\user\user.c
                                           // There should be a comma where ptr points to upon entry.                       C:\opensprints\FW\user\user.c
                                           // If not, throw a comma error.                                                  C:\opensprints\FW\user\user.c
                                           // If so, then look for up to three bytes after the                              C:\opensprints\FW\user\user.c
                                           // comma for numbers, and put them all into one                                  C:\opensprints\FW\user\user.c
                                           // byte (0-255). If the number is greater than 255, then                         C:\opensprints\FW\user\user.c
                                           // thow a range error.                                                           C:\opensprints\FW\user\user.c
                                           // Advance the pointer to the byte after the last number                         C:\opensprints\FW\user\user.c
                                           // and return.                                                                   C:\opensprints\FW\user\user.c
00221e   cfd9     MOVFF     0xfd9,0xfe6    signed short long extract_number(tExtractType type)                              C:\opensprints\FW\user\user.c
002220   ffe6                                                                                                               
002222   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002224   ffd9                                                                                                               
002226   0e04     MOVLW     0x4                                                                                             
002228   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	signed short long acc;                                                          C:\opensprints\FW\user\user.c
00222a   0e03     MOVLW     0x3            	unsigned char neg = FALSE;                                                      C:\opensprints\FW\user\user.c
00222c   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Check to see if we're already at the end                                     C:\opensprints\FW\user\user.c
00222e   0e0d     MOVLW     0xd            	if (kCR == g_RX_buf[g_RX_buf_out])                                              C:\opensprints\FW\user\user.c
002230   6e2a     MOVWF     0x2a,0x0                                                                                        
002232   0100     MOVLB     0x0                                                                                             
002234   5168     MOVF      0x68,0x0,0x1                                                                                    
002236   6aea     CLRF      0xea,0x0                                                                                        
002238   0f40     ADDLW     0x40                                                                                            
00223a   6ee9     MOVWF     0xe9,0x0                                                                                        
00223c   0e02     MOVLW     0x2                                                                                             
00223e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002240   50ef     MOVF      0xef,0x0,0x0                                                                                    
002242   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
002244   e105     BNZ       0x2250                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002246   880d     BSF       0xd,0x4,0x0    		bitset (error_byte, kERROR_BYTE_MISSING_PARAMETER);                            C:\opensprints\FW\user\user.c
002248   6a1d     CLRF      0x1d,0x0       		return (0);                                                                    C:\opensprints\FW\user\user.c
00224a   6a1e     CLRF      0x1e,0x0                                                                                        
00224c   6a1f     CLRF      0x1f,0x0                                                                                        
00224e   d193     BRA       0x2576                                                                                          
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Check for comma where ptr points                                             C:\opensprints\FW\user\user.c
002250   0100     MOVLB     0x0            	if (g_RX_buf[g_RX_buf_out] != ',')                                              C:\opensprints\FW\user\user.c
002252   5168     MOVF      0x68,0x0,0x1                                                                                    
002254   6aea     CLRF      0xea,0x0                                                                                        
002256   0f40     ADDLW     0x40                                                                                            
002258   6ee9     MOVWF     0xe9,0x0                                                                                        
00225a   0e02     MOVLW     0x2                                                                                             
00225c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00225e   50ef     MOVF      0xef,0x0,0x0                                                                                    
002260   082c     SUBLW     0x2c                                                                                            
002262   e020     BZ        0x22a4                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002264   0100     MOVLB     0x0            		printf ((rom char *)"!5 Err: Need comma next, found: '%c'\r\n", g_RX_buf[g_RX_buf_out]); C:\opensprints\FW\user\user.c
002266   5168     MOVF      0x68,0x0,0x1                                                                                    
002268   6aea     CLRF      0xea,0x0                                                                                        
00226a   0f40     ADDLW     0x40                                                                                            
00226c   6ee9     MOVWF     0xe9,0x0                                                                                        
00226e   0e02     MOVLW     0x2                                                                                             
002270   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002272   50ef     MOVF      0xef,0x0,0x0                                                                                    
002274   6ee6     MOVWF     0xe6,0x0                                                                                        
002276   6ae6     CLRF      0xe6,0x0                                                                                        
002278   0e2a     MOVLW     0x2a                                                                                            
00227a   6e2a     MOVWF     0x2a,0x0                                                                                        
00227c   0e49     MOVLW     0x49                                                                                            
00227e   6e2b     MOVWF     0x2b,0x0                                                                                        
002280   6a2c     CLRF      0x2c,0x0                                                                                        
002282   c02a     MOVFF     0x2a,0xfe6                                                                                      
002284   ffe6                                                                                                               
002286   c02b     MOVFF     0x2b,0xfe6                                                                                      
002288   ffe6                                                                                                               
00228a   c02c     MOVFF     0x2c,0xfe6                                                                                      
00228c   ffe6                                                                                                               
00228e   ec60     CALL      0x4cc0,0x0                                                                                      
002290   f026                                                                                                               
002292   6e2d     MOVWF     0x2d,0x0                                                                                        
002294   0e05     MOVLW     0x5                                                                                             
002296   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
002298   502d     MOVF      0x2d,0x0,0x0                                                                                    
00229a   8a0d     BSF       0xd,0x5,0x0    		bitset (error_byte, kERROR_BYTE_PRINTED_ERROR);                                C:\opensprints\FW\user\user.c
00229c   6a1d     CLRF      0x1d,0x0       		return (0);                                                                    C:\opensprints\FW\user\user.c
00229e   6a1e     CLRF      0x1e,0x0                                                                                        
0022a0   6a1f     CLRF      0x1f,0x0                                                                                        
0022a2   d169     BRA       0x2576                                                                                          
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Move to the next character                                                   C:\opensprints\FW\user\user.c
0022a4   0100     MOVLB     0x0            	advance_RX_buf_out ();                                                          C:\opensprints\FW\user\user.c
0022a6   2b68     INCF      0x68,0x1,0x1                                                                                    
0022a8   0e40     MOVLW     0x40                                                                                            
0022aa   0100     MOVLB     0x0                                                                                             
0022ac   5d68     SUBWF     0x68,0x0,0x1                                                                                    
0022ae   e102     BNZ       0x22b4                                                                                          
0022b0   0100     MOVLB     0x0                                                                                             
0022b2   6b68     CLRF      0x68,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Now check for a sign character if we're not looking for ASCII chars          C:\opensprints\FW\user\user.c
                                           	if (                                                                            C:\opensprints\FW\user\user.c
0022b4   0e2d     MOVLW     0x2d           		('-' == g_RX_buf[g_RX_buf_out])                                                C:\opensprints\FW\user\user.c
0022b6   6e2a     MOVWF     0x2a,0x0                                                                                        
0022b8   0100     MOVLB     0x0                                                                                             
0022ba   5168     MOVF      0x68,0x0,0x1                                                                                    
0022bc   6aea     CLRF      0xea,0x0                                                                                        
0022be   0f40     ADDLW     0x40                                                                                            
0022c0   6ee9     MOVWF     0xe9,0x0                                                                                        
0022c2   0e02     MOVLW     0x2                                                                                             
0022c4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0022c6   50ef     MOVF      0xef,0x0,0x0                                                                                    
0022c8   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
                                           		&&                                                                             C:\opensprints\FW\user\user.c
                                           		(                                                                              C:\opensprints\FW\user\user.c
0022cc   0e04     MOVLW     0x4            			(kASCII_CHAR != type)                                                         C:\opensprints\FW\user\user.c
0022ce   6e2b     MOVWF     0x2b,0x0                                                                                        
0022d0   0efe     MOVLW     0xfe                                                                                            
0022d2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0022d4   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
                                           			&&                                                                            C:\opensprints\FW\user\user.c
0022d8   0e05     MOVLW     0x5            			(kUCASE_ASCII_CHAR != type)                                                   C:\opensprints\FW\user\user.c
0022da   6e2c     MOVWF     0x2c,0x0                                                                                        
0022dc   0efe     MOVLW     0xfe                                                                                            
0022de   50db     MOVF      0xdb,0x0,0x0                                                                                    
0022e0   5c2c     SUBWF     0x2c,0x0,0x0                                                                                    
0022d6   e022     BZ        0x231c         		)                                                                              C:\opensprints\FW\user\user.c
0022e2   e01c     BZ        0x231c                                                                                          
0022ca   e128     BNZ       0x231c         	)                                                                               C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// It's an error if we see a negative sign on an unsigned value                C:\opensprints\FW\user\user.c
                                           		if (                                                                           C:\opensprints\FW\user\user.c
0022e4   0efe     MOVLW     0xfe           			(kUCHAR == type)                                                              C:\opensprints\FW\user\user.c
0022e6   04db     DECF      0xdb,0x0,0x0                                                                                    
                                           			||                                                                            C:\opensprints\FW\user\user.c
0022ea   0e03     MOVLW     0x3            			(kUINT == type)                                                               C:\opensprints\FW\user\user.c
0022ec   6e2a     MOVWF     0x2a,0x0                                                                                        
0022ee   0efe     MOVLW     0xfe                                                                                            
0022f0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0022f2   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
0022e8   e006     BZ        0x22f6         		)                                                                              C:\opensprints\FW\user\user.c
0022f4   e106     BNZ       0x2302                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
0022f6   8c0d     BSF       0xd,0x6,0x0    			bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                     C:\opensprints\FW\user\user.c
0022f8   6a1d     CLRF      0x1d,0x0       			return (0);                                                                   C:\opensprints\FW\user\user.c
0022fa   6a1e     CLRF      0x1e,0x0                                                                                        
0022fc   6a1f     CLRF      0x1f,0x0                                                                                        
0022fe   d13b     BRA       0x2576                                                                                          
                                           		}                                                                              C:\opensprints\FW\user\user.c
002300   d00d     BRA       0x231c         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
002302   0e01     MOVLW     0x1            			neg = TRUE;                                                                   C:\opensprints\FW\user\user.c
002304   6ef3     MOVWF     0xf3,0x0                                                                                        
002306   0e03     MOVLW     0x3                                                                                             
002308   cff3     MOVFF     0xff3,0xfdb                                                                                     
00230a   ffdb                                                                                                               
                                           			// Move to the next character                                                 C:\opensprints\FW\user\user.c
00230c   0100     MOVLB     0x0            			advance_RX_buf_out ();                                                        C:\opensprints\FW\user\user.c
00230e   2b68     INCF      0x68,0x1,0x1                                                                                    
002310   0e40     MOVLW     0x40                                                                                            
002312   0100     MOVLB     0x0                                                                                             
002314   5d68     SUBWF     0x68,0x0,0x1                                                                                    
002316   e102     BNZ       0x231c                                                                                          
002318   0100     MOVLB     0x0                                                                                             
00231a   6b68     CLRF      0x68,0x1                                                                                        
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// If we need to get a digit, go do that                                        C:\opensprints\FW\user\user.c
                                           	if (                                                                            C:\opensprints\FW\user\user.c
00231c   0e04     MOVLW     0x4            		(kASCII_CHAR != type)                                                          C:\opensprints\FW\user\user.c
00231e   6e2a     MOVWF     0x2a,0x0                                                                                        
002320   0efe     MOVLW     0xfe                                                                                            
002322   50db     MOVF      0xdb,0x0,0x0                                                                                    
002324   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
                                           		&&                                                                             C:\opensprints\FW\user\user.c
002328   0e05     MOVLW     0x5            		(kUCASE_ASCII_CHAR != type)                                                    C:\opensprints\FW\user\user.c
00232a   6e2b     MOVWF     0x2b,0x0                                                                                        
00232c   0efe     MOVLW     0xfe                                                                                            
00232e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002330   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
002326   e011     BZ        0x234a         	)                                                                               C:\opensprints\FW\user\user.c
002332   e00b     BZ        0x234a                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002334   0e05     MOVLW     0x5            		extract_digit(&acc, 5);                                                        C:\opensprints\FW\user\user.c
002336   6ee6     MOVWF     0xe6,0x0                                                                                        
002338   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
00233a   ffe6                                                                                                               
00233c   cfda     MOVFF     0xfda,0xfe6                                                                                     
00233e   ffe6                                                                                                               
002340   d924     RCALL     0x258a                                                                                          
002342   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002344   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002346   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\opensprints\FW\user\user.c
002348   d03a     BRA       0x23be         	else                                                                            C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// Otherwise just copy the byte                                                C:\opensprints\FW\user\user.c
00234a   0100     MOVLB     0x0            		acc = g_RX_buf[g_RX_buf_out];                                                  C:\opensprints\FW\user\user.c
00234c   5168     MOVF      0x68,0x0,0x1                                                                                    
00234e   6aea     CLRF      0xea,0x0                                                                                        
002350   0f40     ADDLW     0x40                                                                                            
002352   6ee9     MOVWF     0xe9,0x0                                                                                        
002354   0e02     MOVLW     0x2                                                                                             
002356   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002358   cfef     MOVFF     0xfef,0x2a                                                                                      
00235a   f02a                                                                                                               
00235c   6a2b     CLRF      0x2b,0x0                                                                                        
00235e   6a2c     CLRF      0x2c,0x0                                                                                        
002360   c02a     MOVFF     0x2a,0xfdf                                                                                      
002362   ffdf                                                                                                               
002364   0e01     MOVLW     0x1                                                                                             
002366   c02b     MOVFF     0x2b,0xfdb                                                                                      
002368   ffdb                                                                                                               
00236a   0e02     MOVLW     0x2                                                                                             
00236c   c02c     MOVFF     0x2c,0xfdb                                                                                      
00236e   ffdb                                                                                                               
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           		// Force uppercase if that's what type we have                                 C:\opensprints\FW\user\user.c
002370   0e05     MOVLW     0x5            		if (kUCASE_ASCII_CHAR == type)                                                 C:\opensprints\FW\user\user.c
002372   6e2a     MOVWF     0x2a,0x0                                                                                        
002374   0efe     MOVLW     0xfe                                                                                            
002376   50db     MOVF      0xdb,0x0,0x0                                                                                    
002378   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
00237a   e119     BNZ       0x23ae                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
00237c   0e00     MOVLW     0x0            			acc = toupper (acc);                                                          C:\opensprints\FW\user\user.c
00237e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002380   ffe6                                                                                                               
002382   0e01     MOVLW     0x1                                                                                             
002384   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002386   ffe6                                                                                                               
002388   ec59     CALL      0x4eb2,0x0                                                                                      
00238a   f027                                                                                                               
00238c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00238e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002390   cff3     MOVFF     0xff3,0x2a                                                                                      
002392   f02a                                                                                                               
002394   cff4     MOVFF     0xff4,0x2b                                                                                      
002396   f02b                                                                                                               
002398   6a2c     CLRF      0x2c,0x0                                                                                        
00239a   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
00239c   682c     SETF      0x2c,0x0                                                                                        
00239e   c02a     MOVFF     0x2a,0xfdf                                                                                      
0023a0   ffdf                                                                                                               
0023a2   0e01     MOVLW     0x1                                                                                             
0023a4   c02b     MOVFF     0x2b,0xfdb                                                                                      
0023a6   ffdb                                                                                                               
0023a8   0e02     MOVLW     0x2                                                                                             
0023aa   c02c     MOVFF     0x2c,0xfdb                                                                                      
0023ac   ffdb                                                                                                               
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           		                                                                               C:\opensprints\FW\user\user.c
                                           		// Move to the next character                                                  C:\opensprints\FW\user\user.c
0023ae   0100     MOVLB     0x0            		advance_RX_buf_out ();                                                         C:\opensprints\FW\user\user.c
0023b0   2b68     INCF      0x68,0x1,0x1                                                                                    
0023b2   0e40     MOVLW     0x40                                                                                            
0023b4   0100     MOVLB     0x0                                                                                             
0023b6   5d68     SUBWF     0x68,0x0,0x1                                                                                    
0023b8   e102     BNZ       0x23be                                                                                          
0023ba   0100     MOVLB     0x0                                                                                             
0023bc   6b68     CLRF      0x68,0x1                                                                                        
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Handle the negative sign                                                     C:\opensprints\FW\user\user.c
0023be   0e03     MOVLW     0x3            	if (neg)                                                                        C:\opensprints\FW\user\user.c
0023c0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0023c2   e021     BZ        0x2406                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0023c4   cfdf     MOVFF     0xfdf,0x2a     		acc = -acc;                                                                    C:\opensprints\FW\user\user.c
0023c6   f02a                                                                                                               
0023c8   0e01     MOVLW     0x1                                                                                             
0023ca   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0023cc   f02b                                                                                                               
0023ce   0e02     MOVLW     0x2                                                                                             
0023d0   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0023d2   f02c                                                                                                               
0023d4   6822     SETF      0x22,0x0                                                                                        
0023d6   6823     SETF      0x23,0x0                                                                                        
0023d8   6824     SETF      0x24,0x0                                                                                        
0023da   c02a     MOVFF     0x2a,0x1d                                                                                       
0023dc   f01d                                                                                                               
0023de   c02b     MOVFF     0x2b,0x1e                                                                                       
0023e0   f01e                                                                                                               
0023e2   c02c     MOVFF     0x2c,0x1f                                                                                       
0023e4   f01f                                                                                                               
0023e6   ec34     CALL      0x4a68,0x0                                                                                      
0023e8   f025                                                                                                               
0023ea   c01a     MOVFF     0x1a,0x2a                                                                                       
0023ec   f02a                                                                                                               
0023ee   c01b     MOVFF     0x1b,0x2b                                                                                       
0023f0   f02b                                                                                                               
0023f2   c01c     MOVFF     0x1c,0x2c                                                                                       
0023f4   f02c                                                                                                               
0023f6   c02a     MOVFF     0x2a,0xfdf                                                                                      
0023f8   ffdf                                                                                                               
0023fa   0e01     MOVLW     0x1                                                                                             
0023fc   c02b     MOVFF     0x2b,0xfdb                                                                                      
0023fe   ffdb                                                                                                               
002400   0e02     MOVLW     0x2                                                                                             
002402   c02c     MOVFF     0x2c,0xfdb                                                                                      
002404   ffdb                                                                                                               
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// Range check the new value                                                    C:\opensprints\FW\user\user.c
                                           	if (                                                                            C:\opensprints\FW\user\user.c
                                           		(                                                                              C:\opensprints\FW\user\user.c
002406   0efe     MOVLW     0xfe           			kCHAR == type                                                                 C:\opensprints\FW\user\user.c
002408   50db     MOVF      0xdb,0x0,0x0                                                                                    
                                           			&&                                                                            C:\opensprints\FW\user\user.c
                                           			(                                                                             C:\opensprints\FW\user\user.c
00240c   cfdf     MOVFF     0xfdf,0x2a     				(acc > 127)                                                                  C:\opensprints\FW\user\user.c
00240e   f02a                                                                                                               
002410   0e01     MOVLW     0x1                                                                                             
002412   cfdb     MOVFF     0xfdb,0x2b                                                                                      
002414   f02b                                                                                                               
002416   0e02     MOVLW     0x2                                                                                             
002418   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00241a   f02c                                                                                                               
00241c   342c     RLCF      0x2c,0x0,0x0                                                                                    
00241e   0e00     MOVLW     0x0                                                                                             
002420   182c     XORWF     0x2c,0x0,0x0                                                                                    
002422   e607     BN        0x2432                                                                                          
002424   80d8     BSF       0xd8,0x0,0x0                                                                                    
002426   0e7f     MOVLW     0x7f                                                                                            
002428   542a     SUBFWB    0x2a,0x0,0x0                                                                                    
00242a   0e00     MOVLW     0x0                                                                                             
00242c   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
00242e   0e00     MOVLW     0x0                                                                                             
002430   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
                                           				||                                                                           C:\opensprints\FW\user\user.c
002436   cfd9     MOVFF     0xfd9,0xfe9    				(acc < -128)                                                                 C:\opensprints\FW\user\user.c
002438   ffe9                                                                                                               
00243a   cfda     MOVFF     0xfda,0xfea                                                                                     
00243c   ffea                                                                                                               
00243e   0e02     MOVLW     0x2                                                                                             
002440   80d8     BSF       0xd8,0x0,0x0                                                                                    
002442   50eb     MOVF      0xeb,0x0,0x0                                                                                    
002444   0aff     XORLW     0xff                                                                                            
002446   e606     BN        0x2454                                                                                          
002448   0e80     MOVLW     0x80                                                                                            
00244a   5cee     SUBWF     0xee,0x0,0x0                                                                                    
00244c   0eff     MOVLW     0xff                                                                                            
00244e   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
002450   0eff     MOVLW     0xff                                                                                            
002452   58ef     SUBWFB    0xef,0x0,0x0                                                                                    
002432   e201     BC        0x2436         			)                                                                             C:\opensprints\FW\user\user.c
002434   d08c     BRA       0x254e                                                                                          
002454   e201     BC        0x2458                                                                                          
002456   d07b     BRA       0x254e                                                                                          
00240a   e126     BNZ       0x2458         		)                                                                              C:\opensprints\FW\user\user.c
                                           		||                                                                             C:\opensprints\FW\user\user.c
                                           		(                                                                              C:\opensprints\FW\user\user.c
                                           			kUCHAR == type                                                                C:\opensprints\FW\user\user.c
002458   0efe     MOVLW     0xfe           			&&                                                                            C:\opensprints\FW\user\user.c
00245a   04db     DECF      0xdb,0x0,0x0                                                                                    
                                           			(                                                                             C:\opensprints\FW\user\user.c
00245e   cfdf     MOVFF     0xfdf,0x2d     				(acc > 255)                                                                  C:\opensprints\FW\user\user.c
002460   f02d                                                                                                               
002462   0e01     MOVLW     0x1                                                                                             
002464   cfdb     MOVFF     0xfdb,0x2e                                                                                      
002466   f02e                                                                                                               
002468   0e02     MOVLW     0x2                                                                                             
00246a   cfdb     MOVFF     0xfdb,0x2f                                                                                      
00246c   f02f                                                                                                               
00246e   342f     RLCF      0x2f,0x0,0x0                                                                                    
002470   0e00     MOVLW     0x0                                                                                             
002472   182f     XORWF     0x2f,0x0,0x0                                                                                    
002474   e607     BN        0x2484                                                                                          
002476   80d8     BSF       0xd8,0x0,0x0                                                                                    
002478   0eff     MOVLW     0xff                                                                                            
00247a   542d     SUBFWB    0x2d,0x0,0x0                                                                                    
00247c   0e00     MOVLW     0x0                                                                                             
00247e   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
002480   0e00     MOVLW     0x0                                                                                             
002482   542f     SUBFWB    0x2f,0x0,0x0                                                                                    
                                           				||                                                                           C:\opensprints\FW\user\user.c
002486   cfd9     MOVFF     0xfd9,0xfe9    				(acc < 0)                                                                    C:\opensprints\FW\user\user.c
002488   ffe9                                                                                                               
00248a   cfda     MOVFF     0xfda,0xfea                                                                                     
00248c   ffea                                                                                                               
00248e   0e02     MOVLW     0x2                                                                                             
002490   90d8     BCF       0xd8,0x0,0x0                                                                                    
002492   50eb     MOVF      0xeb,0x0,0x0                                                                                    
002494   0a00     XORLW     0x0                                                                                             
002496   e606     BN        0x24a4                                                                                          
002498   0e00     MOVLW     0x0                                                                                             
00249a   5cee     SUBWF     0xee,0x0,0x0                                                                                    
00249c   0e00     MOVLW     0x0                                                                                             
00249e   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
0024a0   0e00     MOVLW     0x0                                                                                             
0024a2   58ef     SUBWFB    0xef,0x0,0x0                                                                                    
002484   e364     BNC       0x254e         			)                                                                             C:\opensprints\FW\user\user.c
0024a4   e354     BNC       0x254e                                                                                          
00245c   e124     BNZ       0x24a6         		)                                                                              C:\opensprints\FW\user\user.c
                                           		||                                                                             C:\opensprints\FW\user\user.c
                                           		(                                                                              C:\opensprints\FW\user\user.c
0024a6   0e02     MOVLW     0x2            			kINT == type                                                                  C:\opensprints\FW\user\user.c
0024a8   6e30     MOVWF     0x30,0x0                                                                                        
0024aa   0efe     MOVLW     0xfe                                                                                            
0024ac   50db     MOVF      0xdb,0x0,0x0                                                                                    
0024ae   5c30     SUBWF     0x30,0x0,0x0   			&&                                                                            C:\opensprints\FW\user\user.c
                                           			(                                                                             C:\opensprints\FW\user\user.c
0024b2   cfdf     MOVFF     0xfdf,0x31     				(acc > 32767)                                                                C:\opensprints\FW\user\user.c
0024b4   f031                                                                                                               
0024b6   0e01     MOVLW     0x1                                                                                             
0024b8   cfdb     MOVFF     0xfdb,0x32                                                                                      
0024ba   f032                                                                                                               
0024bc   0e02     MOVLW     0x2                                                                                             
0024be   cfdb     MOVFF     0xfdb,0x33                                                                                      
0024c0   f033                                                                                                               
0024c2   3433     RLCF      0x33,0x0,0x0                                                                                    
0024c4   0e00     MOVLW     0x0                                                                                             
0024c6   1833     XORWF     0x33,0x0,0x0                                                                                    
0024c8   e607     BN        0x24d8                                                                                          
0024ca   80d8     BSF       0xd8,0x0,0x0                                                                                    
0024cc   0eff     MOVLW     0xff                                                                                            
0024ce   5431     SUBFWB    0x31,0x0,0x0                                                                                    
0024d0   0e7f     MOVLW     0x7f                                                                                            
0024d2   5432     SUBFWB    0x32,0x0,0x0                                                                                    
0024d4   0e00     MOVLW     0x0                                                                                             
0024d6   5433     SUBFWB    0x33,0x0,0x0                                                                                    
                                           				||                                                                           C:\opensprints\FW\user\user.c
0024da   cfd9     MOVFF     0xfd9,0xfe9    				(acc < -32768)                                                               C:\opensprints\FW\user\user.c
0024dc   ffe9                                                                                                               
0024de   cfda     MOVFF     0xfda,0xfea                                                                                     
0024e0   ffea                                                                                                               
0024e2   0e02     MOVLW     0x2                                                                                             
0024e4   80d8     BSF       0xd8,0x0,0x0                                                                                    
0024e6   50eb     MOVF      0xeb,0x0,0x0                                                                                    
0024e8   0aff     XORLW     0xff                                                                                            
0024ea   e606     BN        0x24f8                                                                                          
0024ec   0e00     MOVLW     0x0                                                                                             
0024ee   5cee     SUBWF     0xee,0x0,0x0                                                                                    
0024f0   0e80     MOVLW     0x80                                                                                            
0024f2   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
0024f4   0eff     MOVLW     0xff                                                                                            
0024f6   58ef     SUBWFB    0xef,0x0,0x0                                                                                    
0024d8   e33a     BNC       0x254e         			)                                                                             C:\opensprints\FW\user\user.c
0024f8   e32a     BNC       0x254e                                                                                          
0024b0   e124     BNZ       0x24fa         		)                                                                              C:\opensprints\FW\user\user.c
                                           		||                                                                             C:\opensprints\FW\user\user.c
                                           		(                                                                              C:\opensprints\FW\user\user.c
0024fa   0e03     MOVLW     0x3            			kUINT == type                                                                 C:\opensprints\FW\user\user.c
0024fc   6e34     MOVWF     0x34,0x0                                                                                        
0024fe   0efe     MOVLW     0xfe                                                                                            
002500   50db     MOVF      0xdb,0x0,0x0                                                                                    
002502   5c34     SUBWF     0x34,0x0,0x0   			&&                                                                            C:\opensprints\FW\user\user.c
                                           			(                                                                             C:\opensprints\FW\user\user.c
002506   cfdf     MOVFF     0xfdf,0x35     				(acc > 65535)                                                                C:\opensprints\FW\user\user.c
002508   f035                                                                                                               
00250a   0e01     MOVLW     0x1                                                                                             
00250c   cfdb     MOVFF     0xfdb,0x36                                                                                      
00250e   f036                                                                                                               
002510   0e02     MOVLW     0x2                                                                                             
002512   cfdb     MOVFF     0xfdb,0x37                                                                                      
002514   f037                                                                                                               
002516   3437     RLCF      0x37,0x0,0x0                                                                                    
002518   0e00     MOVLW     0x0                                                                                             
00251a   1837     XORWF     0x37,0x0,0x0                                                                                    
00251c   e607     BN        0x252c                                                                                          
00251e   80d8     BSF       0xd8,0x0,0x0                                                                                    
002520   0eff     MOVLW     0xff                                                                                            
002522   5435     SUBFWB    0x35,0x0,0x0                                                                                    
002524   0eff     MOVLW     0xff                                                                                            
002526   5436     SUBFWB    0x36,0x0,0x0                                                                                    
002528   0e00     MOVLW     0x0                                                                                             
00252a   5437     SUBFWB    0x37,0x0,0x0                                                                                    
                                           				||                                                                           C:\opensprints\FW\user\user.c
00252e   cfd9     MOVFF     0xfd9,0xfe9    				(acc < 0)                                                                    C:\opensprints\FW\user\user.c
002530   ffe9                                                                                                               
002532   cfda     MOVFF     0xfda,0xfea                                                                                     
002534   ffea                                                                                                               
002536   0e02     MOVLW     0x2                                                                                             
002538   90d8     BCF       0xd8,0x0,0x0                                                                                    
00253a   50eb     MOVF      0xeb,0x0,0x0                                                                                    
00253c   0a00     XORLW     0x0                                                                                             
00253e   e606     BN        0x254c                                                                                          
002540   0e00     MOVLW     0x0                                                                                             
002542   5cee     SUBWF     0xee,0x0,0x0                                                                                    
002544   0e00     MOVLW     0x0                                                                                             
002546   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
002548   0e00     MOVLW     0x0                                                                                             
00254a   58ef     SUBWFB    0xef,0x0,0x0                                                                                    
00252c   e310     BNC       0x254e         			)                                                                             C:\opensprints\FW\user\user.c
00254c   e205     BC        0x2558                                                                                          
002504   e129     BNZ       0x2558         		)                                                                              C:\opensprints\FW\user\user.c
                                           	)                                                                               C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
00254e   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\opensprints\FW\user\user.c
002550   6a1d     CLRF      0x1d,0x0       		return (0);                                                                    C:\opensprints\FW\user\user.c
002552   6a1e     CLRF      0x1e,0x0                                                                                        
002554   6a1f     CLRF      0x1f,0x0                                                                                        
002556   d00f     BRA       0x2576                                                                                          
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
002558   cfdf     MOVFF     0xfdf,0x2a     	return(acc);	                                                                   C:\opensprints\FW\user\user.c
00255a   f02a                                                                                                               
00255c   0e01     MOVLW     0x1                                                                                             
00255e   cfdb     MOVFF     0xfdb,0x2b                                                                                      
002560   f02b                                                                                                               
002562   0e02     MOVLW     0x2                                                                                             
002564   cfdb     MOVFF     0xfdb,0x2c                                                                                      
002566   f02c                                                                                                               
002568   c02a     MOVFF     0x2a,0x1d                                                                                       
00256a   f01d                                                                                                               
00256c   c02b     MOVFF     0x2b,0x1e                                                                                       
00256e   f01e                                                                                                               
002570   c02c     MOVFF     0x2c,0x1f                                                                                       
002572   f01f                                                                                                               
002574   d000     BRA       0x2576                                                                                          
002576   0e04     MOVLW     0x4            }                                                                                C:\opensprints\FW\user\user.c
002578   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00257a   e202     BC        0x2580                                                                                          
00257c   6ae1     CLRF      0xe1,0x0                                                                                        
00257e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002580   6ee1     MOVWF     0xe1,0x0                                                                                        
002582   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002584   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002586   ffd9                                                                                                               
002588   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // Loop 'digits' number of times, looking at the                                 C:\opensprints\FW\user\user.c
                                           // byte in input_buffer index *ptr, and if it is                                 C:\opensprints\FW\user\user.c
                                           // a digit, adding it to acc. Take care of                                       C:\opensprints\FW\user\user.c
                                           // powers of ten as well. If you hit a non-numerical                             C:\opensprints\FW\user\user.c
                                           // char, then return FALSE, otherwise return TRUE.                               C:\opensprints\FW\user\user.c
                                           // Store result as you go in *acc.                                               C:\opensprints\FW\user\user.c
00258a   cfd9     MOVFF     0xfd9,0xfe6    signed char extract_digit(signed short long * acc,	unsigned char digits)         C:\opensprints\FW\user\user.c
00258c   ffe6                                                                                                               
00258e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002590   ffd9                                                                                                               
002592   0e02     MOVLW     0x2                                                                                             
002594   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	unsigned char val;                                                              C:\opensprints\FW\user\user.c
                                           	unsigned char digit_cnt;                                                        C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
002596   0efd     MOVLW     0xfd           	*acc = 0;                                                                       C:\opensprints\FW\user\user.c
002598   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00259a   ffe9                                                                                                               
00259c   0efe     MOVLW     0xfe                                                                                            
00259e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0025a0   ffea                                                                                                               
0025a2   6aee     CLRF      0xee,0x0                                                                                        
0025a4   6aee     CLRF      0xee,0x0                                                                                        
0025a6   6aee     CLRF      0xee,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\user\user.c
0025a8   0e01     MOVLW     0x1            	for (digit_cnt = 0; digit_cnt < digits; digit_cnt++)                            C:\opensprints\FW\user\user.c
0025aa   6adb     CLRF      0xdb,0x0                                                                                        
0025ac   0efc     MOVLW     0xfc                                                                                            
0025ae   50db     MOVF      0xdb,0x0,0x0                                                                                    
0025b0   6ef3     MOVWF     0xf3,0x0                                                                                        
0025b2   0e01     MOVLW     0x1                                                                                             
0025b4   cfdb     MOVFF     0xfdb,0xff4                                                                                     
0025b6   fff4                                                                                                               
0025b8   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0025ba   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
0025bc   e255     BC        0x2668                                                                                          
002662   0e01     MOVLW     0x1                                                                                             
002664   2adb     INCF      0xdb,0x1,0x0                                                                                    
002666   d7a2     BRA       0x25ac                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0025be   0100     MOVLB     0x0            		val = g_RX_buf[g_RX_buf_out];                                                  C:\opensprints\FW\user\user.c
0025c0   5168     MOVF      0x68,0x0,0x1                                                                                    
0025c2   6aea     CLRF      0xea,0x0                                                                                        
0025c4   0f40     ADDLW     0x40                                                                                            
0025c6   6ee9     MOVWF     0xe9,0x0                                                                                        
0025c8   0e02     MOVLW     0x2                                                                                             
0025ca   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0025cc   cfef     MOVFF     0xfef,0xfdf                                                                                     
0025ce   ffdf                                                                                                               
0025d0   0e30     MOVLW     0x30           		if ((val >= 48) && (val <= 57))                                                C:\opensprints\FW\user\user.c
0025d2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0025d4   e344     BNC       0x265e                                                                                          
0025d6   50df     MOVF      0xdf,0x0,0x0                                                                                    
0025d8   0839     SUBLW     0x39                                                                                            
0025da   e341     BNC       0x265e                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
0025dc   0efd     MOVLW     0xfd           			*acc = (*acc * 10) + (val - 48);                                              C:\opensprints\FW\user\user.c
0025de   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0025e0   ffe9                                                                                                               
0025e2   0efe     MOVLW     0xfe                                                                                            
0025e4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0025e6   ffea                                                                                                               
0025e8   cfee     MOVFF     0xfee,0x2d                                                                                      
0025ea   f02d                                                                                                               
0025ec   cfee     MOVFF     0xfee,0x2e                                                                                      
0025ee   f02e                                                                                                               
0025f0   cfef     MOVFF     0xfef,0x2f                                                                                      
0025f2   f02f                                                                                                               
0025f4   0e0a     MOVLW     0xa                                                                                             
0025f6   6e22     MOVWF     0x22,0x0                                                                                        
0025f8   6a23     CLRF      0x23,0x0                                                                                        
0025fa   6a24     CLRF      0x24,0x0                                                                                        
0025fc   c02d     MOVFF     0x2d,0x1d                                                                                       
0025fe   f01d                                                                                                               
002600   c02e     MOVFF     0x2e,0x1e                                                                                       
002602   f01e                                                                                                               
002604   c02f     MOVFF     0x2f,0x1f                                                                                       
002606   f01f                                                                                                               
002608   ec34     CALL      0x4a68,0x0                                                                                      
00260a   f025                                                                                                               
00260c   c01a     MOVFF     0x1a,0x2d                                                                                       
00260e   f02d                                                                                                               
002610   c01b     MOVFF     0x1b,0x2e                                                                                       
002612   f02e                                                                                                               
002614   c01c     MOVFF     0x1c,0x2f                                                                                       
002616   f02f                                                                                                               
002618   0e30     MOVLW     0x30                                                                                            
00261a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00261c   6e30     MOVWF     0x30,0x0                                                                                        
00261e   6a31     CLRF      0x31,0x0                                                                                        
002620   6a32     CLRF      0x32,0x0                                                                                        
002622   502d     MOVF      0x2d,0x0,0x0                                                                                    
002624   2430     ADDWF     0x30,0x0,0x0                                                                                    
002626   6e2a     MOVWF     0x2a,0x0                                                                                        
002628   502e     MOVF      0x2e,0x0,0x0                                                                                    
00262a   2031     ADDWFC    0x31,0x0,0x0                                                                                    
00262c   6e2b     MOVWF     0x2b,0x0                                                                                        
00262e   502f     MOVF      0x2f,0x0,0x0                                                                                    
002630   2032     ADDWFC    0x32,0x0,0x0                                                                                    
002632   6e2c     MOVWF     0x2c,0x0                                                                                        
002634   0efd     MOVLW     0xfd                                                                                            
002636   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002638   ffe9                                                                                                               
00263a   0efe     MOVLW     0xfe                                                                                            
00263c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00263e   ffea                                                                                                               
002640   c02a     MOVFF     0x2a,0xfee                                                                                      
002642   ffee                                                                                                               
002644   c02b     MOVFF     0x2b,0xfee                                                                                      
002646   ffee                                                                                                               
002648   c02c     MOVFF     0x2c,0xfee                                                                                      
00264a   ffee                                                                                                               
                                           			// Move to the next character                                                 C:\opensprints\FW\user\user.c
00264c   0100     MOVLB     0x0            			advance_RX_buf_out ();                                                        C:\opensprints\FW\user\user.c
00264e   2b68     INCF      0x68,0x1,0x1                                                                                    
002650   0e40     MOVLW     0x40                                                                                            
002652   0100     MOVLB     0x0                                                                                             
002654   5d68     SUBWF     0x68,0x0,0x1                                                                                    
002656   e102     BNZ       0x265c                                                                                          
002658   0100     MOVLB     0x0                                                                                             
00265a   6b68     CLRF      0x68,0x1                                                                                        
                                           		}                                                                              C:\opensprints\FW\user\user.c
00265c   d002     BRA       0x2662         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
00265e   0e00     MOVLW     0x0            			return (FALSE);                                                               C:\opensprints\FW\user\user.c
002660   d005     BRA       0x266c                                                                                          
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
002668   0e01     MOVLW     0x1            	return (TRUE);                                                                  C:\opensprints\FW\user\user.c
00266a   d000     BRA       0x266c                                                                                          
00266c   6e2a     MOVWF     0x2a,0x0       }                                                                                C:\opensprints\FW\user\user.c
00266e   0e02     MOVLW     0x2                                                                                             
002670   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
002672   e202     BC        0x2678                                                                                          
002674   6ae1     CLRF      0xe1,0x0                                                                                        
002676   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002678   6ee1     MOVWF     0xe1,0x0                                                                                        
00267a   502a     MOVF      0x2a,0x0,0x0                                                                                    
00267c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00267e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002680   ffd9                                                                                                               
002682   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // For debugging, this command will spit out a bunch of values.                  C:\opensprints\FW\user\user.c
                                           void print_status(void)                                                          C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	printf(                                                                         C:\opensprints\FW\user\user.c
                                           		(rom char*)"Status=%i\r\n"                                                     C:\opensprints\FW\user\user.c
002684   5006     MOVF      0x6,0x0,0x0    		,ISR_D_FIFO_length                                                             C:\opensprints\FW\user\user.c
00268a   0e1e     MOVLW     0x1e                                                                                            
00268c   6e2a     MOVWF     0x2a,0x0                                                                                        
00268e   0e49     MOVLW     0x49                                                                                            
002690   6e2b     MOVWF     0x2b,0x0                                                                                        
002692   6a2c     CLRF      0x2c,0x0                                                                                        
002694   c02a     MOVFF     0x2a,0xfe6                                                                                      
002696   ffe6                                                                                                               
002698   c02b     MOVFF     0x2b,0xfe6                                                                                      
00269a   ffe6                                                                                                               
00269c   c02c     MOVFF     0x2c,0xfe6                                                                                      
00269e   ffe6                                                                                                               
002686   6ee6     MOVWF     0xe6,0x0       	);                                                                              C:\opensprints\FW\user\user.c
002688   6ae6     CLRF      0xe6,0x0                                                                                        
0026a0   ec60     CALL      0x4cc0,0x0                                                                                      
0026a2   f026                                                                                                               
0026a4   6e2d     MOVWF     0x2d,0x0                                                                                        
0026a6   0e05     MOVLW     0x5                                                                                             
0026a8   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0026aa   502d     MOVF      0x2d,0x0,0x0                                                                                    
0026ac   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           void BlinkOpenSprintsStatus(void)                                                C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
                                               static word LEDCount = 0;                                                    C:\opensprints\FW\user\user.c
                                           	static unsigned char LEDState = 0;                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
0026ae   0100     MOVLB     0x0            	LEDCount--;                                                                     C:\opensprints\FW\user\user.c
0026b0   07f1     DECF      0xf1,0x1,0x1                                                                                    
0026b2   0e00     MOVLW     0x0                                                                                             
0026b4   5bf2     SUBWFB    0xf2,0x1,0x1                                                                                    
0026b6   0100     MOVLB     0x0            	if (0 == LEDState)                                                              C:\opensprints\FW\user\user.c
0026b8   51f3     MOVF      0xf3,0x0,0x1                                                                                    
0026ba   e10e     BNZ       0x26d8                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0026bc   0100     MOVLB     0x0            		if (0 == LEDCount)                                                             C:\opensprints\FW\user\user.c
0026be   51f1     MOVF      0xf1,0x0,0x1                                                                                    
0026c0   11f2     IORWF     0xf2,0x0,0x1                                                                                    
0026c2   e109     BNZ       0x26d6                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
0026c4   808b     BSF       0x8b,0x0,0x0   			mLED_1_On();                                                                  C:\opensprints\FW\user\user.c
0026c6   0100     MOVLB     0x0            			LEDCount = 10000U;				                                                        C:\opensprints\FW\user\user.c
0026c8   0e10     MOVLW     0x10                                                                                            
0026ca   6ff1     MOVWF     0xf1,0x1                                                                                        
0026cc   0e27     MOVLW     0x27                                                                                            
0026ce   6ff2     MOVWF     0xf2,0x1                                                                                        
0026d0   0100     MOVLB     0x0            			LEDState = 1;                                                                 C:\opensprints\FW\user\user.c
0026d2   0e01     MOVLW     0x1                                                                                             
0026d4   6ff3     MOVWF     0xf3,0x1                                                                                        
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
0026d6   d033     BRA       0x273e         	else if (1 == LEDState)                                                         C:\opensprints\FW\user\user.c
0026d8   0100     MOVLB     0x0                                                                                             
0026da   05f3     DECF      0xf3,0x0,0x1                                                                                    
0026dc   e10e     BNZ       0x26fa                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0026de   0100     MOVLB     0x0            		if (0 == LEDCount)                                                             C:\opensprints\FW\user\user.c
0026e0   51f1     MOVF      0xf1,0x0,0x1                                                                                    
0026e2   11f2     IORWF     0xf2,0x0,0x1                                                                                    
0026e4   e109     BNZ       0x26f8                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
0026e6   908b     BCF       0x8b,0x0,0x0   			mLED_1_Off();                                                                 C:\opensprints\FW\user\user.c
0026e8   0100     MOVLB     0x0            			LEDCount = 10000U;				                                                        C:\opensprints\FW\user\user.c
0026ea   0e10     MOVLW     0x10                                                                                            
0026ec   6ff1     MOVWF     0xf1,0x1                                                                                        
0026ee   0e27     MOVLW     0x27                                                                                            
0026f0   6ff2     MOVWF     0xf2,0x1                                                                                        
0026f2   0100     MOVLB     0x0            			LEDState = 2;                                                                 C:\opensprints\FW\user\user.c
0026f4   0e02     MOVLW     0x2                                                                                             
0026f6   6ff3     MOVWF     0xf3,0x1                                                                                        
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
0026f8   d022     BRA       0x273e         	else if (2 == LEDState)                                                         C:\opensprints\FW\user\user.c
0026fa   0e02     MOVLW     0x2                                                                                             
0026fc   0100     MOVLB     0x0                                                                                             
0026fe   5df3     SUBWF     0xf3,0x0,0x1                                                                                    
002700   e10e     BNZ       0x271e                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002702   0100     MOVLB     0x0            		if (0 == LEDCount)                                                             C:\opensprints\FW\user\user.c
002704   51f1     MOVF      0xf1,0x0,0x1                                                                                    
002706   11f2     IORWF     0xf2,0x0,0x1                                                                                    
002708   e109     BNZ       0x271c                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
00270a   808b     BSF       0x8b,0x0,0x0   			mLED_1_On();                                                                  C:\opensprints\FW\user\user.c
00270c   0100     MOVLB     0x0            			LEDCount = 100000U;				                                                       C:\opensprints\FW\user\user.c
00270e   0ea0     MOVLW     0xa0                                                                                            
002710   6ff1     MOVWF     0xf1,0x1                                                                                        
002712   0e86     MOVLW     0x86                                                                                            
002714   6ff2     MOVWF     0xf2,0x1                                                                                        
002716   0100     MOVLB     0x0            			LEDState = 3;                                                                 C:\opensprints\FW\user\user.c
002718   0e03     MOVLW     0x3                                                                                             
00271a   6ff3     MOVWF     0xf3,0x1                                                                                        
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
00271c   d010     BRA       0x273e         	else if (LEDState >= 3)                                                         C:\opensprints\FW\user\user.c
00271e   0e03     MOVLW     0x3                                                                                             
002720   0100     MOVLB     0x0                                                                                             
002722   5df3     SUBWF     0xf3,0x0,0x1                                                                                    
002724   e30c     BNC       0x273e                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002726   0100     MOVLB     0x0            		if (0 == LEDCount)                                                             C:\opensprints\FW\user\user.c
002728   51f1     MOVF      0xf1,0x0,0x1                                                                                    
00272a   11f2     IORWF     0xf2,0x0,0x1                                                                                    
00272c   e108     BNZ       0x273e                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
00272e   908b     BCF       0x8b,0x0,0x0   			mLED_1_Off();                                                                 C:\opensprints\FW\user\user.c
002730   0100     MOVLB     0x0            			LEDCount = 10000U;				                                                        C:\opensprints\FW\user\user.c
002732   0e10     MOVLW     0x10                                                                                            
002734   6ff1     MOVWF     0xf1,0x1                                                                                        
002736   0e27     MOVLW     0x27                                                                                            
002738   6ff2     MOVWF     0xf2,0x1                                                                                        
00273a   0100     MOVLB     0x0            			LEDState = 0;                                                                 C:\opensprints\FW\user\user.c
00273c   6bf3     CLRF      0xf3,0x1                                                                                        
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
00273e   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           /******************************************************************************  C:\opensprints\FW\user\user.c
                                            * Function:        void BlinkUSBStatus(void)                                    C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * Input:           None                                                         C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * Output:          None                                                         C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * Overview:        BlinkUSBStatus turns on and off LEDs corresponding to        C:\opensprints\FW\user\user.c
                                            *                  the USB device state.                                        C:\opensprints\FW\user\user.c
                                            *                                                                               C:\opensprints\FW\user\user.c
                                            * Note:            mLED macros can be found in io_cfg.h                         C:\opensprints\FW\user\user.c
                                            *                  usb_device_state is declared in usbmmap.c and is modified    C:\opensprints\FW\user\user.c
                                            *                  in usbdrv.c, usbctrltrf.c, and usb9.c                        C:\opensprints\FW\user\user.c
                                            *****************************************************************************/  C:\opensprints\FW\user\user.c
                                           void BlinkUSBStatus(void)                                                        C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
                                               static word LEDCount = 0;                                                    C:\opensprints\FW\user\user.c
                                           	static unsigned char LEDState = 0;                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                               if (                                                                         C:\opensprints\FW\user\user.c
002740   0101     MOVLB     0x1            		usb_device_state == DETACHED_STATE                                             C:\opensprints\FW\user\user.c
002742   51a3     MOVF      0xa3,0x0,0x1                                                                                    
                                                  	||                                                                       C:\opensprints\FW\user\user.c
002746   0e01     MOVLW     0x1                   	1 == UCONbits.SUSPND                                                     C:\opensprints\FW\user\user.c
002748   6e2a     MOVWF     0x2a,0x0                                                                                        
00274a   506d     MOVF      0x6d,0x0,0x0                                                                                    
00274c   0b02     ANDLW     0x2                                                                                             
00274e   e001     BZ        0x2752                                                                                          
002750   0e01     MOVLW     0x1                                                                                             
002744   e008     BZ        0x2756             )                                                                            C:\opensprints\FW\user\user.c
002752   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
002754   e102     BNZ       0x275a                                                                                          
                                               {                                                                            C:\opensprints\FW\user\user.c
002756   908b     BCF       0x8b,0x0,0x0   		mLED_1_Off();                                                                  C:\opensprints\FW\user\user.c
                                               }                                                                            C:\opensprints\FW\user\user.c
002758   d05d     BRA       0x2814             else if (                                                                    C:\opensprints\FW\user\user.c
                                           		usb_device_state == ATTACHED_STATE                                             C:\opensprints\FW\user\user.c
00275a   0101     MOVLB     0x1            		||                                                                             C:\opensprints\FW\user\user.c
00275c   05a3     DECF      0xa3,0x0,0x1                                                                                    
002760   0e02     MOVLW     0x2            		usb_device_state == POWERED_STATE		                                            C:\opensprints\FW\user\user.c
00275e   e00c     BZ        0x2778         		||                                                                             C:\opensprints\FW\user\user.c
002762   0101     MOVLB     0x1                                                                                             
002764   5da3     SUBWF     0xa3,0x0,0x1                                                                                    
002766   e008     BZ        0x2778                                                                                          
002768   0e03     MOVLW     0x3            		usb_device_state == DEFAULT_STATE                                              C:\opensprints\FW\user\user.c
00276a   0101     MOVLB     0x1            		||                                                                             C:\opensprints\FW\user\user.c
00276c   5da3     SUBWF     0xa3,0x0,0x1                                                                                    
00276e   e004     BZ        0x2778                                                                                          
002770   0e05     MOVLW     0x5            		usb_device_state == ADDRESS_STATE                                              C:\opensprints\FW\user\user.c
002772   0101     MOVLB     0x1            	)                                                                               C:\opensprints\FW\user\user.c
002774   5da3     SUBWF     0xa3,0x0,0x1                                                                                    
002776   e102     BNZ       0x277c                                                                                          
                                               {                                                                            C:\opensprints\FW\user\user.c
002778   808b     BSF       0x8b,0x0,0x0           mLED_1_On();                                                             C:\opensprints\FW\user\user.c
                                               }                                                                            C:\opensprints\FW\user\user.c
00277a   d04c     BRA       0x2814             else if (usb_device_state == CONFIGURED_STATE)                               C:\opensprints\FW\user\user.c
00277c   0e06     MOVLW     0x6                                                                                             
00277e   0101     MOVLB     0x1                                                                                             
002780   5da3     SUBWF     0xa3,0x0,0x1                                                                                    
002782   e148     BNZ       0x2814                                                                                          
                                               {                                                                            C:\opensprints\FW\user\user.c
002784   0100     MOVLB     0x0            		LEDCount--;                                                                    C:\opensprints\FW\user\user.c
002786   07f4     DECF      0xf4,0x1,0x1                                                                                    
002788   0e00     MOVLW     0x0                                                                                             
00278a   5bf5     SUBWFB    0xf5,0x1,0x1                                                                                    
00278c   0100     MOVLB     0x0            		if (0 == LEDState)                                                             C:\opensprints\FW\user\user.c
00278e   51f6     MOVF      0xf6,0x0,0x1                                                                                    
002790   e10e     BNZ       0x27ae                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
002792   0100     MOVLB     0x0            			if (0 == LEDCount)                                                            C:\opensprints\FW\user\user.c
002794   51f4     MOVF      0xf4,0x0,0x1                                                                                    
002796   11f5     IORWF     0xf5,0x0,0x1                                                                                    
002798   e109     BNZ       0x27ac                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
00279a   808b     BSF       0x8b,0x0,0x0   				mLED_1_On();                                                                 C:\opensprints\FW\user\user.c
00279c   0100     MOVLB     0x0            				LEDCount = 10000U;				                                                       C:\opensprints\FW\user\user.c
00279e   0e10     MOVLW     0x10                                                                                            
0027a0   6ff4     MOVWF     0xf4,0x1                                                                                        
0027a2   0e27     MOVLW     0x27                                                                                            
0027a4   6ff5     MOVWF     0xf5,0x1                                                                                        
0027a6   0100     MOVLB     0x0            				LEDState = 1;                                                                C:\opensprints\FW\user\user.c
0027a8   0e01     MOVLW     0x1                                                                                             
0027aa   6ff6     MOVWF     0xf6,0x1                                                                                        
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
0027ac   d033     BRA       0x2814         		else if (1 == LEDState)                                                        C:\opensprints\FW\user\user.c
0027ae   0100     MOVLB     0x0                                                                                             
0027b0   05f6     DECF      0xf6,0x0,0x1                                                                                    
0027b2   e10e     BNZ       0x27d0                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
0027b4   0100     MOVLB     0x0            			if (0 == LEDCount)                                                            C:\opensprints\FW\user\user.c
0027b6   51f4     MOVF      0xf4,0x0,0x1                                                                                    
0027b8   11f5     IORWF     0xf5,0x0,0x1                                                                                    
0027ba   e109     BNZ       0x27ce                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
0027bc   908b     BCF       0x8b,0x0,0x0   				mLED_1_Off();                                                                C:\opensprints\FW\user\user.c
0027be   0100     MOVLB     0x0            				LEDCount = 10000U;				                                                       C:\opensprints\FW\user\user.c
0027c0   0e10     MOVLW     0x10                                                                                            
0027c2   6ff4     MOVWF     0xf4,0x1                                                                                        
0027c4   0e27     MOVLW     0x27                                                                                            
0027c6   6ff5     MOVWF     0xf5,0x1                                                                                        
0027c8   0100     MOVLB     0x0            				LEDState = 2;                                                                C:\opensprints\FW\user\user.c
0027ca   0e02     MOVLW     0x2                                                                                             
0027cc   6ff6     MOVWF     0xf6,0x1                                                                                        
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
0027ce   d022     BRA       0x2814         		else if (2 == LEDState)                                                        C:\opensprints\FW\user\user.c
0027d0   0e02     MOVLW     0x2                                                                                             
0027d2   0100     MOVLB     0x0                                                                                             
0027d4   5df6     SUBWF     0xf6,0x0,0x1                                                                                    
0027d6   e10e     BNZ       0x27f4                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
0027d8   0100     MOVLB     0x0            			if (0 == LEDCount)                                                            C:\opensprints\FW\user\user.c
0027da   51f4     MOVF      0xf4,0x0,0x1                                                                                    
0027dc   11f5     IORWF     0xf5,0x0,0x1                                                                                    
0027de   e109     BNZ       0x27f2                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
0027e0   808b     BSF       0x8b,0x0,0x0   				mLED_1_On();                                                                 C:\opensprints\FW\user\user.c
0027e2   0100     MOVLB     0x0            				LEDCount = 100000U;				                                                      C:\opensprints\FW\user\user.c
0027e4   0ea0     MOVLW     0xa0                                                                                            
0027e6   6ff4     MOVWF     0xf4,0x1                                                                                        
0027e8   0e86     MOVLW     0x86                                                                                            
0027ea   6ff5     MOVWF     0xf5,0x1                                                                                        
0027ec   0100     MOVLB     0x0            				LEDState = 3;                                                                C:\opensprints\FW\user\user.c
0027ee   0e03     MOVLW     0x3                                                                                             
0027f0   6ff6     MOVWF     0xf6,0x1                                                                                        
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
0027f2   d010     BRA       0x2814         		else if (LEDState >= 3)                                                        C:\opensprints\FW\user\user.c
0027f4   0e03     MOVLW     0x3                                                                                             
0027f6   0100     MOVLB     0x0                                                                                             
0027f8   5df6     SUBWF     0xf6,0x0,0x1                                                                                    
0027fa   e30c     BNC       0x2814                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
0027fc   0100     MOVLB     0x0            			if (0 == LEDCount)                                                            C:\opensprints\FW\user\user.c
0027fe   51f4     MOVF      0xf4,0x0,0x1                                                                                    
002800   11f5     IORWF     0xf5,0x0,0x1                                                                                    
002802   e108     BNZ       0x2814                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
002804   908b     BCF       0x8b,0x0,0x0   				mLED_1_Off();                                                                C:\opensprints\FW\user\user.c
002806   0100     MOVLB     0x0            				LEDCount = 10000U;				                                                       C:\opensprints\FW\user\user.c
002808   0e10     MOVLW     0x10                                                                                            
00280a   6ff4     MOVWF     0xf4,0x1                                                                                        
00280c   0e27     MOVLW     0x27                                                                                            
00280e   6ff5     MOVWF     0xf5,0x1                                                                                        
002810   0100     MOVLB     0x0            				LEDState = 0;                                                                C:\opensprints\FW\user\user.c
002812   6bf6     CLRF      0xf6,0x1                                                                                        
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                               }                                                                            C:\opensprints\FW\user\user.c
002814   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           BOOL SwitchIsPressed(void)                                                       C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
002816   b482     BTFSC     0x82,0x2,0x0   	if( 0 == UserSW)                   	// If pressed                               C:\opensprints\FW\user\user.c
002818   d003     BRA       0x2820                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
00281a   0e01     MOVLW     0x1            	    return (TRUE);                	// Was pressed                               C:\opensprints\FW\user\user.c
00281c   d003     BRA       0x2824                                                                                          
                                           	}                                                                               C:\opensprints\FW\user\user.c
00281e   d002     BRA       0x2824         	else                                                                            C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
002820   0e00     MOVLW     0x0            		return (FALSE);					// Was not pressed                                         C:\opensprints\FW\user\user.c
002822   d000     BRA       0x2824                                                                                          
                                           	}                                                                               C:\opensprints\FW\user\user.c
002824   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           /** Start Luke Orland code **************************************************/   C:\opensprints\FW\user\user.c
                                           BOOL justBegun = TRUE;                                                           C:\opensprints\FW\user\user.c
                                           unsigned int prevValueSensor0;                                                   C:\opensprints\FW\user\user.c
                                           unsigned int prevValueSensor1;                                                   C:\opensprints\FW\user\user.c
                                           unsigned int currentValueSensor0;                                                C:\opensprints\FW\user\user.c
                                           unsigned int currentValueSensor1;                                                C:\opensprints\FW\user\user.c
                                           unsigned int sensor0Status;                                                      C:\opensprints\FW\user\user.c
                                           unsigned int sensor1Status;                                                      C:\opensprints\FW\user\user.c
                                           unsigned int lastRaceTime;                                                       C:\opensprints\FW\user\user.c
                                           unsigned int lastSensor0Time;                                                    C:\opensprints\FW\user\user.c
                                           unsigned int lastSensor1Time;                                                    C:\opensprints\FW\user\user.c
                                           unsigned int momentRaceTimeCentisecs;                                            C:\opensprints\FW\user\user.c
                                           unsigned int momentRaceTimeMins;                                                 C:\opensprints\FW\user\user.c
                                           unsigned long sensor0progress;                                                   C:\opensprints\FW\user\user.c
                                           unsigned long sensor1progress;                                                   C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #define	RACE_DISTANCE_TICKS	600                                                  C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #define	SENSOR0_LED0	0                                                           C:\opensprints\FW\user\user.c
                                           #define	SENSOR0_LED1	1                                                           C:\opensprints\FW\user\user.c
                                           #define	SENSOR0_LED2	2                                                           C:\opensprints\FW\user\user.c
                                           #define	SENSOR0_LED3	3                                                           C:\opensprints\FW\user\user.c
                                           #define	SENSOR0_LED4	4                                                           C:\opensprints\FW\user\user.c
                                           #define	SENSOR1_LED0	5                                                           C:\opensprints\FW\user\user.c
                                           #define	SENSOR1_LED1	6                                                           C:\opensprints\FW\user\user.c
                                           #define	SENSOR1_LED2	7                                                           C:\opensprints\FW\user\user.c
                                           #define	SENSOR1_LED3	8                                                           C:\opensprints\FW\user\user.c
                                           #define	SENSOR1_LED4	9                                                           C:\opensprints\FW\user\user.c
                                           #define	NUM_PROGRESS_LEDS	10                                                     C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           unsigned int flashingProgressLedRates[NUM_PROGRESS_LEDS];	// vals 0 to 4. 0 = LED is off 1 through 3 progressively C:\opensprints\FW\user\user.c
                                           															// faster flashing. 4 = steady on.                                C:\opensprints\FW\user\user.c
                                           unsigned long flashingProgressLedTicks[NUM_PROGRESS_LEDS];                       C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // PORTB pins                                                                    C:\opensprints\FW\user\user.c
                                           #define SENSOR0_LED0_PIN	0                                                       C:\opensprints\FW\user\user.c
                                           #define SENSOR0_LED1_PIN	1                                                       C:\opensprints\FW\user\user.c
                                           #define SENSOR0_LED2_PIN	2                                                       C:\opensprints\FW\user\user.c
                                           #define SENSOR0_LED3_PIN	3                                                       C:\opensprints\FW\user\user.c
                                           #define SENSOR0_LED4_PIN	4                                                       C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #define SENSOR1_LED0_PIN	5                                                       C:\opensprints\FW\user\user.c
                                           #define SENSOR1_LED1_PIN	6                                                       C:\opensprints\FW\user\user.c
                                           #define SENSOR1_LED2_PIN	7                                                       C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           // PORTA pins                                                                    C:\opensprints\FW\user\user.c
                                           #define SENSOR1_LED3_PIN	3                                                       C:\opensprints\FW\user\user.c
                                           #define SENSOR1_LED4_PIN	4                                                       C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #define I_SENSOR0			0                                                            C:\opensprints\FW\user\user.c
                                           #define I_SENSOR1			1                                                            C:\opensprints\FW\user\user.c
                                           #define	I_START_SWITCH		2                                                        C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           unsigned int progressLedStates;		// The bits in this variable give the on/off state of each LED C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
002826   cfd9     MOVFF     0xfd9,0xfe6    void InitNoPcRace(void)                                                          C:\opensprints\FW\user\user.c
002828   ffe6                                                                                                               
00282a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00282c   ffd9                                                                                                               
00282e   0e02     MOVLW     0x2                                                                                             
002830   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	int i;                                                                          C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// make I_START_SWITCH an input                                                 C:\opensprints\FW\user\user.c
002832   8492     BSF       0x92,0x2,0x0   	bitset(DDRA, I_START_SWITCH);	                                                  C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           	// configure outputs                                                            C:\opensprints\FW\user\user.c
002834   6ade     CLRF      0xde,0x0       	for(i=0;i<8;i++)                                                                C:\opensprints\FW\user\user.c
002836   6add     CLRF      0xdd,0x0                                                                                        
002838   cfde     MOVFF     0xfde,0x2a                                                                                      
00283a   f02a                                                                                                               
00283c   cfdd     MOVFF     0xfdd,0x2b                                                                                      
00283e   f02b                                                                                                               
002840   90d8     BCF       0xd8,0x0,0x0                                                                                    
002842   502b     MOVF      0x2b,0x0,0x0                                                                                    
002844   e604     BN        0x284e                                                                                          
002846   0e08     MOVLW     0x8                                                                                             
002848   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
00284a   0e00     MOVLW     0x0                                                                                             
00284c   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
00284e   e210     BC        0x2870                                                                                          
002866   2adf     INCF      0xdf,0x1,0x0                                                                                    
002868   0e01     MOVLW     0x1                                                                                             
00286a   e301     BNC       0x286e                                                                                          
00286c   2adb     INCF      0xdb,0x1,0x0                                                                                    
00286e   d7e4     BRA       0x2838                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002850   0e01     MOVLW     0x1            		bitclr(DDRB,i);                                                                C:\opensprints\FW\user\user.c
002852   52df     MOVF      0xdf,0x1,0x0                                                                                    
002854   e006     BZ        0x2862                                                                                          
002856   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002858   fff3                                                                                                               
00285a   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
00285c   0bfe     ANDLW     0xfe                                                                                            
00285e   06f3     DECF      0xf3,0x1,0x0                                                                                    
002860   e1fc     BNZ       0x285a                                                                                          
002862   1ce8     COMF      0xe8,0x0,0x0                                                                                    
002864   1693     ANDWF     0x93,0x1,0x0                                                                                    
                                           	}		                                                                             C:\opensprints\FW\user\user.c
002870   9692     BCF       0x92,0x3,0x0   	bitclr(DDRA, SENSOR1_LED3_PIN);	                                                C:\opensprints\FW\user\user.c
002872   9692     BCF       0x92,0x3,0x0   	bitclr(DDRA, SENSOR1_LED3_PIN);	                                                C:\opensprints\FW\user\user.c
002874   0e02     MOVLW     0x2            }	                                                                               C:\opensprints\FW\user\user.c
002876   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
002878   e202     BC        0x287e                                                                                          
00287a   6ae1     CLRF      0xe1,0x0                                                                                        
00287c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00287e   6ee1     MOVWF     0xe1,0x0                                                                                        
002880   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002882   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002884   ffd9                                                                                                               
002886   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
002888   cfd9     MOVFF     0xfd9,0xfe6    void DoRaceCountdown(void)                                                       C:\opensprints\FW\user\user.c
00288a   ffe6                                                                                                               
00288c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00288e   ffd9                                                                                                               
002890   0e02     MOVLW     0x2                                                                                             
002892   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	int i;                                                                          C:\opensprints\FW\user\user.c
002894   0100     MOVLB     0x0            	countdownTimer--;                                                               C:\opensprints\FW\user\user.c
002896   0772     DECF      0x72,0x1,0x1                                                                                    
002898   0e00     MOVLW     0x0                                                                                             
00289a   5b73     SUBWFB    0x73,0x1,0x1                                                                                    
00289c   5b74     SUBWFB    0x74,0x1,0x1                                                                                    
00289e   5b75     SUBWFB    0x75,0x1,0x1                                                                                    
0028a0   0100     MOVLB     0x0            	if(countdownTimer==0)                                                           C:\opensprints\FW\user\user.c
0028a2   5172     MOVF      0x72,0x0,0x1                                                                                    
0028a4   1173     IORWF     0x73,0x0,0x1                                                                                    
0028a6   1174     IORWF     0x74,0x0,0x1                                                                                    
0028a8   1175     IORWF     0x75,0x0,0x1                                                                                    
0028aa   e137     BNZ       0x291a                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0028ac   0100     MOVLB     0x0            		countdownTimer=100000U;                                                        C:\opensprints\FW\user\user.c
0028ae   0ea0     MOVLW     0xa0                                                                                            
0028b0   6f72     MOVWF     0x72,0x1                                                                                        
0028b2   0e86     MOVLW     0x86                                                                                            
0028b4   6f73     MOVWF     0x73,0x1                                                                                        
0028b6   0e01     MOVLW     0x1                                                                                             
0028b8   6f74     MOVWF     0x74,0x1                                                                                        
0028ba   6b75     CLRF      0x75,0x1                                                                                        
0028bc   0100     MOVLB     0x0            		countdownSecs--;                                                               C:\opensprints\FW\user\user.c
0028be   07ee     DECF      0xee,0x1,0x1                                                                                    
0028c0   0e00     MOVLW     0x0                                                                                             
0028c2   5bef     SUBWFB    0xef,0x1,0x1                                                                                    
0028c4   0100     MOVLB     0x0            		if(countdownSecs==0)                                                           C:\opensprints\FW\user\user.c
0028c6   51ee     MOVF      0xee,0x0,0x1                                                                                    
0028c8   11ef     IORWF     0xef,0x0,0x1                                                                                    
0028ca   e127     BNZ       0x291a                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// every second, turn off one of the lit up leds until they are all off.      C:\opensprints\FW\user\user.c
                                           		                                                                               C:\opensprints\FW\user\user.c
                                           			// if countdown completed                                                     C:\opensprints\FW\user\user.c
0028cc   0100     MOVLB     0x0            			is_racing=TRUE;                                                               C:\opensprints\FW\user\user.c
0028ce   0e01     MOVLW     0x1                                                                                             
0028d0   6feb     MOVWF     0xeb,0x1                                                                                        
0028d2   0100     MOVLB     0x0            			isCountingDown=TRUE;                                                          C:\opensprints\FW\user\user.c
0028d4   0e01     MOVLW     0x1                                                                                             
0028d6   6fed     MOVWF     0xed,0x1                                                                                        
0028d8   0100     MOVLB     0x0            			progressLedStates=0;                                                          C:\opensprints\FW\user\user.c
0028da   6bd1     CLRF      0xd1,0x1                                                                                        
0028dc   6bd2     CLRF      0xd2,0x1                                                                                        
0028de   6ade     CLRF      0xde,0x0       			for(i=0;i<NUM_PROGRESS_LEDS;i++)	// Turn off all progress LEDs                C:\opensprints\FW\user\user.c
0028e0   6add     CLRF      0xdd,0x0                                                                                        
0028e2   cfde     MOVFF     0xfde,0x2a                                                                                      
0028e4   f02a                                                                                                               
0028e6   cfdd     MOVFF     0xfdd,0x2b                                                                                      
0028e8   f02b                                                                                                               
0028ea   90d8     BCF       0xd8,0x0,0x0                                                                                    
0028ec   502b     MOVF      0x2b,0x0,0x0                                                                                    
0028ee   e604     BN        0x28f8                                                                                          
0028f0   0e0a     MOVLW     0xa                                                                                             
0028f2   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
0028f4   0e00     MOVLW     0x0                                                                                             
0028f6   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
0028f8   e210     BC        0x291a                                                                                          
002910   2adf     INCF      0xdf,0x1,0x0                                                                                    
002912   0e01     MOVLW     0x1                                                                                             
002914   e301     BNC       0x2918                                                                                          
002916   2adb     INCF      0xdb,0x1,0x0                                                                                    
002918   d7e4     BRA       0x28e2                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
0028fa   0e01     MOVLW     0x1            				bitclr(PORTB,i);                                                             C:\opensprints\FW\user\user.c
0028fc   52df     MOVF      0xdf,0x1,0x0                                                                                    
0028fe   e006     BZ        0x290c                                                                                          
002900   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002902   fff3                                                                                                               
002904   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002906   0bfe     ANDLW     0xfe                                                                                            
002908   06f3     DECF      0xf3,0x1,0x0                                                                                    
00290a   e1fc     BNZ       0x2904                                                                                          
00290c   1ce8     COMF      0xe8,0x0,0x0                                                                                    
00290e   1681     ANDWF     0x81,0x1,0x0                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}	                                                                              C:\opensprints\FW\user\user.c
00291a   0e02     MOVLW     0x2            }                                                                                C:\opensprints\FW\user\user.c
00291c   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00291e   e202     BC        0x2924                                                                                          
002920   6ae1     CLRF      0xe1,0x0                                                                                        
002922   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002924   6ee1     MOVWF     0xe1,0x0                                                                                        
002926   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002928   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00292a   ffd9                                                                                                               
00292c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
00292e   cfd9     MOVFF     0xfd9,0xfe6    void CheckStartSwitch(void)                                                      C:\opensprints\FW\user\user.c
002930   ffe6                                                                                                               
002932   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002934   ffd9                                                                                                               
002936   0e02     MOVLW     0x2                                                                                             
002938   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
00293a   b480     BTFSC     0x80,0x2,0x0   	if(!bittst(PORTA,I_START_SWITCH))                                               C:\opensprints\FW\user\user.c
00293c   d02c     BRA       0x2996                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		int i;                                                                         C:\opensprints\FW\user\user.c
00293e   6ade     CLRF      0xde,0x0       		for(i=0;i<NUM_PROGRESS_LEDS;i++)	// Turn on all progress LEDs                  C:\opensprints\FW\user\user.c
002940   6add     CLRF      0xdd,0x0                                                                                        
002942   cfde     MOVFF     0xfde,0x2a                                                                                      
002944   f02a                                                                                                               
002946   cfdd     MOVFF     0xfdd,0x2b                                                                                      
002948   f02b                                                                                                               
00294a   90d8     BCF       0xd8,0x0,0x0                                                                                    
00294c   502b     MOVF      0x2b,0x0,0x0                                                                                    
00294e   e604     BN        0x2958                                                                                          
002950   0e0a     MOVLW     0xa                                                                                             
002952   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
002954   0e00     MOVLW     0x0                                                                                             
002956   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
002958   e20f     BC        0x2978                                                                                          
00296e   2adf     INCF      0xdf,0x1,0x0                                                                                    
002970   0e01     MOVLW     0x1                                                                                             
002972   e301     BNC       0x2976                                                                                          
002974   2adb     INCF      0xdb,0x1,0x0                                                                                    
002976   d7e5     BRA       0x2942                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
00295a   0e01     MOVLW     0x1            			bitset(PORTB,i);                                                              C:\opensprints\FW\user\user.c
00295c   52df     MOVF      0xdf,0x1,0x0                                                                                    
00295e   e006     BZ        0x296c                                                                                          
002960   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002962   fff3                                                                                                               
002964   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002966   0bfe     ANDLW     0xfe                                                                                            
002968   06f3     DECF      0xf3,0x1,0x0                                                                                    
00296a   e1fc     BNZ       0x2964                                                                                          
00296c   1281     IORWF     0x81,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	                                                                                C:\opensprints\FW\user\user.c
002978   0100     MOVLB     0x0            		isCountingDown=TRUE;                                                           C:\opensprints\FW\user\user.c
00297a   0e01     MOVLW     0x1                                                                                             
00297c   6fed     MOVWF     0xed,0x1                                                                                        
00297e   0100     MOVLB     0x0            		countdownTimer=100000U;                                                        C:\opensprints\FW\user\user.c
002980   0ea0     MOVLW     0xa0                                                                                            
002982   6f72     MOVWF     0x72,0x1                                                                                        
002984   0e86     MOVLW     0x86                                                                                            
002986   6f73     MOVWF     0x73,0x1                                                                                        
002988   0e01     MOVLW     0x1                                                                                             
00298a   6f74     MOVWF     0x74,0x1                                                                                        
00298c   6b75     CLRF      0x75,0x1                                                                                        
00298e   0e05     MOVLW     0x5            		countdownSecs=5;                                                               C:\opensprints\FW\user\user.c
002990   0100     MOVLB     0x0                                                                                             
002992   6fee     MOVWF     0xee,0x1                                                                                        
002994   6bef     CLRF      0xef,0x1                                                                                        
                                           	}                                                                               C:\opensprints\FW\user\user.c
002996   0e02     MOVLW     0x2            }                                                                                C:\opensprints\FW\user\user.c
002998   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00299a   e202     BC        0x29a0                                                                                          
00299c   6ae1     CLRF      0xe1,0x0                                                                                        
00299e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0029a0   6ee1     MOVWF     0xe1,0x0                                                                                        
0029a2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0029a4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0029a6   ffd9                                                                                                               
0029a8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
0029aa   cfd9     MOVFF     0xfd9,0xfe6    void StartFlashingSensor0Leds(void)                                              C:\opensprints\FW\user\user.c
0029ac   ffe6                                                                                                               
0029ae   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0029b0   ffd9                                                                                                               
0029b2   0e02     MOVLW     0x2                                                                                             
0029b4   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	int i;                                                                          C:\opensprints\FW\user\user.c
0029b6   6ade     CLRF      0xde,0x0       	for(i=SENSOR0_LED0;i<=SENSOR0_LED4;i++)                                         C:\opensprints\FW\user\user.c
0029b8   6add     CLRF      0xdd,0x0                                                                                        
0029ba   cfde     MOVFF     0xfde,0x2a                                                                                      
0029bc   f02a                                                                                                               
0029be   cfdd     MOVFF     0xfdd,0x2b                                                                                      
0029c0   f02b                                                                                                               
0029c2   342b     RLCF      0x2b,0x0,0x0                                                                                    
0029c4   e204     BC        0x29ce                                                                                          
0029c6   502a     MOVF      0x2a,0x0,0x0                                                                                    
0029c8   0804     SUBLW     0x4                                                                                             
0029ca   0e00     MOVLW     0x0                                                                                             
0029cc   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
0029ce   e326     BNC       0x2a1c                                                                                          
002a12   2adf     INCF      0xdf,0x1,0x0                                                                                    
002a14   0e01     MOVLW     0x1                                                                                             
002a16   e301     BNC       0x2a1a                                                                                          
002a18   2adb     INCF      0xdb,0x1,0x0                                                                                    
002a1a   d7cf     BRA       0x29ba                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
0029d0   cfde     MOVFF     0xfde,0xfe9    		flashingProgressLedRates[i]=2;                                                 C:\opensprints\FW\user\user.c
0029d2   ffe9                                                                                                               
0029d4   cfdd     MOVFF     0xfdd,0xfea                                                                                     
0029d6   ffea                                                                                                               
0029d8   90d8     BCF       0xd8,0x0,0x0                                                                                    
0029da   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0029dc   36ea     RLCF      0xea,0x1,0x0                                                                                    
0029de   0e95     MOVLW     0x95                                                                                            
0029e0   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0029e2   0e00     MOVLW     0x0                                                                                             
0029e4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0029e6   0e02     MOVLW     0x2                                                                                             
0029e8   6eee     MOVWF     0xee,0x0                                                                                        
0029ea   6aed     CLRF      0xed,0x0                                                                                        
0029ec   0e01     MOVLW     0x1            		progressLedStates|=(1<<i);                                                     C:\opensprints\FW\user\user.c
0029ee   52df     MOVF      0xdf,0x1,0x0                                                                                    
0029f0   e006     BZ        0x29fe                                                                                          
0029f2   cfdf     MOVFF     0xfdf,0xff3                                                                                     
0029f4   fff3                                                                                                               
0029f6   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
0029f8   0bfe     ANDLW     0xfe                                                                                            
0029fa   06f3     DECF      0xf3,0x1,0x0                                                                                    
0029fc   e1fc     BNZ       0x29f6                                                                                          
0029fe   6e2a     MOVWF     0x2a,0x0                                                                                        
002a00   6a2b     CLRF      0x2b,0x0                                                                                        
002a02   be2a     BTFSC     0x2a,0x7,0x0                                                                                    
002a04   682b     SETF      0x2b,0x0                                                                                        
002a06   502a     MOVF      0x2a,0x0,0x0                                                                                    
002a08   0100     MOVLB     0x0                                                                                             
002a0a   13d1     IORWF     0xd1,0x1,0x1                                                                                    
002a0c   502b     MOVF      0x2b,0x0,0x0                                                                                    
002a0e   0100     MOVLB     0x0                                                                                             
002a10   13d2     IORWF     0xd2,0x1,0x1                                                                                    
                                           	}	                                                                              C:\opensprints\FW\user\user.c
002a1c   0e02     MOVLW     0x2            }                                                                                C:\opensprints\FW\user\user.c
002a1e   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
002a20   e202     BC        0x2a26                                                                                          
002a22   6ae1     CLRF      0xe1,0x0                                                                                        
002a24   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002a26   6ee1     MOVWF     0xe1,0x0                                                                                        
002a28   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002a2a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002a2c   ffd9                                                                                                               
002a2e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
002a30   cfd9     MOVFF     0xfd9,0xfe6    void StartFlashingSensor1Leds(void)                                              C:\opensprints\FW\user\user.c
002a32   ffe6                                                                                                               
002a34   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002a36   ffd9                                                                                                               
002a38   0e02     MOVLW     0x2                                                                                             
002a3a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	int i;                                                                          C:\opensprints\FW\user\user.c
002a3c   0e05     MOVLW     0x5            	for(i=SENSOR1_LED0;i<=SENSOR1_LED4;i++)                                         C:\opensprints\FW\user\user.c
002a3e   6ede     MOVWF     0xde,0x0                                                                                        
002a40   6add     CLRF      0xdd,0x0                                                                                        
002a42   cfde     MOVFF     0xfde,0x2a                                                                                      
002a44   f02a                                                                                                               
002a46   cfdd     MOVFF     0xfdd,0x2b                                                                                      
002a48   f02b                                                                                                               
002a4a   342b     RLCF      0x2b,0x0,0x0                                                                                    
002a4c   e204     BC        0x2a56                                                                                          
002a4e   502a     MOVF      0x2a,0x0,0x0                                                                                    
002a50   0809     SUBLW     0x9                                                                                             
002a52   0e00     MOVLW     0x0                                                                                             
002a54   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
002a56   e326     BNC       0x2aa4                                                                                          
002a9a   2adf     INCF      0xdf,0x1,0x0                                                                                    
002a9c   0e01     MOVLW     0x1                                                                                             
002a9e   e301     BNC       0x2aa2                                                                                          
002aa0   2adb     INCF      0xdb,0x1,0x0                                                                                    
002aa2   d7cf     BRA       0x2a42                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002a58   cfde     MOVFF     0xfde,0xfe9    		flashingProgressLedRates[i]=2;                                                 C:\opensprints\FW\user\user.c
002a5a   ffe9                                                                                                               
002a5c   cfdd     MOVFF     0xfdd,0xfea                                                                                     
002a5e   ffea                                                                                                               
002a60   90d8     BCF       0xd8,0x0,0x0                                                                                    
002a62   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002a64   36ea     RLCF      0xea,0x1,0x0                                                                                    
002a66   0e95     MOVLW     0x95                                                                                            
002a68   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002a6a   0e00     MOVLW     0x0                                                                                             
002a6c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002a6e   0e02     MOVLW     0x2                                                                                             
002a70   6eee     MOVWF     0xee,0x0                                                                                        
002a72   6aed     CLRF      0xed,0x0                                                                                        
002a74   0e01     MOVLW     0x1            		progressLedStates|=(1<<i);                                                     C:\opensprints\FW\user\user.c
002a76   52df     MOVF      0xdf,0x1,0x0                                                                                    
002a78   e006     BZ        0x2a86                                                                                          
002a7a   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002a7c   fff3                                                                                                               
002a7e   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002a80   0bfe     ANDLW     0xfe                                                                                            
002a82   06f3     DECF      0xf3,0x1,0x0                                                                                    
002a84   e1fc     BNZ       0x2a7e                                                                                          
002a86   6e2a     MOVWF     0x2a,0x0                                                                                        
002a88   6a2b     CLRF      0x2b,0x0                                                                                        
002a8a   be2a     BTFSC     0x2a,0x7,0x0                                                                                    
002a8c   682b     SETF      0x2b,0x0                                                                                        
002a8e   502a     MOVF      0x2a,0x0,0x0                                                                                    
002a90   0100     MOVLB     0x0                                                                                             
002a92   13d1     IORWF     0xd1,0x1,0x1                                                                                    
002a94   502b     MOVF      0x2b,0x0,0x0                                                                                    
002a96   0100     MOVLB     0x0                                                                                             
002a98   13d2     IORWF     0xd2,0x1,0x1                                                                                    
                                           	}	                                                                              C:\opensprints\FW\user\user.c
002aa4   0e02     MOVLW     0x2            }                                                                                C:\opensprints\FW\user\user.c
002aa6   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
002aa8   e202     BC        0x2aae                                                                                          
002aaa   6ae1     CLRF      0xe1,0x0                                                                                        
002aac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002aae   6ee1     MOVWF     0xe1,0x0                                                                                        
002ab0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ab2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002ab4   ffd9                                                                                                               
002ab6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
002ab8   cfd9     MOVFF     0xfd9,0xfe6    void StopFlashingSensor0Leds(void)                                               C:\opensprints\FW\user\user.c
002aba   ffe6                                                                                                               
002abc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002abe   ffd9                                                                                                               
002ac0   0e02     MOVLW     0x2                                                                                             
002ac2   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	int i;                                                                          C:\opensprints\FW\user\user.c
002ac4   6ade     CLRF      0xde,0x0       	for(i=SENSOR0_LED0;i<=SENSOR0_LED4;i++)                                         C:\opensprints\FW\user\user.c
002ac6   6add     CLRF      0xdd,0x0                                                                                        
002ac8   cfde     MOVFF     0xfde,0x2a                                                                                      
002aca   f02a                                                                                                               
002acc   cfdd     MOVFF     0xfdd,0x2b                                                                                      
002ace   f02b                                                                                                               
002ad0   342b     RLCF      0x2b,0x0,0x0                                                                                    
002ad2   e204     BC        0x2adc                                                                                          
002ad4   502a     MOVF      0x2a,0x0,0x0                                                                                    
002ad6   0804     SUBLW     0x4                                                                                             
002ad8   0e00     MOVLW     0x0                                                                                             
002ada   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
002adc   e326     BNC       0x2b2a                                                                                          
002b20   2adf     INCF      0xdf,0x1,0x0                                                                                    
002b22   0e01     MOVLW     0x1                                                                                             
002b24   e301     BNC       0x2b28                                                                                          
002b26   2adb     INCF      0xdb,0x1,0x0                                                                                    
002b28   d7cf     BRA       0x2ac8                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002ade   cfde     MOVFF     0xfde,0xfe9    		flashingProgressLedRates[i]=0;                                                 C:\opensprints\FW\user\user.c
002ae0   ffe9                                                                                                               
002ae2   cfdd     MOVFF     0xfdd,0xfea                                                                                     
002ae4   ffea                                                                                                               
002ae6   90d8     BCF       0xd8,0x0,0x0                                                                                    
002ae8   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002aea   36ea     RLCF      0xea,0x1,0x0                                                                                    
002aec   0e95     MOVLW     0x95                                                                                            
002aee   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002af0   0e00     MOVLW     0x0                                                                                             
002af2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002af4   6aee     CLRF      0xee,0x0                                                                                        
002af6   6aed     CLRF      0xed,0x0                                                                                        
002af8   0e01     MOVLW     0x1            		progressLedStates&=~(1<<i);                                                    C:\opensprints\FW\user\user.c
002afa   52df     MOVF      0xdf,0x1,0x0                                                                                    
002afc   e006     BZ        0x2b0a                                                                                          
002afe   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002b00   fff3                                                                                                               
002b02   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002b04   0bfe     ANDLW     0xfe                                                                                            
002b06   06f3     DECF      0xf3,0x1,0x0                                                                                    
002b08   e1fc     BNZ       0x2b02                                                                                          
002b0a   1ce8     COMF      0xe8,0x0,0x0                                                                                    
002b0c   6e2a     MOVWF     0x2a,0x0                                                                                        
002b0e   6a2b     CLRF      0x2b,0x0                                                                                        
002b10   be2a     BTFSC     0x2a,0x7,0x0                                                                                    
002b12   682b     SETF      0x2b,0x0                                                                                        
002b14   502a     MOVF      0x2a,0x0,0x0                                                                                    
002b16   0100     MOVLB     0x0                                                                                             
002b18   17d1     ANDWF     0xd1,0x1,0x1                                                                                    
002b1a   502b     MOVF      0x2b,0x0,0x0                                                                                    
002b1c   0100     MOVLB     0x0                                                                                             
002b1e   17d2     ANDWF     0xd2,0x1,0x1                                                                                    
                                           	}	                                                                              C:\opensprints\FW\user\user.c
002b2a   0e02     MOVLW     0x2            }                                                                                C:\opensprints\FW\user\user.c
002b2c   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
002b2e   e202     BC        0x2b34                                                                                          
002b30   6ae1     CLRF      0xe1,0x0                                                                                        
002b32   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002b34   6ee1     MOVWF     0xe1,0x0                                                                                        
002b36   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002b38   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002b3a   ffd9                                                                                                               
002b3c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
002b3e   cfd9     MOVFF     0xfd9,0xfe6    void StopFlashingSensor1Leds(void)                                               C:\opensprints\FW\user\user.c
002b40   ffe6                                                                                                               
002b42   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002b44   ffd9                                                                                                               
002b46   0e02     MOVLW     0x2                                                                                             
002b48   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	int i;                                                                          C:\opensprints\FW\user\user.c
002b4a   0e05     MOVLW     0x5            	for(i=SENSOR1_LED0;i<=SENSOR1_LED4;i++)                                         C:\opensprints\FW\user\user.c
002b4c   6ede     MOVWF     0xde,0x0                                                                                        
002b4e   6add     CLRF      0xdd,0x0                                                                                        
002b50   cfde     MOVFF     0xfde,0x2a                                                                                      
002b52   f02a                                                                                                               
002b54   cfdd     MOVFF     0xfdd,0x2b                                                                                      
002b56   f02b                                                                                                               
002b58   342b     RLCF      0x2b,0x0,0x0                                                                                    
002b5a   e204     BC        0x2b64                                                                                          
002b5c   502a     MOVF      0x2a,0x0,0x0                                                                                    
002b5e   0809     SUBLW     0x9                                                                                             
002b60   0e00     MOVLW     0x0                                                                                             
002b62   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
002b64   e326     BNC       0x2bb2                                                                                          
002ba8   2adf     INCF      0xdf,0x1,0x0                                                                                    
002baa   0e01     MOVLW     0x1                                                                                             
002bac   e301     BNC       0x2bb0                                                                                          
002bae   2adb     INCF      0xdb,0x1,0x0                                                                                    
002bb0   d7cf     BRA       0x2b50                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002b66   cfde     MOVFF     0xfde,0xfe9    		flashingProgressLedRates[i]=0;                                                 C:\opensprints\FW\user\user.c
002b68   ffe9                                                                                                               
002b6a   cfdd     MOVFF     0xfdd,0xfea                                                                                     
002b6c   ffea                                                                                                               
002b6e   90d8     BCF       0xd8,0x0,0x0                                                                                    
002b70   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002b72   36ea     RLCF      0xea,0x1,0x0                                                                                    
002b74   0e95     MOVLW     0x95                                                                                            
002b76   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002b78   0e00     MOVLW     0x0                                                                                             
002b7a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002b7c   6aee     CLRF      0xee,0x0                                                                                        
002b7e   6aed     CLRF      0xed,0x0                                                                                        
002b80   0e01     MOVLW     0x1            		progressLedStates&=~(1<<i);                                                    C:\opensprints\FW\user\user.c
002b82   52df     MOVF      0xdf,0x1,0x0                                                                                    
002b84   e006     BZ        0x2b92                                                                                          
002b86   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002b88   fff3                                                                                                               
002b8a   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002b8c   0bfe     ANDLW     0xfe                                                                                            
002b8e   06f3     DECF      0xf3,0x1,0x0                                                                                    
002b90   e1fc     BNZ       0x2b8a                                                                                          
002b92   1ce8     COMF      0xe8,0x0,0x0                                                                                    
002b94   6e2a     MOVWF     0x2a,0x0                                                                                        
002b96   6a2b     CLRF      0x2b,0x0                                                                                        
002b98   be2a     BTFSC     0x2a,0x7,0x0                                                                                    
002b9a   682b     SETF      0x2b,0x0                                                                                        
002b9c   502a     MOVF      0x2a,0x0,0x0                                                                                    
002b9e   0100     MOVLB     0x0                                                                                             
002ba0   17d1     ANDWF     0xd1,0x1,0x1                                                                                    
002ba2   502b     MOVF      0x2b,0x0,0x0                                                                                    
002ba4   0100     MOVLB     0x0                                                                                             
002ba6   17d2     ANDWF     0xd2,0x1,0x1                                                                                    
                                           	}	                                                                              C:\opensprints\FW\user\user.c
002bb2   0e02     MOVLW     0x2            }                                                                                C:\opensprints\FW\user\user.c
002bb4   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
002bb6   e202     BC        0x2bbc                                                                                          
002bb8   6ae1     CLRF      0xe1,0x0                                                                                        
002bba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002bbc   6ee1     MOVWF     0xe1,0x0                                                                                        
002bbe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002bc0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002bc2   ffd9                                                                                                               
002bc4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                           void ManageSensorProgress(void)                                                  C:\opensprints\FW\user\user.c
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	// Check if either sensor reached the finish.                                   C:\opensprints\FW\user\user.c
002bc6   0e58     MOVLW     0x58           	if(sensor0progress==RACE_DISTANCE_TICKS)                                        C:\opensprints\FW\user\user.c
002bc8   0100     MOVLB     0x0                                                                                             
002bca   198d     XORWF     0x8d,0x0,0x1                                                                                    
002bcc   e106     BNZ       0x2bda                                                                                          
002bce   0e02     MOVLW     0x2                                                                                             
002bd0   198e     XORWF     0x8e,0x0,0x1                                                                                    
002bd2   e103     BNZ       0x2bda                                                                                          
002bd4   518f     MOVF      0x8f,0x0,0x1                                                                                    
002bd6   e101     BNZ       0x2bda                                                                                          
002bd8   5190     MOVF      0x90,0x0,0x1                                                                                    
002bda   e104     BNZ       0x2be4                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002bdc   0100     MOVLB     0x0            		is_racing=FALSE;                                                               C:\opensprints\FW\user\user.c
002bde   6beb     CLRF      0xeb,0x1                                                                                        
002be0   8081     BSF       0x81,0x0,0x0   		bitset(PORTB,0);                                                               C:\opensprints\FW\user\user.c
                                           	//	StartFlashingSensor0Leds();                                                  C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
002be2   d00f     BRA       0x2c02         	else if(sensor1progress==RACE_DISTANCE_TICKS)                                   C:\opensprints\FW\user\user.c
002be4   0e58     MOVLW     0x58                                                                                            
002be6   0100     MOVLB     0x0                                                                                             
002be8   1991     XORWF     0x91,0x0,0x1                                                                                    
002bea   e106     BNZ       0x2bf8                                                                                          
002bec   0e02     MOVLW     0x2                                                                                             
002bee   1992     XORWF     0x92,0x0,0x1                                                                                    
002bf0   e103     BNZ       0x2bf8                                                                                          
002bf2   5193     MOVF      0x93,0x0,0x1                                                                                    
002bf4   e101     BNZ       0x2bf8                                                                                          
002bf6   5194     MOVF      0x94,0x0,0x1                                                                                    
002bf8   e104     BNZ       0x2c02                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002bfa   0100     MOVLB     0x0            		is_racing=FALSE;                                                               C:\opensprints\FW\user\user.c
002bfc   6beb     CLRF      0xeb,0x1                                                                                        
002bfe   8281     BSF       0x81,0x1,0x0   		bitset(PORTB,1);                                                               C:\opensprints\FW\user\user.c
002c00   df17     RCALL     0x2a30         		StartFlashingSensor1Leds();                                                    C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           /*	// Check either sensor has reached the next LED level                         C:\opensprints\FW\user\user.c
                                           	if(sensor0progress==RACE_DISTANCE_TICKS/5)                                      C:\opensprints\FW\user\user.c
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		// light up bike0 LED0                                                         C:\opensprints\FW\user\user.c
                                           		bitset(PORTB, SENSOR0_LED0_PIN);                                               C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
                                           */                                                                               C:\opensprints\FW\user\user.c
002c02   0012     RETURN    0x0            }                                                                                C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           #define TEST_PERIOD 20 		// in centiseconds                                      C:\opensprints\FW\user\user.c
                                           #define TEST_PERIOD_HALF (TEST_PERIOD/2)                                         C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
002c04   cfd9     MOVFF     0xfd9,0xfe6    void UpdateProgressLeds(void)                                                    C:\opensprints\FW\user\user.c
002c06   ffe6                                                                                                               
002c08   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002c0a   ffd9                                                                                                               
002c0c   0e02     MOVLW     0x2                                                                                             
002c0e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	int i;                                                                          C:\opensprints\FW\user\user.c
002c10   cfde     MOVFF     0xfde,0x2a     	if(i<8)                                                                         C:\opensprints\FW\user\user.c
002c12   f02a                                                                                                               
002c14   cfdd     MOVFF     0xfdd,0x2b                                                                                      
002c16   f02b                                                                                                               
002c18   90d8     BCF       0xd8,0x0,0x0                                                                                    
002c1a   502b     MOVF      0x2b,0x0,0x0                                                                                    
002c1c   e604     BN        0x2c26                                                                                          
002c1e   0e08     MOVLW     0x8                                                                                             
002c20   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
002c22   0e00     MOVLW     0x0                                                                                             
002c24   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
002c26   e231     BC        0x2c8a                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002c28   0e01     MOVLW     0x1            		if(progressLedStates&(1<<i))                                                   C:\opensprints\FW\user\user.c
002c2a   52df     MOVF      0xdf,0x1,0x0                                                                                    
002c2c   e006     BZ        0x2c3a                                                                                          
002c2e   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002c30   fff3                                                                                                               
002c32   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002c34   0bfe     ANDLW     0xfe                                                                                            
002c36   06f3     DECF      0xf3,0x1,0x0                                                                                    
002c38   e1fc     BNZ       0x2c32                                                                                          
002c3a   6e2c     MOVWF     0x2c,0x0                                                                                        
002c3c   6a2d     CLRF      0x2d,0x0                                                                                        
002c3e   be2c     BTFSC     0x2c,0x7,0x0                                                                                    
002c40   682d     SETF      0x2d,0x0                                                                                        
002c42   0100     MOVLB     0x0                                                                                             
002c44   0100     MOVLB     0x0                                                                                             
002c46   51d1     MOVF      0xd1,0x0,0x1                                                                                    
002c48   142c     ANDWF     0x2c,0x0,0x0                                                                                    
002c4a   6e2a     MOVWF     0x2a,0x0                                                                                        
002c4c   0100     MOVLB     0x0                                                                                             
002c4e   0100     MOVLB     0x0                                                                                             
002c50   51d2     MOVF      0xd2,0x0,0x1                                                                                    
002c52   142d     ANDWF     0x2d,0x0,0x0                                                                                    
002c54   6e2b     MOVWF     0x2b,0x0                                                                                        
002c56   502a     MOVF      0x2a,0x0,0x0                                                                                    
002c58   102b     IORWF     0x2b,0x0,0x0                                                                                    
002c5a   e00b     BZ        0x2c72                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
002c5c   0e01     MOVLW     0x1            			bitset(PORTB,i);                                                              C:\opensprints\FW\user\user.c
002c5e   52df     MOVF      0xdf,0x1,0x0                                                                                    
002c60   e006     BZ        0x2c6e                                                                                          
002c62   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002c64   fff3                                                                                                               
002c66   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002c68   0bfe     ANDLW     0xfe                                                                                            
002c6a   06f3     DECF      0xf3,0x1,0x0                                                                                    
002c6c   e1fc     BNZ       0x2c66                                                                                          
002c6e   1281     IORWF     0x81,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
002c70   d00b     BRA       0x2c88         		else	                                                                          C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
002c72   0e01     MOVLW     0x1            			bitclr(PORTB,i);                                                              C:\opensprints\FW\user\user.c
002c74   52df     MOVF      0xdf,0x1,0x0                                                                                    
002c76   e006     BZ        0x2c84                                                                                          
002c78   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002c7a   fff3                                                                                                               
002c7c   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002c7e   0bfe     ANDLW     0xfe                                                                                            
002c80   06f3     DECF      0xf3,0x1,0x0                                                                                    
002c82   e1fc     BNZ       0x2c7c                                                                                          
002c84   1ce8     COMF      0xe8,0x0,0x0                                                                                    
002c86   1681     ANDWF     0x81,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
002c88   d04c     BRA       0x2d22         	else if(i>=8)                                                                   C:\opensprints\FW\user\user.c
002c8a   cfde     MOVFF     0xfde,0x2a                                                                                      
002c8c   f02a                                                                                                               
002c8e   cfdd     MOVFF     0xfdd,0x2b                                                                                      
002c90   f02b                                                                                                               
002c92   90d8     BCF       0xd8,0x0,0x0                                                                                    
002c94   502b     MOVF      0x2b,0x0,0x0                                                                                    
002c96   e604     BN        0x2ca0                                                                                          
002c98   0e08     MOVLW     0x8                                                                                             
002c9a   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
002c9c   0e00     MOVLW     0x0                                                                                             
002c9e   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
002ca0   e340     BNC       0x2d22                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002ca2   0e01     MOVLW     0x1            		if(progressLedStates&(1<<i))                                                   C:\opensprints\FW\user\user.c
002ca4   52df     MOVF      0xdf,0x1,0x0                                                                                    
002ca6   e006     BZ        0x2cb4                                                                                          
002ca8   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002caa   fff3                                                                                                               
002cac   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002cae   0bfe     ANDLW     0xfe                                                                                            
002cb0   06f3     DECF      0xf3,0x1,0x0                                                                                    
002cb2   e1fc     BNZ       0x2cac                                                                                          
002cb4   6e2c     MOVWF     0x2c,0x0                                                                                        
002cb6   6a2d     CLRF      0x2d,0x0                                                                                        
002cb8   be2c     BTFSC     0x2c,0x7,0x0                                                                                    
002cba   682d     SETF      0x2d,0x0                                                                                        
002cbc   0100     MOVLB     0x0                                                                                             
002cbe   0100     MOVLB     0x0                                                                                             
002cc0   51d1     MOVF      0xd1,0x0,0x1                                                                                    
002cc2   142c     ANDWF     0x2c,0x0,0x0                                                                                    
002cc4   6e2a     MOVWF     0x2a,0x0                                                                                        
002cc6   0100     MOVLB     0x0                                                                                             
002cc8   0100     MOVLB     0x0                                                                                             
002cca   51d2     MOVF      0xd2,0x0,0x1                                                                                    
002ccc   142d     ANDWF     0x2d,0x0,0x0                                                                                    
002cce   6e2b     MOVWF     0x2b,0x0                                                                                        
002cd0   502a     MOVF      0x2a,0x0,0x0                                                                                    
002cd2   102b     IORWF     0x2b,0x0,0x0                                                                                    
002cd4   e013     BZ        0x2cfc                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
002cd6   cfde     MOVFF     0xfde,0x2a     			bitset(PORTA,i-5);                                                            C:\opensprints\FW\user\user.c
002cd8   f02a                                                                                                               
002cda   cfdd     MOVFF     0xfdd,0x2b                                                                                      
002cdc   f02b                                                                                                               
002cde   0e05     MOVLW     0x5                                                                                             
002ce0   5e2a     SUBWF     0x2a,0x1,0x0                                                                                    
002ce2   0e00     MOVLW     0x0                                                                                             
002ce4   5a2b     SUBWFB    0x2b,0x1,0x0                                                                                    
002ce6   0e01     MOVLW     0x1                                                                                             
002ce8   c02a     MOVFF     0x2a,0xfe7                                                                                      
002cea   ffe7                                                                                                               
002cec   52e7     MOVF      0xe7,0x1,0x0                                                                                    
002cee   e004     BZ        0x2cf8                                                                                          
002cf0   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002cf2   0bfe     ANDLW     0xfe                                                                                            
002cf4   06e7     DECF      0xe7,0x1,0x0                                                                                    
002cf6   e1fc     BNZ       0x2cf0                                                                                          
002cf8   1280     IORWF     0x80,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
002cfa   d013     BRA       0x2d22         		else	                                                                          C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
002cfc   cfde     MOVFF     0xfde,0x2a     			bitclr(PORTA,i-5);                                                            C:\opensprints\FW\user\user.c
002cfe   f02a                                                                                                               
002d00   cfdd     MOVFF     0xfdd,0x2b                                                                                      
002d02   f02b                                                                                                               
002d04   0e05     MOVLW     0x5                                                                                             
002d06   5e2a     SUBWF     0x2a,0x1,0x0                                                                                    
002d08   0e00     MOVLW     0x0                                                                                             
002d0a   5a2b     SUBWFB    0x2b,0x1,0x0                                                                                    
002d0c   0e01     MOVLW     0x1                                                                                             
002d0e   c02a     MOVFF     0x2a,0xfe7                                                                                      
002d10   ffe7                                                                                                               
002d12   52e7     MOVF      0xe7,0x1,0x0                                                                                    
002d14   e004     BZ        0x2d1e                                                                                          
002d16   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002d18   0bfe     ANDLW     0xfe                                                                                            
002d1a   06e7     DECF      0xe7,0x1,0x0                                                                                    
002d1c   e1fc     BNZ       0x2d16                                                                                          
002d1e   1ce8     COMF      0xe8,0x0,0x0                                                                                    
002d20   1680     ANDWF     0x80,0x1,0x0                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
002d22   0e02     MOVLW     0x2            }                                                                                C:\opensprints\FW\user\user.c
002d24   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
002d26   e202     BC        0x2d2c                                                                                          
002d28   6ae1     CLRF      0xe1,0x0                                                                                        
002d2a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d2c   6ee1     MOVWF     0xe1,0x0                                                                                        
002d2e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d30   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002d32   ffd9                                                                                                               
002d34   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
002d36   cfd9     MOVFF     0xfd9,0xfe6    void DetermineProgressLedStates(void)                                            C:\opensprints\FW\user\user.c
002d38   ffe6                                                                                                               
002d3a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002d3c   ffd9                                                                                                               
002d3e   0e02     MOVLW     0x2                                                                                             
002d40   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
                                           	int i;                                                                          C:\opensprints\FW\user\user.c
002d42   6ade     CLRF      0xde,0x0       	for(i=0;i<NUM_PROGRESS_LEDS;i++)                                                C:\opensprints\FW\user\user.c
002d44   6add     CLRF      0xdd,0x0                                                                                        
002d46   cfde     MOVFF     0xfde,0x2a                                                                                      
002d48   f02a                                                                                                               
002d4a   cfdd     MOVFF     0xfdd,0x2b                                                                                      
002d4c   f02b                                                                                                               
002d4e   90d8     BCF       0xd8,0x0,0x0                                                                                    
002d50   502b     MOVF      0x2b,0x0,0x0                                                                                    
002d52   e604     BN        0x2d5c                                                                                          
002d54   0e0a     MOVLW     0xa                                                                                             
002d56   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
002d58   0e00     MOVLW     0x0                                                                                             
002d5a   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
002d5c   e301     BNC       0x2d60                                                                                          
002d5e   d105     BRA       0x2f6a                                                                                          
002f60   2adf     INCF      0xdf,0x1,0x0                                                                                    
002f62   0e01     MOVLW     0x1                                                                                             
002f64   e301     BNC       0x2f68                                                                                          
002f66   2adb     INCF      0xdb,0x1,0x0                                                                                    
002f68   d6ee     BRA       0x2d46                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
002d60   cfde     MOVFF     0xfde,0xfe9    		if(flashingProgressLedRates[i]==4)                                             C:\opensprints\FW\user\user.c
002d62   ffe9                                                                                                               
002d64   cfdd     MOVFF     0xfdd,0xfea                                                                                     
002d66   ffea                                                                                                               
002d68   90d8     BCF       0xd8,0x0,0x0                                                                                    
002d6a   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002d6c   36ea     RLCF      0xea,0x1,0x0                                                                                    
002d6e   0e95     MOVLW     0x95                                                                                            
002d70   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002d72   0e00     MOVLW     0x0                                                                                             
002d74   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002d76   0e04     MOVLW     0x4                                                                                             
002d78   18ee     XORWF     0xee,0x0,0x0                                                                                    
002d7a   e101     BNZ       0x2d7e                                                                                          
002d7c   50ed     MOVF      0xed,0x0,0x0                                                                                    
002d7e   e114     BNZ       0x2da8                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
002d80   0e01     MOVLW     0x1            			progressLedStates|=(1<<i);                                                    C:\opensprints\FW\user\user.c
002d82   52df     MOVF      0xdf,0x1,0x0                                                                                    
002d84   e006     BZ        0x2d92                                                                                          
002d86   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002d88   fff3                                                                                                               
002d8a   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002d8c   0bfe     ANDLW     0xfe                                                                                            
002d8e   06f3     DECF      0xf3,0x1,0x0                                                                                    
002d90   e1fc     BNZ       0x2d8a                                                                                          
002d92   6e2a     MOVWF     0x2a,0x0                                                                                        
002d94   6a2b     CLRF      0x2b,0x0                                                                                        
002d96   be2a     BTFSC     0x2a,0x7,0x0                                                                                    
002d98   682b     SETF      0x2b,0x0                                                                                        
002d9a   502a     MOVF      0x2a,0x0,0x0                                                                                    
002d9c   0100     MOVLB     0x0                                                                                             
002d9e   13d1     IORWF     0xd1,0x1,0x1                                                                                    
002da0   502b     MOVF      0x2b,0x0,0x0                                                                                    
002da2   0100     MOVLB     0x0                                                                                             
002da4   13d2     IORWF     0xd2,0x1,0x1                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
002da6   d0dc     BRA       0x2f60         		else if(flashingProgressLedRates[i]<4 && flashingProgressLedRates[i]>0)        C:\opensprints\FW\user\user.c
002da8   cfde     MOVFF     0xfde,0xfe9                                                                                     
002daa   ffe9                                                                                                               
002dac   cfdd     MOVFF     0xfdd,0xfea                                                                                     
002dae   ffea                                                                                                               
002db0   90d8     BCF       0xd8,0x0,0x0                                                                                    
002db2   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002db4   36ea     RLCF      0xea,0x1,0x0                                                                                    
002db6   0e95     MOVLW     0x95                                                                                            
002db8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002dba   0e00     MOVLW     0x0                                                                                             
002dbc   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002dbe   cfee     MOVFF     0xfee,0x2a                                                                                      
002dc0   f02a                                                                                                               
002dc2   cfef     MOVFF     0xfef,0x2b                                                                                      
002dc4   f02b                                                                                                               
002dc6   0e04     MOVLW     0x4                                                                                             
002dc8   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
002dca   0e00     MOVLW     0x0                                                                                             
002dcc   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
002dce   e301     BNC       0x2dd2                                                                                          
002dd0   d0a4     BRA       0x2f1a                                                                                          
002dd2   cfde     MOVFF     0xfde,0xfe9                                                                                     
002dd4   ffe9                                                                                                               
002dd6   cfdd     MOVFF     0xfdd,0xfea                                                                                     
002dd8   ffea                                                                                                               
002dda   90d8     BCF       0xd8,0x0,0x0                                                                                    
002ddc   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002dde   36ea     RLCF      0xea,0x1,0x0                                                                                    
002de0   0e95     MOVLW     0x95                                                                                            
002de2   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002de4   0e00     MOVLW     0x0                                                                                             
002de6   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002de8   0e00     MOVLW     0x0                                                                                             
002dea   80d8     BSF       0xd8,0x0,0x0                                                                                    
002dec   54ee     SUBFWB    0xee,0x0,0x0                                                                                    
002dee   0e00     MOVLW     0x0                                                                                             
002df0   54ed     SUBFWB    0xed,0x0,0x0                                                                                    
002df2   e301     BNC       0x2df6                                                                                          
002df4   d092     BRA       0x2f1a                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
002df6   cfde     MOVFF     0xfde,0xfe9    			flashingProgressLedTicks[i]-=flashingProgressLedRates[i];                     C:\opensprints\FW\user\user.c
002df8   ffe9                                                                                                               
002dfa   cfdd     MOVFF     0xfdd,0xfea                                                                                     
002dfc   ffea                                                                                                               
002dfe   90d8     BCF       0xd8,0x0,0x0                                                                                    
002e00   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002e02   36ea     RLCF      0xea,0x1,0x0                                                                                    
002e04   0e95     MOVLW     0x95                                                                                            
002e06   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002e08   0e00     MOVLW     0x0                                                                                             
002e0a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002e0c   cfee     MOVFF     0xfee,0x2a                                                                                      
002e0e   f02a                                                                                                               
002e10   cfef     MOVFF     0xfef,0x2b                                                                                      
002e12   f02b                                                                                                               
002e14   6a2c     CLRF      0x2c,0x0                                                                                        
002e16   6a2d     CLRF      0x2d,0x0                                                                                        
002e18   cfde     MOVFF     0xfde,0xfe9                                                                                     
002e1a   ffe9                                                                                                               
002e1c   cfdd     MOVFF     0xfdd,0xfea                                                                                     
002e1e   ffea                                                                                                               
002e20   90d8     BCF       0xd8,0x0,0x0                                                                                    
002e22   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002e24   36ea     RLCF      0xea,0x1,0x0                                                                                    
002e26   90d8     BCF       0xd8,0x0,0x0                                                                                    
002e28   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002e2a   36ea     RLCF      0xea,0x1,0x0                                                                                    
002e2c   0ea9     MOVLW     0xa9                                                                                            
002e2e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002e30   0e00     MOVLW     0x0                                                                                             
002e32   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002e34   502a     MOVF      0x2a,0x0,0x0                                                                                    
002e36   5eee     SUBWF     0xee,0x1,0x0                                                                                    
002e38   502b     MOVF      0x2b,0x0,0x0                                                                                    
002e3a   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
002e3c   502c     MOVF      0x2c,0x0,0x0                                                                                    
002e3e   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
002e40   502d     MOVF      0x2d,0x0,0x0                                                                                    
002e42   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
002e44   cfde     MOVFF     0xfde,0xfe9    			if(flashingProgressLedTicks[i]==0)                                            C:\opensprints\FW\user\user.c
002e46   ffe9                                                                                                               
002e48   cfdd     MOVFF     0xfdd,0xfea                                                                                     
002e4a   ffea                                                                                                               
002e4c   90d8     BCF       0xd8,0x0,0x0                                                                                    
002e4e   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002e50   36ea     RLCF      0xea,0x1,0x0                                                                                    
002e52   90d8     BCF       0xd8,0x0,0x0                                                                                    
002e54   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002e56   36ea     RLCF      0xea,0x1,0x0                                                                                    
002e58   0ea9     MOVLW     0xa9                                                                                            
002e5a   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002e5c   0e00     MOVLW     0x0                                                                                             
002e5e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002e60   cfee     MOVFF     0xfee,0x2a                                                                                      
002e62   f02a                                                                                                               
002e64   cfee     MOVFF     0xfee,0x2b                                                                                      
002e66   f02b                                                                                                               
002e68   cfee     MOVFF     0xfee,0x2c                                                                                      
002e6a   f02c                                                                                                               
002e6c   cfef     MOVFF     0xfef,0x2d                                                                                      
002e6e   f02d                                                                                                               
002e70   502a     MOVF      0x2a,0x0,0x0                                                                                    
002e72   102b     IORWF     0x2b,0x0,0x0                                                                                    
002e74   102c     IORWF     0x2c,0x0,0x0                                                                                    
002e76   102d     IORWF     0x2d,0x0,0x0                                                                                    
002e78   e14f     BNZ       0x2f18                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
002e7a   cfde     MOVFF     0xfde,0xfe9    				flashingProgressLedTicks[i]=countdownTimer;                                  C:\opensprints\FW\user\user.c
002e7c   ffe9                                                                                                               
002e7e   cfdd     MOVFF     0xfdd,0xfea                                                                                     
002e80   ffea                                                                                                               
002e82   90d8     BCF       0xd8,0x0,0x0                                                                                    
002e84   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002e86   36ea     RLCF      0xea,0x1,0x0                                                                                    
002e88   90d8     BCF       0xd8,0x0,0x0                                                                                    
002e8a   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002e8c   36ea     RLCF      0xea,0x1,0x0                                                                                    
002e8e   0ea9     MOVLW     0xa9                                                                                            
002e90   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002e92   0e00     MOVLW     0x0                                                                                             
002e94   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002e96   c072     MOVFF     0x72,0xfee                                                                                      
002e98   ffee                                                                                                               
002e9a   c073     MOVFF     0x73,0xfee                                                                                      
002e9c   ffee                                                                                                               
002e9e   c074     MOVFF     0x74,0xfee                                                                                      
002ea0   ffee                                                                                                               
002ea2   c075     MOVFF     0x75,0xfee                                                                                      
002ea4   ffee                                                                                                               
002ea6   0e01     MOVLW     0x1            				progressLedStates=(progressLedStates&~(1<<i))|(~progressLedStates&(1<<i));	// toggle a single bit! C:\opensprints\FW\user\user.c
002ea8   52df     MOVF      0xdf,0x1,0x0                                                                                    
002eaa   e006     BZ        0x2eb8                                                                                          
002eac   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002eae   fff3                                                                                                               
002eb0   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002eb2   0bfe     ANDLW     0xfe                                                                                            
002eb4   06f3     DECF      0xf3,0x1,0x0                                                                                    
002eb6   e1fc     BNZ       0x2eb0                                                                                          
002eb8   1ce8     COMF      0xe8,0x0,0x0                                                                                    
002eba   6e2c     MOVWF     0x2c,0x0                                                                                        
002ebc   6a2d     CLRF      0x2d,0x0                                                                                        
002ebe   be2c     BTFSC     0x2c,0x7,0x0                                                                                    
002ec0   682d     SETF      0x2d,0x0                                                                                        
002ec2   0100     MOVLB     0x0                                                                                             
002ec4   0100     MOVLB     0x0                                                                                             
002ec6   51d1     MOVF      0xd1,0x0,0x1                                                                                    
002ec8   142c     ANDWF     0x2c,0x0,0x0                                                                                    
002eca   6e2a     MOVWF     0x2a,0x0                                                                                        
002ecc   0100     MOVLB     0x0                                                                                             
002ece   0100     MOVLB     0x0                                                                                             
002ed0   51d2     MOVF      0xd2,0x0,0x1                                                                                    
002ed2   142d     ANDWF     0x2d,0x0,0x0                                                                                    
002ed4   6e2b     MOVWF     0x2b,0x0                                                                                        
002ed6   c0d1     MOVFF     0xd1,0x30                                                                                       
002ed8   f030                                                                                                               
002eda   c0d2     MOVFF     0xd2,0x31                                                                                       
002edc   f031                                                                                                               
002ede   1e30     COMF      0x30,0x1,0x0                                                                                    
002ee0   1e31     COMF      0x31,0x1,0x0                                                                                    
002ee2   0e01     MOVLW     0x1                                                                                             
002ee4   52df     MOVF      0xdf,0x1,0x0                                                                                    
002ee6   e006     BZ        0x2ef4                                                                                          
002ee8   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002eea   fff3                                                                                                               
002eec   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002eee   0bfe     ANDLW     0xfe                                                                                            
002ef0   06f3     DECF      0xf3,0x1,0x0                                                                                    
002ef2   e1fc     BNZ       0x2eec                                                                                          
002ef4   6e32     MOVWF     0x32,0x0                                                                                        
002ef6   6a33     CLRF      0x33,0x0                                                                                        
002ef8   be32     BTFSC     0x32,0x7,0x0                                                                                    
002efa   6833     SETF      0x33,0x0                                                                                        
002efc   5030     MOVF      0x30,0x0,0x0                                                                                    
002efe   1432     ANDWF     0x32,0x0,0x0                                                                                    
002f00   6e2e     MOVWF     0x2e,0x0                                                                                        
002f02   5031     MOVF      0x31,0x0,0x0                                                                                    
002f04   1433     ANDWF     0x33,0x0,0x0                                                                                    
002f06   6e2f     MOVWF     0x2f,0x0                                                                                        
002f08   502a     MOVF      0x2a,0x0,0x0                                                                                    
002f0a   102e     IORWF     0x2e,0x0,0x0                                                                                    
002f0c   0100     MOVLB     0x0                                                                                             
002f0e   6fd1     MOVWF     0xd1,0x1                                                                                        
002f10   502b     MOVF      0x2b,0x0,0x0                                                                                    
002f12   102f     IORWF     0x2f,0x0,0x0                                                                                    
002f14   0100     MOVLB     0x0                                                                                             
002f16   6fd2     MOVWF     0xd2,0x1                                                                                        
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
002f18   d023     BRA       0x2f60         		else if(flashingProgressLedRates[i]==0)                                        C:\opensprints\FW\user\user.c
002f1a   cfde     MOVFF     0xfde,0xfe9                                                                                     
002f1c   ffe9                                                                                                               
002f1e   cfdd     MOVFF     0xfdd,0xfea                                                                                     
002f20   ffea                                                                                                               
002f22   90d8     BCF       0xd8,0x0,0x0                                                                                    
002f24   36e9     RLCF      0xe9,0x1,0x0                                                                                    
002f26   36ea     RLCF      0xea,0x1,0x0                                                                                    
002f28   0e95     MOVLW     0x95                                                                                            
002f2a   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002f2c   0e00     MOVLW     0x0                                                                                             
002f2e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002f30   50ee     MOVF      0xee,0x0,0x0                                                                                    
002f32   10ed     IORWF     0xed,0x0,0x0                                                                                    
002f34   e115     BNZ       0x2f60                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
002f36   0e01     MOVLW     0x1            			progressLedStates&=~(1<<i);                                                   C:\opensprints\FW\user\user.c
002f38   52df     MOVF      0xdf,0x1,0x0                                                                                    
002f3a   e006     BZ        0x2f48                                                                                          
002f3c   cfdf     MOVFF     0xfdf,0xff3                                                                                     
002f3e   fff3                                                                                                               
002f40   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
002f42   0bfe     ANDLW     0xfe                                                                                            
002f44   06f3     DECF      0xf3,0x1,0x0                                                                                    
002f46   e1fc     BNZ       0x2f40                                                                                          
002f48   1ce8     COMF      0xe8,0x0,0x0                                                                                    
002f4a   6e2a     MOVWF     0x2a,0x0                                                                                        
002f4c   6a2b     CLRF      0x2b,0x0                                                                                        
002f4e   be2a     BTFSC     0x2a,0x7,0x0                                                                                    
002f50   682b     SETF      0x2b,0x0                                                                                        
002f52   502a     MOVF      0x2a,0x0,0x0                                                                                    
002f54   0100     MOVLB     0x0                                                                                             
002f56   17d1     ANDWF     0xd1,0x1,0x1                                                                                    
002f58   502b     MOVF      0x2b,0x0,0x0                                                                                    
002f5a   0100     MOVLB     0x0                                                                                             
002f5c   17d2     ANDWF     0xd2,0x1,0x1                                                                                    
                                           		}                                                                              C:\opensprints\FW\user\user.c
002f5e   d000     BRA       0x2f60         		else	// error                                                                  C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// To Do. turn on the red LED on the UBW                                      C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
002f6a   0e02     MOVLW     0x2            }				                                                                            C:\opensprints\FW\user\user.c
002f6c   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
002f6e   e202     BC        0x2f74                                                                                          
002f70   6ae1     CLRF      0xe1,0x0                                                                                        
002f72   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f74   6ee1     MOVWF     0xe1,0x0                                                                                        
002f76   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f78   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002f7a   ffd9                                                                                                               
002f7c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
002f7e   cfd9     MOVFF     0xfd9,0xfe6    void HallEffSensors(void)                                                        C:\opensprints\FW\user\user.c
002f80   ffe6                                                                                                               
002f82   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002f84   ffd9                                                                                                               
002f86   0e04     MOVLW     0x4                                                                                             
002f88   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\user\user.c
002f8a   0100     MOVLB     0x0            	if(is_racing)                                                                   C:\opensprints\FW\user\user.c
002f8c   51eb     MOVF      0xeb,0x0,0x1                                                                                    
002f8e   e101     BNZ       0x2f92                                                                                          
002f90   d0d2     BRA       0x3136                                                                                          
                                           	{                                                                               C:\opensprints\FW\user\user.c
                                           		unsigned int momentRaceTimeCentisecs;                                          C:\opensprints\FW\user\user.c
                                           		unsigned int momentRaceTimeMins;                                               C:\opensprints\FW\user\user.c
                                           		// check the race stopwatch                                                    C:\opensprints\FW\user\user.c
002f92   c070     MOVFF     0x70,0xfde     		momentRaceTimeCentisecs = raceTimeCentisecs;                                   C:\opensprints\FW\user\user.c
002f94   ffde                                                                                                               
002f96   c071     MOVFF     0x71,0xfdd                                                                                      
002f98   ffdd                                                                                                               
002f9a   0e02     MOVLW     0x2            		momentRaceTimeMins = raceTimeMins;                                             C:\opensprints\FW\user\user.c
002f9c   c06e     MOVFF     0x6e,0xfdb                                                                                      
002f9e   ffdb                                                                                                               
002fa0   0e03     MOVLW     0x3                                                                                             
002fa2   c06f     MOVFF     0x6f,0xfdb                                                                                      
002fa4   ffdb                                                                                                               
                                                                                                                            C:\opensprints\FW\user\user.c
002fa6   0100     MOVLB     0x0            		if(justBegun)                                                                  C:\opensprints\FW\user\user.c
002fa8   51f7     MOVF      0xf7,0x0,0x1                                                                                    
002faa   e00f     BZ        0x2fca                                                                                          
                                           		{                                                                              C:\opensprints\FW\user\user.c
                                           			// initialize the pins                                                        C:\opensprints\FW\user\user.c
002fac   8092     BSF       0x92,0x0,0x0   			bitset (DDRA, I_SENSOR0);     // set Port A Pin x as input                    C:\opensprints\FW\user\user.c
002fae   8292     BSF       0x92,0x1,0x0   			bitset (DDRA, I_SENSOR1);     // set Port A Pin x as input                    C:\opensprints\FW\user\user.c
                                           			// read the pins                                                              C:\opensprints\FW\user\user.c
002fb0   0e01     MOVLW     0x1            			currentValueSensor0 = bittst (PORTA, I_SENSOR0);  	// read Port A Pin x state C:\opensprints\FW\user\user.c
002fb2   1480     ANDWF     0x80,0x0,0x0                                                                                    
002fb4   0100     MOVLB     0x0                                                                                             
002fb6   6f7b     MOVWF     0x7b,0x1                                                                                        
002fb8   6b7c     CLRF      0x7c,0x1                                                                                        
002fba   0e02     MOVLW     0x2            			currentValueSensor1 = bittst (PORTA, I_SENSOR1);  	// read Port A Pin x state C:\opensprints\FW\user\user.c
002fbc   1480     ANDWF     0x80,0x0,0x0                                                                                    
002fbe   0100     MOVLB     0x0                                                                                             
002fc0   6f7d     MOVWF     0x7d,0x1                                                                                        
002fc2   6b7e     CLRF      0x7e,0x1                                                                                        
                                           	                                                                                C:\opensprints\FW\user\user.c
002fc4   0100     MOVLB     0x0            			justBegun=0;                                                                  C:\opensprints\FW\user\user.c
002fc6   6bf7     CLRF      0xf7,0x1                                                                                        
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
002fc8   d0b6     BRA       0x3136         		else                                                                           C:\opensprints\FW\user\user.c
                                           		{                                                                              C:\opensprints\FW\user\user.c
002fca   0100     MOVLB     0x0            			if (raceTestMode)                                                             C:\opensprints\FW\user\user.c
002fcc   51ec     MOVF      0xec,0x0,0x1                                                                                    
002fce   e059     BZ        0x3082                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
002fd0   cfde     MOVFF     0xfde,0x2a     				if (momentRaceTimeCentisecs%TEST_PERIOD==0 && momentRaceTimeCentisecs!=lastSensor0Time) C:\opensprints\FW\user\user.c
002fd2   f02a                                                                                                               
002fd4   cfdd     MOVFF     0xfdd,0x2b                                                                                      
002fd6   f02b                                                                                                               
002fd8   0e14     MOVLW     0x14                                                                                            
002fda   6e23     MOVWF     0x23,0x0                                                                                        
002fdc   6a24     CLRF      0x24,0x0                                                                                        
002fde   c02a     MOVFF     0x2a,0x1e                                                                                       
002fe0   f01e                                                                                                               
002fe2   c02b     MOVFF     0x2b,0x1f                                                                                       
002fe4   f01f                                                                                                               
002fe6   ecc2     CALL      0x4f84,0x0                                                                                      
002fe8   f027                                                                                                               
002fea   c01a     MOVFF     0x1a,0x2a                                                                                       
002fec   f02a                                                                                                               
002fee   c01b     MOVFF     0x1b,0x2b                                                                                       
002ff0   f02b                                                                                                               
002ff2   502a     MOVF      0x2a,0x0,0x0                                                                                    
002ff4   102b     IORWF     0x2b,0x0,0x0                                                                                    
002ff6   e114     BNZ       0x3020                                                                                          
002ff8   cfde     MOVFF     0xfde,0x2c                                                                                      
002ffa   f02c                                                                                                               
002ffc   cfdd     MOVFF     0xfdd,0x2d                                                                                      
002ffe   f02d                                                                                                               
003000   0100     MOVLB     0x0                                                                                             
003002   5185     MOVF      0x85,0x0,0x1                                                                                    
003004   182c     XORWF     0x2c,0x0,0x0                                                                                    
003006   e102     BNZ       0x300c                                                                                          
003008   5186     MOVF      0x86,0x0,0x1                                                                                    
00300a   182d     XORWF     0x2d,0x0,0x0                                                                                    
00300c   e009     BZ        0x3020                                                                                          
                                           				{                                                                            C:\opensprints\FW\user\user.c
00300e   0e01     MOVLW     0x1            					sensor0Status=1;                                                            C:\opensprints\FW\user\user.c
003010   0100     MOVLB     0x0                                                                                             
003012   6f7f     MOVWF     0x7f,0x1                                                                                        
003014   6b80     CLRF      0x80,0x1                                                                                        
003016   cfde     MOVFF     0xfde,0x85     					lastSensor0Time=momentRaceTimeCentisecs;                                    C:\opensprints\FW\user\user.c
003018   f085                                                                                                               
00301a   cfdd     MOVFF     0xfdd,0x86                                                                                      
00301c   f086                                                                                                               
                                           				}                                                                            C:\opensprints\FW\user\user.c
00301e   d003     BRA       0x3026         				else                                                                         C:\opensprints\FW\user\user.c
003020   0100     MOVLB     0x0            					sensor0Status=0;                                                            C:\opensprints\FW\user\user.c
003022   6b7f     CLRF      0x7f,0x1                                                                                        
003024   6b80     CLRF      0x80,0x1                                                                                        
003026   cfde     MOVFF     0xfde,0x2a     				if (momentRaceTimeCentisecs%TEST_PERIOD==TEST_PERIOD_HALF && momentRaceTimeCentisecs!=lastSensor1Time) C:\opensprints\FW\user\user.c
003028   f02a                                                                                                               
00302a   cfdd     MOVFF     0xfdd,0x2b                                                                                      
00302c   f02b                                                                                                               
00302e   0e14     MOVLW     0x14                                                                                            
003030   6e23     MOVWF     0x23,0x0                                                                                        
003032   6a24     CLRF      0x24,0x0                                                                                        
003034   c02a     MOVFF     0x2a,0x1e                                                                                       
003036   f01e                                                                                                               
003038   c02b     MOVFF     0x2b,0x1f                                                                                       
00303a   f01f                                                                                                               
00303c   ecc2     CALL      0x4f84,0x0                                                                                      
00303e   f027                                                                                                               
003040   c01a     MOVFF     0x1a,0x2a                                                                                       
003042   f02a                                                                                                               
003044   c01b     MOVFF     0x1b,0x2b                                                                                       
003046   f02b                                                                                                               
003048   0e0a     MOVLW     0xa                                                                                             
00304a   182a     XORWF     0x2a,0x0,0x0                                                                                    
00304c   e101     BNZ       0x3050                                                                                          
00304e   502b     MOVF      0x2b,0x0,0x0                                                                                    
003050   e114     BNZ       0x307a                                                                                          
003052   cfde     MOVFF     0xfde,0x2c                                                                                      
003054   f02c                                                                                                               
003056   cfdd     MOVFF     0xfdd,0x2d                                                                                      
003058   f02d                                                                                                               
00305a   0100     MOVLB     0x0                                                                                             
00305c   5187     MOVF      0x87,0x0,0x1                                                                                    
00305e   182c     XORWF     0x2c,0x0,0x0                                                                                    
003060   e102     BNZ       0x3066                                                                                          
003062   5188     MOVF      0x88,0x0,0x1                                                                                    
003064   182d     XORWF     0x2d,0x0,0x0                                                                                    
003066   e009     BZ        0x307a                                                                                          
                                           				{                                                                            C:\opensprints\FW\user\user.c
003068   0e01     MOVLW     0x1            					sensor1Status=1;                                                            C:\opensprints\FW\user\user.c
00306a   0100     MOVLB     0x0                                                                                             
00306c   6f81     MOVWF     0x81,0x1                                                                                        
00306e   6b82     CLRF      0x82,0x1                                                                                        
003070   cfde     MOVFF     0xfde,0x87     					lastSensor1Time=momentRaceTimeCentisecs;                                    C:\opensprints\FW\user\user.c
003072   f087                                                                                                               
003074   cfdd     MOVFF     0xfdd,0x88                                                                                      
003076   f088                                                                                                               
                                           				}                                                                            C:\opensprints\FW\user\user.c
003078   d003     BRA       0x3080         				else                                                                         C:\opensprints\FW\user\user.c
00307a   0100     MOVLB     0x0            					sensor1Status=0;                                                            C:\opensprints\FW\user\user.c
00307c   6b81     CLRF      0x81,0x1                                                                                        
00307e   6b82     CLRF      0x82,0x1                                                                                        
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
003080   d046     BRA       0x310e         			else	// not test mode                                                         C:\opensprints\FW\user\user.c
                                           			{                                                                             C:\opensprints\FW\user\user.c
                                           				// remember previous state of pins                                           C:\opensprints\FW\user\user.c
003082   c07b     MOVFF     0x7b,0x77      				prevValueSensor0=currentValueSensor0;                                        C:\opensprints\FW\user\user.c
003084   f077                                                                                                               
003086   c07c     MOVFF     0x7c,0x78                                                                                       
003088   f078                                                                                                               
00308a   c07d     MOVFF     0x7d,0x79      				prevValueSensor1=currentValueSensor1;                                        C:\opensprints\FW\user\user.c
00308c   f079                                                                                                               
00308e   c07e     MOVFF     0x7e,0x7a                                                                                       
003090   f07a                                                                                                               
                                           	                                                                                C:\opensprints\FW\user\user.c
                                           				// read the pins                                                             C:\opensprints\FW\user\user.c
003092   0e01     MOVLW     0x1            				currentValueSensor0 = bittst(PORTA,I_SENSOR0);  	// read state of Port A Pin x C:\opensprints\FW\user\user.c
003094   1480     ANDWF     0x80,0x0,0x0                                                                                    
003096   0100     MOVLB     0x0                                                                                             
003098   6f7b     MOVWF     0x7b,0x1                                                                                        
00309a   6b7c     CLRF      0x7c,0x1                                                                                        
00309c   0e02     MOVLW     0x2            				currentValueSensor1 = bittst(PORTA,I_SENSOR1);  	// read state of Port A Pin x C:\opensprints\FW\user\user.c
00309e   1480     ANDWF     0x80,0x0,0x0                                                                                    
0030a0   0100     MOVLB     0x0                                                                                             
0030a2   6f7d     MOVWF     0x7d,0x1                                                                                        
0030a4   6b7e     CLRF      0x7e,0x1                                                                                        
                                           				                                                                             C:\opensprints\FW\user\user.c
0030a6   0100     MOVLB     0x0            				sensor0Status=(currentValueSensor0^prevValueSensor0)&~currentValueSensor0;   C:\opensprints\FW\user\user.c
0030a8   0100     MOVLB     0x0                                                                                             
0030aa   517b     MOVF      0x7b,0x0,0x1                                                                                    
0030ac   0100     MOVLB     0x0                                                                                             
0030ae   1977     XORWF     0x77,0x0,0x1                                                                                    
0030b0   6e2a     MOVWF     0x2a,0x0                                                                                        
0030b2   0100     MOVLB     0x0                                                                                             
0030b4   0100     MOVLB     0x0                                                                                             
0030b6   517c     MOVF      0x7c,0x0,0x1                                                                                    
0030b8   0100     MOVLB     0x0                                                                                             
0030ba   1978     XORWF     0x78,0x0,0x1                                                                                    
0030bc   6e2b     MOVWF     0x2b,0x0                                                                                        
0030be   c07b     MOVFF     0x7b,0x2c                                                                                       
0030c0   f02c                                                                                                               
0030c2   c07c     MOVFF     0x7c,0x2d                                                                                       
0030c4   f02d                                                                                                               
0030c6   1e2c     COMF      0x2c,0x1,0x0                                                                                    
0030c8   1e2d     COMF      0x2d,0x1,0x0                                                                                    
0030ca   502a     MOVF      0x2a,0x0,0x0                                                                                    
0030cc   142c     ANDWF     0x2c,0x0,0x0                                                                                    
0030ce   0100     MOVLB     0x0                                                                                             
0030d0   6f7f     MOVWF     0x7f,0x1                                                                                        
0030d2   502b     MOVF      0x2b,0x0,0x0                                                                                    
0030d4   142d     ANDWF     0x2d,0x0,0x0                                                                                    
0030d6   0100     MOVLB     0x0                                                                                             
0030d8   6f80     MOVWF     0x80,0x1                                                                                        
0030da   0100     MOVLB     0x0            				sensor1Status=(currentValueSensor1^prevValueSensor1)&~currentValueSensor1;   C:\opensprints\FW\user\user.c
0030dc   0100     MOVLB     0x0                                                                                             
0030de   517d     MOVF      0x7d,0x0,0x1                                                                                    
0030e0   0100     MOVLB     0x0                                                                                             
0030e2   1979     XORWF     0x79,0x0,0x1                                                                                    
0030e4   6e2a     MOVWF     0x2a,0x0                                                                                        
0030e6   0100     MOVLB     0x0                                                                                             
0030e8   0100     MOVLB     0x0                                                                                             
0030ea   517e     MOVF      0x7e,0x0,0x1                                                                                    
0030ec   0100     MOVLB     0x0                                                                                             
0030ee   197a     XORWF     0x7a,0x0,0x1                                                                                    
0030f0   6e2b     MOVWF     0x2b,0x0                                                                                        
0030f2   c07d     MOVFF     0x7d,0x2c                                                                                       
0030f4   f02c                                                                                                               
0030f6   c07e     MOVFF     0x7e,0x2d                                                                                       
0030f8   f02d                                                                                                               
0030fa   1e2c     COMF      0x2c,0x1,0x0                                                                                    
0030fc   1e2d     COMF      0x2d,0x1,0x0                                                                                    
0030fe   502a     MOVF      0x2a,0x0,0x0                                                                                    
003100   142c     ANDWF     0x2c,0x0,0x0                                                                                    
003102   0100     MOVLB     0x0                                                                                             
003104   6f81     MOVWF     0x81,0x1                                                                                        
003106   502b     MOVF      0x2b,0x0,0x0                                                                                    
003108   142d     ANDWF     0x2d,0x0,0x0                                                                                    
00310a   0100     MOVLB     0x0                                                                                             
00310c   6f82     MOVWF     0x82,0x1                                                                                        
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
00310e   0100     MOVLB     0x0            			if(sensor0Status)                                                             C:\opensprints\FW\user\user.c
003110   517f     MOVF      0x7f,0x0,0x1                                                                                    
003112   1180     IORWF     0x80,0x0,0x1                                                                                    
003114   e006     BZ        0x3122                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
                                           				// send a string through USB packet stating that sensor 0 switched to high   C:\opensprints\FW\user\user.c
                                           			//	printf("1;%i:%i\r\n",momentRaceTimeMins,momentRaceTimeCentisecs);          C:\opensprints\FW\user\user.c
003116   0100     MOVLB     0x0            				sensor0progress++;                                                           C:\opensprints\FW\user\user.c
003118   2b8d     INCF      0x8d,0x1,0x1                                                                                    
00311a   0e00     MOVLW     0x0                                                                                             
00311c   238e     ADDWFC    0x8e,0x1,0x1                                                                                    
00311e   238f     ADDWFC    0x8f,0x1,0x1                                                                                    
003120   2390     ADDWFC    0x90,0x1,0x1                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
003122   0100     MOVLB     0x0            			if(sensor1Status)                                                             C:\opensprints\FW\user\user.c
003124   5181     MOVF      0x81,0x0,0x1                                                                                    
003126   1182     IORWF     0x82,0x0,0x1                                                                                    
003128   e006     BZ        0x3136                                                                                          
                                           			{                                                                             C:\opensprints\FW\user\user.c
                                           				// send a string through USB packet stating that sensor 1 switched to high   C:\opensprints\FW\user\user.c
                                           			//	printf("2;%i:%i\r\n",momentRaceTimeMins,momentRaceTimeCentisecs);          C:\opensprints\FW\user\user.c
00312a   0100     MOVLB     0x0            				sensor1progress++;                                                           C:\opensprints\FW\user\user.c
00312c   2b91     INCF      0x91,0x1,0x1                                                                                    
00312e   0e00     MOVLW     0x0                                                                                             
003130   2392     ADDWFC    0x92,0x1,0x1                                                                                    
003132   2393     ADDWFC    0x93,0x1,0x1                                                                                    
003134   2394     ADDWFC    0x94,0x1,0x1                                                                                    
                                           			}                                                                             C:\opensprints\FW\user\user.c
                                           		}                                                                              C:\opensprints\FW\user\user.c
                                           	}                                                                               C:\opensprints\FW\user\user.c
003136   0e04     MOVLW     0x4            }                                                                                C:\opensprints\FW\user\user.c
003138   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00313a   e202     BC        0x3140                                                                                          
00313c   6ae1     CLRF      0xe1,0x0                                                                                        
00313e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003140   6ee1     MOVWF     0xe1,0x0                                                                                        
003142   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003144   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003146   ffd9                                                                                                               
003148   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\user\user.c
                                                                                                                            C:\opensprints\FW\user\user.c
                                           /** EOF user.c ***************************************************************/  C:\opensprints\FW\user\user.c
                                           /*********************************************************************           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *             Microchip USB C18 Firmware -  CDC Version 1.0                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *********************************************************************           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * FileName:        cdc.c                                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Dependencies:    See INCLUDES section below                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Processor:       PIC18                                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Compiler:        C18 2.30.01+                                                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Company:         Microchip Technology, Inc.                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Software License Agreement                                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * civil liability for the breach of the terms and conditions of this            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * license.                                                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Author               Date        Comment                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Rawin Rojvanit       11/19/04    Original. RS-232 Emulation Subset            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            ********************************************************************/           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /** I N C L U D E S **********************************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           #include <p18cxxx.h>                                                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           #include "system\typedefs.h"                                                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           #include "system\usb\usb.h"                                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           #ifdef USB_USE_CDC                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /** V A R I A B L E S ********************************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           #pragma udata                                                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           byte cdc_rx_len;            // total rx length                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           byte cdc_trf_state;         // States are defined cdc.h                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           POINTER pCDCSrc;            // Dedicated source pointer                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           POINTER pCDCDst;            // Dedicated destination pointer                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           byte cdc_tx_len;            // total tx length                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           byte cdc_mem_type;          // _ROM, _RAM                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           LINE_CODING line_coding;    // Buffer to store line coding information           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           CONTROL_SIGNAL_BITMAP control_signal_bitmap;                                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /*                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * SEND_ENCAPSULATED_COMMAND and GET_ENCAPSULATED_RESPONSE are required          C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * requests according to the CDC specification.                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * However, it is not really being used here, therefore a dummy buffer is        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * used for conformance.                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            */                                                                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           #define dummy_length    0x08                                                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           byte dummy_encapsulated_cmd_response[dummy_length];                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           #pragma code                                                                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /** C L A S S  S P E C I F I C  R E Q ****************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Function:        void USBCheckCDCRequest(void)                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Overview:        This routine checks the setup data packet to see if it       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  knows how to handle it                                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           void USBCheckCDCRequest(void)                                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           {                                                                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * If request recipient is not an interface then return                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003d6c   0104     MOVLB     0x4                if(SetupPkt.Recipient != RCPT_INTF) return;                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
003d6e   5120     MOVF      0x20,0x0,0x1                                                                                    
003d70   0b1f     ANDLW     0x1f                                                                                            
003d72   0801     SUBLW     0x1                                                                                             
003d74   e001     BZ        0x3d78                                                                                          
003d76   d060     BRA       0x3e38                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * If request type is not class-specific then return                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003d78   0104     MOVLB     0x4                if(SetupPkt.RequestType != CLASS) return;                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
003d7a   5120     MOVF      0x20,0x0,0x1                                                                                    
003d7c   0b60     ANDLW     0x60                                                                                            
003d7e   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003d80   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003d82   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003d84   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003d86   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003d88   0801     SUBLW     0x1                                                                                             
003d8a   e001     BZ        0x3d8e                                                                                          
003d8c   d055     BRA       0x3e38                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Interface ID must match interface numbers associated with                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * CDC class, else return                                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003d8e   0104     MOVLB     0x4                if((SetupPkt.bIntfID != CDC_COMM_INTF_ID)&&                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
003d90   5124     MOVF      0x24,0x0,0x1                                                                                    
003d92   e004     BZ        0x3d9c                (SetupPkt.bIntfID != CDC_DATA_INTF_ID)) return;                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
003d94   0104     MOVLB     0x4                                                                                             
003d96   0524     DECF      0x24,0x0,0x1                                                                                    
003d98   e001     BZ        0x3d9c                                                                                          
003d9a   d04e     BRA       0x3e38                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003d9c   0104     MOVLB     0x4                switch(SetupPkt.bRequest)                                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
003d9e   5121     MOVF      0x21,0x0,0x1                                                                                    
003da0   0a23     XORLW     0x23                                                                                            
003da2   e048     BZ        0x3e34                                                                                          
003da4   0a01     XORLW     0x1                                                                                             
003da6   e040     BZ        0x3e28                                                                                          
003da8   0a03     XORLW     0x3                                                                                             
003daa   e030     BZ        0x3e0c                                                                                          
003dac   0a01     XORLW     0x1                                                                                             
003dae   e025     BZ        0x3dfa                                                                                          
003db0   0a24     XORLW     0x24                                                                                            
003db2   e022     BZ        0x3df8                                                                                          
003db4   0a07     XORLW     0x7                                                                                             
003db6   e01f     BZ        0x3df6                                                                                          
003db8   0a01     XORLW     0x1                                                                                             
003dba   e01c     BZ        0x3df4                                                                                          
003dbc   0a03     XORLW     0x3                                                                                             
003dbe   e011     BZ        0x3de2                                                                                          
003dc0   0a01     XORLW     0x1                                                                                             
003dc2   e001     BZ        0x3dc6                                                                                          
003dc4   d038     BRA       0x3e36                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   case SEND_ENCAPSULATED_COMMAND:                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003dc6   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_CDC;                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
003dc8   0e03     MOVLW     0x3                                                                                             
003dca   6ff9     MOVWF     0xf9,0x1                                                                                        
003dcc   0100     MOVLB     0x0                        pSrc.bRam = (byte*)&dummy_encapsulated_cmd_response;                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
003dce   0ee3     MOVLW     0xe3                                                                                            
003dd0   6ffa     MOVWF     0xfa,0x1                                                                                        
003dd2   0e00     MOVLW     0x0                                                                                             
003dd4   6ffb     MOVWF     0xfb,0x1                                                                                        
003dd6   0101     MOVLB     0x1                        usb_stat.ctrl_trf_mem = _RAM;                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
003dd8   93a4     BCF       0xa4,0x1,0x1                                                                                    
003dda   0100     MOVLB     0x0                        LSB(wCount) = dummy_length;                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003ddc   0e08     MOVLW     0x8                                                                                             
003dde   6ffe     MOVWF     0xfe,0x1                                                                                        
003de0   d02b     BRA       0x3e38                     break;                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   case GET_ENCAPSULATED_RESPONSE:                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003de2   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_CDC;                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
003de4   0e03     MOVLW     0x3                                                                                             
003de6   6ff9     MOVWF     0xf9,0x1                                                                                        
                                                       // Populate dummy_encapsulated_cmd_response first.                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
003de8   0100     MOVLB     0x0                        pDst.bRam = (byte*)&dummy_encapsulated_cmd_response;                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
003dea   0ee3     MOVLW     0xe3                                                                                            
003dec   6ffc     MOVWF     0xfc,0x1                                                                                        
003dee   0e00     MOVLW     0x0                                                                                             
003df0   6ffd     MOVWF     0xfd,0x1                                                                                        
003df2   d022     BRA       0x3e38                     break;                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   case SET_COMM_FEATURE:                  // Optional                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
003df4   d021     BRA       0x3e38                     break;                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   case GET_COMM_FEATURE:                  // Optional                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
003df6   d020     BRA       0x3e38                     break;                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   case CLEAR_COMM_FEATURE:                // Optional                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
003df8   d01f     BRA       0x3e38                     break;                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   case SET_LINE_CODING:                                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
003dfa   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_CDC;                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
003dfc   0e03     MOVLW     0x3                                                                                             
003dfe   6ff9     MOVWF     0xf9,0x1                                                                                        
003e00   0100     MOVLB     0x0                        pDst.bRam = (byte*)&line_coding;    // Set destination               C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e02   0edb     MOVLW     0xdb                                                                                            
003e04   6ffc     MOVWF     0xfc,0x1                                                                                        
003e06   0e00     MOVLW     0x0                                                                                             
003e08   6ffd     MOVWF     0xfd,0x1                                                                                        
003e0a   d016     BRA       0x3e38                     break;                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   case GET_LINE_CODING:                                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e0c   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_CDC;                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e0e   0e03     MOVLW     0x3                                                                                             
003e10   6ff9     MOVWF     0xf9,0x1                                                                                        
003e12   0100     MOVLB     0x0                        pSrc.bRam = (byte*)&line_coding;    // Set source                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e14   0edb     MOVLW     0xdb                                                                                            
003e16   6ffa     MOVWF     0xfa,0x1                                                                                        
003e18   0e00     MOVLW     0x0                                                                                             
003e1a   6ffb     MOVWF     0xfb,0x1                                                                                        
003e1c   0101     MOVLB     0x1                        usb_stat.ctrl_trf_mem = _RAM;       // Set memory type               C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e1e   93a4     BCF       0xa4,0x1,0x1                                                                                    
003e20   0100     MOVLB     0x0                        LSB(wCount) = LINE_CODING_LENGTH;   // Set data count                C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e22   0e07     MOVLW     0x7                                                                                             
003e24   6ffe     MOVWF     0xfe,0x1                                                                                        
003e26   d008     BRA       0x3e38                     break;                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   case SET_CONTROL_LINE_STATE:                                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e28   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_CDC;                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e2a   0e03     MOVLW     0x3                                                                                             
003e2c   6ff9     MOVWF     0xf9,0x1                                                                                        
003e2e   c422     MOVFF     0x422,0xe2                 control_signal_bitmap._byte = LSB(SetupPkt.W_Value);                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e30   f0e2                                                                                                               
003e32   d002     BRA       0x3e38                     break;                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   case SEND_BREAK:                        // Optional                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e34   d001     BRA       0x3e38                     break;                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   default:                                                                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e36   d000     BRA       0x3e38                     break;                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               }//end switch(SetupPkt.bRequest)                                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e38   0012     RETURN    0x0            }//end USBCheckCDCRequest                                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /** U S E R  A P I ***********************************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Function:        void CDCInitEP(void)                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Overview:        CDCInitEP initializes CDC endpoints, buffer descriptors,     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  internal state-machine, and variables.                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  It should be called after the USB host has sent out a        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  SET_CONFIGURATION request.                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  See USBStdSetCfgHandler() in usb9.c for examples.            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           void CDCInitEP(void)                                                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           {                                                                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               //Abstract line coding information                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e3a   0100     MOVLB     0x0                line_coding.dwDTERate._dword = 115200;      // baud rate                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e3c   6bdb     CLRF      0xdb,0x1                                                                                        
003e3e   0ec2     MOVLW     0xc2                                                                                            
003e40   6fdc     MOVWF     0xdc,0x1                                                                                        
003e42   0e01     MOVLW     0x1                                                                                             
003e44   6fdd     MOVWF     0xdd,0x1                                                                                        
003e46   6bde     CLRF      0xde,0x1                                                                                        
003e48   0100     MOVLB     0x0                line_coding.bCharFormat = 0x00;             // 1 stop bit                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e4a   6bdf     CLRF      0xdf,0x1                                                                                        
003e4c   0100     MOVLB     0x0                line_coding.bParityType = 0x00;             // None                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e4e   6be0     CLRF      0xe0,0x1                                                                                        
003e50   0100     MOVLB     0x0                line_coding.bDataBits = 0x08;               // 5,6,7,8, or 16                C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e52   0e08     MOVLW     0x8                                                                                             
003e54   6fe1     MOVWF     0xe1,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e56   0100     MOVLB     0x0                cdc_trf_state = CDC_TX_READY;                                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e58   6bd4     CLRF      0xd4,0x1                                                                                        
003e5a   0100     MOVLB     0x0                cdc_rx_len = 0;                                                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e5c   6bd3     CLRF      0xd3,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e5e   0e1a     MOVLW     0x1a               CDC_COMM_UEP = EP_IN|HSHK_EN;               // Enable 1 Comm pipe            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e60   6e72     MOVWF     0x72,0x0                                                                                        
003e62   0e1e     MOVLW     0x1e               CDC_DATA_UEP = EP_OUT_IN|HSHK_EN;           // Enable 2 data pipes           C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e64   6e73     MOVWF     0x73,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Do not have to init Cnt of IN pipes here.                                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Reason:  Number of bytes to send to the host                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *          varies from one transaction to                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *          another. Cnt should equal the exact                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *          number of bytes to transmit for                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *          a given IN transaction.                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *          This number of bytes will only                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *          be known right before the data is                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *          sent.                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e66   0104     MOVLB     0x4                CDC_INT_BD_IN.ADR = (byte*)&cdc_notice;     // Set buffer address            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e68   0e00     MOVLW     0x0                                                                                             
003e6a   6f16     MOVWF     0x16,0x1                                                                                        
003e6c   0e05     MOVLW     0x5                                                                                             
003e6e   6f17     MOVWF     0x17,0x1                                                                                        
003e70   0104     MOVLB     0x4                CDC_INT_BD_IN.Stat._byte = _UCPU|_DAT1;     // Set status                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e72   0e40     MOVLW     0x40                                                                                            
003e74   6f14     MOVWF     0x14,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e76   0104     MOVLB     0x4                CDC_BULK_BD_OUT.Cnt = sizeof(cdc_data_rx);  // Set buffer size               C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e78   0e40     MOVLW     0x40                                                                                            
003e7a   6f19     MOVWF     0x19,0x1                                                                                        
003e7c   0104     MOVLB     0x4                CDC_BULK_BD_OUT.ADR = (byte*)&cdc_data_rx;  // Set buffer address            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e7e   0e08     MOVLW     0x8                                                                                             
003e80   6f1a     MOVWF     0x1a,0x1                                                                                        
003e82   0e05     MOVLW     0x5                                                                                             
003e84   6f1b     MOVWF     0x1b,0x1                                                                                        
003e86   0104     MOVLB     0x4                CDC_BULK_BD_OUT.Stat._byte = _USIE|_DAT0|_DTSEN;// Set status                C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e88   0e88     MOVLW     0x88                                                                                            
003e8a   6f18     MOVWF     0x18,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e8c   0104     MOVLB     0x4                CDC_BULK_BD_IN.ADR = (byte*)&cdc_data_tx;   // Set buffer size               C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e8e   0e48     MOVLW     0x48                                                                                            
003e90   6f1e     MOVWF     0x1e,0x1                                                                                        
003e92   0e05     MOVLW     0x5                                                                                             
003e94   6f1f     MOVWF     0x1f,0x1                                                                                        
003e96   0104     MOVLB     0x4                CDC_BULK_BD_IN.Stat._byte = _UCPU|_DAT1;    // Set buffer address            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e98   0e40     MOVLW     0x40                                                                                            
003e9a   6f1c     MOVWF     0x1c,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e9c   0012     RETURN    0x0            }//end CDCInitEP                                                                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Function:        byte getsUSBUSART(char *buffer,                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                    byte len)                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * PreCondition:    Value of input argument 'len' should be smaller than the     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  maximum endpoint size responsible for receiving bulk         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  data from USB host for CDC class.                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  Input argument 'buffer' should point to a buffer area that   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  is bigger or equal to the size specified by 'len'.           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Input:           buffer  : Pointer to where received bytes are to be stored   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  len     : The number of bytes expected.                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Output:          The number of bytes copied to buffer.                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Side Effects:    Publicly accessible variable cdc_rx_len is updated with      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  the number of bytes copied to buffer.                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  Once getsUSBUSART is called, subsequent retrieval of         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  cdc_rx_len can be done by calling macro mCDCGetRxLength().   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Overview:        getsUSBUSART copies a string of bytes received through       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  USB CDC Bulk OUT endpoint to a user's specified location.    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  It is a non-blocking function. It does not wait              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  for data if there is no data available. Instead it returns   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  '0' to notify the caller that there is no data available.    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Note:            If the actual number of bytes received is larger than the    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  number of bytes expected (len), only the expected number     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  of bytes specified will be copied to buffer.                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  If the actual number of bytes received is smaller than the   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  number of bytes expected (len), only the actual number       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  of bytes received will be copied to buffer.                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
003e9e   cfd9     MOVFF     0xfd9,0xfe6    byte getsUSBUSART(unsigned char *buffer, byte len)                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
003ea0   ffe6                                                                                                               
003ea2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003ea4   ffd9                                                                                                               
                                           {                                                                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
003ea6   0100     MOVLB     0x0                cdc_rx_len = 0;                                                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
003ea8   6bd3     CLRF      0xd3,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003eaa   0104     MOVLB     0x4                if(!mCDCUsartRxIsBusy())                                                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
003eac   bf18     BTFSC     0x18,0x7,0x1                                                                                    
003eae   d039     BRA       0x3f22                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    * Adjust the expected number of bytes to equal                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    * the actual number of bytes received.                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
003eb0   0efc     MOVLW     0xfc                   if(len > CDC_BULK_BD_OUT.Cnt)                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003eb2   cfdb     MOVFF     0xfdb,0x2a                                                                                      
003eb4   f02a                                                                                                               
003eb6   0104     MOVLB     0x4                                                                                             
003eb8   5119     MOVF      0x19,0x0,0x1                                                                                    
003eba   80d8     BSF       0xd8,0x0,0x0                                                                                    
003ebc   542a     SUBFWB    0x2a,0x0,0x0                                                                                    
003ebe   e203     BC        0x3ec6                                                                                          
003ec0   0efc     MOVLW     0xfc                       len = CDC_BULK_BD_OUT.Cnt;                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
003ec2   c419     MOVFF     0x419,0xfdb                                                                                     
003ec4   ffdb                                                                                                               
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    * Copy data from dual-ram buffer to user's buffer                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
003ec6   0100     MOVLB     0x0                    for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
003ec8   6bd3     CLRF      0xd3,0x1                                                                                        
003eca   0efc     MOVLW     0xfc                                                                                            
003ecc   50db     MOVF      0xdb,0x0,0x0                                                                                    
003ece   0100     MOVLB     0x0                                                                                             
003ed0   5dd3     SUBWF     0xd3,0x0,0x1                                                                                    
003ed2   e21c     BC        0x3f0c                                                                                          
003f06   0100     MOVLB     0x0                                                                                             
003f08   2bd3     INCF      0xd3,0x1,0x1                                                                                    
003f0a   d7df     BRA       0x3eca                                                                                          
003ed4   0100     MOVLB     0x0                        buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
003ed6   51d3     MOVF      0xd3,0x0,0x1                                                                                    
003ed8   6aea     CLRF      0xea,0x0                                                                                        
003eda   0f08     ADDLW     0x8                                                                                             
003edc   6ee9     MOVWF     0xe9,0x0                                                                                        
003ede   0e05     MOVLW     0x5                                                                                             
003ee0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003ee2   50ef     MOVF      0xef,0x0,0x0                                                                                    
003ee4   6ee6     MOVWF     0xe6,0x0                                                                                        
003ee6   0100     MOVLB     0x0                                                                                             
003ee8   51d3     MOVF      0xd3,0x0,0x1                                                                                    
003eea   6ee7     MOVWF     0xe7,0x0                                                                                        
003eec   0efd     MOVLW     0xfd                                                                                            
003eee   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
003ef0   ffe9                                                                                                               
003ef2   0efe     MOVLW     0xfe                                                                                            
003ef4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
003ef6   ffea                                                                                                               
003ef8   50e7     MOVF      0xe7,0x0,0x0                                                                                    
003efa   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003efc   0e00     MOVLW     0x0                                                                                             
003efe   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003f00   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f02   50e7     MOVF      0xe7,0x0,0x0                                                                                    
003f04   6eef     MOVWF     0xef,0x0                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    * Prepare dual-ram buffer for next OUT transaction                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f0c   0104     MOVLB     0x4                    CDC_BULK_BD_OUT.Cnt = sizeof(cdc_data_rx);                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f0e   0e40     MOVLW     0x40                                                                                            
003f10   6f19     MOVWF     0x19,0x1                                                                                        
003f12   0e40     MOVLW     0x40                   mUSBBufferReady(CDC_BULK_BD_OUT);                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f14   0104     MOVLB     0x4                                                                                             
003f16   1718     ANDWF     0x18,0x1,0x1                                                                                    
003f18   0104     MOVLB     0x4                                                                                             
003f1a   7d18     BTG       0x18,0x6,0x1                                                                                    
003f1c   0e88     MOVLW     0x88                                                                                            
003f1e   0104     MOVLB     0x4                                                                                             
003f20   1318     IORWF     0x18,0x1,0x1                                                                                    
                                               }//end if                                                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f22   0100     MOVLB     0x0                return cdc_rx_len;                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f24   51d3     MOVF      0xd3,0x0,0x1                                                                                    
003f26   d000     BRA       0x3f28                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f28   52e5     MOVF      0xe5,0x1,0x0   }//end getsUSBUSART                                                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f2a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003f2c   ffd9                                                                                                               
003f2e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Function:        void putsUSBUSART(char *data)                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * PreCondition:    cdc_trf_state must be in the CDC_TX_READY state.             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  The string of characters pointed to by 'data' must equal     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  to or smaller than 255 bytes.                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Input:           data    : Pointer to a null-terminated string of data.       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                            If a null character is not found, 255 bytes        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                            of data will be transferred to the host.           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Overview:        putsUSBUSART writes a string of data to the USB including    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  the null character. Use this version, 'puts', to transfer    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  data located in data memory.                                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Note:            The transfer mechanism for device-to-host(put) is more       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  flexible than host-to-device(get). It can handle             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  a string of data larger than the maximum size of bulk IN     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  endpoint. A state machine is used to transfer a long         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  string of data over multiple USB transactions.               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  See CDCTxService() for more details.                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f30   cfd9     MOVFF     0xfd9,0xfe6    void putsUSBUSART(unsigned char *data)                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f32   ffe6                                                                                                               
003f34   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003f36   ffd9                                                                                                               
003f38   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               byte len;                                                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * User should have checked that cdc_trf_state is in CDC_TX_READY state      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * before calling this function.                                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * As a safety precaution, this fuction checks the state one more time       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * to make sure it does not override any pending transactions.               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Currently it just quits the routine without reporting any errors back     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * to the user.                                                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Bottomline: User MUST make sure that mUSBUSARTIsTxTrfReady()==1           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *             before calling this function!                                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Example:                                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * if(mUSBUSARTIsTxTrfReady())                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *     putsUSBUSART(pData);                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * IMPORTANT: Never use the following blocking while loop to wait:           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * while(!mUSBUSARTIsTxTrfReady())                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *     putsUSBUSART(pData);                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * The whole firmware framework is written based on cooperative              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * multi-tasking and a blocking code is not acceptable.                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Use a state machine instead.                                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f3a   0100     MOVLB     0x0                if(cdc_trf_state != CDC_TX_READY) return;                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f3c   51d4     MOVF      0xd4,0x0,0x1                                                                                    
003f3e   e001     BZ        0x3f42                                                                                          
003f40   d031     BRA       0x3fa4                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * While loop counts the number of bytes to send including the               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * null character.                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f42   6adf     CLRF      0xdf,0x0           len = 0;                                                                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               do                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               {                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f44   2adf     INCF      0xdf,0x1,0x0           len++;                                                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f46   50df     MOVF      0xdf,0x0,0x0           if(len == 256) break;       // Break loop once max len is reached.       C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f48   6e2a     MOVWF     0x2a,0x0                                                                                        
003f4a   6a2b     CLRF      0x2b,0x0                                                                                        
003f4c   502a     MOVF      0x2a,0x0,0x0                                                                                    
003f4e   e102     BNZ       0x3f54                                                                                          
003f50   0e01     MOVLW     0x1                                                                                             
003f52   182b     XORWF     0x2b,0x0,0x0                                                                                    
003f54   e101     BNZ       0x3f58                                                                                          
003f56   d00b     BRA       0x3f6e                                                                                          
003f58   0efd     MOVLW     0xfd               }while(*data++);                                                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f5a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
003f5c   ffe9                                                                                                               
003f5e   2adb     INCF      0xdb,0x1,0x0                                                                                    
003f60   0efe     MOVLW     0xfe                                                                                            
003f62   cfdb     MOVFF     0xfdb,0xfea                                                                                     
003f64   ffea                                                                                                               
003f66   e301     BNC       0x3f6a                                                                                          
003f68   2adb     INCF      0xdb,0x1,0x0                                                                                    
003f6a   50ef     MOVF      0xef,0x0,0x0                                                                                    
003f6c   e1eb     BNZ       0x3f44                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Re-adjust pointer to its initial location                                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f6e   50df     MOVF      0xdf,0x0,0x0       data-=len;                                                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f70   6e2a     MOVWF     0x2a,0x0                                                                                        
003f72   6a2b     CLRF      0x2b,0x0                                                                                        
003f74   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003f76   0ffd     ADDLW     0xfd                                                                                            
003f78   6ee9     MOVWF     0xe9,0x0                                                                                        
003f7a   0eff     MOVLW     0xff                                                                                            
003f7c   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003f7e   6eea     MOVWF     0xea,0x0                                                                                        
003f80   502a     MOVF      0x2a,0x0,0x0                                                                                    
003f82   5eee     SUBWF     0xee,0x1,0x0                                                                                    
003f84   502b     MOVF      0x2b,0x0,0x0                                                                                    
003f86   5aed     SUBWFB    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           	// BPS - 05/04/2006 I don't want the NULL at the end.                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f88   06df     DECF      0xdf,0x1,0x0   	len--;                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Second piece of information (length of data to send) is ready.            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Call mUSBUSARTTxRam to setup the transfer.                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * The actual transfer process will be handled by CDCTxService(),            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * which should be called once per Main Program loop.                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f8a   0efd     MOVLW     0xfd               mUSBUSARTTxRam((byte*)data,len);     // See cdc.h                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003f8c   cfdb     MOVFF     0xfdb,0xd5                                                                                      
003f8e   f0d5                                                                                                               
003f90   0efe     MOVLW     0xfe                                                                                            
003f92   cfdb     MOVFF     0xfdb,0xd6                                                                                      
003f94   f0d6                                                                                                               
003f96   cfdf     MOVFF     0xfdf,0xd9                                                                                      
003f98   f0d9                                                                                                               
003f9a   0100     MOVLB     0x0                                                                                             
003f9c   6bda     CLRF      0xda,0x1                                                                                        
003f9e   0100     MOVLB     0x0                                                                                             
003fa0   0e01     MOVLW     0x1                                                                                             
003fa2   6fd4     MOVWF     0xd4,0x1                                                                                        
003fa4   52e5     MOVF      0xe5,0x1,0x0   }//end putsUSBUSART                                                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
003fa6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003fa8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003faa   ffd9                                                                                                               
003fac   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Function:        void putrsUSBUSART(const rom char *data)                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * PreCondition:    cdc_trf_state must be in the CDC_TX_READY state.             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  The string of characters pointed to by 'data' must equal     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  to or smaller than 255 bytes.                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Input:           data    : Pointer to a null-terminated string of data.       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                            If a null character is not found, 255 bytes        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                            of data will be transferred to the host.           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Overview:        putrsUSBUSART writes a string of data to the USB including   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  the null character. Use this version, 'putrs', to transfer   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  data literals and data located in program memory.            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Note:            The transfer mechanism for device-to-host(put) is more       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  flexible than host-to-device(get). It can handle             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  a string of data larger than the maximum size of bulk IN     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  endpoint. A state machine is used to transfer a long         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  string of data over multiple USB transactions.               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  See CDCTxService() for more details.                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
003fae   cfd9     MOVFF     0xfd9,0xfe6    void putrsUSBUSART(const rom unsigned char *data)                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
003fb0   ffe6                                                                                                               
003fb2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003fb4   ffd9                                                                                                               
003fb6   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               byte len;                                                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * User should have checked that cdc_trf_state is in CDC_TX_READY state      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * before calling this function.                                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * As a safety precaution, this fuction checks the state one more time       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * to make sure it does not override any pending transactions.               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Currently it just quits the routine without reporting any errors back     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * to the user.                                                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Bottomline: User MUST make sure that mUSBUSARTIsTxTrfReady()              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *             before calling this function!                                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Example:                                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * if(mUSBUSARTIsTxTrfReady())                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *     putsUSBUSART(pData);                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * IMPORTANT: Never use the following blocking while loop to wait:           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * while(cdc_trf_state != CDC_TX_READY)                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *     putsUSBUSART(pData);                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * The whole firmware framework is written based on cooperative              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * multi-tasking and a blocking code is not acceptable.                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Use a state machine instead.                                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003fb8   0100     MOVLB     0x0                if(cdc_trf_state != CDC_TX_READY) return;                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
003fba   51d4     MOVF      0xd4,0x0,0x1                                                                                    
003fbc   e001     BZ        0x3fc0                                                                                          
003fbe   d033     BRA       0x4026                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * While loop counts the number of bytes to send including the               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * null character.                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003fc0   6adf     CLRF      0xdf,0x0           len = 0;                                                                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               do                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               {                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
003fc2   2adf     INCF      0xdf,0x1,0x0           len++;                                                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
003fc4   50df     MOVF      0xdf,0x0,0x0           if(len == 255) break;       // Break loop once max len is reached.       C:\opensprints\FW\system\usb\class\cdc\cdc.c
003fc6   6e2a     MOVWF     0x2a,0x0                                                                                        
003fc8   6a2b     CLRF      0x2b,0x0                                                                                        
003fca   0eff     MOVLW     0xff                                                                                            
003fcc   182a     XORWF     0x2a,0x0,0x0                                                                                    
003fce   e101     BNZ       0x3fd2                                                                                          
003fd0   502b     MOVF      0x2b,0x0,0x0                                                                                    
003fd2   e101     BNZ       0x3fd6                                                                                          
003fd4   d00c     BRA       0x3fee                                                                                          
003fd6   0efd     MOVLW     0xfd               }while(*data++);                                                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
003fd8   cfdb     MOVFF     0xfdb,0xff6                                                                                     
003fda   fff6                                                                                                               
003fdc   2adb     INCF      0xdb,0x1,0x0                                                                                    
003fde   0efe     MOVLW     0xfe                                                                                            
003fe0   cfdb     MOVFF     0xfdb,0xff7                                                                                     
003fe2   fff7                                                                                                               
003fe4   e301     BNC       0x3fe8                                                                                          
003fe6   2adb     INCF      0xdb,0x1,0x0                                                                                    
003fe8   0008     TBLRD                                                                                                     
003fea   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003fec   e1ea     BNZ       0x3fc2                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Re-adjust pointer to its initial location                                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
003fee   50df     MOVF      0xdf,0x0,0x0       data-=len;                                                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
003ff0   6e2a     MOVWF     0x2a,0x0                                                                                        
003ff2   6a2b     CLRF      0x2b,0x0                                                                                        
003ff4   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003ff6   0ffd     ADDLW     0xfd                                                                                            
003ff8   6ee9     MOVWF     0xe9,0x0                                                                                        
003ffa   0eff     MOVLW     0xff                                                                                            
003ffc   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003ffe   6eea     MOVWF     0xea,0x0                                                                                        
004000   502a     MOVF      0x2a,0x0,0x0                                                                                    
004002   5eee     SUBWF     0xee,0x1,0x0                                                                                    
004004   502b     MOVF      0x2b,0x0,0x0                                                                                    
004006   5aed     SUBWFB    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           	// BPS - 05/04/2006 I don't want the NULL at the end.                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
004008   06df     DECF      0xdf,0x1,0x0   	len--;                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Second piece of information (length of data to send) is ready.            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Call mUSBUSARTTxRom to setup the transfer.                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * The actual transfer process will be handled by CDCTxService(),            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * which should be called once per Main Program loop.                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * (BPS 5/16/2006) Don't add the zero byte at the end. Send len-1            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * bytes intead of len bytes.                                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
00400a   0efd     MOVLW     0xfd               mUSBUSARTTxRom((rom byte*)data,len); // See cdc.h                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
00400c   cfdb     MOVFF     0xfdb,0xd5                                                                                      
00400e   f0d5                                                                                                               
004010   0efe     MOVLW     0xfe                                                                                            
004012   cfdb     MOVFF     0xfdb,0xd6                                                                                      
004014   f0d6                                                                                                               
004016   cfdf     MOVFF     0xfdf,0xd9                                                                                      
004018   f0d9                                                                                                               
00401a   0100     MOVLB     0x0                                                                                             
00401c   0e01     MOVLW     0x1                                                                                             
00401e   6fda     MOVWF     0xda,0x1                                                                                        
004020   0100     MOVLB     0x0                                                                                             
004022   0e01     MOVLW     0x1                                                                                             
004024   6fd4     MOVWF     0xd4,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
004026   52e5     MOVF      0xe5,0x1,0x0   }//end putrsUSBUSART                                                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
004028   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00402a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00402c   ffd9                                                                                                               
00402e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /******************************************************************************  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Function:        void CDCTxService(void)                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * PreCondition:    None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Input:           None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Output:          None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Side Effects:    None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Overview:        CDCTxService handles device-to-host transaction(s).          C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                  This function should be called once per Main Program loop.   C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            * Note:            None                                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                            *****************************************************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
004030   cfd9     MOVFF     0xfd9,0xfe6    void CDCTxService(void)                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
004032   ffe6                                                                                                               
004034   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004036   ffd9                                                                                                               
004038   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               byte byte_to_send;                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
00403a   0104     MOVLB     0x4                if(mCDCUsartTxIsBusy()) return;                                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
00403c   bf1c     BTFSC     0x1c,0x7,0x1                                                                                    
00403e   d07d     BRA       0x413a                                                                                          
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Completing stage is necessary while [ mCDCUSartTxIsBusy()==1 ].           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * By having this stage, user can always check cdc_trf_state,                C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * and not having to call mCDCUsartTxIsBusy() directly.                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
004040   0e03     MOVLW     0x3                if(cdc_trf_state == CDC_TX_COMPLETING)                                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
004042   0100     MOVLB     0x0                                                                                             
004044   5dd4     SUBWF     0xd4,0x0,0x1                                                                                    
004046   e102     BNZ       0x404c                                                                                          
004048   0100     MOVLB     0x0                    cdc_trf_state = CDC_TX_READY;                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
00404a   6bd4     CLRF      0xd4,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * If CDC_TX_READY state, nothing to do, just return.                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
00404c   0100     MOVLB     0x0                if(cdc_trf_state == CDC_TX_READY) return;                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
00404e   51d4     MOVF      0xd4,0x0,0x1                                                                                    
004050   e101     BNZ       0x4054                                                                                          
004052   d073     BRA       0x413a                                                                                          
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * If CDC_TX_BUSY_ZLP state, send zero length packet                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
004054   0e02     MOVLW     0x2                if(cdc_trf_state == CDC_TX_BUSY_ZLP)                                         C:\opensprints\FW\system\usb\class\cdc\cdc.c
004056   0100     MOVLB     0x0                                                                                             
004058   5dd4     SUBWF     0xd4,0x0,0x1                                                                                    
00405a   e106     BNZ       0x4068                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
00405c   0104     MOVLB     0x4                    CDC_BULK_BD_IN.Cnt = 0;                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
00405e   6b1d     CLRF      0x1d,0x1                                                                                        
004060   0100     MOVLB     0x0                    cdc_trf_state = CDC_TX_COMPLETING;                                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
004062   0e03     MOVLW     0x3                                                                                             
004064   6fd4     MOVWF     0xd4,0x1                                                                                        
                                               }                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
004066   d061     BRA       0x412a             else if(cdc_trf_state == CDC_TX_BUSY)                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
004068   0100     MOVLB     0x0                                                                                             
00406a   05d4     DECF      0xd4,0x0,0x1                                                                                    
00406c   e15e     BNZ       0x412a                                                                                          
                                               {                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    * First, have to figure out how many byte of data to send.              C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
00406e   0e40     MOVLW     0x40               	if(cdc_tx_len > sizeof(cdc_data_tx))                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
004070   6e2a     MOVWF     0x2a,0x0                                                                                        
004072   6a2b     CLRF      0x2b,0x0                                                                                        
004074   0100     MOVLB     0x0                                                                                             
004076   51d9     MOVF      0xd9,0x0,0x1                                                                                    
004078   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
00407a   0e00     MOVLW     0x0                                                                                             
00407c   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
00407e   e203     BC        0x4086                                                                                          
004080   0e40     MOVLW     0x40               	    byte_to_send = sizeof(cdc_data_tx);                                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
004082   6edf     MOVWF     0xdf,0x0                                                                                        
004084   d002     BRA       0x408a             	else                                                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
004086   c0d9     MOVFF     0xd9,0xfdf         	    byte_to_send = cdc_tx_len;                                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
004088   ffdf                                                                                                               
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    * Next, load the number of bytes to send to Cnt in buffer descriptor    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
00408a   cfdf     MOVFF     0xfdf,0x41d            CDC_BULK_BD_IN.Cnt = byte_to_send;                                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
00408c   f41d                                                                                                               
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    * Subtract the number of bytes just about to be sent from the total.    C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
00408e   50df     MOVF      0xdf,0x0,0x0       	cdc_tx_len = cdc_tx_len - byte_to_send;                                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
004090   0100     MOVLB     0x0                                                                                             
004092   5dd9     SUBWF     0xd9,0x0,0x1                                                                                    
004094   0100     MOVLB     0x0                                                                                             
004096   6fd9     MOVWF     0xd9,0x1                                                                                        
                                               	                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
004098   0100     MOVLB     0x0                    pCDCDst.bRam = (byte*)&cdc_data_tx; // Set destination pointer           C:\opensprints\FW\system\usb\class\cdc\cdc.c
00409a   0e48     MOVLW     0x48                                                                                            
00409c   6fd7     MOVWF     0xd7,0x1                                                                                        
00409e   0e05     MOVLW     0x5                                                                                             
0040a0   6fd8     MOVWF     0xd8,0x1                                                                                        
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040a2   0100     MOVLB     0x0                    if(cdc_mem_type == _ROM)            // Determine type of memory source   C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040a4   05da     DECF      0xda,0x0,0x1                                                                                    
0040a6   e118     BNZ       0x40d8                                                                                          
                                                   {                                                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040a8   50df     MOVF      0xdf,0x0,0x0               while(byte_to_send)                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040aa   e015     BZ        0x40d6                                                                                          
0040d4   d7e9     BRA       0x40a8                                                                                          
                                                       {                                                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040ac   c0d5     MOVFF     0xd5,0xff6                     *pCDCDst.bRam = *pCDCSrc.bRom;                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040ae   fff6                                                                                                               
0040b0   c0d6     MOVFF     0xd6,0xff7                                                                                      
0040b2   fff7                                                                                                               
0040b4   0008     TBLRD                                                                                                     
0040b6   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0040b8   c0d7     MOVFF     0xd7,0xfe9                                                                                      
0040ba   ffe9                                                                                                               
0040bc   c0d8     MOVFF     0xd8,0xfea                                                                                      
0040be   ffea                                                                                                               
0040c0   6eef     MOVWF     0xef,0x0                                                                                        
0040c2   0100     MOVLB     0x0                            pCDCDst.bRam++;                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040c4   2bd7     INCF      0xd7,0x1,0x1                                                                                    
0040c6   0e00     MOVLW     0x0                                                                                             
0040c8   23d8     ADDWFC    0xd8,0x1,0x1                                                                                    
0040ca   0100     MOVLB     0x0                            pCDCSrc.bRom++;                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040cc   2bd5     INCF      0xd5,0x1,0x1                                                                                    
0040ce   0e00     MOVLW     0x0                                                                                             
0040d0   23d6     ADDWFC    0xd6,0x1,0x1                                                                                    
0040d2   06df     DECF      0xdf,0x1,0x0                   byte_to_send--;                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                       }//end while(byte_to_send)                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   }                                                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040d6   d016     BRA       0x4104                 else // _RAM                                                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   {                                                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040d8   50df     MOVF      0xdf,0x0,0x0               while(byte_to_send)                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040da   e014     BZ        0x4104                                                                                          
004102   d7ea     BRA       0x40d8                                                                                          
                                                       {                                                                    C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040dc   c0d5     MOVFF     0xd5,0xfe9                     *pCDCDst.bRam = *pCDCSrc.bRam;                                   C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040de   ffe9                                                                                                               
0040e0   c0d6     MOVFF     0xd6,0xfea                                                                                      
0040e2   ffea                                                                                                               
0040e4   50ef     MOVF      0xef,0x0,0x0                                                                                    
0040e6   c0d7     MOVFF     0xd7,0xfe9                                                                                      
0040e8   ffe9                                                                                                               
0040ea   c0d8     MOVFF     0xd8,0xfea                                                                                      
0040ec   ffea                                                                                                               
0040ee   6eef     MOVWF     0xef,0x0                                                                                        
0040f0   0100     MOVLB     0x0                            pCDCDst.bRam++;                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040f2   2bd7     INCF      0xd7,0x1,0x1                                                                                    
0040f4   0e00     MOVLW     0x0                                                                                             
0040f6   23d8     ADDWFC    0xd8,0x1,0x1                                                                                    
0040f8   0100     MOVLB     0x0                            pCDCSrc.bRam++;                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
0040fa   2bd5     INCF      0xd5,0x1,0x1                                                                                    
0040fc   0e00     MOVLW     0x0                                                                                             
0040fe   23d6     ADDWFC    0xd6,0x1,0x1                                                                                    
004100   06df     DECF      0xdf,0x1,0x0                   byte_to_send--;                                                  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                       }//end while(byte_to_send._word)                                     C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   }//end if(cdc_mem_type...)                                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    * Lastly, determine if a zero length packet state is necessary.         C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    * See explanation in USB Specification 2.0: Section 5.8.3               C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
004104   0100     MOVLB     0x0                    if(cdc_tx_len == 0)                                                      C:\opensprints\FW\system\usb\class\cdc\cdc.c
004106   51d9     MOVF      0xd9,0x0,0x1                                                                                    
004108   e110     BNZ       0x412a                                                                                          
                                                   {                                                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
00410a   0104     MOVLB     0x4                        if(CDC_BULK_BD_IN.Cnt == sizeof(cdc_data_tx))                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
00410c   511d     MOVF      0x1d,0x0,0x1                                                                                    
00410e   6e2a     MOVWF     0x2a,0x0                                                                                        
004110   6a2b     CLRF      0x2b,0x0                                                                                        
004112   0e40     MOVLW     0x40                                                                                            
004114   182a     XORWF     0x2a,0x0,0x0                                                                                    
004116   e101     BNZ       0x411a                                                                                          
004118   502b     MOVF      0x2b,0x0,0x0                                                                                    
00411a   e104     BNZ       0x4124                                                                                          
00411c   0100     MOVLB     0x0                            cdc_trf_state = CDC_TX_BUSY_ZLP;                                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
00411e   0e02     MOVLW     0x2                                                                                             
004120   6fd4     MOVWF     0xd4,0x1                                                                                        
004122   d003     BRA       0x412a                     else                                                                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
004124   0100     MOVLB     0x0                            cdc_trf_state = CDC_TX_COMPLETING;                               C:\opensprints\FW\system\usb\class\cdc\cdc.c
004126   0e03     MOVLW     0x3                                                                                             
004128   6fd4     MOVWF     0xd4,0x1                                                                                        
                                                   }//end if(cdc_tx_len...)                                                 C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               }//end if(cdc_tx_sate == CDC_TX_BUSY)                                        C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                * Both CDC_TX_BUSY and CDC_TX_BUSY_ZLP states use the following macro       C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\opensprints\FW\system\usb\class\cdc\cdc.c
00412a   0e40     MOVLW     0x40               mUSBBufferReady(CDC_BULK_BD_IN);                                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
00412c   0104     MOVLB     0x4                                                                                             
00412e   171c     ANDWF     0x1c,0x1,0x1                                                                                    
004130   0104     MOVLB     0x4                                                                                             
004132   7d1c     BTG       0x1c,0x6,0x1                                                                                    
004134   0e88     MOVLW     0x88                                                                                            
004136   0104     MOVLB     0x4                                                                                             
004138   131c     IORWF     0x1c,0x1,0x1                                                                                    
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
00413a   52e5     MOVF      0xe5,0x1,0x0   }//end CDCTxService                                                              C:\opensprints\FW\system\usb\class\cdc\cdc.c
00413c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00413e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004140   ffd9                                                                                                               
004142   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           #endif //USB_USE_CDC                                                             C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                                                                                            C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                           /** EOF cdc.c ****************************************************************/  C:\opensprints\FW\system\usb\class\cdc\cdc.c
                                                   LIST P=18F2455                                                           C:\MCC18\SRC\TRADIT~1\PROC\p18f2455.asm
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\PROC\p18f2455.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\PROC\p18f2455.asm
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Microchip Technology, Inc.                  C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F1230.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F1330.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2221.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2321.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2423.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2450.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2458                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2458.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F24J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F24K20                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F24K20.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2523.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2553                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2553.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F25J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F25K20.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2682                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2682.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F2685.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F26K20                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F26K20.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4221.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4321.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4423.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4450.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4458                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4458.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F44J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F44K20                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F44K20.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4523.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4553                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4553.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F45J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F45K20.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4682                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4682.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F4685.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F46K20                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F46K20.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F63J11                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F63J11.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F63J90.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J11                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F64J11.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F64J90.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6527.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J11                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F65J11.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J50                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F65J50.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F65J90.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6622.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6628                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6628.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J11                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F66J11.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J16                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F66J16.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J50                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F66J50.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J55                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F66J55.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F66J60.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F66J65.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6723                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F6723.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J11                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F67J11.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J50                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F67J50.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F67J60.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F83J11                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F83J11.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F83J90.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J11                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F84J11.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F84J90.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8527.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J11                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F85J11.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J50                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F85J50.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F85J90.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8622.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8628                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8628.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J11                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F86J11.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J16                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F86J16.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J50                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F86J50.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J55                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F86J55.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F86J60.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F86J65.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8723                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F8723.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J11                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F87J11.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J50                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F87J50.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F87J60.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F96J60.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F96J65.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <p18F97J60.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Function Name: Delay10TCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Description:   This routine delays for multiples of 10          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 10 Tcy.       *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  A value of 1 to 255 provides 10 to 2550   Tcy    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  delay.  A value of 0 will provide a delay of     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  2560 Tcy.                                        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10TCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           Delay10TCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00500e   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005010   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005012   4ee8     DCFSNZ    0xe8,0x1,0x0       dcfsnz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005014   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10x                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005016   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005018   d000     BRA       0x501a             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00501a   d000     BRA       0x501c             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00501c   d000     BRA       0x501e             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00501e   2ee8     DECFSZ    0xe8,0x1,0x0       decfsz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005020   d7fa     BRA       0x5016             bra     D10x                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005022   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               GLOBAL  Delay10TCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           /*** Unsigned Integer Division: 16-bit by 16-bit                                 C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                            ***                                                                             C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                            ***       for: Saved (for the worst case) at least 5*16 = 80 instruction cycles C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                            ***/                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                           void FXD1616U (/*unsigned arg0, unsigned arg1*/)                                 C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                           {                                                                                C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                             // use INDF1 for the counter...                                                C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                 _asm                                                                       C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                               // REM = 0                                                                   C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f84   6a1b     CLRF      0x1b,0x0           clrf __REMB0, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f86   6a1a     CLRF      0x1a,0x0           clrf __REMB1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                               // INDF1 = 16                                                                C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f88   0e10     MOVLW     0x10               movlw 16                                                                     C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f8a   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                               // Clear the carry                                                           C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f8c   90d8     BCF       0xd8,0x0,0x0   	bcf STATUS, 0, 0                                                                C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                           loop:                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                           	//AARG16 <<= 1; Carry is always clear at this point.                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f8e   361e     RLCF      0x1e,0x1,0x0   	rlcf __AARGB1, 1, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f90   361f     RLCF      0x1f,0x1,0x0   	rlcf __AARGB0, 1, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                           	//PROD = (PROD << 1) | (AARG16 >> 16)                                           C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f92   361a     RLCF      0x1a,0x1,0x0   	rlcf __REMB1, 1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f94   361b     RLCF      0x1b,0x1,0x0   	rlcf __REMB0, 1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                           	                                                                                C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                           	//if (PROD >= BARG16)                                                           C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f96   5023     MOVF      0x23,0x0,0x0   	movf __BARGB1, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f98   5c1a     SUBWF     0x1a,0x0,0x0   	subwf __REMB1, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f9a   5024     MOVF      0x24,0x0,0x0   	movf __BARGB0, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f9c   581b     SUBWFB    0x1b,0x0,0x0   	subwfb __REMB0, 0, 0                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004f9e   e305     BNC       0x4faa         	bnc endloop                                                                     C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                               //{                                                                          C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                           	    //PROD -= BARG16;                                                           C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004fa0   5023     MOVF      0x23,0x0,0x0   	    movf __BARGB1, 0, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004fa2   5e1a     SUBWF     0x1a,0x1,0x0   	    subwf __REMB1, 1, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004fa4   5024     MOVF      0x24,0x0,0x0   	    movf __BARGB0, 0, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004fa6   5a1b     SUBWFB    0x1b,0x1,0x0   	    subwfb __REMB0, 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                           	    //++AARG16; Since AARG16 was shift to the left above, the increment will    C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                   //          simply set the LSbit. Using incf also clears the carry, which C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                   //          means we don't have to clear the carry at the top of the loop. C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004fa8   2a1e     INCF      0x1e,0x1,0x0           incf __AARGB1, 1, 0                                                      C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                               //}                                                                          C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                           endloop:                                                                         C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004faa   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004fac   d7f0     BRA       0x4f8e             bra loop                                                                     C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                             _endasm                                                                        C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                             /* result in AARG already... */                                                C:\MCC18\src\TRADIT~1\math\fxd1616u.c
004fae   0012     RETURN    0x0            }                                                                                C:\MCC18\src\TRADIT~1\math\fxd1616u.c
                                           ;	RCS Header $Id: fxm2424u.asm,v 1.3 2006/01/12 23:16:38 rhinec Exp $            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;	$Revision: 1.3 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Microchip Technology, Inc.                  C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F26K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F26K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F46K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F46K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.3 2006/01/12 23:16:38 rhinec Exp $             C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.3 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.3 2006/01/12 23:16:38 rhinec Exp $                C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	__AARGB0, __AARGB1, __AARGB2, __AARGB3                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  __AARGB4, __AARGB5, __AARGB6, __AARGB7                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  __AEXP                                                                  C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  __REMB3, __REMB2, __REMB1, __REMB0                                      C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;	RCS Header $Id: barg.inc,v 1.3 2006/01/12 23:16:38 rhinec Exp $                C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  __BARGB3, __BARGB2, __BARGB1, __BARGB0                           C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  __BEXP                                                           C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.3 2006/01/12 23:16:38 rhinec Exp $             C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  __TEMPB3, __TEMPB2, __TEMPB1, __TEMPB0, __TEMP                   C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       24x24 Bit Unsigned Fixed Point Multiply 24 x 24 -> 48                    C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       Input:  24 bit unsigned fixed point multiplicand in AARGB0, AARGB1,      C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;               AARGB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;               24 bit unsigned fixed point multiplier in BARGB0, BARGB1,        C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;               BARGB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       Use:    CALL    FXM2424U                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       Output: 48 bit unsigned fixed point product in AARGB0, AARGB1,           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;               AARGB2, AARGB3, AARGB4, AARGB5                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       Max Timing:     65 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       Min Timing:     65 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       PM: 64              DM: 12                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           FXM2424U                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           		GLOBAL	FXM2424U                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a68   c01f     MOVFF     0x1f,0x29      		MOVFF	__AARGB0,__TEMPB0	                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a6a   f029                                                                                                               
004a6c   c01e     MOVFF     0x1e,0x28      		MOVFF	__AARGB1,__TEMPB1	                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a6e   f028                                                                                                               
004a70   c01d     MOVFF     0x1d,0x27      		MOVFF	__AARGB2,__TEMPB2	                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a72   f027                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a74   501d     MOVF      0x1d,0x0,0x0   		MOVF	__AARGB2,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a76   0222     MULWF     0x22,0x0       		MULWF	__BARGB2                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a78   cff4     MOVFF     0xff4,0x1b     		MOVFF	PRODH,__AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a7a   f01b                                                                                                               
004a7c   cff3     MOVFF     0xff3,0x1a     		MOVFF	PRODL,__AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a7e   f01a                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a80   501e     MOVF      0x1e,0x0,0x0   		MOVF	__AARGB1,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a82   0223     MULWF     0x23,0x0       		MULWF	__BARGB1                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a84   cff4     MOVFF     0xff4,0x1d     		MOVFF	PRODH,__AARGB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a86   f01d                                                                                                               
004a88   cff3     MOVFF     0xff3,0x1c     		MOVFF	PRODL,__AARGB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a8a   f01c                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a8c   0222     MULWF     0x22,0x0       		MULWF	__BARGB2                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a8e   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a90   261b     ADDWF     0x1b,0x1,0x0   		ADDWF	__AARGB4,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a92   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a94   221c     ADDWFC    0x1c,0x1,0x0   		ADDWFC	__AARGB3,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a96   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a98   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	__AARGB2,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a9a   5027     MOVF      0x27,0x0,0x0   		MOVF	__TEMPB2,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a9c   0223     MULWF     0x23,0x0       		MULWF	__BARGB1                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004a9e   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aa0   261b     ADDWF     0x1b,0x1,0x0   		ADDWF	__AARGB4,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aa2   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aa4   221c     ADDWFC    0x1c,0x1,0x0   		ADDWFC	__AARGB3,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aa6   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aa8   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	__AARGB2,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aaa   501f     MOVF      0x1f,0x0,0x0   		MOVF	__AARGB0,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aac   0222     MULWF     0x22,0x0       		MULWF	__BARGB2                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aae   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ab0   261c     ADDWF     0x1c,0x1,0x0   		ADDWF	__AARGB3,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ab2   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ab4   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	__AARGB2,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ab6   501f     MOVF      0x1f,0x0,0x0   		MOVF	__AARGB0,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ab8   0223     MULWF     0x23,0x0       		MULWF	__BARGB1                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aba   6a1e     CLRF      0x1e,0x0       		CLRF	__AARGB1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004abc   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004abe   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	__AARGB1,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ac0   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ac2   261d     ADDWF     0x1d,0x1,0x0   		ADDWF	__AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ac4   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ac6   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	__AARGB1,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ac8   5027     MOVF      0x27,0x0,0x0   		MOVF	__TEMPB2,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aca   0224     MULWF     0x24,0x0       		MULWF	__BARGB0                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004acc   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ace   261c     ADDWF     0x1c,0x1,0x0   		ADDWF	__AARGB3,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ad0   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ad2   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	__AARGB2,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ad4   6a1f     CLRF      0x1f,0x0       		CLRF	__AARGB0                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ad6   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ad8   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	__AARGB1,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ada   221f     ADDWFC    0x1f,0x1,0x0   		ADDWFC	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004adc   5028     MOVF      0x28,0x0,0x0   		MOVF	__TEMPB1,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ade   0224     MULWF     0x24,0x0       		MULWF	__BARGB0                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ae0   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ae2   261d     ADDWF     0x1d,0x1,0x0   		ADDWF	__AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ae4   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ae6   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	__AARGB1,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004ae8   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aea   221f     ADDWFC    0x1f,0x1,0x0   		ADDWFC	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aec   5029     MOVF      0x29,0x0,0x0   		MOVF	__TEMPB0,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004aee   0224     MULWF     0x24,0x0       		MULWF	__BARGB0                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004af0   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004af2   261e     ADDWF     0x1e,0x1,0x0   		ADDWF	__AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004af4   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004af6   221f     ADDWFC    0x1f,0x1,0x0   		ADDWFC	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004af8   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;	RCS Header $Id: cmath18.asm,v 1.5 2006/01/12 23:16:38 rhinec Exp $             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           SIGN		RES 1       ; save location for sign in MSB                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           __FPFLAGSbits                                                                    C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           __FPFLAGS		RES 1       ; floating point library exception flags                  C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   GLOBAL  SIGN, __FPFLAGS, __FPFLAGSbits                                   C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;	RCS Header $Id: aarg.asm,v 1.3 2006/01/12 23:16:38 rhinec Exp $                C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __REMB3                                                                          C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB7		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __REMB2                                                                          C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB6		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __REMB1                                                                          C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB5		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __REMB0                                                                          C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB4		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB3		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB2		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB1		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB0		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AEXP		RES 1       ; 8 bit biased exponent for argument A                       C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL	__AARGB0, __AARGB1, __AARGB2, __AARGB3                                   C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   GLOBAL  __AARGB4, __AARGB5, __AARGB6, __AARGB7                           C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  __AEXP                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  __REMB3, __REMB2, __REMB1, __REMB0                                      C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;	RCS Header $Id: barg.asm,v 1.3 2006/01/12 23:16:38 rhinec Exp $                C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           __BARGB3		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           __BARGB2		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           __BARGB1		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           __BARGB0		RES 1       ; most significant byte of argument B                      C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           __BEXP		RES 1       ; 8 bit biased exponent for argument B                       C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  __BARGB3, __BARGB2, __BARGB1, __BARGB0                           C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  __BEXP                                                           C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;	RCS Header $Id: temparg.asm,v 1.3 2006/01/12 23:16:38 rhinec Exp $             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           __TEMPB3		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           __TEMPB2		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           __TEMPB1		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           __TEMP                                                                           C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           __TEMPB0		RES 1       ; temporary storage                                        C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   GLOBAL  __TEMPB3, __TEMPB2, __TEMPB1, __TEMPB0, __TEMP                   C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           #include <stdio.h>                                                               C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                           /* printf() is a wrapper function which calls vfprintf() with stdout as the      C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                              destination output stream. EOF is returned on error, else the number          C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                              of characters output. */                                                      C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                           int                                                                              C:\MCC18\src\TRADIT~1\stdclib\printf.c
004cc0   cfd9     MOVFF     0xfd9,0xfe6    printf (const rom char *fmt, ...)                                                C:\MCC18\src\TRADIT~1\stdclib\printf.c
004cc2   ffe6                                                                                                               
004cc4   cfda     MOVFF     0xfda,0xfe6                                                                                     
004cc6   ffe6                                                                                                               
004cc8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004cca   ffd9                                                                                                               
004ccc   cfe2     MOVFF     0xfe2,0xfda                                                                                     
004cce   ffda                                                                                                               
004cd0   52e6     MOVF      0xe6,0x1,0x0                                                                                    
004cd2   52e6     MOVF      0xe6,0x1,0x0                                                                                    
004cd4   52e6     MOVF      0xe6,0x1,0x0                                                                                    
004cd6   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                             va_list ap;                                                                    C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                             int n;                                                                         C:\MCC18\src\TRADIT~1\stdclib\printf.c
004cd8   50d9     MOVF      0xd9,0x0,0x0     va_start (ap, fmt);                                                            C:\MCC18\src\TRADIT~1\stdclib\printf.c
004cda   0ffb     ADDLW     0xfb                                                                                            
004cdc   6e2a     MOVWF     0x2a,0x0                                                                                        
004cde   0eff     MOVLW     0xff                                                                                            
004ce0   20da     ADDWFC    0xda,0x0,0x0                                                                                    
004ce2   6e2b     MOVWF     0x2b,0x0                                                                                        
004ce4   c02a     MOVFF     0x2a,0xfde                                                                                      
004ce6   ffde                                                                                                               
004ce8   6edd     MOVWF     0xdd,0x0                                                                                        
004cea   cfde     MOVFF     0xfde,0xfe6      n = vfprintf (stdout, fmt, ap);                                                C:\MCC18\src\TRADIT~1\stdclib\printf.c
004cec   ffe6                                                                                                               
004cee   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
004cf0   ffe6                                                                                                               
004cf2   0efb     MOVLW     0xfb                                                                                            
004cf4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004cf6   ffe6                                                                                                               
004cf8   0efc     MOVLW     0xfc                                                                                            
004cfa   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004cfc   ffe6                                                                                                               
004cfe   0efd     MOVLW     0xfd                                                                                            
004d00   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004d02   ffe6                                                                                                               
004d04   c1a9     MOVFF     0x1a9,0xfe6                                                                                     
004d06   ffe6                                                                                                               
004d08   c1aa     MOVFF     0x1aa,0xfe6                                                                                     
004d0a   ffe6                                                                                                               
004d0c   ecbb     CALL      0x3176,0x0                                                                                      
004d0e   f018                                                                                                               
004d10   6e2a     MOVWF     0x2a,0x0                                                                                        
004d12   0e07     MOVLW     0x7                                                                                             
004d14   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
004d16   e202     BC        0x4d1c                                                                                          
004d18   6ae1     CLRF      0xe1,0x0                                                                                        
004d1a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d1c   6ee1     MOVWF     0xe1,0x0                                                                                        
004d1e   502a     MOVF      0x2a,0x0,0x0                                                                                    
004d20   0e02     MOVLW     0x2                                                                                             
004d22   cff3     MOVFF     0xff3,0xfdb                                                                                     
004d24   ffdb                                                                                                               
004d26   0e03     MOVLW     0x3                                                                                             
004d28   cff4     MOVFF     0xff4,0xfdb                                                                                     
004d2a   ffdb                                                                                                               
                                             va_end (ap);                                                                   C:\MCC18\src\TRADIT~1\stdclib\printf.c
004d2c   0e02     MOVLW     0x2              return n;                                                                      C:\MCC18\src\TRADIT~1\stdclib\printf.c
004d2e   cfdb     MOVFF     0xfdb,0x2a                                                                                      
004d30   f02a                                                                                                               
004d32   0e03     MOVLW     0x3                                                                                             
004d34   cfdb     MOVFF     0xfdb,0x2b                                                                                      
004d36   f02b                                                                                                               
004d38   c02a     MOVFF     0x2a,0xff3                                                                                      
004d3a   fff3                                                                                                               
004d3c   c02b     MOVFF     0x2b,0xff4                                                                                      
004d3e   fff4                                                                                                               
004d40   0e04     MOVLW     0x4            }                                                                                C:\MCC18\src\TRADIT~1\stdclib\printf.c
004d42   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
004d44   e202     BC        0x4d4a                                                                                          
004d46   6ae1     CLRF      0xe1,0x0                                                                                        
004d48   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d4a   6ee1     MOVWF     0xe1,0x0                                                                                        
004d4c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d4e   cfe5     MOVFF     0xfe5,0xfda                                                                                     
004d50   ffda                                                                                                               
004d52   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004d54   ffd9                                                                                                               
004d56   0012     RETURN    0x0                                                                                             
                                           #include <stdio.h>                                                               C:\MCC18\src\TRADIT~1\stdclib\stdout.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\stdout.c
                                           /* by default stdout issues to the USART */                                      C:\MCC18\src\TRADIT~1\stdclib\stdout.c
                                           FILE *stdout = _H_USART;                                                         C:\MCC18\src\TRADIT~1\stdclib\stdout.c
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Microchip Technology, Inc.                  C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F26K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F26K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F46K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F46K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ; $Id: p18macro.inc,v 1.2 2005/05/20 15:34:54 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ; @name toupper                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;The {\bf toupper} function converts a lower case character to the               C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;corresponding upper case character.                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;@return If {\bf islower} is true for the value of {\bf c}, the corresponding    C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;upper case equivalent is returned, else the value of {\bf c} is returned        C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;unchanged.                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ; int toupper (int c);                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           CTYPE CODE                                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           toupper                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                             global toupper                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ; Proceedure: Use FSR0 as pointer to 'c'                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;         Return with result in PROD                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                             ; Set FSR0 = FSR1 - 2 ( location of 'c') after checking upper byte for 0       C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004eb2   0eff     MOVLW     0xff                     StkSetPtrToOffset FSR0L,-1                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004eb4   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
004eb6   6ee9     MOVWF     0xe9,0x0                                                                                        
004eb8   0eff     MOVLW     0xff                                                                                            
004eba   20e2     ADDWFC    0xe2,0x0,0x0                                                                                    
004ebc   6eea     MOVWF     0xea,0x0                                                                                        
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                             ; Copy 'c' into target location                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004ebe   cfed     MOVFF     0xfed,0xff4    	  movff POSTDEC0, PRODH                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004ec0   fff4                                                                                                               
004ec2   cfef     MOVFF     0xfef,0xff3    	  movff INDF0, PRODL                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004ec4   fff3                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004ec6   66f4     TSTFSZ    0xf4,0x0                 tstfsz    PRODH,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004ec8   d007     BRA       0x4ed8                   bra       jNoMatch            ; upper byte must be 0                   C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                             ; Test for lower case condition                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004eca   0e60     MOVLW     0x60                     jmpFleL   PRODL,ACCESS,'a'-1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004ecc   64f3     CPFSGT    0xf3,0x0                                                                                        
004ece   d004     BRA       0x4ed8                                                                                          
004ed0   0e7b     MOVLW     0x7b                     jmpFgeL   PRODL,ACCESS,'z'+1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004ed2   60f3     CPFSLT    0xf3,0x0                                                                                        
004ed4   d001     BRA       0x4ed8                                                                                          
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                             ; Convert char from lower to upper by clearing bit 5                           C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004ed6   9af3     BCF       0xf3,0x5,0x0             bcf       PRODL,5,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           jNoMatch:                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004ed8   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           #include <stdio.h>                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <ctype.h>                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <string.h>                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_MINUS 0x1                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_PLUS  0x2                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SPACE 0x4                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_OCTO  0x8                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_ZERO  0x10                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SIGNED 0x80                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           static const rom char s_digits[] = "0123456789abcdef";                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           static unsigned char                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00314a   ece1     CALL      0x3bc2,0x0     s_put_n_chars (FILE * handle, unsigned char n, char c)                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00314c   f01d                                                                                                               
003bc2   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
003bc4   ffe6                                                                                                               
003bc6   cfda     MOVFF     0xfda,0xfe6                                                                                     
003bc8   ffe6                                                                                                               
003bca   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003bcc   ffd9                                                                                                               
003bce   cfe2     MOVFF     0xfe2,0xfda                                                                                     
003bd0   ffda                                                                                                               
003bd2   0012     RETURN    0x0                                                                                             
                                           {                                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00314e   0efb     MOVLW     0xfb             while (n--)                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003150   cfdb     MOVFF     0xfdb,0xff3                                                                                     
003152   fff3                                                                                                               
003154   06db     DECF      0xdb,0x1,0x0                                                                                    
003156   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003158   0900     IORLW     0x0                                                                                             
00315a   e00a     BZ        0x3170                                                                                          
00315c   ec2f     CALL      0x3c5e,0x0         if (putc (c, handle) == EOF)                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00315e   f01e                                                                                                               
003160   0efa     MOVLW     0xfa                                                                                            
003162   ec9a     CALL      0x3d34,0x0                                                                                      
003164   f01e                                                                                                               
003166   e1f3     BNZ       0x314e                                                                                          
003168   1c2b     COMF      0x2b,0x0,0x0                                                                                    
00316a   e1f1     BNZ       0x314e                                                                                          
00316c   0e01     MOVLW     0x1                  return 1;                                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00316e   d001     BRA       0x3172                                                                                          
003170   0e00     MOVLW     0x0              return 0;                                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003172   ef10     GOTO      0x3c20         }                                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003174   f01e                                                                                                               
003c20   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003c22   cfe5     MOVFF     0xfe5,0xfda                                                                                     
003c24   ffda                                                                                                               
003c26   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003c28   ffd9                                                                                                               
003c2a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_UNSPECIFIED 0                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_LONG 1                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_SHLONG 2                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_BYTE   3                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           int                                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003176   ece1     CALL      0x3bc2,0x0     vfprintf (auto FILE *handle, auto const rom char *f, auto va_list ap)            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003178   f01d                                                                                                               
00317a   0e3b     MOVLW     0x3b                                                                                            
00317c   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
00317e   e302     BNC       0x3184                                                                                          
003180   68e1     SETF      0xe1,0x0                                                                                        
003182   52e6     MOVF      0xe6,0x1,0x0                                                                                    
003184   6ee1     MOVWF     0xe1,0x0                                                                                        
                                           {                                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                             unsigned char c;                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003186   0e01     MOVLW     0x1              int count = 0;                                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003188   6adb     CLRF      0xdb,0x0                                                                                        
00318a   0e02     MOVLW     0x2                                                                                             
00318c   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00318e   0ef9     MOVLW     0xf9             for (c = *f; c; c = *++f)                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003190   cfdb     MOVFF     0xfdb,0xff6                                                                                     
003192   fff6                                                                                                               
003194   0efa     MOVLW     0xfa                                                                                            
003196   cfdb     MOVFF     0xfdb,0xff7                                                                                     
003198   fff7                                                                                                               
00319a   0efb     MOVLW     0xfb                                                                                            
00319c   cfdb     MOVFF     0xfdb,0xff8                                                                                     
00319e   fff8                                                                                                               
0031a0   0008     TBLRD                                                                                                     
0031a2   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0031a4   6edf     MOVWF     0xdf,0x0                                                                                        
0031a6   50df     MOVF      0xdf,0x0,0x0                                                                                    
0031a8   e102     BNZ       0x31ae                                                                                          
0031aa   ef34     GOTO      0x3a68                                                                                          
0031ac   f01d                                                                                                               
003a62   d979     RCALL     0x3d56                                                                                          
003a64   efd0     GOTO      0x31a0                                                                                          
003a66   f018                                                                                                               
003d56   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003d58   0ff9     ADDLW     0xf9                                                                                            
003d5a   6ee9     MOVWF     0xe9,0x0                                                                                        
003d5c   0eff     MOVLW     0xff                                                                                            
003d5e   ef44     GOTO      0x3c88                                                                                          
003d60   f01e                                                                                                               
                                               {                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031ae   0e25     MOVLW     0x25                 if (c == '%')                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031b0   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0031b2   e002     BZ        0x31b8                                                                                          
0031b4   ef27     GOTO      0x3a4e                                                                                          
0031b6   f01d                                                                                                               
                                                   {                                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031b8   0e03     MOVLW     0x3                      unsigned char flags = 0;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031ba   6adb     CLRF      0xdb,0x0                                                                                        
0031bc   0e04     MOVLW     0x4                      unsigned char width = 0;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031be   6adb     CLRF      0xdb,0x0                                                                                        
0031c0   0e05     MOVLW     0x5                      unsigned char precision = 0;                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031c2   6adb     CLRF      0xdb,0x0                                                                                        
0031c4   0e06     MOVLW     0x6                      unsigned char have_precision = 0;                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031c6   6adb     CLRF      0xdb,0x0                                                                                        
0031c8   0e07     MOVLW     0x7                      unsigned char size = 0;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031ca   6adb     CLRF      0xdb,0x0                                                                                        
                                                     unsigned char space_cnt;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned char cval;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned long larg;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     far rom char *romstring;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     char *ramstring;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     int n;                                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* get the first character of the conversion specifier */              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031cc   ec49     CALL      0x3a92,0x0               c = *++f;                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031ce   f01d                                                                                                               
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /**  The conversion specification has, after the '%' character:        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         7.9.6.1                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * Zero or more flags (in any order) that modify the meaning of the  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specification.                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional minimum field width. If the converted value has       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          fewer characters than the field width, it will be padded with     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          spaces (by default) on the left (or right, if the left            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          adjustment flag, described later, has been given) to the field    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          width. The field width takes the form of an asterisk *            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (described later) or a decimal integer.                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional precision that gives the minimum number of digits     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to appear for the d, i, o, u, x, and X conversions, the           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of digits to appear after the decimal point        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          character for e, E, and f conversions, the maximum number         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of significant digits for the g and G conversions, or the         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of characters to be written from a string in       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          s conversion. The precision takes the form of a period (.)        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          followed by an asterisk * (described later) or by an optional     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal integer; if only the period is specified, the precision   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          is taken as zero. If a precision appears with any other           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier, the behaviour is undefined.                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional h specifying that a following d, i, o, u, x, or X     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a short int or unsigned short     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          int argument (the argument will have been promoted according      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to the integer promotions, and its value shall be converted       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to short int or unsigned short int before printing); an           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          optional h specifying that a following n conversion specifier     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          applies to a pointer to a short int argument; an optional l       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (ell) specifying that a following d, i, o, u, x, or X             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a long int or unsigned long int   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument; or an optional L specifying that a following e, E,      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          f, g, or G conversion specifier applies to a long double          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument. If an h, l, or L appears with any other conversion      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specifier, the behaviour is undefined.                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * A character that specifies the type of conversion to be applied.  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /** check for a flag.                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        7.9.6.1                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        The flag characters and their meanings are:                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        - The result of the conversion will be left-justified within        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the field. (It will be right justified if this flag is not        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specified.)                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        + The result of a signed conversion will always begin with a        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          plus or a minus sign. (It will begin with a sign only when        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          a negative value is converted if this flag is not specified.)     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        space  If the first character of a signed conversion is not a       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          sign, or if a signed conversion results in no characters, a       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          space will be prefixed to the result. If the space and + flags    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          both appear, the space flag will be ignored.                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        # The result is to be converted to an "alternate form." For o       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion, it increases the precision to force the first digit   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of the result to be a zero. For x (or X) conversion, a nonzero    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result will have 0x (or 0X) prefixed to it. For e, E, f, g,       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          and G conversions, the result will always contain a decimal-      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          point character, even if no digits follow it. (Normally, a        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal point character appears in the result of these            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions only if a digit follows it.) For g and G              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions, trailing zeros will not be removed from the          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result. For other conversions the behaviour is undefined.         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        0 For d, i, o, u, x, X, e, E, f, g, and G conversions, leading      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          zeros (following any indication of sign or base) are used to      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          pad to the field width; no space padding is performed. If         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the 0 and - flags both appear, the 0 flag will be ignored.        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          For other conversions, the behaviour is undefined.                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031d0   0e2d     MOVLW     0x2d                     while (c == '-' || c == '+' || c == ' ' || c == '#'                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031d2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0031d4   e00c     BZ        0x31ee                                                                                          
0031d6   0e2b     MOVLW     0x2b                                                                                            
0031d8   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0031da   e009     BZ        0x31ee                                                                                          
0031dc   0e20     MOVLW     0x20                                                                                            
0031de   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0031e0   e006     BZ        0x31ee                                                                                          
0031e2   0e23     MOVLW     0x23                                                                                            
003220   d7d5     BRA       0x31cc                                                                                          
0031e4   5cdf     SUBWF     0xdf,0x0,0x0                    || c == '0')                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031e6   e003     BZ        0x31ee                                                                                          
0031e8   0e30     MOVLW     0x30                                                                                            
0031ea   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0031ec   e11a     BNZ       0x3222                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031ee   50df     MOVF      0xdf,0x0,0x0                 switch (c)                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031f0   0a30     XORLW     0x30                                                                                            
0031f2   e014     BZ        0x321c                                                                                          
0031f4   0a13     XORLW     0x13                                                                                            
0031f6   e00f     BZ        0x3216                                                                                          
0031f8   0a03     XORLW     0x3                                                                                             
0031fa   e00a     BZ        0x3210                                                                                          
0031fc   0a0b     XORLW     0xb                                                                                             
0031fe   e005     BZ        0x320a                                                                                          
003200   0a06     XORLW     0x6                                                                                             
003202   e1e4     BNZ       0x31cc                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '-':                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003204   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003206   80db     BSF       0xdb,0x0,0x0                                                                                    
003208   d7e1     BRA       0x31cc                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '+':                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00320a   0e03     MOVLW     0x3                              flags |= _FLAG_PLUS;                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00320c   82db     BSF       0xdb,0x1,0x0                                                                                    
00320e   d7de     BRA       0x31cc                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case ' ':                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003210   0e03     MOVLW     0x3                              flags |= _FLAG_SPACE;                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003212   84db     BSF       0xdb,0x2,0x0                                                                                    
003214   d7db     BRA       0x31cc                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '#':                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003216   0e03     MOVLW     0x3                              flags |= _FLAG_OCTO;                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003218   86db     BSF       0xdb,0x3,0x0                                                                                    
00321a   d7d8     BRA       0x31cc                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '0':                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00321c   0e03     MOVLW     0x3                              flags |= _FLAG_ZERO;                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00321e   88db     BSF       0xdb,0x4,0x0                                                                                    
                                                             break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional width field is next */                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003222   0e2a     MOVLW     0x2a                     if (c == '*')                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003224   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
003226   e11b     BNZ       0x325e                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003228   ec45     CALL      0x3a8a,0x0                   n = va_arg (ap, int);                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00322a   f01d                                                                                                               
00322c   ec93     CALL      0x3b26,0x0                                                                                      
00322e   f01d                                                                                                               
003b26   0e13     MOVLW     0x13                                                                                            
003b28   cfee     MOVFF     0xfee,0xfdb                                                                                     
003b2a   ffdb                                                                                                               
003b2c   0e14     MOVLW     0x14                                                                                            
003b2e   cfed     MOVFF     0xfed,0xfdb                                                                                     
003b30   ffdb                                                                                                               
003230   e010     BZ        0x3252                       if (n < 0)                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003b32   0e13     MOVLW     0x13                                                                                            
003b34   cfdb     MOVFF     0xfdb,0x2a                                                                                      
003b36   f02a                                                                                                               
003b38   0e14     MOVLW     0x14                                                                                            
003b3a   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003b3c   f02b                                                                                                               
003b3e   0100     MOVLB     0x0                                                                                             
003b40   0e80     MOVLW     0x80                                                                                            
003b42   142b     ANDWF     0x2b,0x0,0x0                                                                                    
003b44   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003232   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003234   80db     BSF       0xdb,0x0,0x0                                                                                    
003236   681e     SETF      0x1e,0x0                         width = -n;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003238   681f     SETF      0x1f,0x0                                                                                        
00323a   0e13     MOVLW     0x13                                                                                            
00323c   cfdb     MOVFF     0xfdb,0x23                                                                                      
00323e   f023                                                                                                               
003240   0e14     MOVLW     0x14                                                                                            
003242   cfdb     MOVFF     0xfdb,0x24                                                                                      
003244   f024                                                                                                               
003246   ec7d     CALL      0x4afa,0x0                                                                                      
003248   f025                                                                                                               
00324a   0e04     MOVLW     0x4                                                                                             
00324c   c01c     MOVFF     0x1c,0xfdb                                                                                      
00324e   ffdb                                                                                                               
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003250   d003     BRA       0x3258                       else                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003252   0e13     MOVLW     0x13                           width = n;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003254   ec7c     CALL      0x3af8,0x0                                                                                      
003256   f01d                                                                                                               
003258   ec49     CALL      0x3a92,0x0                   c = *++f;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00325a   f01d                                                                                                               
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00325c   d00b     BRA       0x3274                   else                                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00325e   0e09     MOVLW     0x9                          cval = 0;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003260   6adb     CLRF      0xdb,0x0                                                                                        
003262   ecea     CALL      0x3bd4,0x0                   while ((unsigned char) isdigit (c))                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003264   f01d                                                                                                               
003266   e003     BZ        0x326e                                                                                          
00326c   d7fa     BRA       0x3262                                                                                          
003bd4   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
003bd6   ffe6                                                                                                               
003bd8   6ae6     CLRF      0xe6,0x0                                                                                        
003bda   ec6d     CALL      0x4eda,0x0                                                                                      
003bdc   f027                                                                                                               
003bde   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003be0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003be2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003be4   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003268   ec5e     CALL      0x3cbc,0x0                       cval = cval * 10 + c - '0';                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00326a   f01e                                                                                                               
003cbc   0e09     MOVLW     0x9                                                                                             
003cbe   50db     MOVF      0xdb,0x0,0x0                                                                                    
003cc0   0d0a     MULLW     0xa                                                                                             
003cc2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003cc4   24df     ADDWF     0xdf,0x0,0x0                                                                                    
003cc6   0fd0     ADDLW     0xd0                                                                                            
003cc8   6ee7     MOVWF     0xe7,0x0                                                                                        
003cca   0e09     MOVLW     0x9                                                                                             
003ccc   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003cce   ffdb                                                                                                               
003cd0   ef49     GOTO      0x3a92                           c = *++f;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003cd2   f01d                                                                                                               
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00326e   0e09     MOVLW     0x9                          width = cval;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003270   ec7c     CALL      0x3af8,0x0                                                                                      
003272   f01d                                                                                                               
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* if '-' is specified, '0' is ignored */                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003274   0e03     MOVLW     0x3                      if (flags & _FLAG_MINUS)                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003276   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
003278   98db     BCF       0xdb,0x4,0x0               flags &= ~_FLAG_ZERO;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional precision field is next */                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00327a   0e2e     MOVLW     0x2e                     if (c == '.')                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00327c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00327e   e11b     BNZ       0x32b6                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003280   ec49     CALL      0x3a92,0x0                   c = *++f;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003282   f01d                                                                                                               
003284   0e2a     MOVLW     0x2a                         if (c == '*')                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003286   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
003288   e10b     BNZ       0x32a0                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00328a   ec45     CALL      0x3a8a,0x0                       n = va_arg (ap, int);                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00328c   f01d                                                                                                               
00328e   ec93     CALL      0x3b26,0x0                                                                                      
003290   f01d                                                                                                               
003a8a   d929     RCALL     0x3cde                                                                                          
003a8c   0e02     MOVLW     0x2                                                                                             
003a8e   ef36     GOTO      0x3c6c                                                                                          
003a90   f01e                                                                                                               
003c6c   5e2a     SUBWF     0x2a,0x1,0x0                                                                                    
003c6e   0e00     MOVLW     0x0                                                                                             
003c70   5a2b     SUBWFB    0x2b,0x1,0x0                                                                                    
003c72   0ef7     MOVLW     0xf7                                                                                            
003c74   c02a     MOVFF     0x2a,0xfdb                                                                                      
003c76   ffdb                                                                                                               
003c78   0ef8     MOVLW     0xf8                                                                                            
003c7a   c02b     MOVFF     0x2b,0xfdb                                                                                      
003c7c   ffdb                                                                                                               
003c7e   c02a     MOVFF     0x2a,0xfe9                                                                                      
003c80   ffe9                                                                                                               
003c82   c02b     MOVFF     0x2b,0xfea                                                                                      
003c84   ffea                                                                                                               
003c86   0012     RETURN    0x0                                                                                             
003cde   0ef7     MOVLW     0xf7                                                                                            
003ce0   cfdb     MOVFF     0xfdb,0x2a                                                                                      
003ce2   f02a                                                                                                               
003ce4   0ef8     MOVLW     0xf8                                                                                            
003ce6   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003ce8   f02b                                                                                                               
003cea   0012     RETURN    0x0                                                                                             
003292   e103     BNZ       0x329a                           if (n >= 0)                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                               {                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003294   0e13     MOVLW     0x13                                 precision = n;                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003296   ecce     CALL      0x3b9c,0x0                                                                                      
003298   f01d                                                                                                               
003b9c   50db     MOVF      0xdb,0x0,0x0                                                                                    
003b9e   d8ce     RCALL     0x3d3c                                                                                          
003d3c   6ee7     MOVWF     0xe7,0x0                                                                                        
003d3e   0e05     MOVLW     0x5                                                                                             
003d40   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003d42   ffdb                                                                                                               
003d44   0012     RETURN    0x0                                                                                             
003ba0   0e01     MOVLW     0x1                                  have_precision = 1;                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003ba2   6ef3     MOVWF     0xf3,0x0                                                                                        
003ba4   0e06     MOVLW     0x6                                                                                             
003ba6   cff3     MOVFF     0xff3,0xfdb                                                                                     
003ba8   ffdb                                                                                                               
003baa   0012     RETURN    0x0                                                                                             
                                                               }                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00329a   ec49     CALL      0x3a92,0x0                       c = *++f;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00329c   f01d                                                                                                               
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00329e   d00b     BRA       0x32b6                       else                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032a0   0e09     MOVLW     0x9                              cval = 0;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032a2   6adb     CLRF      0xdb,0x0                                                                                        
0032a4   ecea     CALL      0x3bd4,0x0                       while ((unsigned char) isdigit (c))                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032a6   f01d                                                                                                               
0032a8   e003     BZ        0x32b0                                                                                          
0032ae   d7fa     BRA       0x32a4                                                                                          
                                                               {                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032aa   ec5e     CALL      0x3cbc,0x0                           cval = cval * 10 + c - '0';                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032ac   f01e                                                                                                               
                                                                 c = *++f;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                               }                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032b0   0e09     MOVLW     0x9                              precision = cval;                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032b2   ecce     CALL      0x3b9c,0x0                                                                                      
0032b4   f01d                                                                                                               
                                                             have_precision = 1;                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional 'h' specifier. since int and short int are             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the same size for MPLAB C18, this is a NOP for us. */               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032b6   0e68     MOVLW     0x68                     if (c == 'h')                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032b8   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0032ba   e107     BNZ       0x32ca                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032bc   ec49     CALL      0x3a92,0x0                   c = *++f;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032be   f01d                                                                                                               
                                                         /* if 'c' is another 'h' character, this is an 'hh'                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifier and the size is 8 bits */                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032c0   0e68     MOVLW     0x68                         if (c == 'h')                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032c2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0032c4   e11d     BNZ       0x3300                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032c6   0e03     MOVLW     0x3                              size = _FMT_BYTE;                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             c = *++f;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* 'z' and 't' are both 16-bit and so are NOPs */                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032c8   d018     BRA       0x32fa                   else if (c == 't' || c == 'z')                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032ca   0e74     MOVLW     0x74                                                                                            
0032cc   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0032ce   e017     BZ        0x32fe                                                                                          
0032d0   0e7a     MOVLW     0x7a                                                                                            
0032d2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0032d4   e014     BZ        0x32fe                                                                                          
                                                       c = *++f;                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'H' specifier tells us to deal with 24-bit integers.            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the 'T' and 'Z' specifiers are also 24 bit */                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032d6   0e48     MOVLW     0x48                     else if (c == 'H' || c == 'T' || c == 'Z')                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032d8   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0032da   e006     BZ        0x32e8                                                                                          
0032dc   0e54     MOVLW     0x54                                                                                            
0032de   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0032e0   e003     BZ        0x32e8                                                                                          
0032e2   0e5a     MOVLW     0x5a                                                                                            
0032e4   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0032e6   e102     BNZ       0x32ec                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032e8   0e02     MOVLW     0x2                          size = _FMT_SHLONG;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'l' specifier tells us to deal with 32-bit integers             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        'j' specifies intmax_t (long in our case). */                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032ea   d007     BRA       0x32fa                   else if (c == 'l' || c == 'j')                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032ec   0e6c     MOVLW     0x6c                                                                                            
0032ee   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0032f0   e003     BZ        0x32f8                                                                                          
0032f2   0e6a     MOVLW     0x6a                                                                                            
0032f4   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0032f6   e104     BNZ       0x3300                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032f8   0e01     MOVLW     0x1                          size = _FMT_LONG;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032fa   ec21     CALL      0x3c42,0x0                                                                                      
0032fc   f01e                                                                                                               
0032fe   dbc9     RCALL     0x3a92                       c = *++f;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a92   d961     RCALL     0x3d56                                                                                          
003a94   0008     TBLRD                                                                                                     
003a96   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003a98   6edf     MOVWF     0xdf,0x0                                                                                        
003a9a   0012     RETURN    0x0                                                                                             
003c88   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003c8a   6eea     MOVWF     0xea,0x0                                                                                        
003c8c   2aef     INCF      0xef,0x1,0x0                                                                                    
003c8e   cfee     MOVFF     0xfee,0xff6                                                                                     
003c90   fff6                                                                                                               
003c92   0e00     MOVLW     0x0                                                                                             
003c94   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
003c96   cfee     MOVFF     0xfee,0xff7                                                                                     
003c98   fff7                                                                                                               
003c9a   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
003c9c   cfee     MOVFF     0xfee,0xff8                                                                                     
003c9e   fff8                                                                                                               
003ca0   0012     RETURN    0x0                                                                                             
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003300   50df     MOVF      0xdf,0x0,0x0             switch (c)                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003302   0a6e     XORLW     0x6e                                                                                            
003304   e101     BNZ       0x3308                                                                                          
003306   d37f     BRA       0x3a06                                                                                          
003308   0a1e     XORLW     0x1e                                                                                            
00330a   e101     BNZ       0x330e                                                                                          
00330c   d192     BRA       0x3632                                                                                          
00330e   0a20     XORLW     0x20                                                                                            
003310   e101     BNZ       0x3314                                                                                          
003312   d18f     BRA       0x3632                                                                                          
003314   0a3f     XORLW     0x3f                                                                                            
003316   e101     BNZ       0x331a                                                                                          
003318   d149     BRA       0x35ac                                                                                          
00331a   0a1a     XORLW     0x1a                                                                                            
00331c   e101     BNZ       0x3320                                                                                          
00331e   d146     BRA       0x35ac                                                                                          
003320   0a0d     XORLW     0xd                                                                                             
003322   e101     BNZ       0x3326                                                                                          
003324   d143     BRA       0x35ac                                                                                          
003326   0a20     XORLW     0x20                                                                                            
003328   e101     BNZ       0x332c                                                                                          
00332a   d140     BRA       0x35ac                                                                                          
00332c   0a3a     XORLW     0x3a                                                                                            
00332e   e101     BNZ       0x3332                                                                                          
003330   d13d     BRA       0x35ac                                                                                          
003332   0a20     XORLW     0x20                                                                                            
003334   e101     BNZ       0x3338                                                                                          
003336   d13a     BRA       0x35ac                                                                                          
003338   0a26     XORLW     0x26                                                                                            
00333a   e101     BNZ       0x333e                                                                                          
00333c   d135     BRA       0x35a8                                                                                          
00333e   0a0d     XORLW     0xd                                                                                             
003340   e101     BNZ       0x3344                                                                                          
003342   d132     BRA       0x35a8                                                                                          
003344   0a1a     XORLW     0x1a                                                                                            
003346   e101     BNZ       0x334a                                                                                          
003348   d0d9     BRA       0x34fc                                                                                          
00334a   0a20     XORLW     0x20                                                                                            
00334c   e04a     BZ        0x33e2                                                                                          
00334e   0a30     XORLW     0x30                                                                                            
003350   e01f     BZ        0x3390                                                                                          
003352   0a46     XORLW     0x46                                                                                            
003354   e00e     BZ        0x3372                                                                                          
003356   0a25     XORLW     0x25                                                                                            
003358   e001     BZ        0x335c                                                                                          
00335a   d383     BRA       0x3a62                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '\0':                                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* this is undefined behaviour. we have a trailing '%' character   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            in the string, perhaps with some flags, width, precision        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            stuff as well, but no format specifier. We'll, arbitrarily,     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            back up a character so that the loop will terminate             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            properly when it loops back and we'll output a '%'              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            character. */                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00335c   50d9     MOVF      0xd9,0x0,0x0                 --f;                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00335e   0ff9     ADDLW     0xf9                                                                                            
003360   6ee9     MOVWF     0xe9,0x0                                                                                        
003362   0eff     MOVLW     0xff                                                                                            
003364   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003366   6eea     MOVWF     0xea,0x0                                                                                        
003368   0e01     MOVLW     0x1                                                                                             
00336a   5eee     SUBWF     0xee,0x1,0x0                                                                                    
00336c   0e00     MOVLW     0x0                                                                                             
00336e   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
003370   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
                                                         /* fallthrough */                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '%':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003372   ec2f     CALL      0x3c5e,0x0                   if (putc ('%', handle) == EOF)                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003374   f01e                                                                                                               
003376   0e25     MOVLW     0x25                                                                                            
003378   6ee6     MOVWF     0xe6,0x0                                                                                        
00337a   db95     RCALL     0x3aa6                                                                                          
00337c   e103     BNZ       0x3384                                                                                          
00337e   1c2b     COMF      0x2b,0x0,0x0                                                                                    
003380   e101     BNZ       0x3384                                                                                          
003382   d369     BRA       0x3a56                                                                                          
                                                           return EOF;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003384   ec2b     CALL      0x3c56,0x0                   ++count;                                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003386   f01e                                                                                                               
003388   e201     BC        0x338c                                                                                          
00338a   d36b     BRA       0x3a62                                                                                          
00338c   2adb     INCF      0xdb,0x1,0x0                                                                                    
00338e   d369     BRA       0x3a62                       break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'c':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003390   0e08     MOVLW     0x8                          space_cnt = 0;                                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003392   6adb     CLRF      0xdb,0x0                                                                                        
003394   0e04     MOVLW     0x4                          if (width > 1)                                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003396   50db     MOVF      0xdb,0x0,0x0                                                                                    
003398   0801     SUBLW     0x1                                                                                             
00339a   e206     BC        0x33a8                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00339c   0e04     MOVLW     0x4                              space_cnt = width - 1;                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00339e   04db     DECF      0xdb,0x0,0x0                                                                                    
0033a0   ecf3     CALL      0x3be6,0x0                                                                                      
0033a2   f01d                                                                                                               
0033a4   50db     MOVF      0xdb,0x0,0x0                     count += space_cnt;                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033a6   db8b     RCALL     0x3abe                                                                                          
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033a8   0e08     MOVLW     0x8                          if (space_cnt && !(flags & _FLAG_MINUS))                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033aa   50db     MOVF      0xdb,0x0,0x0                                                                                    
0033ac   e009     BZ        0x33c0                                                                                          
0033ae   0e03     MOVLW     0x3                                                                                             
0033b0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0033b2   0b01     ANDLW     0x1                                                                                             
0033b4   e105     BNZ       0x33c0                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033b6   db72     RCALL     0x3a9c                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033b8   e001     BZ        0x33bc                                                                                          
0033ba   d34d     BRA       0x3a56                                                                                          
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033bc   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033be   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033c0   db64     RCALL     0x3a8a                       c = va_arg (ap, int);                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033c2   cfef     MOVFF     0xfef,0xfdf                                                                                     
0033c4   ffdf                                                                                                               
0033c6   eca3     CALL      0x3d46,0x0                   if (putc (c, handle) == EOF)                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033c8   f01e                                                                                                               
0033ca   e103     BNZ       0x33d2                                                                                          
0033cc   1c2b     COMF      0x2b,0x0,0x0                                                                                    
0033ce   e101     BNZ       0x33d2                                                                                          
0033d0   d342     BRA       0x3a56                                                                                          
                                                           return EOF;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033d2   ec2b     CALL      0x3c56,0x0                   ++count;                                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033d4   f01e                                                                                                               
0033d6   e301     BNC       0x33da                                                                                          
0033d8   2adb     INCF      0xdb,0x1,0x0                                                                                    
0033da   db60     RCALL     0x3a9c                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033dc   e101     BNZ       0x33e0                                                                                          
0033de   d341     BRA       0x3a62                                                                                          
0033e0   d33a     BRA       0x3a56                         return EOF;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'S':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033e2   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033e4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0033e6   0802     SUBLW     0x2                                                                                             
0033e8   e10f     BNZ       0x3408                                                                                          
0033ea   ec6f     CALL      0x3cde,0x0                     romstring = va_arg (ap, rom far char *);                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0033ec   f01e                                                                                                               
0033ee   0e03     MOVLW     0x3                                                                                             
0033f0   ec36     CALL      0x3c6c,0x0                                                                                      
0033f2   f01e                                                                                                               
0033f4   0e0e     MOVLW     0xe                                                                                             
0033f6   cfee     MOVFF     0xfee,0xfdb                                                                                     
0033f8   ffdb                                                                                                               
0033fa   0e0f     MOVLW     0xf                                                                                             
0033fc   cfee     MOVFF     0xfee,0xfdb                                                                                     
0033fe   ffdb                                                                                                               
003400   0e10     MOVLW     0x10                                                                                            
003402   cfee     MOVFF     0xfee,0xfdb                                                                                     
003404   ffdb                                                                                                               
003406   d020     BRA       0x3448                       else                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003408   0ef7     MOVLW     0xf7                           romstring = (far rom char*)va_arg (ap, rom near char *);         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00340a   cfdb     MOVFF     0xfdb,0x2d                                                                                      
00340c   f02d                                                                                                               
00340e   0ef8     MOVLW     0xf8                                                                                            
003410   cfdb     MOVFF     0xfdb,0x2e                                                                                      
003412   f02e                                                                                                               
003414   0e02     MOVLW     0x2                                                                                             
003416   5e2d     SUBWF     0x2d,0x1,0x0                                                                                    
003418   0e00     MOVLW     0x0                                                                                             
00341a   5a2e     SUBWFB    0x2e,0x1,0x0                                                                                    
00341c   0ef7     MOVLW     0xf7                                                                                            
00341e   c02d     MOVFF     0x2d,0xfdb                                                                                      
003420   ffdb                                                                                                               
003422   0ef8     MOVLW     0xf8                                                                                            
003424   c02e     MOVFF     0x2e,0xfdb                                                                                      
003426   ffdb                                                                                                               
003428   c02d     MOVFF     0x2d,0xfe9                                                                                      
00342a   ffe9                                                                                                               
00342c   c02e     MOVFF     0x2e,0xfea                                                                                      
00342e   ffea                                                                                                               
003430   ec26     CALL      0x3c4c,0x0                                                                                      
003432   f01e                                                                                                               
003434   6a2c     CLRF      0x2c,0x0                                                                                        
003436   0e0e     MOVLW     0xe                                                                                             
003438   c02a     MOVFF     0x2a,0xfdb                                                                                      
00343a   ffdb                                                                                                               
00343c   0e0f     MOVLW     0xf                                                                                             
00343e   c02b     MOVFF     0x2b,0xfdb                                                                                      
003440   ffdb                                                                                                               
003442   0e10     MOVLW     0x10                                                                                            
003444   c02c     MOVFF     0x2c,0xfdb                                                                                      
003446   ffdb                                                                                                               
003448   0e0e     MOVLW     0xe                          n = strlenpgm (romstring);                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00344a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00344c   ffe6                                                                                                               
00344e   0e0f     MOVLW     0xf                                                                                             
003450   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003452   ffe6                                                                                                               
003454   0e10     MOVLW     0x10                                                                                            
003456   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003458   ffe6                                                                                                               
00345a   ec34     CALL      0x4e68,0x0                                                                                      
00345c   f027                                                                                                               
00345e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003460   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003462   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003464   0e13     MOVLW     0x13                                                                                            
003466   c01d     MOVFF     0x1d,0xfdb                                                                                      
003468   ffdb                                                                                                               
00346a   0e14     MOVLW     0x14                                                                                            
00346c   c01e     MOVFF     0x1e,0xfdb                                                                                      
00346e   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003470   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003472   50db     MOVF      0xdb,0x0,0x0                                                                                    
003474   e005     BZ        0x3480                                                                                          
003476   0e13     MOVLW     0x13                                                                                            
003478   ec6a     CALL      0x3cd4,0x0                                                                                      
00347a   f01e                                                                                                               
00347c   e201     BC        0x3480                                                                                          
00347e   db6a     RCALL     0x3b54                         n = precision;                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003b54   0e05     MOVLW     0x5                                                                                             
003b56   50db     MOVF      0xdb,0x0,0x0                                                                                    
003b58   6ee6     MOVWF     0xe6,0x0                                                                                        
003b5a   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003b5c   0f13     ADDLW     0x13                                                                                            
003b5e   d901     RCALL     0x3d62                                                                                          
003b60   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b62   50e7     MOVF      0xe7,0x0,0x0                                                                                    
003b64   6eee     MOVWF     0xee,0x0                                                                                        
003b66   6aed     CLRF      0xed,0x0                                                                                        
003b68   0012     RETURN    0x0                                                                                             
003480   ec8e     CALL      0x3d1c,0x0                   if (width < (unsigned char) n)                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003482   f01e                                                                                                               
003484   e202     BC        0x348a                                                                                          
003d1c   0e13     MOVLW     0x13                                                                                            
003d1e   50db     MOVF      0xdb,0x0,0x0                                                                                    
003d20   6ef3     MOVWF     0xf3,0x0                                                                                        
003d22   0e04     MOVLW     0x4                                                                                             
003d24   ef77     GOTO      0x3aee                                                                                          
003d26   f01d                                                                                                               
003486   0e13     MOVLW     0x13                           width = n;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003488   db37     RCALL     0x3af8                                                                                          
00348a   ec51     CALL      0x3ca2,0x0                   space_cnt = width - (unsigned char) n;                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00348c   f01e                                                                                                               
003ca2   0e04     MOVLW     0x4                                                                                             
003ca4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003ca6   ffe6                                                                                                               
003ca8   0e13     MOVLW     0x13                                                                                            
003caa   50db     MOVF      0xdb,0x0,0x0                                                                                    
003cac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003cae   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
003cb0   df9a     RCALL     0x3be6                                                                                          
003cb2   50db     MOVF      0xdb,0x0,0x0                 count += space_cnt;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003cb4   df04     RCALL     0x3abe                                                                                          
                                                         /* we've already calculated the space count that the width         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00348e   e006     BZ        0x349c                       if (have_precision && precision < width)                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003490   0e04     MOVLW     0x4                                                                                             
003492   ec6a     CALL      0x3cd4,0x0                                                                                      
003494   f01e                                                                                                               
003496   e202     BC        0x349c                                                                                          
003cb6   0e06     MOVLW     0x6                                                                                             
003cb8   50db     MOVF      0xdb,0x0,0x0                                                                                    
003cba   0012     RETURN    0x0                                                                                             
003498   0e05     MOVLW     0x5                            width = precision;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00349a   db2e     RCALL     0x3af8                                                                                          
                                                         /* if right justified, we print the spaces before the              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00349c   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00349e   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
0034a0   d005     BRA       0x34ac                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034a2   dafc     RCALL     0x3a9c                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034a4   e001     BZ        0x34a8                                                                                          
0034a6   d2d7     BRA       0x3a56                                                                                          
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034a8   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034aa   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034ac   0e09     MOVLW     0x9                          cval = 0;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034ae   6adb     CLRF      0xdb,0x0                                                                                        
0034b0   0e0e     MOVLW     0xe                          for (c = *romstring; c && cval < width; c = *++romstring)          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034b2   cfdb     MOVFF     0xfdb,0xff6                                                                                     
0034b4   fff6                                                                                                               
0034b6   0e0f     MOVLW     0xf                                                                                             
0034b8   cfdb     MOVFF     0xfdb,0xff7                                                                                     
0034ba   fff7                                                                                                               
0034bc   0e10     MOVLW     0x10                                                                                            
0034be   cfdb     MOVFF     0xfdb,0xff8                                                                                     
0034c0   fff8                                                                                                               
0034c2   0008     TBLRD                                                                                                     
0034c4   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0034c6   6edf     MOVWF     0xdf,0x0                                                                                        
0034c8   50df     MOVF      0xdf,0x0,0x0                                                                                    
0034ca   e014     BZ        0x34f4                                                                                          
0034cc   ec94     CALL      0x3d28,0x0                                                                                      
0034ce   f01e                                                                                                               
0034d0   e211     BC        0x34f4                                                                                          
0034e8   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0034ea   0f0e     ADDLW     0xe                                                                                             
0034ec   6ee9     MOVWF     0xe9,0x0                                                                                        
0034ee   0e00     MOVLW     0x0                                                                                             
0034f0   dbcb     RCALL     0x3c88                                                                                          
0034f2   d7e7     BRA       0x34c2                                                                                          
003d28   0e04     MOVLW     0x4                                                                                             
003d2a   50db     MOVF      0xdb,0x0,0x0                                                                                    
003d2c   6ef3     MOVWF     0xf3,0x0                                                                                        
003d2e   0e09     MOVLW     0x9                                                                                             
003d30   ef77     GOTO      0x3aee                                                                                          
003d32   f01d                                                                                                               
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034d2   eca3     CALL      0x3d46,0x0                       if (putc (c, handle) == EOF)                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034d4   f01e                                                                                                               
0034d6   e103     BNZ       0x34de                                                                                          
0034d8   1c2b     COMF      0x2b,0x0,0x0                                                                                    
0034da   e101     BNZ       0x34de                                                                                          
0034dc   d2bc     BRA       0x3a56                                                                                          
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034de   dbbb     RCALL     0x3c56                           ++count;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034e0   e301     BNC       0x34e4                                                                                          
0034e2   2adb     INCF      0xdb,0x1,0x0                                                                                    
0034e4   0e09     MOVLW     0x9                              ++cval;                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034e6   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034f4   dad3     RCALL     0x3a9c                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034f6   e101     BNZ       0x34fa                                                                                          
0034f8   d2b4     BRA       0x3a62                                                                                          
0034fa   d2ad     BRA       0x3a56                         return EOF;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 's':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034fc   dac6     RCALL     0x3a8a                       ramstring = va_arg (ap, char *);                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0034fe   0e11     MOVLW     0x11                                                                                            
003500   cfee     MOVFF     0xfee,0xfdb                                                                                     
003502   ffdb                                                                                                               
003504   0e12     MOVLW     0x12                                                                                            
003506   cfed     MOVFF     0xfed,0xfdb                                                                                     
003508   ffdb                                                                                                               
00350a   0e11     MOVLW     0x11                         n = strlen (ramstring);                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00350c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00350e   ffe6                                                                                                               
003510   0e12     MOVLW     0x12                                                                                            
003512   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003514   ffe6                                                                                                               
003516   ec26     CALL      0x4e4c,0x0                                                                                      
003518   f027                                                                                                               
00351a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00351c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00351e   0e13     MOVLW     0x13                                                                                            
003520   cff3     MOVFF     0xff3,0xfdb                                                                                     
003522   ffdb                                                                                                               
003524   0e14     MOVLW     0x14                                                                                            
003526   cff4     MOVFF     0xff4,0xfdb                                                                                     
003528   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00352a   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00352c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00352e   e004     BZ        0x3538                                                                                          
003530   0e13     MOVLW     0x13                                                                                            
003532   dbd0     RCALL     0x3cd4                                                                                          
003534   e201     BC        0x3538                                                                                          
003536   db0e     RCALL     0x3b54                         n = precision;                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003538   ec8e     CALL      0x3d1c,0x0                   if (width < (unsigned char) n)                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00353a   f01e                                                                                                               
00353c   e202     BC        0x3542                                                                                          
00353e   0e13     MOVLW     0x13                           width = n;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003540   dadb     RCALL     0x3af8                                                                                          
003542   dbaf     RCALL     0x3ca2                       space_cnt = width - (unsigned char) n;                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003be6   6ee7     MOVWF     0xe7,0x0                                                                                        
003be8   0e08     MOVLW     0x8                                                                                             
003bea   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003bec   ffdb                                                                                                               
003bee   0012     RETURN    0x0                                                                                             
                                                         count += space_cnt;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* we've already calculated the space count that the width         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003544   e005     BZ        0x3550                       if (have_precision && precision < width)                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003546   0e04     MOVLW     0x4                                                                                             
003548   dbc5     RCALL     0x3cd4                                                                                          
00354a   e202     BC        0x3550                                                                                          
003cd4   50db     MOVF      0xdb,0x0,0x0                                                                                    
003cd6   6ef3     MOVWF     0xf3,0x0                                                                                        
003cd8   0e05     MOVLW     0x5                                                                                             
003cda   ef77     GOTO      0x3aee                                                                                          
003cdc   f01d                                                                                                               
00354c   0e05     MOVLW     0x5                            width = precision;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00354e   dad4     RCALL     0x3af8                                                                                          
003af8   50db     MOVF      0xdb,0x0,0x0                                                                                    
003afa   6ee7     MOVWF     0xe7,0x0                                                                                        
003afc   0e04     MOVLW     0x4                                                                                             
003afe   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003b00   ffdb                                                                                                               
003b02   0012     RETURN    0x0                                                                                             
                                                         /* if right justified, we print the spaces before the              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003550   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003552   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
003554   d005     BRA       0x3560                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003556   daa2     RCALL     0x3a9c                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003558   e001     BZ        0x355c                                                                                          
00355a   d27d     BRA       0x3a56                                                                                          
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00355c   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00355e   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003560   0e09     MOVLW     0x9                          cval = 0;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003562   6adb     CLRF      0xdb,0x0                                                                                        
003564   0e11     MOVLW     0x11                         for (c = *ramstring; c && cval < width; c = *++ramstring)          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003566   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
003568   ffe9                                                                                                               
00356a   0e12     MOVLW     0x12                                                                                            
00356c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00356e   ffea                                                                                                               
003570   cfef     MOVFF     0xfef,0xfdf                                                                                     
003572   ffdf                                                                                                               
003574   50df     MOVF      0xdf,0x0,0x0                                                                                    
003576   e014     BZ        0x35a0                                                                                          
003578   dbd7     RCALL     0x3d28                                                                                          
00357a   e212     BC        0x35a0                                                                                          
003590   0e11     MOVLW     0x11                                                                                            
003592   2adb     INCF      0xdb,0x1,0x0                                                                                    
003594   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
003596   ffe9                                                                                                               
003598   0e12     MOVLW     0x12                                                                                            
00359a   e3e8     BNC       0x356c                                                                                          
00359c   2adb     INCF      0xdb,0x1,0x0                                                                                    
00359e   d7e6     BRA       0x356c                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00357c   dbe4     RCALL     0x3d46                           if (putc (c, handle) == EOF)                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00357e   e103     BNZ       0x3586                                                                                          
003580   1c2b     COMF      0x2b,0x0,0x0                                                                                    
003582   e101     BNZ       0x3586                                                                                          
003584   d268     BRA       0x3a56                                                                                          
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003586   db67     RCALL     0x3c56                           ++count;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003588   e301     BNC       0x358c                                                                                          
00358a   2adb     INCF      0xdb,0x1,0x0                                                                                    
00358c   0e09     MOVLW     0x9                              ++cval;                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00358e   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035a0   da7d     RCALL     0x3a9c                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035a2   e101     BNZ       0x35a6                                                                                          
0035a4   d25e     BRA       0x3a62                                                                                          
0035a6   d257     BRA       0x3a56                         return EOF;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'd':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'i':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035a8   0e03     MOVLW     0x3                          flags |= _FLAG_SIGNED;                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035aa   8edb     BSF       0xdb,0x7,0x0                                                                                    
                                                         /* fall through */                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'o':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'u':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'x':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'X':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'b':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'B':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* This is a bit of a sneaky trick. The 'l' and 'hh' size          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifiers are valid only for the integer conversions,          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            not the 'p' or 'P' conversions, and are ignored for the         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            latter. By jumping over the additional size specifier           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            checks here we get the best code size since we can              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limit the size checks in the remaining code. */                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035ac   0e07     MOVLW     0x7                          if (size == _FMT_LONG)                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035ae   04db     DECF      0xdb,0x0,0x0                                                                                    
0035b0   e110     BNZ       0x35d2                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035b2   db95     RCALL     0x3cde                           larg = va_arg (ap, long int);                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035b4   0e04     MOVLW     0x4                                                                                             
0035b6   db5a     RCALL     0x3c6c                                                                                          
0035b8   0e0a     MOVLW     0xa                                                                                             
0035ba   cfee     MOVFF     0xfee,0xfdb                                                                                     
0035bc   ffdb                                                                                                               
0035be   0e0b     MOVLW     0xb                                                                                             
0035c0   cfee     MOVFF     0xfee,0xfdb                                                                                     
0035c2   ffdb                                                                                                               
0035c4   0e0c     MOVLW     0xc                                                                                             
0035c6   cfee     MOVFF     0xfee,0xfdb                                                                                     
0035c8   ffdb                                                                                                               
0035ca   0e0d     MOVLW     0xd                                                                                             
0035cc   cfee     MOVFF     0xfee,0xfdb                                                                                     
0035ce   ffdb                                                                                                               
0035d0   d06c     BRA       0x36aa                           goto _do_integer_conversion;                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035d2   0e07     MOVLW     0x7                          else if (size == _FMT_BYTE)                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035d4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0035d6   0803     SUBLW     0x3                                                                                             
0035d8   e12c     BNZ       0x3632                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035da   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035dc   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
0035de   d00d     BRA       0x35fa                                                                                          
0035e0   dab2     RCALL     0x3b46                             larg = (signed char) va_arg (ap, int);                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035e2   0e02     MOVLW     0x2                                                                                             
0035e4   da76     RCALL     0x3ad2                                                                                          
0035e6   cfef     MOVFF     0xfef,0x2a                                                                                      
0035e8   f02a                                                                                                               
0035ea   6a2b     CLRF      0x2b,0x0                                                                                        
0035ec   6a2c     CLRF      0x2c,0x0                                                                                        
0035ee   6a2d     CLRF      0x2d,0x0                                                                                        
0035f0   ae2a     BTFSS     0x2a,0x7,0x0                                                                                    
0035f2   d039     BRA       0x3666                                                                                          
0035f4   682b     SETF      0x2b,0x0                                                                                        
0035f6   682c     SETF      0x2c,0x0                                                                                        
0035f8   d035     BRA       0x3664                           else                                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035fa   0ef7     MOVLW     0xf7                               larg = (unsigned char) va_arg (ap, unsigned int);            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0035fc   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0035fe   f02b                                                                                                               
003600   0ef8     MOVLW     0xf8                                                                                            
003602   cfdb     MOVFF     0xfdb,0x2c                                                                                      
003604   f02c                                                                                                               
003606   0e02     MOVLW     0x2                                                                                             
003608   5e2b     SUBWF     0x2b,0x1,0x0                                                                                    
00360a   0e00     MOVLW     0x0                                                                                             
00360c   5a2c     SUBWFB    0x2c,0x1,0x0                                                                                    
00360e   0ef7     MOVLW     0xf7                                                                                            
003610   c02b     MOVFF     0x2b,0xfdb                                                                                      
003612   ffdb                                                                                                               
003614   0ef8     MOVLW     0xf8                                                                                            
003616   c02c     MOVFF     0x2c,0xfdb                                                                                      
003618   ffdb                                                                                                               
00361a   c02b     MOVFF     0x2b,0xfe9                                                                                      
00361c   ffe9                                                                                                               
00361e   c02c     MOVFF     0x2c,0xfea                                                                                      
003620   ffea                                                                                                               
003622   cfef     MOVFF     0xfef,0x2a                                                                                      
003624   f02a                                                                                                               
003626   0e0a     MOVLW     0xa                                                                                             
003628   c02a     MOVFF     0x2a,0xfdb                                                                                      
00362a   ffdb                                                                                                               
00362c   0e0b     MOVLW     0xb                                                                                             
00362e   6adb     CLRF      0xdb,0x0                                                                                        
003630   d038     BRA       0x36a2                           goto _do_integer_conversion;                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* fall through */                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'p':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'P':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003632   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003634   50db     MOVF      0xdb,0x0,0x0                                                                                    
003636   0802     SUBLW     0x2                                                                                             
003638   e109     BNZ       0x364c                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00363a   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00363c   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
00363e   d004     BRA       0x3648                                                                                          
003640   db59     RCALL     0x3cf4                             larg = va_arg (ap, short long int);                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003642   ae2c     BTFSS     0x2c,0x7,0x0                                                                                    
003644   d010     BRA       0x3666                                                                                          
003bf0   cfee     MOVFF     0xfee,0x2a                                                                                      
003bf2   f02a                                                                                                               
003bf4   cfee     MOVFF     0xfee,0x2b                                                                                      
003bf6   f02b                                                                                                               
003bf8   cfef     MOVFF     0xfef,0x2c                                                                                      
003bfa   f02c                                                                                                               
003bfc   6a2d     CLRF      0x2d,0x0                                                                                        
003bfe   0012     RETURN    0x0                                                                                             
003cf4   df28     RCALL     0x3b46                                                                                          
003cf6   0e03     MOVLW     0x3                                                                                             
003cf8   deec     RCALL     0x3ad2                                                                                          
003cfa   eff8     GOTO      0x3bf0                                                                                          
003cfc   f01d                                                                                                               
003646   d00e     BRA       0x3664                           else                                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003648   db55     RCALL     0x3cf4                             larg = va_arg (ap, unsigned short long int);                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00364a   d00d     BRA       0x3666                       else if (flags & _FLAG_SIGNED)                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00364c   0e03     MOVLW     0x3                                                                                             
00364e   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
003650   d012     BRA       0x3676                                                                                          
003652   da79     RCALL     0x3b46                         larg = va_arg (ap, int);                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003654   0e02     MOVLW     0x2                                                                                             
003656   da3d     RCALL     0x3ad2                                                                                          
003658   daf9     RCALL     0x3c4c                                                                                          
00365a   6a2c     CLRF      0x2c,0x0                                                                                        
00365c   6a2d     CLRF      0x2d,0x0                                                                                        
00365e   ae2b     BTFSS     0x2b,0x7,0x0                                                                                    
003660   d002     BRA       0x3666                                                                                          
003662   682c     SETF      0x2c,0x0                                                                                        
003664   682d     SETF      0x2d,0x0                                                                                        
003666   dae2     RCALL     0x3c2c                                                                                          
003668   0e0c     MOVLW     0xc                                                                                             
00366a   c02c     MOVFF     0x2c,0xfdb                                                                                      
00366c   ffdb                                                                                                               
00366e   0e0d     MOVLW     0xd                                                                                             
003670   c02d     MOVFF     0x2d,0xfdb                                                                                      
003672   ffdb                                                                                                               
003ad2   5e2e     SUBWF     0x2e,0x1,0x0                                                                                    
003ad4   0e00     MOVLW     0x0                                                                                             
003ad6   5a2f     SUBWFB    0x2f,0x1,0x0                                                                                    
003ad8   0ef7     MOVLW     0xf7                                                                                            
003ada   c02e     MOVFF     0x2e,0xfdb                                                                                      
003adc   ffdb                                                                                                               
003ade   0ef8     MOVLW     0xf8                                                                                            
003ae0   c02f     MOVFF     0x2f,0xfdb                                                                                      
003ae2   ffdb                                                                                                               
003ae4   c02e     MOVFF     0x2e,0xfe9                                                                                      
003ae6   ffe9                                                                                                               
003ae8   c02f     MOVFF     0x2f,0xfea                                                                                      
003aea   ffea                                                                                                               
003aec   0012     RETURN    0x0                                                                                             
003b46   0ef7     MOVLW     0xf7                                                                                            
003b48   cfdb     MOVFF     0xfdb,0x2e                                                                                      
003b4a   f02e                                                                                                               
003b4c   0ef8     MOVLW     0xf8                                                                                            
003b4e   cfdb     MOVFF     0xfdb,0x2f                                                                                      
003b50   f02f                                                                                                               
003b52   0012     RETURN    0x0                                                                                             
003c2c   0e0a     MOVLW     0xa                                                                                             
003c2e   c02a     MOVFF     0x2a,0xfdb                                                                                      
003c30   ffdb                                                                                                               
003c32   0e0b     MOVLW     0xb                                                                                             
003c34   c02b     MOVFF     0x2b,0xfdb                                                                                      
003c36   ffdb                                                                                                               
003c38   0012     RETURN    0x0                                                                                             
003c4c   cfee     MOVFF     0xfee,0x2a                                                                                      
003c4e   f02a                                                                                                               
003c50   cfef     MOVFF     0xfef,0x2b                                                                                      
003c52   f02b                                                                                                               
003c54   0012     RETURN    0x0                                                                                             
003674   d01a     BRA       0x36aa                       else                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003676   0ef7     MOVLW     0xf7                           larg = va_arg (ap, unsigned int);                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003678   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00367a   f02c                                                                                                               
00367c   0ef8     MOVLW     0xf8                                                                                            
00367e   cfdb     MOVFF     0xfdb,0x2d                                                                                      
003680   f02d                                                                                                               
003682   0e02     MOVLW     0x2                                                                                             
003684   5e2c     SUBWF     0x2c,0x1,0x0                                                                                    
003686   0e00     MOVLW     0x0                                                                                             
003688   5a2d     SUBWFB    0x2d,0x1,0x0                                                                                    
00368a   0ef7     MOVLW     0xf7                                                                                            
00368c   c02c     MOVFF     0x2c,0xfdb                                                                                      
00368e   ffdb                                                                                                               
003690   0ef8     MOVLW     0xf8                                                                                            
003692   c02d     MOVFF     0x2d,0xfdb                                                                                      
003694   ffdb                                                                                                               
003696   c02c     MOVFF     0x2c,0xfe9                                                                                      
003698   ffe9                                                                                                               
00369a   c02d     MOVFF     0x2d,0xfea                                                                                      
00369c   ffea                                                                                                               
00369e   dad6     RCALL     0x3c4c                                                                                          
0036a0   dac5     RCALL     0x3c2c                                                                                          
0036a2   0e0c     MOVLW     0xc                                                                                             
0036a4   6adb     CLRF      0xdb,0x0                                                                                        
0036a6   0e0d     MOVLW     0xd                                                                                             
0036a8   6adb     CLRF      0xdb,0x0                                                                                        
                                                       _do_integer_conversion:                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* default precision is 1 */                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036aa   0e06     MOVLW     0x6                          if (!have_precision)                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036ac   50db     MOVF      0xdb,0x0,0x0                                                                                    
0036ae   e105     BNZ       0x36ba                                                                                          
0036b0   0e01     MOVLW     0x1                            precision = 1;                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036b2   6ef3     MOVWF     0xf3,0x0                                                                                        
0036b4   0e05     MOVLW     0x5                                                                                             
0036b6   cff3     MOVFF     0xff3,0xfdb                                                                                     
0036b8   ffdb                                                                                                               
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         {                                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036ba   0e15     MOVLW     0x15                           unsigned char digit_cnt = 0;                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036bc   6adb     CLRF      0xdb,0x0                                                                                        
0036be   0e16     MOVLW     0x16                           unsigned char prefix_cnt = 0;                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036c0   6adb     CLRF      0xdb,0x0                                                                                        
                                                           unsigned char sign_char;                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* A 32 bit number will require at most 32 digits in the         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              string representation (binary format). */                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           char buf[33];                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* Start storing digits least-significant first */               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036c2   50d9     MOVF      0xd9,0x0,0x0                   char *q = &buf[31];                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036c4   0f37     ADDLW     0x37                                                                                            
0036c6   6e2a     MOVWF     0x2a,0x0                                                                                        
0036c8   0e00     MOVLW     0x0                                                                                             
0036ca   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0036cc   6e2b     MOVWF     0x2b,0x0                                                                                        
0036ce   0e39     MOVLW     0x39                                                                                            
0036d0   c02a     MOVFF     0x2a,0xfdb                                                                                      
0036d2   ffdb                                                                                                               
0036d4   0e3a     MOVLW     0x3a                                                                                            
0036d6   c02b     MOVFF     0x2b,0xfdb                                                                                      
0036d8   ffdb                                                                                                               
                                                           /* null terminate the string */                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036da   0e38     MOVLW     0x38                           buf[32] = '\0';                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036dc   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036de   0e08     MOVLW     0x8                            space_cnt = 0;                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036e0   6adb     CLRF      0xdb,0x0                                                                                        
0036e2   0e0a     MOVLW     0xa                            size = 10;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036e4   daae     RCALL     0x3c42                                                                                          
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036e6   50df     MOVF      0xdf,0x0,0x0                   switch (c)                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0036e8   0a78     XORLW     0x78                                                                                            
0036ea   e012     BZ        0x3710                                                                                          
0036ec   0a20     XORLW     0x20                                                                                            
0036ee   e010     BZ        0x3710                                                                                          
0036f0   0a28     XORLW     0x28                                                                                            
0036f2   e00c     BZ        0x370c                                                                                          
0036f4   0a20     XORLW     0x20                                                                                            
0036f6   e00a     BZ        0x370c                                                                                          
0036f8   0a3f     XORLW     0x3f                                                                                            
0036fa   e006     BZ        0x3708                                                                                          
0036fc   0a0d     XORLW     0xd                                                                                             
0036fe   e002     BZ        0x3704                                                                                          
003700   0a20     XORLW     0x20                                                                                            
003702   e108     BNZ       0x3714                                                                                          
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'b':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'B':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003704   0e02     MOVLW     0x2                                size = 2;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003706   d005     BRA       0x3712                             break;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'o':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003708   0e08     MOVLW     0x8                                size = 8;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00370a   d003     BRA       0x3712                             break;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'p':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'P':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                               /* from here on out, treat 'p' conversions just              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  like 'x' conversions. */                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00370c   0e08     MOVLW     0x8                                c += 'x' - 'p';                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00370e   26df     ADDWF     0xdf,0x1,0x0                                                                                    
                                                               /* fall through */                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'x':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'X':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003710   0e10     MOVLW     0x10                               size = 16;                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003712   da97     RCALL     0x3c42                                                                                          
003c42   6ef3     MOVWF     0xf3,0x0                                                                                        
003c44   0e07     MOVLW     0x7                                                                                             
003c46   cff3     MOVFF     0xff3,0xfdb                                                                                     
003c48   ffdb                                                                                                               
003c4a   0012     RETURN    0x0                                                                                             
                                                               break;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's an unsigned conversion, we should ignore the          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              ' ' and '+' flags */                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003714   0e03     MOVLW     0x3                            if (!(flags & _FLAG_SIGNED))                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003716   bedb     BTFSC     0xdb,0x7,0x0                                                                                    
003718   d002     BRA       0x371e                                                                                          
00371a   92db     BCF       0xdb,0x1,0x0                     flags &= ~(_FLAG_PLUS | _FLAG_SPACE);                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00371c   94db     BCF       0xdb,0x2,0x0                                                                                    
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's a negative value, we need to negate the               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned version before we convert to text. Using             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned for this allows us to (ab)use the 2's                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              complement system to avoid overflow and be able to            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              adequately handle LONG_MIN.                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              We'll figure out what sign character to print, if             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              any, here as well. */                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00371e   50db     MOVF      0xdb,0x0,0x0                   if (flags & _FLAG_SIGNED && ((long) larg < 0))                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003720   0b80     ANDLW     0x80                                                                                            
003722   e024     BZ        0x376c                                                                                          
003724   da8a     RCALL     0x3c3a                                                                                          
003726   90d8     BCF       0xd8,0x0,0x0                                                                                    
003728   0e03     MOVLW     0x3                                                                                             
00372a   50eb     MOVF      0xeb,0x0,0x0                                                                                    
00372c   0a00     XORLW     0x0                                                                                             
00372e   e608     BN        0x3740                                                                                          
003730   0e00     MOVLW     0x0                                                                                             
003732   5cee     SUBWF     0xee,0x0,0x0                                                                                    
003734   0e00     MOVLW     0x0                                                                                             
003736   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
003738   0e00     MOVLW     0x0                                                                                             
00373a   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
00373c   0e00     MOVLW     0x0                                                                                             
00373e   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
003740   e215     BC        0x376c                                                                                          
003c3a   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003c3c   0f0a     ADDLW     0xa                                                                                             
003c3e   efb1     GOTO      0x3d62                                                                                          
003c40   f01e                                                                                                               
003d62   6ee9     MOVWF     0xe9,0x0                                                                                        
003d64   0e00     MOVLW     0x0                                                                                             
003d66   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003d68   6eea     MOVWF     0xea,0x0                                                                                        
003d6a   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003742   da13     RCALL     0x3b6a                             larg = -(long) larg;                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003744   6821     SETF      0x21,0x0                                                                                        
003746   6822     SETF      0x22,0x0                                                                                        
003748   6823     SETF      0x23,0x0                                                                                        
00374a   6824     SETF      0x24,0x0                                                                                        
00374c   ecee     CALL      0x4ddc,0x0                                                                                      
00374e   f026                                                                                                               
003750   0e0a     MOVLW     0xa                                                                                             
003752   c018     MOVFF     0x18,0xfdb                                                                                      
003754   ffdb                                                                                                               
003756   0e0b     MOVLW     0xb                                                                                             
003758   c019     MOVFF     0x19,0xfdb                                                                                      
00375a   ffdb                                                                                                               
00375c   0e0c     MOVLW     0xc                                                                                             
00375e   c01a     MOVFF     0x1a,0xfdb                                                                                      
003760   ffdb                                                                                                               
003762   0e0d     MOVLW     0xd                                                                                             
003764   c01b     MOVFF     0x1b,0xfdb                                                                                      
003766   ffdb                                                                                                               
003b6a   0e0a     MOVLW     0xa                                                                                             
003b6c   cfdb     MOVFF     0xfdb,0x1c                                                                                      
003b6e   f01c                                                                                                               
003b70   0e0b     MOVLW     0xb                                                                                             
003b72   cfdb     MOVFF     0xfdb,0x1d                                                                                      
003b74   f01d                                                                                                               
003b76   0e0c     MOVLW     0xc                                                                                             
003b78   cfdb     MOVFF     0xfdb,0x1e                                                                                      
003b7a   f01e                                                                                                               
003b7c   0e0d     MOVLW     0xd                                                                                             
003b7e   cfdb     MOVFF     0xfdb,0x1f                                                                                      
003b80   f01f                                                                                                               
003b82   0012     RETURN    0x0                                                                                             
003768   0e2d     MOVLW     0x2d                               sign_char = '-';                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00376a   d008     BRA       0x377c                         else if (flags & _FLAG_PLUS)                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00376c   0e03     MOVLW     0x3                                                                                             
00376e   a2db     BTFSS     0xdb,0x1,0x0                                                                                    
003770   d002     BRA       0x3776                                                                                          
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003772   0e2b     MOVLW     0x2b                               sign_char = '+';                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003774   d003     BRA       0x377c                         else if (flags & _FLAG_SPACE)                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003776   a4db     BTFSS     0xdb,0x2,0x0                                                                                    
003778   d008     BRA       0x378a                                                                                          
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00377a   0e20     MOVLW     0x20                               sign_char = ' ';                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00377c   6ef3     MOVWF     0xf3,0x0                                                                                        
00377e   0e17     MOVLW     0x17                                                                                            
003780   cff3     MOVFF     0xff3,0xfdb                                                                                     
003782   ffdb                                                                                                               
003784   0e15     MOVLW     0x15                               ++digit_cnt;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003786   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003788   d002     BRA       0x378e                         else                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00378a   0e17     MOVLW     0x17                             sign_char = '\0';                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00378c   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* get the digits for the actual number. If the                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision is zero and the value is zero, the result           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is no characters. */                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00378e   0e05     MOVLW     0x5                            if (precision || larg)                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003790   50db     MOVF      0xdb,0x0,0x0                                                                                    
003792   e103     BNZ       0x379a                                                                                          
003794   d9b7     RCALL     0x3b04                                                                                          
003796   e101     BNZ       0x379a                                                                                          
003798   d089     BRA       0x38ac                                                                                          
003b04   0e0a     MOVLW     0xa                                                                                             
003b06   cfdb     MOVFF     0xfdb,0x2a                                                                                      
003b08   f02a                                                                                                               
003b0a   0e0b     MOVLW     0xb                                                                                             
003b0c   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003b0e   f02b                                                                                                               
003b10   0e0c     MOVLW     0xc                                                                                             
003b12   cfdb     MOVFF     0xfdb,0x2c                                                                                      
003b14   f02c                                                                                                               
003b16   0e0d     MOVLW     0xd                                                                                             
003b18   cfdb     MOVFF     0xfdb,0x2d                                                                                      
003b1a   f02d                                                                                                               
003b1c   502a     MOVF      0x2a,0x0,0x0                                                                                    
003b1e   102b     IORWF     0x2b,0x0,0x0                                                                                    
003b20   102c     IORWF     0x2c,0x0,0x0                                                                                    
003b22   102d     IORWF     0x2d,0x0,0x0                                                                                    
003b24   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                               do                                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                 {                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00379a   0e24     MOVLW     0x24                                   cval = s_digits[larg % size];                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00379c   6e2a     MOVWF     0x2a,0x0                                                                                        
00379e   0e50     MOVLW     0x50                                                                                            
0037a0   6e2b     MOVWF     0x2b,0x0                                                                                        
0037a2   0e00     MOVLW     0x0                                                                                             
0037a4   6e2c     MOVWF     0x2c,0x0                                                                                        
0037a6   0e07     MOVLW     0x7                                                                                             
0037a8   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0037aa   f02d                                                                                                               
0037ac   6a2e     CLRF      0x2e,0x0                                                                                        
0037ae   6a2f     CLRF      0x2f,0x0                                                                                        
0037b0   6a30     CLRF      0x30,0x0                                                                                        
0037b2   c02d     MOVFF     0x2d,0x21                                                                                       
0037b4   f021                                                                                                               
0037b6   c02e     MOVFF     0x2e,0x22                                                                                       
0037b8   f022                                                                                                               
0037ba   c02f     MOVFF     0x2f,0x23                                                                                       
0037bc   f023                                                                                                               
0037be   c030     MOVFF     0x30,0x24                                                                                       
0037c0   f024                                                                                                               
0037c2   d9d3     RCALL     0x3b6a                                                                                          
0037c4   ec7f     CALL      0x4efe,0x0                                                                                      
0037c6   f027                                                                                                               
0037c8   502a     MOVF      0x2a,0x0,0x0                                                                                    
0037ca   2418     ADDWF     0x18,0x0,0x0                                                                                    
0037cc   6ef3     MOVWF     0xf3,0x0                                                                                        
0037ce   502b     MOVF      0x2b,0x0,0x0                                                                                    
0037d0   2019     ADDWFC    0x19,0x0,0x0                                                                                    
0037d2   6ef4     MOVWF     0xf4,0x0                                                                                        
0037d4   502c     MOVF      0x2c,0x0,0x0                                                                                    
0037d6   201a     ADDWFC    0x1a,0x0,0x0                                                                                    
0037d8   6ef8     MOVWF     0xf8,0x0                                                                                        
0037da   cff4     MOVFF     0xff4,0xff7                                                                                     
0037dc   fff7                                                                                                               
0037de   cff3     MOVFF     0xff3,0xff6                                                                                     
0037e0   fff6                                                                                                               
0037e2   0008     TBLRD                                                                                                     
0037e4   0e09     MOVLW     0x9                                                                                             
0037e6   cff5     MOVFF     0xff5,0xfdb                                                                                     
0037e8   ffdb                                                                                                               
0037ea   0e58     MOVLW     0x58                                   if (c == 'X' && cval >= 'a')                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0037ec   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0037ee   e10f     BNZ       0x380e                                                                                          
0037f0   0e61     MOVLW     0x61                                                                                            
0037f2   6ef3     MOVWF     0xf3,0x0                                                                                        
0037f4   0e09     MOVLW     0x9                                                                                             
0037f6   d97b     RCALL     0x3aee                                                                                          
0037f8   e30a     BNC       0x380e                                                                                          
003aee   cfdb     MOVFF     0xfdb,0xff4                                                                                     
003af0   fff4                                                                                                               
003af2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003af4   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
003af6   0012     RETURN    0x0                                                                                             
0037fa   0e20     MOVLW     0x20                                     cval -= 'a' - 'A';                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0037fc   6e2a     MOVWF     0x2a,0x0                                                                                        
0037fe   0e09     MOVLW     0x9                                                                                             
003800   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
003802   ffe7                                                                                                               
003804   502a     MOVF      0x2a,0x0,0x0                                                                                    
003806   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
003808   0e09     MOVLW     0x9                                                                                             
00380a   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00380c   ffdb                                                                                                               
00380e   0e07     MOVLW     0x7                                    larg /= size;                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003810   cfdb     MOVFF     0xfdb,0x2a                                                                                      
003812   f02a                                                                                                               
003814   6a2b     CLRF      0x2b,0x0                                                                                        
003816   6a2c     CLRF      0x2c,0x0                                                                                        
003818   6a2d     CLRF      0x2d,0x0                                                                                        
00381a   da0f     RCALL     0x3c3a                                                                                          
00381c   c02a     MOVFF     0x2a,0x21                                                                                       
00381e   f021                                                                                                               
003820   c02b     MOVFF     0x2b,0x22                                                                                       
003822   f022                                                                                                               
003824   c02c     MOVFF     0x2c,0x23                                                                                       
003826   f023                                                                                                               
003828   c02d     MOVFF     0x2d,0x24                                                                                       
00382a   f024                                                                                                               
00382c   cfee     MOVFF     0xfee,0x1c                                                                                      
00382e   f01c                                                                                                               
003830   cfee     MOVFF     0xfee,0x1d                                                                                      
003832   f01d                                                                                                               
003834   cfee     MOVFF     0xfee,0x1e                                                                                      
003836   f01e                                                                                                               
003838   cfef     MOVFF     0xfef,0x1f                                                                                      
00383a   f01f                                                                                                               
00383c   ec7f     CALL      0x4efe,0x0                                                                                      
00383e   f027                                                                                                               
003840   c01f     MOVFF     0x1f,0xfed                                                                                      
003842   ffed                                                                                                               
003844   c01e     MOVFF     0x1e,0xfed                                                                                      
003846   ffed                                                                                                               
003848   c01d     MOVFF     0x1d,0xfed                                                                                      
00384a   ffed                                                                                                               
00384c   c01c     MOVFF     0x1c,0xfef                                                                                      
00384e   ffef                                                                                                               
003850   0e39     MOVLW     0x39                                   *q-- = cval;                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003852   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
003854   ffe9                                                                                                               
003856   06db     DECF      0xdb,0x1,0x0                                                                                    
003858   0e3a     MOVLW     0x3a                                                                                            
00385a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00385c   ffea                                                                                                               
00385e   e201     BC        0x3862                                                                                          
003860   06db     DECF      0xdb,0x1,0x0                                                                                    
003862   0e09     MOVLW     0x9                                                                                             
003864   cfdb     MOVFF     0xfdb,0xfef                                                                                     
003866   ffef                                                                                                               
003868   0e15     MOVLW     0x15                                   ++digit_cnt;                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00386a   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                                 }                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00386c   d94b     RCALL     0x3b04                             while (larg);                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00386e   e195     BNZ       0x379a                                                                                          
                                                               /* if the '#' flag was specified and we're dealing           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  with an 'o', 'b', 'B', 'x', or 'X' conversion,            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  we need a bit more. */                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003870   0e03     MOVLW     0x3                                if (flags & _FLAG_OCTO)                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003872   a6db     BTFSS     0xdb,0x3,0x0                                                                                    
003874   d01d     BRA       0x38b0                                                                                          
                                                                 {                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003876   0e6f     MOVLW     0x6f                                   if (c == 'o')                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003878   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00387a   e106     BNZ       0x3888                                                                                          
                                                                     {                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                       /* per the standard, for octal, the '#' flag         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          makes the precision be at least one more          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          than the number of digits in the number */        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00387c   d9c1     RCALL     0x3c00                                     if (precision <= digit_cnt)                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00387e   e318     BNC       0x38b0                                                                                          
003c00   0e05     MOVLW     0x5                                                                                             
003c02   cfdb     MOVFF     0xfdb,0x2a                                                                                      
003c04   f02a                                                                                                               
003c06   0e15     MOVLW     0x15                                                                                            
003c08   50db     MOVF      0xdb,0x0,0x0                                                                                    
003c0a   80d8     BSF       0xd8,0x0,0x0                                                                                    
003c0c   542a     SUBFWB    0x2a,0x0,0x0                                                                                    
003c0e   0012     RETURN    0x0                                                                                             
003880   0e15     MOVLW     0x15                                         precision = digit_cnt + 1;                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003882   28db     INCF      0xdb,0x0,0x0                                                                                    
003884   da5b     RCALL     0x3d3c                                                                                          
                                                                     }                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003886   d014     BRA       0x38b0                                 else if (c == 'x'                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003888   0e78     MOVLW     0x78                                                                                            
00388a   5cdf     SUBWF     0xdf,0x0,0x0                                    || c == 'X' || c == 'b' || c == 'B')            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00388c   e009     BZ        0x38a0                                                                                          
00388e   0e58     MOVLW     0x58                                                                                            
003890   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
003892   e006     BZ        0x38a0                                                                                          
003894   0e62     MOVLW     0x62                                                                                            
003896   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
003898   e003     BZ        0x38a0                                                                                          
00389a   0e42     MOVLW     0x42                                                                                            
00389c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00389e   e108     BNZ       0x38b0                                                                                          
0038a0   0e02     MOVLW     0x2                                      prefix_cnt = 2;                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038a2   6ef3     MOVWF     0xf3,0x0                                                                                        
0038a4   0e16     MOVLW     0x16                                                                                            
0038a6   cff3     MOVFF     0xff3,0xfdb                                                                                     
0038a8   ffdb                                                                                                               
                                                                 }                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038aa   d002     BRA       0x38b0                         else                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038ac   0e15     MOVLW     0x15                             digit_cnt = 0;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038ae   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* The leading zero count depends on whether the '0'             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              flag was specified or not. If it was not, then the            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count is the difference between the specified                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision and the number of digits (including the             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              sign character, if any) to be printed; otherwise,             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              it's as if the precision were equal to the max of             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the specified precision and the field width. If a             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision was specified, the '0' flag is ignored,             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              however. */                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038b0   0e03     MOVLW     0x3                            if ((flags & _FLAG_ZERO) && (width > precision)                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038b2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0038b4   0b10     ANDLW     0x10                                                                                            
0038b8   0e04     MOVLW     0x4                                                                                             
0038ba   cfdb     MOVFF     0xfdb,0x2a                                                                                      
0038bc   f02a                                                                                                               
0038be   0e05     MOVLW     0x5                                                                                             
0038c0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0038c2   80d8     BSF       0xd8,0x0,0x0                                                                                    
0038c4   542a     SUBFWB    0x2a,0x0,0x0                                                                                    
0038b6   e00e     BZ        0x38d4                             && !have_precision)                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038c6   e206     BC        0x38d4                                                                                          
0038c8   0e06     MOVLW     0x6                                                                                             
0038ca   50db     MOVF      0xdb,0x0,0x0                                                                                    
0038cc   e103     BNZ       0x38d4                                                                                          
0038ce   0e04     MOVLW     0x4                              precision = width;                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038d0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0038d2   da34     RCALL     0x3d3c                                                                                          
                                                           /* for the rest of the processing, precision contains            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the leading zero count for the conversion. */                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038d4   d995     RCALL     0x3c00                         if (precision > digit_cnt)                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038d6   e20a     BC        0x38ec                                                                                          
0038d8   0e05     MOVLW     0x5                              precision -= digit_cnt;                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038da   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
0038dc   ffe7                                                                                                               
0038de   0e15     MOVLW     0x15                                                                                            
0038e0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0038e2   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
0038e4   0e05     MOVLW     0x5                                                                                             
0038e6   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0038e8   ffdb                                                                                                               
0038ea   d002     BRA       0x38f0                         else                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038ec   0e05     MOVLW     0x5                              precision = 0;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038ee   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* the space count is the difference between the field           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              width and the digit count plus the leading zero               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count. If the width is less than the digit count              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              plus the leading zero count, the space count is               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              zero. */                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038f0   0e04     MOVLW     0x4                            if (width > precision + digit_cnt + prefix_cnt)                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0038f2   cfdb     MOVFF     0xfdb,0x2a                                                                                      
0038f4   f02a                                                                                                               
0038f6   0e16     MOVLW     0x16                                                                                            
0038f8   d945     RCALL     0x3b84                                                                                          
0038fa   80d8     BSF       0xd8,0x0,0x0                                                                                    
0038fc   542a     SUBFWB    0x2a,0x0,0x0                                                                                    
0038fe   e214     BC        0x3928                                                                                          
003b84   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003b86   ffe6                                                                                                               
003b88   0e15     MOVLW     0x15                                                                                            
003b8a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003b8c   ffe6                                                                                                               
003b8e   0e05     MOVLW     0x5                                                                                             
003b90   50db     MOVF      0xdb,0x0,0x0                                                                                    
003b92   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b94   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
003b96   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b98   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
003b9a   0012     RETURN    0x0                                                                                             
                                                             space_cnt =                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003900   0e16     MOVLW     0x16                               width - precision - digit_cnt - prefix_cnt;                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003902   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003904   ffe6                                                                                                               
003906   0e15     MOVLW     0x15                                                                                            
003908   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00390a   ffe6                                                                                                               
00390c   0e04     MOVLW     0x4                                                                                             
00390e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003910   ffe6                                                                                                               
003912   0e05     MOVLW     0x5                                                                                             
003914   50db     MOVF      0xdb,0x0,0x0                                                                                    
003916   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003918   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
00391a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00391c   80d8     BSF       0xd8,0x0,0x0                                                                                    
00391e   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
003920   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003922   80d8     BSF       0xd8,0x0,0x0                                                                                    
003924   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
003926   d95f     RCALL     0x3be6                                                                                          
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* for output, we check the justification, if it's               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              right justified and the space count is positive, we           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              emit the space characters first. */                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003928   0e03     MOVLW     0x3                            if (!(flags & _FLAG_MINUS) && space_cnt)                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00392a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00392c   0b01     ANDLW     0x1                                                                                             
00392e   e10b     BNZ       0x3946                                                                                          
003930   0e08     MOVLW     0x8                                                                                             
003932   50db     MOVF      0xdb,0x0,0x0                                                                                    
003934   e008     BZ        0x3946                                                                                          
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003936   d8b2     RCALL     0x3a9c                             if (s_put_n_chars (handle, space_cnt, ' '))                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003938   e001     BZ        0x393c                                                                                          
00393a   d08d     BRA       0x3a56                                                                                          
                                                                 return EOF;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00393c   0e08     MOVLW     0x8                                count += space_cnt;                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00393e   50db     MOVF      0xdb,0x0,0x0                                                                                    
003940   d8be     RCALL     0x3abe                                                                                          
003942   0e08     MOVLW     0x8                                space_cnt = 0;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003944   6adb     CLRF      0xdb,0x0                                                                                        
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a sign character to print, that comes              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              next */                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003946   0e17     MOVLW     0x17                           if (sign_char)                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003948   50db     MOVF      0xdb,0x0,0x0                                                                                    
00394a   e007     BZ        0x395a                                                                                          
00394c   d988     RCALL     0x3c5e                           if (putc (sign_char, handle) == EOF)                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00394e   0e17     MOVLW     0x17                                                                                            
003950   d9f1     RCALL     0x3d34                                                                                          
003952   e103     BNZ       0x395a                                                                                          
003954   1c2b     COMF      0x2b,0x0,0x0                                                                                    
003956   e101     BNZ       0x395a                                                                                          
003958   d07e     BRA       0x3a56                                                                                          
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a prefix (0b, 0B, 0x or 0X), that's next */        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00395a   0e16     MOVLW     0x16                           if (prefix_cnt)                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00395c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00395e   e016     BZ        0x398c                                                                                          
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003960   d97e     RCALL     0x3c5e                             if (putc ('0', handle) == EOF)                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003962   0e30     MOVLW     0x30                                                                                            
003964   6ee6     MOVWF     0xe6,0x0                                                                                        
003966   d89f     RCALL     0x3aa6                                                                                          
003968   e102     BNZ       0x396e                                                                                          
00396a   1c2b     COMF      0x2b,0x0,0x0                                                                                    
00396c   e074     BZ        0x3a56                                                                                          
                                                                 return EOF;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00396e   d977     RCALL     0x3c5e                             if (putc (c, handle) == EOF)                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003970   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
003972   ffe6                                                                                                               
003974   ecac     CALL      0x4d58,0x0                                                                                      
003976   f026                                                                                                               
003978   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00397a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00397c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00397e   cff4     MOVFF     0xff4,0x2b                                                                                      
003980   f02b                                                                                                               
003982   0100     MOVLB     0x0                                                                                             
003984   1cf3     COMF      0xf3,0x0,0x0                                                                                    
003986   e102     BNZ       0x398c                                                                                          
003988   1c2b     COMF      0x2b,0x0,0x0                                                                                    
00398a   e065     BZ        0x3a56                                                                                          
                                                                 return EOF;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have leading zeros, they follow. the prefix, if any     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is included in the number of digits when determining how      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              many leading zeroes are needed. */                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00398c   0e05     MOVLW     0x5                            if (precision > prefix_cnt)                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00398e   cfdb     MOVFF     0xfdb,0x2a                                                                                      
003990   f02a                                                                                                               
003992   0e16     MOVLW     0x16                                                                                            
003994   50db     MOVF      0xdb,0x0,0x0                                                                                    
003996   80d8     BSF       0xd8,0x0,0x0                                                                                    
003998   542a     SUBFWB    0x2a,0x0,0x0                                                                                    
00399a   e209     BC        0x39ae                                                                                          
00399c   0e05     MOVLW     0x5                              precision -= prefix_cnt;                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00399e   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
0039a0   ffe7                                                                                                               
0039a2   0e16     MOVLW     0x16                                                                                            
0039a4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0039a6   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
0039a8   0e05     MOVLW     0x5                                                                                             
0039aa   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0039ac   ffdb                                                                                                               
0039ae   0e30     MOVLW     0x30                           if (s_put_n_chars (handle, precision, '0'))                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0039b0   6ee6     MOVWF     0xe6,0x0                                                                                        
0039b2   0e05     MOVLW     0x5                                                                                             
0039b4   d9cb     RCALL     0x3d4c                                                                                          
0039b6   e14f     BNZ       0x3a56                                                                                          
003cfe   eca5     CALL      0x314a,0x0                                                                                      
003d00   f018                                                                                                               
003d02   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003d04   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003d06   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003d08   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003d0a   0900     IORLW     0x0                                                                                             
003d0c   0012     RETURN    0x0                                                                                             
003d4c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003d4e   ffe6                                                                                                               
003d50   df86     RCALL     0x3c5e                                                                                          
003d52   ef7f     GOTO      0x3cfe                                                                                          
003d54   f01e                                                                                                               
                                                             return EOF;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* print the actual number */                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0039b8   0e39     MOVLW     0x39                           for (cval = *++q; cval; cval = *++q)                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0039ba   2adb     INCF      0xdb,0x1,0x0                                                                                    
0039bc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0039be   ffe9                                                                                                               
0039c0   0e3a     MOVLW     0x3a                                                                                            
0039c2   e301     BNC       0x39c6                                                                                          
0039c4   2adb     INCF      0xdb,0x1,0x0                                                                                    
0039c6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0039c8   ffea                                                                                                               
0039ca   0e09     MOVLW     0x9                                                                                             
0039cc   cfef     MOVFF     0xfef,0xfdb                                                                                     
0039ce   ffdb                                                                                                               
0039d0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0039d2   e00e     BZ        0x39f0                                                                                          
0039e0   0e39     MOVLW     0x39                                                                                            
0039e2   2adb     INCF      0xdb,0x1,0x0                                                                                    
0039e4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0039e6   ffe9                                                                                                               
0039e8   0e3a     MOVLW     0x3a                                                                                            
0039ea   e3ed     BNC       0x39c6                                                                                          
0039ec   2adb     INCF      0xdb,0x1,0x0                                                                                    
0039ee   d7eb     BRA       0x39c6                                                                                          
0039d4   d944     RCALL     0x3c5e                           if (putc (cval, handle) == EOF)                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0039d6   0e09     MOVLW     0x9                                                                                             
0039d8   d9ad     RCALL     0x3d34                                                                                          
0039da   e102     BNZ       0x39e0                                                                                          
0039dc   1c2b     COMF      0x2b,0x0,0x0                                                                                    
0039de   e03b     BZ        0x3a56                                                                                          
003d34   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003d36   ffe6                                                                                                               
003d38   ef53     GOTO      0x3aa6                                                                                          
003d3a   f01d                                                                                                               
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if there are any spaces left, they go to right-pad            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the field */                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0039f0   d855     RCALL     0x3a9c                         if (s_put_n_chars (handle, space_cnt, ' '))                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0039f2   e131     BNZ       0x3a56                                                                                          
003a9c   0e20     MOVLW     0x20                                                                                            
003a9e   6ee6     MOVWF     0xe6,0x0                                                                                        
003aa0   0e08     MOVLW     0x8                                                                                             
003aa2   efa6     GOTO      0x3d4c                                                                                          
003aa4   f01e                                                                                                               
003c5e   0efc     MOVLW     0xfc                                                                                            
003c60   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003c62   ffe6                                                                                                               
003c64   0efd     MOVLW     0xfd                                                                                            
003c66   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003c68   ffe6                                                                                                               
003c6a   0012     RETURN    0x0                                                                                             
                                                             return EOF;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0039f4   0e16     MOVLW     0x16                           count += precision + digit_cnt + space_cnt + prefix_cnt;         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0039f6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0039f8   ffe6                                                                                                               
0039fa   0e08     MOVLW     0x8                                                                                             
0039fc   d8c3     RCALL     0x3b84                                                                                          
0039fe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003a00   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
003a02   d85d     RCALL     0x3abe                                                                                          
003abe   6e2a     MOVWF     0x2a,0x0                                                                                        
003ac0   6a2b     CLRF      0x2b,0x0                                                                                        
003ac2   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003ac4   0f01     ADDLW     0x1                                                                                             
003ac6   d94d     RCALL     0x3d62                                                                                          
003ac8   502a     MOVF      0x2a,0x0,0x0                                                                                    
003aca   26ee     ADDWF     0xee,0x1,0x0                                                                                    
003acc   502b     MOVF      0x2b,0x0,0x0                                                                                    
003ace   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
003ad0   0012     RETURN    0x0                                                                                             
                                                         }                                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a04   d02e     BRA       0x3a62                       break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'n':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a06   0e07     MOVLW     0x7                          switch (size)                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a08   50db     MOVF      0xdb,0x0,0x0                                                                                    
003a0a   0a03     XORLW     0x3                                                                                             
003a0c   e01c     BZ        0x3a46                                                                                          
003a0e   0a01     XORLW     0x1                                                                                             
003a10   e014     BZ        0x3a3a                                                                                          
003a12   0a03     XORLW     0x3                                                                                             
003a14   e007     BZ        0x3a24                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_LONG:                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a24   d8f5     RCALL     0x3c10                           *(long *) va_arg (ap, long *) = count;                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a26   6a2f     CLRF      0x2f,0x0                                                                                        
003a28   ae2d     BTFSS     0x2d,0x7,0x0                                                                                    
003a2a   d002     BRA       0x3a30                                                                                          
003a2c   682e     SETF      0x2e,0x0                                                                                        
003a2e   682f     SETF      0x2f,0x0                                                                                        
003a30   d82c     RCALL     0x3a8a                                                                                          
003a32   d8bc     RCALL     0x3bac                                                                                          
003a34   c02f     MOVFF     0x2f,0xfee                                                                                      
003a36   ffee                                                                                                               
003bac   50ee     MOVF      0xee,0x0,0x0                                                                                    
003bae   cfef     MOVFF     0xfef,0xfea                                                                                     
003bb0   ffea                                                                                                               
003bb2   6ee9     MOVWF     0xe9,0x0                                                                                        
003bb4   c02c     MOVFF     0x2c,0xfee                                                                                      
003bb6   ffee                                                                                                               
003bb8   c02d     MOVFF     0x2d,0xfee                                                                                      
003bba   ffee                                                                                                               
003bbc   c02e     MOVFF     0x2e,0xfee                                                                                      
003bbe   ffee                                                                                                               
003bc0   0012     RETURN    0x0                                                                                             
003c10   0e01     MOVLW     0x1                                                                                             
003c12   cfdb     MOVFF     0xfdb,0x2c                                                                                      
003c14   f02c                                                                                                               
003c16   0e02     MOVLW     0x2                                                                                             
003c18   cfdb     MOVFF     0xfdb,0x2d                                                                                      
003c1a   f02d                                                                                                               
003c1c   6a2e     CLRF      0x2e,0x0                                                                                        
003c1e   0012     RETURN    0x0                                                                                             
003a38   d014     BRA       0x3a62                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_SHLONG:                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a3a   d8ea     RCALL     0x3c10                           *(short long *) va_arg (ap, short long *) = count;             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a3c   be2d     BTFSC     0x2d,0x7,0x0                                                                                    
003a3e   682e     SETF      0x2e,0x0                                                                                        
003a40   d824     RCALL     0x3a8a                                                                                          
003a42   d8b4     RCALL     0x3bac                                                                                          
003a44   d00e     BRA       0x3a62                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_BYTE:                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a46   d963     RCALL     0x3d0e                           *(signed char *) va_arg (ap, signed char *) = count;           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a48   cfdb     MOVFF     0xfdb,0xfef                                                                                     
003a4a   ffef                                                                                                               
003a4c   d00a     BRA       0x3a62                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           default:                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a16   d97b     RCALL     0x3d0e                           *(int *) va_arg (ap, int *) = count;                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a18   cfdb     MOVFF     0xfdb,0xfee                                                                                     
003a1a   ffee                                                                                                               
003a1c   0e02     MOVLW     0x2                                                                                             
003a1e   cfdb     MOVFF     0xfdb,0xfed                                                                                     
003a20   ffed                                                                                                               
003d0e   debd     RCALL     0x3a8a                                                                                          
003d10   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d12   cfef     MOVFF     0xfef,0xfea                                                                                     
003d14   ffea                                                                                                               
003d16   6ee9     MOVWF     0xe9,0x0                                                                                        
003d18   0e01     MOVLW     0x1                                                                                             
003d1a   0012     RETURN    0x0                                                                                             
                                                             break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a22   d01f     BRA       0x3a62                       break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       default:                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* undefined behaviour. we do nothing */                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                   }                                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                 else                                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                   {                                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a4e   d97b     RCALL     0x3d46                   if (putc (c, handle) == EOF)                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a50   e105     BNZ       0x3a5c                                                                                          
003a52   1c2b     COMF      0x2b,0x0,0x0                                                                                    
003a54   e103     BNZ       0x3a5c                                                                                          
003aa6   ecac     CALL      0x4d58,0x0                                                                                      
003aa8   f026                                                                                                               
003aaa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003aac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003aae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003ab0   cff3     MOVFF     0xff3,0x2a                                                                                      
003ab2   f02a                                                                                                               
003ab4   cff4     MOVFF     0xff4,0x2b                                                                                      
003ab6   f02b                                                                                                               
003ab8   0100     MOVLB     0x0                                                                                             
003aba   1cf3     COMF      0xf3,0x0,0x0                                                                                    
003abc   0012     RETURN    0x0                                                                                             
003cec   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
003cee   ffe6                                                                                                               
003cf0   ef53     GOTO      0x3aa6                                                                                          
003cf2   f01d                                                                                                               
003d46   df8b     RCALL     0x3c5e                                                                                          
003d48   ef76     GOTO      0x3cec                                                                                          
003d4a   f01e                                                                                                               
003a56   68f3     SETF      0xf3,0x0                   return EOF;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a58   68f4     SETF      0xf4,0x0                                                                                        
003a5a   d010     BRA       0x3a7c                                                                                          
003a5c   d8fc     RCALL     0x3c56                   ++count;                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a5e   e301     BNC       0x3a62                                                                                          
003a60   2adb     INCF      0xdb,0x1,0x0                                                                                    
003c56   0e01     MOVLW     0x1                                                                                             
003c58   2adb     INCF      0xdb,0x1,0x0                                                                                    
003c5a   0e02     MOVLW     0x2                                                                                             
003c5c   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                               }                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a68   0e01     MOVLW     0x1              return count;                                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a6a   cfdb     MOVFF     0xfdb,0x2a                                                                                      
003a6c   f02a                                                                                                               
003a6e   0e02     MOVLW     0x2                                                                                             
003a70   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003a72   f02b                                                                                                               
003a74   c02a     MOVFF     0x2a,0xff3                                                                                      
003a76   fff3                                                                                                               
003a78   c02b     MOVFF     0x2b,0xff4                                                                                      
003a7a   fff4                                                                                                               
003a7c   0e3b     MOVLW     0x3b           }                                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003a7e   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
003a80   e202     BC        0x3a86                                                                                          
003a82   6ae1     CLRF      0xe1,0x0                                                                                        
003a84   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003a86   6ee1     MOVWF     0xe1,0x0                                                                                        
003a88   d0cb     BRA       0x3c20                                                                                          
                                           /*** Unsigned Integer Division: 32-bit by 32-bit                                 C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                            ***                                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                            ***       for: Saved (for the worst case) at least 8*32 = 256 instruction cycles C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                            ***/                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           void  FXD3232U(void/* ulong aarg, ulong barg */)                                 C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           {                                                                                C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                             // use INDF1 for the counter...                                                C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                               _asm                                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                               // REM = 0                                                                   C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004efe   6a1b     CLRF      0x1b,0x0           clrf __REMB0, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f00   6a1a     CLRF      0x1a,0x0           clrf __REMB1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f02   6a19     CLRF      0x19,0x0           clrf __REMB2, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f04   6a18     CLRF      0x18,0x0           clrf __REMB3, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                               // INDF1 = 32                                                                C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f06   0e20     MOVLW     0x20               movlw 32                                                                     C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f08   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                               // Clear the carry                                                           C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f0a   90d8     BCF       0xd8,0x0,0x0       bcf STATUS, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           loop:                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           	//AARG32 <<= 1; The carry is always clear at the top of the loop.               C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f0c   361c     RLCF      0x1c,0x1,0x0   	rlcf __AARGB3, 1, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f0e   361d     RLCF      0x1d,0x1,0x0   	rlcf __AARGB2, 1, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f10   361e     RLCF      0x1e,0x1,0x0   	rlcf __AARGB1, 1, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f12   361f     RLCF      0x1f,0x1,0x0   	rlcf __AARGB0, 1, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           	//REM32 = (REM32 << 1) | (AARG32 >> 32)                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f14   3618     RLCF      0x18,0x1,0x0   	rlcf __REMB3, 1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f16   3619     RLCF      0x19,0x1,0x0   	rlcf __REMB2, 1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f18   361a     RLCF      0x1a,0x1,0x0   	rlcf __REMB1, 1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f1a   361b     RLCF      0x1b,0x1,0x0   	rlcf __REMB0, 1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           	                                                                                C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           	//if (PROD >= BARG32)                                                           C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f1c   5021     MOVF      0x21,0x0,0x0   	movf __BARGB3, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f1e   5c18     SUBWF     0x18,0x0,0x0   	subwf __REMB3, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f20   5022     MOVF      0x22,0x0,0x0   	movf __BARGB2, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f22   5819     SUBWFB    0x19,0x0,0x0   	subwfb __REMB2, 0, 0                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f24   5023     MOVF      0x23,0x0,0x0   	movf __BARGB1, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f26   581a     SUBWFB    0x1a,0x0,0x0   	subwfb __REMB1, 0, 0                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f28   5024     MOVF      0x24,0x0,0x0   	movf __BARGB0, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f2a   581b     SUBWFB    0x1b,0x0,0x0   	subwfb __REMB0, 0, 0                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f2c   e309     BNC       0x4f40         	bnc _false                                                                      C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                               //{                                                                          C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           	    //REM32-= BARG32;                                                           C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f2e   5021     MOVF      0x21,0x0,0x0   	    movf __BARGB3, 0, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f30   5e18     SUBWF     0x18,0x1,0x0   	    subwf __REMB3, 1, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f32   5022     MOVF      0x22,0x0,0x0   	    movf __BARGB2, 0, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f34   5a19     SUBWFB    0x19,0x1,0x0   	    subwfb __REMB2, 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f36   5023     MOVF      0x23,0x0,0x0   	    movf __BARGB1, 0, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f38   5a1a     SUBWFB    0x1a,0x1,0x0   	    subwfb __REMB1, 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f3a   5024     MOVF      0x24,0x0,0x0   	    movf __BARGB0, 0, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f3c   5a1b     SUBWFB    0x1b,0x1,0x0   	    subwfb __REMB0, 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           	    //++AARG32; Since AARG32 was shift to the left above, we only need to set   C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                   //          the lowest bit. Use incf so that the carry flag will also be cleared. C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                   //          Thus, the carry will always be clear at the top of the loop. C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f3e   2a1c     INCF      0x1c,0x1,0x0   	    incf __AARGB3, 1, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                               //}                                                                          C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           _false:                                                                          C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f40   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f42   d7e4     BRA       0x4f0c             bra loop                                                                     C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                             /* result in AARG already... */                                                C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                             _endasm                                                                        C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004f44   0012     RETURN    0x0            }                                                                                C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           ;	RCS Header $Id: fxm1616s.asm,v 1.3 2006/01/12 23:16:38 rhinec Exp $            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	$Revision: 1.3 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Microchip Technology, Inc.                  C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F26K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F26K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F46K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F46K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.3 2006/01/12 23:16:38 rhinec Exp $             C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.3 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.3 2006/01/12 23:16:38 rhinec Exp $                C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	__AARGB0, __AARGB1, __AARGB2, __AARGB3                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  __AARGB4, __AARGB5, __AARGB6, __AARGB7                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  __AEXP                                                                  C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  __REMB3, __REMB2, __REMB1, __REMB0                                      C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.3 2006/01/12 23:16:38 rhinec Exp $                C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  __BARGB3, __BARGB2, __BARGB1, __BARGB0                           C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  __BEXP                                                           C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.3 2006/01/12 23:16:38 rhinec Exp $             C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  __TEMPB3, __TEMPB2, __TEMPB1, __TEMPB0, __TEMP                   C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       16x16 Bit Signed Fixed Point Multiply 16 x 16 -> 32                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Input:  16 bit signed fixed point multiplicand in AARGB0, AARGB1         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               16 bit signed fixed point multiplier in BARGB0, BARGB1           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Use:    CALL    FXM1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Output: 32 bit signed fixed point product in AARGB0, AARGB1,             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               AARGB2, AARGB3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Max Timing:     39 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Min Timing:     31 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       PM: 38              DM: 8                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           FXM1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		GLOBAL	FXM1616S                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004afa   c01f     MOVFF     0x1f,0x29      		MOVFF	__AARGB0,__TEMPB0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004afc   f029                                                                                                               
004afe   c01e     MOVFF     0x1e,0x28      		MOVFF	__AARGB1,__TEMPB1	                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b00   f028                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b02   501e     MOVF      0x1e,0x0,0x0   		MOVF	__AARGB1,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b04   0223     MULWF     0x23,0x0       		MULWF	__BARGB1                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b06   cff4     MOVFF     0xff4,0x1d     		MOVFF	PRODH,__AARGB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b08   f01d                                                                                                               
004b0a   cff3     MOVFF     0xff3,0x1c     		MOVFF	PRODL,__AARGB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b0c   f01c                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b0e   501f     MOVF      0x1f,0x0,0x0   		MOVF	__AARGB0,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b10   0224     MULWF     0x24,0x0       		MULWF	__BARGB0                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b12   cff4     MOVFF     0xff4,0x1f     		MOVFF	PRODH,__AARGB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b14   f01f                                                                                                               
004b16   cff3     MOVFF     0xff3,0x1e     		MOVFF	PRODL,__AARGB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b18   f01e                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b1a   0223     MULWF     0x23,0x0       		MULWF	__BARGB1                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b1c   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b1e   261d     ADDWF     0x1d,0x1,0x0   		ADDWF	__AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b20   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b22   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	__AARGB1,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b24   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b26   221f     ADDWFC    0x1f,0x1,0x0   		ADDWFC	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b28   5028     MOVF      0x28,0x0,0x0   		MOVF	__TEMPB1,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b2a   0224     MULWF     0x24,0x0       		MULWF	__BARGB0                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b2c   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b2e   261d     ADDWF     0x1d,0x1,0x0   		ADDWF	__AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b30   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b32   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	__AARGB1,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b34   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b36   221f     ADDWFC    0x1f,0x1,0x0   		ADDWFC	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b38   ae24     BTFSS     0x24,0x7,0x0   		BTFSS	__BARGB0,MSB                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b3a   efa3     GOTO      0x4b46         		GOTO	TSIGN1616A                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b3c   f025                                                                                                               
004b3e   5028     MOVF      0x28,0x0,0x0   		MOVF	__TEMPB1,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b40   5e1e     SUBWF     0x1e,0x1,0x0   		SUBWF	__AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b42   5029     MOVF      0x29,0x0,0x0   		MOVF	__TEMPB0,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b44   5a1f     SUBWFB    0x1f,0x1,0x0   		SUBWFB	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           TSIGN1616A                                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b46   ae29     BTFSS     0x29,0x7,0x0   		BTFSS	__TEMPB0,MSB                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b48   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b4a   5023     MOVF      0x23,0x0,0x0   		MOVF	__BARGB1,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b4c   5e1e     SUBWF     0x1e,0x1,0x0   		SUBWF	__AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b4e   5024     MOVF      0x24,0x0,0x0   		MOVF	__BARGB0,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b50   5a1f     SUBWFB    0x1f,0x1,0x0   		SUBWFB	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004b52   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           /* a signed multiply is only different from an unsigned multiply                 C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                            * if the upper bytes of the result matter, which for us they                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                            * don't.                                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                            */                                                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                           #define PRODH	(PRODL + 1)                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char __AARGB3, __BARGB3;                                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char __AARGB7;                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                           void FXM3232 (void)                                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                           {                                                                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                             _asm                                                                           C:\MCC18\src\TRADIT~1\math\fxm3232.c
004ddc   501c     MOVF      0x1c,0x0,0x0       movf __AARGB3, 0, 0                                                          C:\MCC18\src\TRADIT~1\math\fxm3232.c
004dde   0221     MULWF     0x21,0x0           mulwf __BARGB3, 0                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // low byte of both operands, so result adds into the low order              C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // result bytes                                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
004de0   cff3     MOVFF     0xff3,0x18         movff PRODL, __AARGB7                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
004de2   f018                                                                                                               
004de4   cff4     MOVFF     0xff4,0x19         movff PRODH, __AARGB7 + 1                                                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
004de6   f019                                                                                                               
                                               // W still contains AARGB3                                                   C:\MCC18\src\TRADIT~1\math\fxm3232.c
004de8   0222     MULWF     0x22,0x0           mulwf __BARGB3 + 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[1], so result adds into AARGB7[1,2]                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
004dea   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
004dec   2619     ADDWF     0x19,0x1,0x0       addwf __AARGB7 + 1, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
004dee   0e00     MOVLW     0x0                movlw 0                                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004df0   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\MCC18\src\TRADIT~1\math\fxm3232.c
004df2   6e1a     MOVWF     0x1a,0x0           movwf __AARGB7 + 2, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\MCC18\src\TRADIT~1\math\fxm3232.c
004df4   501c     MOVF      0x1c,0x0,0x0       movf __AARGB3, 0, 0                                                          C:\MCC18\src\TRADIT~1\math\fxm3232.c
004df6   0223     MULWF     0x23,0x0           mulwf __BARGB3 + 2, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[2], so result adds into AARGB7[2,3]                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
004df8   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
004dfa   261a     ADDWF     0x1a,0x1,0x0       addwf __AARGB7 + 2, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
004dfc   0e00     MOVLW     0x0                movlw 0                                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004dfe   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e00   6e1b     MOVWF     0x1b,0x0           movwf __AARGB7 + 3, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e02   501c     MOVF      0x1c,0x0,0x0       movf __AARGB3, 0, 0                                                          C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e04   0224     MULWF     0x24,0x0           mulwf __BARGB3 + 3, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[3], so result adds into AARGB7[3].                                 C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e06   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e08   261b     ADDWF     0x1b,0x1,0x0       addwf __AARGB7 + 3, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // that's the end of all terms involving AARGB3[0].                          C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[1] to continue                                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e0a   501d     MOVF      0x1d,0x0,0x0       movf __AARGB3 + 1, 0, 0                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e0c   0221     MULWF     0x21,0x0           mulwf __BARGB3, 0                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1], so result adds into AARGB7[1,2]                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e0e   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e10   2619     ADDWF     0x19,0x1,0x0       addwf __AARGB7 + 1, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e12   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e14   221a     ADDWFC    0x1a,0x1,0x0       addwfc __AARGB7 + 2, 1, 0                                                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e16   0e00     MOVLW     0x0                movlw 0                                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e18   221b     ADDWFC    0x1b,0x1,0x0       addwfc __AARGB7 + 3, 1, 0                                                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e1a   501d     MOVF      0x1d,0x0,0x0       movf __AARGB3 + 1, 0, 0                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e1c   0222     MULWF     0x22,0x0           mulwf __BARGB3 + 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[1], so result adds into AARGB7[2,3]                  C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e1e   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e20   261a     ADDWF     0x1a,0x1,0x0       addwf __AARGB7 + 2, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e22   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e24   221b     ADDWFC    0x1b,0x1,0x0       addwfc __AARGB7 + 3, 1, 0                                                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e26   501d     MOVF      0x1d,0x0,0x0       movf __AARGB3 + 1, 0, 0                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e28   0223     MULWF     0x23,0x0           mulwf __BARGB3 + 2, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[2], so result adds into AARGB7[3]                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e2a   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e2c   261b     ADDWF     0x1b,0x1,0x0       addwf __AARGB7 + 3, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the term from the product of AARGB3[1] and BARGB3[3] are     C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // that term.                                                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[2] to continue                                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e2e   501e     MOVF      0x1e,0x0,0x0       movf __AARGB3 + 2, 0, 0                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e30   0221     MULWF     0x21,0x0           mulwf __BARGB3, 0                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[0], so result adds into AARGB7[2,3]                  C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e32   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e34   261a     ADDWF     0x1a,0x1,0x0       addwf __AARGB7 + 2, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e36   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e38   221b     ADDWFC    0x1b,0x1,0x0       addwfc __AARGB7 + 3, 1, 0                                                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[2] to continue                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e3a   501e     MOVF      0x1e,0x0,0x0       movf __AARGB3 + 2, 0, 0                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e3c   0222     MULWF     0x22,0x0           mulwf __BARGB3 + 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[1], so result adds into AARGB7[3]                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e3e   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e40   261b     ADDWF     0x1b,0x1,0x0       addwf __AARGB7 + 3, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the termsfrom the products of AARGB3[2] and BARGB3[2,3] are  C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // those terms.                                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[3] to continue                                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e42   501f     MOVF      0x1f,0x0,0x0       movf __AARGB3 + 3, 0, 0                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e44   0221     MULWF     0x21,0x0           mulwf __BARGB3, 0                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[3] and BARGB3[0], so result adds into AARGB7[3]                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e46   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e48   261b     ADDWF     0x1b,0x1,0x0       addwf __AARGB7 + 3, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               _endasm;                                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
004e4a   0012     RETURN    0x0            }                                                                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Microchip Technology, Inc.                  C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F26K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F26K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F46K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F46K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; $Id: p18macro.inc,v 1.2 2005/05/20 15:34:54 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; @name isdigit                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;The {\bf isdigit} function tests the value of {\bf c} to determine if it        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;is a digit character. A digit character is defined as any decimal digit         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;character (0, 1, 2, 3, 4, 5, 6, 7, 8, 9).                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; int isdigit (int c);                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           CTYPE CODE                                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           isdigit                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             global isdigit                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; Proceedure: Use FSR0 as pointer to 'c'                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;         Return with result in PROD                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Clear out result                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
004eda   6af3     CLRF      0xf3,0x0                 clrf      PRODL, ACCESS                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
004edc   6af4     CLRF      0xf4,0x0       	  clrf      PRODH, ACCESS                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Set FSR0 = FSR1 - 2 ( location of 'c')                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
004ede   0eff     MOVLW     0xff                     StkSetPtrToOffset FSR0L,-1                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
004ee0   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
004ee2   6ee9     MOVWF     0xe9,0x0                                                                                        
004ee4   0eff     MOVLW     0xff                                                                                            
004ee6   20e2     ADDWFC    0xe2,0x0,0x0                                                                                    
004ee8   6eea     MOVWF     0xea,0x0                                                                                        
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
004eea   66ed     TSTFSZ    0xed,0x0                 tstfsz    POSTDEC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
004eec   d007     BRA       0x4efc                   bra       jNoMatch            ; upper byte must be 0 to match          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Test for condition                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
004eee   0e2f     MOVLW     0x2f                     jmpFleL   INDF0,ACCESS,'0'-1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
004ef0   64ef     CPFSGT    0xef,0x0                                                                                        
004ef2   d004     BRA       0x4efc                                                                                          
004ef4   0e3a     MOVLW     0x3a                     jmpFgeL   INDF0,ACCESS,'9'+1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
004ef6   60ef     CPFSLT    0xef,0x0                                                                                        
004ef8   d001     BRA       0x4efc                                                                                          
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jMatch:                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
004efa   2af3     INCF      0xf3,0x1,0x0             incf      PRODL,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jNoMatch:                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
004efc   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           #include <stdio.h>                                                               C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                           int _user_putc (char c);                                                         C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                           int _usart_putc (char c);                                                        C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                           int                                                                              C:\MCC18\src\TRADIT~1\stdclib\putc.c
004d58   cfd9     MOVFF     0xfd9,0xfe6    putc (char c, FILE * f)                                                          C:\MCC18\src\TRADIT~1\stdclib\putc.c
004d5a   ffe6                                                                                                               
004d5c   cfda     MOVFF     0xfda,0xfe6                                                                                     
004d5e   ffe6                                                                                                               
004d60   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004d62   ffd9                                                                                                               
004d64   cfe2     MOVFF     0xfe2,0xfda                                                                                     
004d66   ffda                                                                                                               
                                           {                                                                                C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                             /* if the handle > 0 then it's a pointer to a string buffer address.           C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                specifically, a pointer to a pointer referencing the next available         C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                byte in the buffer, to which the character will be stored. */               C:\MCC18\src\TRADIT~1\stdclib\putc.c
004d68   0efb     MOVLW     0xfb             if ((int) f >= 0)                                                              C:\MCC18\src\TRADIT~1\stdclib\putc.c
004d6a   cfdb     MOVFF     0xfdb,0x2a                                                                                      
004d6c   f02a                                                                                                               
004d6e   0efc     MOVLW     0xfc                                                                                            
004d70   cfdb     MOVFF     0xfdb,0x2b                                                                                      
004d72   f02b                                                                                                               
004d74   0100     MOVLB     0x0                                                                                             
004d76   0e80     MOVLW     0x80                                                                                            
004d78   142b     ANDWF     0x2b,0x0,0x0                                                                                    
004d7a   e11a     BNZ       0x4db0                                                                                          
004d7c   0efb     MOVLW     0xfb               return (unsigned char) (*(*(char **) f)++ = c);                              C:\MCC18\src\TRADIT~1\stdclib\putc.c
004d7e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004d80   ffe9                                                                                                               
004d82   0efc     MOVLW     0xfc                                                                                            
004d84   cfdb     MOVFF     0xfdb,0xfea                                                                                     
004d86   ffea                                                                                                               
004d88   cfee     MOVFF     0xfee,0xff3                                                                                     
004d8a   fff3                                                                                                               
004d8c   cfed     MOVFF     0xfed,0xff4                                                                                     
004d8e   fff4                                                                                                               
004d90   2aee     INCF      0xee,0x1,0x0                                                                                    
004d92   0e00     MOVLW     0x0                                                                                             
004d94   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
004d96   cff3     MOVFF     0xff3,0xfe9                                                                                     
004d98   ffe9                                                                                                               
004d9a   cff4     MOVFF     0xff4,0xfea                                                                                     
004d9c   ffea                                                                                                               
004d9e   0efd     MOVLW     0xfd                                                                                            
004da0   cfdb     MOVFF     0xfdb,0xfef                                                                                     
004da2   ffef                                                                                                               
004da4   50ef     MOVF      0xef,0x0,0x0                                                                                    
004da6   6a2b     CLRF      0x2b,0x0                                                                                        
004da8   6ef3     MOVWF     0xf3,0x0                                                                                        
004daa   c02b     MOVFF     0x2b,0xff4                                                                                      
004dac   fff4                                                                                                               
004dae   d010     BRA       0x4dd0                                                                                          
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
004db0   0efb     MOVLW     0xfb             if ((signed char) f == (signed char) _H_USART)                                 C:\MCC18\src\TRADIT~1\stdclib\putc.c
004db2   50db     MOVF      0xdb,0x0,0x0                                                                                    
004db4   08fe     SUBLW     0xfe                                                                                            
004db6   e106     BNZ       0x4dc4                                                                                          
                                               {                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the USART function is direct, as it's our             C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    default value and we want it to work without needing any                C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    direct initialization from the user */                                  C:\MCC18\src\TRADIT~1\stdclib\putc.c
004db8   0efd     MOVLW     0xfd                 return _usart_putc (c);                                                    C:\MCC18\src\TRADIT~1\stdclib\putc.c
004dba   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004dbc   ffe6                                                                                                               
004dbe   eced     CALL      0x4fda,0x0                                                                                      
004dc0   f027                                                                                                               
004dc2   d005     BRA       0x4dce                                                                                          
                                               }                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                             else                                                                           C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                               {                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the user function is direct, not via a                C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. We just put an empty definition of the                C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    function in the library and if the user specifies their own             C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    version it will be found first and the library definition will          C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    be ignored. We do it this way because it's generally better to          C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    spend 2 bytes of program memory for the RETURN instruction of           C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    the empty function than three bytes of data memory for the              C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. */                                                    C:\MCC18\src\TRADIT~1\stdclib\putc.c
004dc4   0efd     MOVLW     0xfd                 return _user_putc (c);                                                     C:\MCC18\src\TRADIT~1\stdclib\putc.c
004dc6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004dc8   ffe6                                                                                                               
004dca   ecca     CALL      0xf94,0x0                                                                                       
004dcc   f007                                                                                                               
004dce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
004dd0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\MCC18\src\TRADIT~1\stdclib\putc.c
004dd2   cfe5     MOVFF     0xfe5,0xfda                                                                                     
004dd4   ffda                                                                                                               
004dd6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004dd8   ffd9                                                                                                               
004dda   0012     RETURN    0x0                                                                                             
                                             include <P18CXXX.INC>                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Microchip Technology, Inc.                  C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\p18F2455.INC
                                                                                                                            C:\MCC18\MPASM\p18F2455.INC
                                           ;==========================================================================      C:\MCC18\MPASM\p18F2455.INC
                                           ;  MPASM PIC18F2455 processor include                                            C:\MCC18\MPASM\p18F2455.INC
                                           ;                                                                                C:\MCC18\MPASM\p18F2455.INC
                                           ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved             C:\MCC18\MPASM\p18F2455.INC
                                           ;==========================================================================      C:\MCC18\MPASM\p18F2455.INC
                                                                                                                            C:\MCC18\MPASM\p18F2455.INC
                                                   LIST                                                                     C:\MCC18\MPASM\p18F2455.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F26K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F26K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F46K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F46K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1220                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1230                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1231                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1320                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1330                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1331                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                             GLOBAL _usart_putc                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           STDIO CODE                                                                       C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           _usart_putc                                                                      C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004fda   0eff     MOVLW     0xff                         MOVLW     0xff                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004fdc   50e3     MOVF      0xe3,0x0,0x0                 MOVF      PLUSW1, w                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004fde   baac     BTFSC     0xac,0x5,0x0                 BTFSC     TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004fe0   d004     BRA       0x4fea                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004fe2   6aaf     CLRF      0xaf,0x0                     CLRF      SPBRG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004fe4   8eab     BSF       0xab,0x7,0x0                 BSF       RCSTA, 0x7                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004fe6   8aac     BSF       0xac,0x5,0x0                 BSF       TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __USE_PORTB                                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                         BCF       TRISB, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004fe8   9c94     BCF       0x94,0x6,0x0                 BCF       TRISC, 0x6                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004fea   a2ac     BTFSS     0xac,0x1,0x0   loop:         BTFSS     TXSTA, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004fec   d7fe     BRA       0x4fea                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004fee   6ead     MOVWF     0xad,0x0                     MOVWF     TXREG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004ff0   6ef3     MOVWF     0xf3,0x0                     MOVWF     PRODL                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004ff2   6af4     CLRF      0xf4,0x0                     CLRF      PRODL + 1                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004ff4   0012     RETURN    0x0                          RETURN                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           ; $Id: strlen.asm,v 1.1 2003/12/09 22:53:20 GrosbaJ Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Microchip Technology, Inc.                  C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F26K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F26K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F46K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F46K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: p18macro.inc,v 1.2 2005/05/20 15:34:54 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; @name strlen                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;``The {\bf strlen} function computes the length of the string pointed           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;Stack usage: 2 bytes. Re-entrant.                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@return ``The {\bf strlen} function returns the number of characters            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; size_t strlen (const char *s);                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           strlen                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             global strlen                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; Proceedure: Use FSR0 for 's' and use PROD for 'n'.                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Load FSR0 by copying 's' off stack into FSR0.                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
004e4c   0efe     MOVLW     0xfe                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
004e4e   cfe3     MOVFF     0xfe3,0xfe9                                                                                     
004e50   ffe9                                                                                                               
004e52   0eff     MOVLW     0xff                                                                                            
004e54   cfe3     MOVFF     0xfe3,0xfea                                                                                     
004e56   ffea                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Clear PROD                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
004e58   6af3     CLRF      0xf3,0x0                 clrf      PRODL,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
004e5a   6af4     CLRF      0xf4,0x0                 clrf      PRODH,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
004e5c   52ee     MOVF      0xee,0x1,0x0             movf      POSTINC0,F,ACCESS   ; set Z flag                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
004e5e   e003     BZ        0x4e66                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
004e60   4af3     INFSNZ    0xf3,0x1,0x0   	  infsnz    PRODL, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
004e62   2af4     INCF      0xf4,0x1,0x0   	  incf      PRODH, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
004e64   d7fb     BRA       0x4e5c                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
004e66   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: slenpgm.asm,v 1.4 2006/02/04 00:06:53 nairnj Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Microchip Technology, Inc.                  C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F24K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F26K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F26K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4458                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4458.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F44K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4553                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4553.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4682                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4682.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F46K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F46K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F6723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8628                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8628.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J16                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J16.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J55                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J55.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8723                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F8723.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J11                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J11.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J50                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J50.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <p18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; $Id: p18macro.inc,v 1.2 2005/05/20 15:34:54 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; @name strlenpgm                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;``The {\bf strlenpgm} function computes the length of the string pointed        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@return ``The {\bf strlenpgm} function returns the number of characters         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; sizerom_t strlenpgm (const rom char *s);                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             extern __AARGB2                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           strlenpgm                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             global strlenpgm                                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __SMALL__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - SMALL"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; __AARGB0:__AARGB1:__AARGB2.                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk2PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTDEC1,ACCESS    ; provide extra byte below stack          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, __AARGB2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __LARGE__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - LARGE"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; __AARGB0:__AARGB1:__AARGB2.                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004e68   0eff     MOVLW     0xff                     Stk3PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004e6a   cfe3     MOVFF     0xfe3,0xff8                                                                                     
004e6c   fff8                                                                                                               
004e6e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e70   0eff     MOVLW     0xff                                                                                            
004e72   cfe3     MOVFF     0xfe3,0xff7                                                                                     
004e74   fff7                                                                                                               
004e76   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e78   0eff     MOVLW     0xff                                                                                            
004e7a   cfe3     MOVFF     0xfe3,0xff6                                                                                     
004e7c   fff6                                                                                                               
004e7e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004e80   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004e82   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004e84   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004e86   0009     TBLRDPOSTINC                       tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004e88   52f5     MOVF      0xf5,0x1,0x0             movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004e8a   e009     BZ        0x4e9e                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004e8c   0efd     MOVLW     0xfd                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004e8e   2ae3     INCF      0xe3,0x1,0x0                                                                                    
004e90   e105     BNZ       0x4e9c                                                                                          
004e92   0efe     MOVLW     0xfe                                                                                            
004e94   2ae3     INCF      0xe3,0x1,0x0                                                                                    
004e96   e102     BNZ       0x4e9c                                                                                          
004e98   0eff     MOVLW     0xff                                                                                            
004e9a   2ae3     INCF      0xe3,0x1,0x0                                                                                    
004e9c   d7f4     BRA       0x4e86                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004e9e   0efd     MOVLW     0xfd                     Stk3CpyToReg -3, __AARGB2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004ea0   cfe3     MOVFF     0xfe3,0x1d                                                                                      
004ea2   f01d                                                                                                               
004ea4   0efe     MOVLW     0xfe                                                                                            
004ea6   cfe3     MOVFF     0xfe3,0x1e                                                                                      
004ea8   f01e                                                                                                               
004eaa   0eff     MOVLW     0xff                                                                                            
004eac   cfe3     MOVFF     0xfe3,0x1f                                                                                      
004eae   f01f                                                                                                               
004eb0   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            error "No Model Specified"                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
