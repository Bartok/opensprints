MP2COD 4.02, COFF to COD File Converter
Copyright (c) 2006 Microchip Technology Inc.
Listing File Generated: Wed Mar 07 23:25:46 2007


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           /*********************************************************************           C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            *********************************************************************           C:\Projects\UBW\FW\D\main.c
                                            * FileName:        main.c                                                       C:\Projects\UBW\FW\D\main.c
                                            * Dependencies:    See INCLUDES section below                                   C:\Projects\UBW\FW\D\main.c
                                            * Processor:       PIC18                                                        C:\Projects\UBW\FW\D\main.c
                                            * Compiler:        C18 2.30.01+                                                 C:\Projects\UBW\FW\D\main.c
                                            * Company:         Microchip Technology, Inc.                                   C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Software License Agreement                                                    C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\Projects\UBW\FW\D\main.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\Projects\UBW\FW\D\main.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\Projects\UBW\FW\D\main.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\Projects\UBW\FW\D\main.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\Projects\UBW\FW\D\main.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\Projects\UBW\FW\D\main.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\Projects\UBW\FW\D\main.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\Projects\UBW\FW\D\main.c
                                            * civil liability for the breach of the terms and conditions of this            C:\Projects\UBW\FW\D\main.c
                                            * license.                                                                      C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\Projects\UBW\FW\D\main.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\Projects\UBW\FW\D\main.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\Projects\UBW\FW\D\main.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\Projects\UBW\FW\D\main.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\Projects\UBW\FW\D\main.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Author               Date        Comment                                      C:\Projects\UBW\FW\D\main.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\Projects\UBW\FW\D\main.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\Projects\UBW\FW\D\main.c
                                            ********************************************************************/           C:\Projects\UBW\FW\D\main.c
                                                                                                                            C:\Projects\UBW\FW\D\main.c
                                           /** I N C L U D E S **********************************************************/  C:\Projects\UBW\FW\D\main.c
                                           #include <p18cxxx.h>                                                             C:\Projects\UBW\FW\D\main.c
                                           #include "system\typedefs.h"                        // Required                  C:\Projects\UBW\FW\D\main.c
                                           #include "system\usb\usb.h"                         // Required                  C:\Projects\UBW\FW\D\main.c
                                           #include "io_cfg.h"                                 // Required                  C:\Projects\UBW\FW\D\main.c
                                                                                                                            C:\Projects\UBW\FW\D\main.c
                                           #include "system\usb\usb_compile_time_validation.h" // Optional                  C:\Projects\UBW\FW\D\main.c
                                           #include "user\user.h"                              // Modifiable                C:\Projects\UBW\FW\D\main.c
                                                                                                                            C:\Projects\UBW\FW\D\main.c
                                           /** V A R I A B L E S ********************************************************/  C:\Projects\UBW\FW\D\main.c
                                           #pragma udata                                                                    C:\Projects\UBW\FW\D\main.c
                                                                                                                            C:\Projects\UBW\FW\D\main.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\Projects\UBW\FW\D\main.c
                                           static void InitializeSystem(void);                                              C:\Projects\UBW\FW\D\main.c
                                           void USBTasks(void);                                                             C:\Projects\UBW\FW\D\main.c
                                                                                                                            C:\Projects\UBW\FW\D\main.c
                                           #pragma code high_vector_section = 0x000808                                      C:\Projects\UBW\FW\D\main.c
                                           void high_vector (void)                                                          C:\Projects\UBW\FW\D\main.c
                                           {                                                                                C:\Projects\UBW\FW\D\main.c
000808   efbb     GOTO      0xb76              _asm goto high_ISR _endasm                                                   C:\Projects\UBW\FW\D\main.c
00080a   f005                                                                                                               
00080c   0012     RETURN    0x0            }                                                                                C:\Projects\UBW\FW\D\main.c
                                           #pragma code low_vector_section = 0x000818                                       C:\Projects\UBW\FW\D\main.c
                                           void low_vector (void)                                                           C:\Projects\UBW\FW\D\main.c
                                           {                                                                                C:\Projects\UBW\FW\D\main.c
000818   ef22     GOTO      0x844              _asm goto low_ISR _endasm                                                    C:\Projects\UBW\FW\D\main.c
00081a   f004                                                                                                               
00081c   0012     RETURN    0x0            }                                                                                C:\Projects\UBW\FW\D\main.c
                                           #pragma code                                                                     C:\Projects\UBW\FW\D\main.c
                                                                                                                            C:\Projects\UBW\FW\D\main.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\Projects\UBW\FW\D\main.c
                                           #pragma code                                                                     C:\Projects\UBW\FW\D\main.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\main.c
                                            * Function:        void main(void)                                              C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Overview:        Main program entry point.                                    C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\main.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\main.c
                                           void main(void)                                                                  C:\Projects\UBW\FW\D\main.c
                                           {                                                                                C:\Projects\UBW\FW\D\main.c
0046d8   d805     RCALL     0x46e4             InitializeSystem();                                                          C:\Projects\UBW\FW\D\main.c
0046e0   d7fc     BRA       0x46da         	while(1)                                                                        C:\Projects\UBW\FW\D\main.c
                                               {                                                                            C:\Projects\UBW\FW\D\main.c
0046da   d811     RCALL     0x46fe                 USBTasks();         // USB Tasks                                         C:\Projects\UBW\FW\D\main.c
0046dc   ec93     CALL      0xd26,0x0              ProcessIO();        // See user\user.c & .h                              C:\Projects\UBW\FW\D\main.c
0046de   f006                                                                                                               
                                               }//end while                                                                 C:\Projects\UBW\FW\D\main.c
0046e2   0012     RETURN    0x0            }//end main                                                                      C:\Projects\UBW\FW\D\main.c
                                                                                                                            C:\Projects\UBW\FW\D\main.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\main.c
                                            * Function:        static void InitializeSystem(void)                           C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Overview:        InitializeSystem is a centralize initialization routine.     C:\Projects\UBW\FW\D\main.c
                                            *                  All required USB initialization routines are called from     C:\Projects\UBW\FW\D\main.c
                                            *                  here.                                                        C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            *                  User application initialization routine should also be       C:\Projects\UBW\FW\D\main.c
                                            *                  called from here.                                            C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\main.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\main.c
                                           static void InitializeSystem(void)                                               C:\Projects\UBW\FW\D\main.c
                                           {                                                                                C:\Projects\UBW\FW\D\main.c
0046e4   0e0f     MOVLW     0xf                ADCON1 |= 0x0F;                 // Default all pins to digital               C:\Projects\UBW\FW\D\main.c
0046e6   12c1     IORWF     0xc1,0x1,0x0                                                                                    
                                                                                                                            C:\Projects\UBW\FW\D\main.c
0046e8   0e14     MOVLW     0x14               mInitializeUSBDriver();         // See usbdrv.h                              C:\Projects\UBW\FW\D\main.c
0046ea   6e6f     MOVWF     0x6f,0x0                                                                                        
0046ec   0101     MOVLB     0x1                                                                                             
0046ee   6bd5     CLRF      0xd5,0x1                                                                                        
0046f0   0101     MOVLB     0x1                                                                                             
0046f2   6bd6     CLRF      0xd6,0x1                                                                                        
0046f4   0101     MOVLB     0x1                                                                                             
0046f6   6bd7     CLRF      0xd7,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\main.c
0046f8   ecc4     CALL      0xb88,0x0          UserInit();                     // See user.c & .h                           C:\Projects\UBW\FW\D\main.c
0046fa   f005                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\main.c
0046fc   0012     RETURN    0x0            }//end InitializeSystem                                                          C:\Projects\UBW\FW\D\main.c
                                                                                                                            C:\Projects\UBW\FW\D\main.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\main.c
                                            * Function:        void USBTasks(void)                                          C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * PreCondition:    InitializeSystem has been called.                            C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Overview:        Service loop for USB tasks.                                  C:\Projects\UBW\FW\D\main.c
                                            *                                                                               C:\Projects\UBW\FW\D\main.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\main.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\main.c
                                           void USBTasks(void)                                                              C:\Projects\UBW\FW\D\main.c
                                           {                                                                                C:\Projects\UBW\FW\D\main.c
                                               /*                                                                           C:\Projects\UBW\FW\D\main.c
                                                * Servicing Hardware                                                        C:\Projects\UBW\FW\D\main.c
                                                */                                                                          C:\Projects\UBW\FW\D\main.c
0046fe   ec92     CALL      0x3f24,0x0         USBCheckBusStatus();                    // Must use polling method           C:\Projects\UBW\FW\D\main.c
004700   f01f                                                                                                               
004702   be6f     BTFSC     0x6f,0x7,0x0       if(UCFGbits.UTEYE!=1)                                                        C:\Projects\UBW\FW\D\main.c
004704   d002     BRA       0x470a                                                                                          
004706   ecb2     CALL      0x3f64,0x0             USBDriverService();                 // Interrupt or polling method       C:\Projects\UBW\FW\D\main.c
004708   f01f                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\main.c
                                               #if defined(USB_USE_CDC)                                                     C:\Projects\UBW\FW\D\main.c
00470a   ecdc     CALL      0x37b8,0x0         CDCTxService();                                                              C:\Projects\UBW\FW\D\main.c
00470c   f01b                                                                                                               
                                               #endif                                                                       C:\Projects\UBW\FW\D\main.c
                                                                                                                            C:\Projects\UBW\FW\D\main.c
00470e   0012     RETURN    0x0            }// end USBTasks                                                                 C:\Projects\UBW\FW\D\main.c
                                                                                                                            C:\Projects\UBW\FW\D\main.c
                                           /** EOF main.c ***************************************************************/  C:\Projects\UBW\FW\D\main.c
                                           /*********************************************************************           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *********************************************************************           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * FileName:        usbmmap.c                                                    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Dependencies:    See INCLUDES section below                                   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Processor:       PIC18                                                        C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Compiler:        C18 2.30.01+                                                 C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Company:         Microchip Technology, Inc.                                   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Software License Agreement                                                    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * civil liability for the breach of the terms and conditions of this            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * license.                                                                      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Author               Date        Comment                                      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            ********************************************************************/           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * -usbmmap.c-                                                                   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * USB Memory Map                                                                C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * This file is the USB memory manager; it serves as a compile-time memory       C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * allocator for the USB endpoints. It uses the compile time options passed      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * from usbcfg.h to instantiate endpoints and endpoint buffer.                   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Each endpoint requires to have a set of Buffer Descriptor registers(BDT).     C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * A BDT is 4-byte long and has a specific RAM location for each endpoint.       C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * The BDT for endpoint 0 out is located at address 0x400 to 0x403.              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * The BDT for endpoint 0 in is located at address 0x404 to 0x407.               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * The BDT for endpoint 1 out is located at address 0x408 to 0x40B.              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * and so on... The above allocation assumes the Ping-Pong Buffer Mode 0 is      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * used. These locations are already hard-wired in the silicon. The point        C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * of doing instantiation, i.e. volatile far BDT ep0Bo;, is to provide the       C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * C compiler a way to address each variable directly. This is very important    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * because when a register can be accessed directly, it saves execution time     C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * and reduces program size.                                                     C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Endpoints are defined using the endpoint number and the direction             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * of transfer. For simplicity, usbmmap.c only uses the endpoint number          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * in the BDT register allocation scheme. This means if the usbcfg.h states      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * that the MAX_EP_NUMBER is number 1, then four BDTs will be                    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * instantiated: one each for endpoint0 in and endpoint0 out, which must         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * always be instantiated for control transfer by default, and one each sets     C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * for endpoint1 in and endpoint1 out. The naming convention for instantiating   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * BDT is                                                                        C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * ep<#>B<d>                                                                     C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * where # is the endpoint number, and d is the direction of                     C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * transfer, which could be either <i> or <o>.                                   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * The USB memory manager uses MAX_EP_NUMBER, as defined in usbcfg.h, to define  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * the endpoints to be instantiated. This represents the highest endpoint        C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * number to be allocated, not how many endpoints are used. Since the BDTs for   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * endpoints have hardware-assigned addresses in Bank 4, setting this value too  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * high may lead to inefficient use of data RAM. For example, if an application  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * uses only endpoints EP0 and EP4, then the MAX_EP_NUMBER is 4, and not 2.      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * The in-between endpoint BDTs in this example (EP1, EP2, and EP3) go unused,   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * and the 24 bytes of memory associated with them are wasted. It does not make  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * much sense to skip endpoints, but the final decision lies with the user.      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * The next step is to assign the instantiated BDTs to different                 C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * USB functions. The firmware framework fundamentally assumes that every USB    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * function should know which endpoint it is using, i.e., the default control    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * transfer should know that it is using endpoint 0 in and endpoint 0 out.       C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * A HID class can choose which endpoint it wants to use, but once chosen, it    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * should always know the number of the endpoint.                                C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * The assignment of endpoints to USB functions is managed centrally             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * in usbcfg.h. This helps prevent the mistake of having more                    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * than one USB function using the same endpoint. The "Endpoint Allocation"      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * section in usbcfg.h provides examples for how to map USB endpoints to USB     C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * functions.                                                                    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Quite a few things can be mapped in that section. There is no                 C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * one correct way to do the mapping and the user has the choice to              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * choose a method that is most suitable to the application.                     C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Typically, however, a user will want to map the following for a given         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * USB interface function:                                                       C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * 1. The USB interface ID                                                       C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * 2. The endpoint control registers (UEPn)                                      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * 3. The BDT registers (ep<#>B<d>)                                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * 4. The endpoint size                                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Example: Assume a USB device class "foo", which uses one out endpoint         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *          of size 64-byte and one in endpoint of size 64-byte, then:           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * #define FOO_INTF_ID          0x00                                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * #define FOO_UEP              UEP1                                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * #define FOO_BD_OUT           ep1Bo                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * #define FOO_BD_IN            ep1Bi                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * #define FOO_EP_SIZE          64                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * The mapping above has chosen class "foo" to use endpoint 1.                   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * The names are arbitrary and can be anything other than FOO_??????.            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * For abstraction, the code for class "foo" should use the abstract             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * definitions of FOO_BD_OUT,FOO_BD_IN, and not ep1Bo or ep1Bi.                  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Note that the endpoint size defined in the usbcfg.h file is again             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * used in the usbmmap.c file. This shows that the relationship between          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * the two files are tightly related.                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * The endpoint buffer for each USB function must be located in the              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * dual-port RAM area and has to come after all the BDTs have been               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * instantiated. An example declaration is:                                      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * volatile far unsigned char[FOO_EP_SIZE] data;                                 C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * The 'volatile' keyword tells the compiler not to perform any code             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * optimization on this variable because its content could be modified           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * by the hardware. The 'far' keyword tells the compiler that this variable      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * is not located in the Access RAM area (0x000 - 0x05F).                        C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * For the variable to be globally accessible by other files, it should be       C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * declared in the header file usbmmap.h as an extern definition, such as        C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * extern volatile far unsigned char[FOO_EP_SIZE] data;                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Conclusion:                                                                   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * In a short summary, the dependencies between usbcfg and usbmmap can           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * be shown as:                                                                  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * usbcfg[MAX_EP_NUMBER] -> usbmmap                                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * usbmmap[ep<#>B<d>] -> usbcfg                                                  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * usbcfg[EP size] -> usbmmap                                                    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * usbcfg[abstract ep definitions] -> usb9/hid/cdc/etc class code                C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * usbmmap[endpoint buffer variable] -> usb9/hid/cdc/etc class code              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Data mapping provides a means for direct addressing of BDT and endpoint       C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * buffer. This means less usage of pointers, which equates to a faster and      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * smaller program code.                                                         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           /** I N C L U D E S **********************************************************/  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #include "system\typedefs.h"                                                     C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #include "system\usb\usb.h"                                                      C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           /** U S B  G L O B A L  V A R I A B L E S ************************************/  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #pragma udata                                                                    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           byte usb_device_state;          // Device States: DETACHED, ATTACHED, ...        C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           USB_DEVICE_STATUS usb_stat;     // Global USB flags                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           byte usb_active_cfg;            // Value of current configuration                C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           byte usb_alt_intf[MAX_NUM_INT]; // Array to keep track of the current alternate  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                           // setting for each interface ID                 C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           /** U S B  F I X E D  L O C A T I O N  V A R I A B L E S *********************/  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #pragma udata usbram4=0x400     //See Linker Script,usb4:0x400-0x4FF(256-byte)   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Section A: Buffer Descriptor Table                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * - 0x400 - 0x4FF(max)                                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * - MAX_EP_NUMBER is defined in autofiles\usbcfg.h                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * - BDT data type is defined in system\usb\usbmmap.h                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(0 <= MAX_EP_NUMBER)                                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep0Bo;         //Endpoint #0 BD Out                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep0Bi;         //Endpoint #0 BD In                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(1 <= MAX_EP_NUMBER)                                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep1Bo;         //Endpoint #1 BD Out                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep1Bi;         //Endpoint #1 BD In                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(2 <= MAX_EP_NUMBER)                                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep2Bo;         //Endpoint #2 BD Out                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep2Bi;         //Endpoint #2 BD In                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(3 <= MAX_EP_NUMBER)                                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep3Bo;         //Endpoint #3 BD Out                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep3Bi;         //Endpoint #3 BD In                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(4 <= MAX_EP_NUMBER)                                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep4Bo;         //Endpoint #4 BD Out                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep4Bi;         //Endpoint #4 BD In                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(5 <= MAX_EP_NUMBER)                                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep5Bo;         //Endpoint #5 BD Out                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep5Bi;         //Endpoint #5 BD In                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(6 <= MAX_EP_NUMBER)                                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep6Bo;         //Endpoint #6 BD Out                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep6Bi;         //Endpoint #6 BD In                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(7 <= MAX_EP_NUMBER)                                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep7Bo;         //Endpoint #7 BD Out                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep7Bi;         //Endpoint #7 BD In                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(8 <= MAX_EP_NUMBER)                                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep8Bo;         //Endpoint #8 BD Out                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep8Bi;         //Endpoint #8 BD In                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(9 <= MAX_EP_NUMBER)                                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep9Bo;         //Endpoint #9 BD Out                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep9Bi;         //Endpoint #9 BD In                              C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(10 <= MAX_EP_NUMBER)                                                         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep10Bo;        //Endpoint #10 BD Out                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep10Bi;        //Endpoint #10 BD In                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(11 <= MAX_EP_NUMBER)                                                         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep11Bo;        //Endpoint #11 BD Out                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep11Bi;        //Endpoint #11 BD In                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(12 <= MAX_EP_NUMBER)                                                         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep12Bo;        //Endpoint #12 BD Out                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep12Bi;        //Endpoint #12 BD In                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(13 <= MAX_EP_NUMBER)                                                         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep13Bo;        //Endpoint #13 BD Out                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep13Bi;        //Endpoint #13 BD In                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(14 <= MAX_EP_NUMBER)                                                         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep14Bo;        //Endpoint #14 BD Out                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep14Bi;        //Endpoint #14 BD In                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if(15 <= MAX_EP_NUMBER)                                                         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep15Bo;        //Endpoint #15 BD Out                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far BDT ep15Bi;        //Endpoint #15 BD In                             C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Section B: EP0 Buffer Space                                                   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            ******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * - Two buffer areas are defined:                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *   A. CTRL_TRF_SETUP                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *      - Size = EP0_BUFF_SIZE as defined in autofiles\usbcfg.h                  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *      - Detailed data structure allows direct adddressing of bits and bytes.   C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *   B. CTRL_TRF_DATA                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *      - Size = EP0_BUFF_SIZE as defined in autofiles\usbcfg.h                  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *      - Data structure allows direct adddressing of the first 8 bytes.         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * - Both data types are defined in system\usb\usbdefs\usbdefs_ep0_buff.h        C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far CTRL_TRF_SETUP SetupPkt;                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far CTRL_TRF_DATA CtrlTrfData;                                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            * Section C: CDC Buffer                                                         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            ******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #pragma udata usbram5a=0x500    //See Linker Script,usb5:0x500-...               C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #if defined(USB_USE_CDC)                                                         C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far unsigned char cdc_notice[CDC_INT_EP_SIZE];                          C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far unsigned char cdc_data_rx[CDC_BULK_OUT_EP_SIZE];                    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           volatile far unsigned char cdc_data_tx[CDC_BULK_IN_EP_SIZE];                     C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           #pragma udata                                                                    C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           /** EOF usbmmap.c ************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbmmap.c
                                           /*********************************************************************           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *********************************************************************           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * FileName:        usbdrv.c                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Dependencies:    See INCLUDES section below                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Processor:       PIC18                                                        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Compiler:        C18 2.30.01+                                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Company:         Microchip Technology, Inc.                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Software License Agreement                                                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * civil liability for the breach of the terms and conditions of this            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * license.                                                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Author               Date        Comment                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            ********************************************************************/           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /** I N C L U D E S **********************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           #include <p18cxxx.h>                                                             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           #include "system\typedefs.h"                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           #include "system\usb\usb.h"                                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           #include "io_cfg.h"             // Required for USBCheckBusStatus()              C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /** V A R I A B L E S ********************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           #pragma udata                                                                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBModuleEnable(void);                                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBModuleDisable(void);                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBSuspend(void);                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBWakeFromSuspend(void);                                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBProtocolResetHandler(void);                                              C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USB_SOF_Handler(void);                                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBStallHandler(void);                                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBErrorHandler(void);                                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           #pragma code                                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBCheckBusStatus(void)                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This routine enables/disables the USB module by monitoring   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  the USB power signal.                                        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBCheckBusStatus(void)                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /**************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * Bus Attachment & Detachment Detection                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * usb_bus_sense is an i/o pin defined in io_cfg.h                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               #define USB_BUS_ATTACHED    1                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               #define USB_BUS_DETACHED    0                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               if(usb_bus_sense == USB_BUS_ATTACHED)       // Is USB bus attached?          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f24   a66d     BTFSS     0x6d,0x3,0x0           if(UCONbits.USBEN == 0)                 // Is the module off?            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f26   d810     RCALL     0x3f48                     USBModuleEnable();                  // Is off, enable it             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               }                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f28   d002     BRA       0x3f2e             else                                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f2a   b66d     BTFSC     0x6d,0x3,0x0           if(UCONbits.USBEN == 1)                 // Is the module on?             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f2c   d814     RCALL     0x3f56                     USBModuleDisable();                 // Is on, disable it             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               }//end if(usb_bus_sense...)                                                  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * After enabling the USB module, it takes some time for the voltage         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * on the D+ or D- line to rise high enough to get out of the SE0 condition. C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * The USB Reset interrupt should not be unmasked until the SE0 condition is C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * cleared. This helps preventing the firmware from misinterpreting this     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * unique event as a USB bus reset from the USB host.                        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f2e   0101     MOVLB     0x1                if(usb_device_state == ATTACHED_STATE)                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f30   05d5     DECF      0xd5,0x0,0x1                                                                                    
003f32   e109     BNZ       0x3f46                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f34   ba6d     BTFSC     0x6d,0x5,0x0           if(!UCONbits.SE0)                                                        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f36   d007     BRA       0x3f46                                                                                          
                                                   {                                                                        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f38   6a68     CLRF      0x68,0x0                   UIR = 0;                        // Clear all USB interrupts          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f3a   6a69     CLRF      0x69,0x0                   UIE = 0;                        // Mask all USB interrupts           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f3c   8069     BSF       0x69,0x0,0x0               UIEbits.URSTIE = 1;             // Unmask RESET interrupt            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f3e   8869     BSF       0x69,0x4,0x0               UIEbits.IDLEIE = 1;             // Unmask IDLE interrupt             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f40   0101     MOVLB     0x1                        usb_device_state = POWERED_STATE;                                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f42   0e02     MOVLW     0x2                                                                                             
003f44   6fd5     MOVWF     0xd5,0x1                                                                                        
                                                   }//end if                           // else wait until SE0 is cleared    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               }//end if(usb_device_state == ATTACHED_STATE)                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f46   0012     RETURN    0x0            }//end USBCheckBusStatus                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBModuleEnable(void)                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This routine enables the USB module.                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  An end designer should never have to call this routine       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  manually. This routine should only be called from            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  USBCheckBusStatus().                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Note:            See USBCheckBusStatus() for more information.                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBModuleEnable(void)                                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f48   6a6d     CLRF      0x6d,0x0           UCON = 0;                                                                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f4a   6a69     CLRF      0x69,0x0           UIE = 0;                                // Mask all USB interrupts           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f4c   866d     BSF       0x6d,0x3,0x0       UCONbits.USBEN = 1;                     // Enable module & attach to bus     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f4e   0101     MOVLB     0x1                usb_device_state = ATTACHED_STATE;      // Defined in usbmmap.c & .h         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f50   0e01     MOVLW     0x1                                                                                             
003f52   6fd5     MOVWF     0xd5,0x1                                                                                        
003f54   0012     RETURN    0x0            }//end USBModuleEnable                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBModuleDisable(void)                                  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This routine disables the USB module.                        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  An end designer should never have to call this routine       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  manually. This routine should only be called from            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  USBCheckBusStatus().                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Note:            See USBCheckBusStatus() for more information.                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBModuleDisable(void)                                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f56   6a6d     CLRF      0x6d,0x0           UCON = 0;                               // Disable module & detach from bus  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f58   6a69     CLRF      0x69,0x0           UIE = 0;                                // Mask all USB interrupts           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f5a   0101     MOVLB     0x1                usb_device_state = DETACHED_STATE;      // Defined in usbmmap.c & .h         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f5c   6bd5     CLRF      0xd5,0x1                                                                                        
003f5e   0012     RETURN    0x0            }//end USBModuleDisable                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBSoftDetach(void)                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    The device will have to be re-enumerated to function again.  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Overview:        USBSoftDetach electrically disconnects the device from       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  the bus. This is done by stop supplying Vusb voltage to      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  pull-up resistor. The pull-down resistors on the host        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  side will pull both differential signal lines low and        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  the host registers the event as a disconnect.                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  Since the USB cable is not physically disconnected, the      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  power supply through the cable can still be sensed by        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  the device. The next time USBCheckBusStatus() function       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  is called, it will reconnect the device back to the bus.     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBSoftDetach(void)                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f60   dffa     RCALL     0x3f56             USBModuleDisable();                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f62   0012     RETURN    0x0            }//end USBSoftDetach                                                             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBDriverService(void)                                  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This routine is the heart of this firmware. It manages       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  all USB interrupts.                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Note:            Device state transitions through the following stages:       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  DETACHED -> ATTACHED -> POWERED -> DEFAULT ->                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  ADDRESS_PENDING -> ADDRESSED -> CONFIGURED -> READY          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBDriverService(void)                                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * Pointless to continue servicing if USB cable is not even attached.        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f64   0101     MOVLB     0x1                if(usb_device_state == DETACHED_STATE) return;                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f66   51d5     MOVF      0xd5,0x0,0x1                                                                                    
003f68   e101     BNZ       0x3f6c                                                                                          
003f6a   d03a     BRA       0x3fe0                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * Task A: Service USB Activity Interrupt                                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f6c   5068     MOVF      0x68,0x0,0x0       if(UIRbits.ACTVIF && UIEbits.ACTVIE)    USBWakeFromSuspend();                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f6e   0b04     ANDLW     0x4                                                                                             
003f70   e004     BZ        0x3f7a                                                                                          
003f72   5069     MOVF      0x69,0x0,0x0                                                                                    
003f74   0b04     ANDLW     0x4                                                                                             
003f76   e001     BZ        0x3f7a                                                                                          
003f78   d83c     RCALL     0x3ff2                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * Pointless to continue servicing if the device is in suspend mode.         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f7a   b26d     BTFSC     0x6d,0x1,0x0       if(UCONbits.SUSPND==1) return;                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f7c   d031     BRA       0x3fe0                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * Task B: Service USB Bus Reset Interrupt.                                  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * When bus reset is received during suspend, ACTVIF will be set first,      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * once the UCONbits.SUSPND is clear, then the URSTIF bit will be asserted.  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * This is why URSTIF is checked after ACTVIF.                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f7e   5068     MOVF      0x68,0x0,0x0       if(UIRbits.URSTIF && UIEbits.URSTIE)    USBProtocolResetHandler();           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f80   0b01     ANDLW     0x1                                                                                             
003f82   e004     BZ        0x3f8c                                                                                          
003f84   5069     MOVF      0x69,0x0,0x0                                                                                    
003f86   0b01     ANDLW     0x1                                                                                             
003f88   e001     BZ        0x3f8c                                                                                          
003f8a   d856     RCALL     0x4038                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * Task C: Service other USB interrupts                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f8c   5068     MOVF      0x68,0x0,0x0       if(UIRbits.IDLEIF && UIEbits.IDLEIE)    USBSuspend();                        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f8e   0b10     ANDLW     0x10                                                                                            
003f90   e004     BZ        0x3f9a                                                                                          
003f92   5069     MOVF      0x69,0x0,0x0                                                                                    
003f94   0b10     ANDLW     0x10                                                                                            
003f96   e001     BZ        0x3f9a                                                                                          
003f98   d824     RCALL     0x3fe2                                                                                          
003f9a   5068     MOVF      0x68,0x0,0x0       if(UIRbits.SOFIF && UIEbits.SOFIE)      USB_SOF_Handler();                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003f9c   0b40     ANDLW     0x40                                                                                            
003f9e   e004     BZ        0x3fa8                                                                                          
003fa0   5069     MOVF      0x69,0x0,0x0                                                                                    
003fa2   0b40     ANDLW     0x40                                                                                            
003fa4   e001     BZ        0x3fa8                                                                                          
003fa6   d83d     RCALL     0x4022                                                                                          
003fa8   5068     MOVF      0x68,0x0,0x0       if(UIRbits.STALLIF && UIEbits.STALLIE)  USBStallHandler();                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003faa   0b20     ANDLW     0x20                                                                                            
003fac   e004     BZ        0x3fb6                                                                                          
003fae   5069     MOVF      0x69,0x0,0x0                                                                                    
003fb0   0b20     ANDLW     0x20                                                                                            
003fb2   e001     BZ        0x3fb6                                                                                          
003fb4   d838     RCALL     0x4026                                                                                          
003fb6   5068     MOVF      0x68,0x0,0x0       if(UIRbits.UERRIF && UIEbits.UERRIE)    USBErrorHandler();                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fb8   0b02     ANDLW     0x2                                                                                             
003fba   e004     BZ        0x3fc4                                                                                          
003fbc   5069     MOVF      0x69,0x0,0x0                                                                                    
003fbe   0b02     ANDLW     0x2                                                                                             
003fc0   e001     BZ        0x3fc4                                                                                          
003fc2   d838     RCALL     0x4034                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * Pointless to continue servicing if the host has not sent a bus reset.     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * Once bus reset is received, the device transitions into the DEFAULT       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * state and is ready for communication.                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fc4   0e03     MOVLW     0x3                if(usb_device_state < DEFAULT_STATE) return;                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fc6   0101     MOVLB     0x1                                                                                             
003fc8   5dd5     SUBWF     0xd5,0x0,0x1                                                                                    
003fca   e201     BC        0x3fce                                                                                          
003fcc   d009     BRA       0x3fe0                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * Task D: Servicing USB Transaction Complete Interrupt                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fce   5068     MOVF      0x68,0x0,0x0       if(UIRbits.TRNIF && UIEbits.TRNIE)                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fd0   0b08     ANDLW     0x8                                                                                             
003fd2   e006     BZ        0x3fe0                                                                                          
003fd4   5069     MOVF      0x69,0x0,0x0                                                                                    
003fd6   0b08     ANDLW     0x8                                                                                             
003fd8   e003     BZ        0x3fe0                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                   /*                                                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                    * USBCtrlEPService only services transactions over EP0.                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                    * It ignores all other EP transactions.                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                    */                                                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fda   ec66     CALL      0x38cc,0x0             USBCtrlEPService();                                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fdc   f01c                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                   /*                                                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                    * Other EP can be serviced later by responsible device class firmware.  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                    * Each device driver knows when an OUT or IN transaction is ready by    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                    * checking the buffer ownership bit.                                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                    * An OUT EP should always be owned by SIE until the data is ready.      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                    * An IN EP should always be owned by CPU until the data is ready.       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                    *                                                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                    * Because of this logic, it is not necessary to save the USTAT value    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                    * of non-EP0 transactions.                                              C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                    */                                                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fde   9668     BCF       0x68,0x3,0x0           UIRbits.TRNIF = 0;                                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               }//end if(UIRbits.TRNIF && UIEbits.TRNIE)                                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fe0   0012     RETURN    0x0            }//end USBDriverService                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBSuspend(void)                                        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Overview:                                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBSuspend(void)                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * NOTE: Do not clear UIRbits.ACTVIF here!                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * Reason:                                                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * ACTVIF is only generated once an IDLEIF has been generated.               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * This is a 1:1 ratio interrupt generation.                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * For every IDLEIF, there will be only one ACTVIF regardless of             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * the number of subsequent bus transitions.                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * If the ACTIF is cleared here, a problem could occur when:                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * [       IDLE       ][bus activity ->                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * <--- 3 ms ----->     ^                                                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *                ^     ACTVIF=1                                             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *                IDLEIF=1                                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *  #           #           #           #   (#=Program polling flags)        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *                          ^                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *                          This polling loop will see both                  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *                          IDLEIF=1 and ACTVIF=1.                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *                          However, the program services IDLEIF first       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *                          because ACTIVIE=0.                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *                          If this routine clears the only ACTIVIF,         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *                          then it can never get out of the suspend         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                *                          mode.                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fe2   8469     BSF       0x69,0x2,0x0       UIEbits.ACTVIE = 1;                     // Enable bus activity interrupt     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fe4   9868     BCF       0x68,0x4,0x0       UIRbits.IDLEIF = 0;                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fe6   826d     BSF       0x6d,0x1,0x0       UCONbits.SUSPND = 1;                    // Put USB module in power conserve  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                       // mode, SIE clock inactive          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * At this point the PIC can go into sleep,idle, or                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * switch to a slower clock, etc.                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /* Modifiable Section */                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fe8   9aa1     BCF       0xa1,0x5,0x0       PIR2bits.USBIF = 0;                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fea   8aa0     BSF       0xa0,0x5,0x0       PIE2bits.USBIE = 1;                     // Set USB wakeup source             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fec   0003     SLEEP                        Sleep();                                // Goto sleep                        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003fee   9aa0     BCF       0xa0,0x5,0x0       PIE2bits.USBIE = 0;                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /* End Modifiable Section */                                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003ff0   0012     RETURN    0x0            }//end USBSuspend                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBWakeFromSuspend(void)                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Overview:                                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBWakeFromSuspend(void)                                                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * If using clock switching, this is the place to restore the                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * original clock frequency.                                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003ff2   926d     BCF       0x6d,0x1,0x0       UCONbits.SUSPND = 0;                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003ff4   9469     BCF       0x69,0x2,0x0       UIEbits.ACTVIE = 0;                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003ff6   9468     BCF       0x68,0x2,0x0       UIRbits.ACTVIF = 0;                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003ff8   0012     RETURN    0x0            }//end USBWakeFromSuspend                                                        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBRemoteWakeup(void)                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This function should be called by user when the device       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  is waken up by an external stimulus other than ACTIVIF.      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  Please read the note below to understand the limitations.    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Note:            The modifiable section in this routine should be changed     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  to meet the application needs. Current implementation        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  temporary blocks other functions from executing for a        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  period of 1-13 ms depending on the core frequency.           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  According to USB 2.0 specification section 7.1.7.7,          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  "The remote wakeup device must hold the resume signaling     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  for at lest 1 ms but for no more than 15 ms."                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  The idea here is to use a delay counter loop, using a        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  common value that would work over a wide range of core       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  frequencies.                                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  That value selected is 1800. See table below:                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  ==========================================================   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  Core Freq(MHz)      MIP         RESUME Signal Period (ms)    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  ==========================================================   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                      48              12          1.05                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                       4              1           12.6                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  ==========================================================   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  * These timing could be incorrect when using code            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                    optimization or extended instruction mode,                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                    or when having other interrupts enabled.                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                    Make sure to verify using the MPLAB SIM's Stopwatch        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBRemoteWakeup(void)                                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               static word delay_count;                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003ffa   0101     MOVLB     0x1                if(usb_stat.RemoteWakeup == 1)          // Check if RemoteWakeup function    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
003ffc   a1d6     BTFSS     0xd6,0x0,0x1                                                                                    
003ffe   d010     BRA       0x4020                                                                                          
                                               {                                       // has been enabled by the host.     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004000   dff8     RCALL     0x3ff2                 USBWakeFromSuspend();               // Unsuspend USB modue               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004002   846d     BSF       0x6d,0x2,0x0           UCONbits.RESUME = 1;                // Start RESUME signaling            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                   /* Modifiable Section */                                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004004   0101     MOVLB     0x1                    delay_count = 1800U;                // Set RESUME line for 1-13 ms       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004006   0e08     MOVLW     0x8                                                                                             
004008   6fdd     MOVWF     0xdd,0x1                                                                                        
00400a   0e07     MOVLW     0x7                                                                                             
00400c   6fde     MOVWF     0xde,0x1                                                                                        
                                                   do                                                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                   {                                                                        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00400e   0101     MOVLB     0x1                        delay_count--;                                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004010   07dd     DECF      0xdd,0x1,0x1                                                                                    
004012   0e00     MOVLW     0x0                                                                                             
004014   5bde     SUBWFB    0xde,0x1,0x1                                                                                    
004016   0101     MOVLB     0x1                    }while(delay_count);                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004018   51dd     MOVF      0xdd,0x0,0x1                                                                                    
00401a   11de     IORWF     0xde,0x0,0x1                                                                                    
00401c   e1f8     BNZ       0x400e                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                   /* End Modifiable Section */                                             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00401e   946d     BCF       0x6d,0x2,0x0           UCONbits.RESUME = 0;                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               }//endif                                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004020   0012     RETURN    0x0            }//end USBRemoteWakeup                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USB_SOF_Handler(void)                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Overview:        The USB host sends out a SOF packet to full-speed devices    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  every 1 ms. This interrupt may be useful for isochronous     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  pipes. End designers should implement callback routine       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  as necessary.                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USB_SOF_Handler(void)                                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /* Callback routine here */                                                  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004022   9c68     BCF       0x68,0x6,0x0       UIRbits.SOFIF = 0;                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004024   0012     RETURN    0x0            }//end USB_SOF_Handler                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBStallHandler(void)                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    A STALL packet is sent to the host by the SIE.               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Overview:        The STALLIF is set anytime the SIE sends out a STALL         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  packet regardless of which endpoint causes it.               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  A Setup transaction overrides the STALL function. A stalled  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  endpoint stops stalling once it receives a setup packet.     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  In this case, the SIE will accepts the Setup packet and      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  set the TRNIF flag to notify the firmware. STALL function    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  for that particular endpoint pipe will be automatically      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  disabled (direction specific).                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  There are a few reasons for an endpoint to be stalled.       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  1. When a non-supported USB request is received.             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                     Example: GET_DESCRIPTOR(DEVICE_QUALIFIER)                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  2. When an endpoint is currently halted.                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  3. When the device class specifies that an endpoint must     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                     stall in response to a specific event.                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                     Example: Mass Storage Device Class                        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                              If the CBW is not valid, the device shall        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                              STALL the Bulk-In pipe.                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                              See USB Mass Storage Class Bulk-only Transport   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                              Specification for more details.                  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Note:            UEPn.EPSTALL can be scanned to see which endpoint causes     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  the stall event.                                             C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  If                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBStallHandler(void)                                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * Does not really have to do anything here,                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * even for the control endpoint.                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * All BDs of Endpoint 0 are owned by SIE right now,                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * but once a Setup Transaction is received, the ownership                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * for EP0_OUT will be returned to CPU.                                      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * When the Setup Transaction is serviced, the ownership                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                * for EP0_IN will then be forced back to CPU by firmware.                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004026   a070     BTFSS     0x70,0x0,0x0       if(UEP0bits.EPSTALL == 1)                                                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004028   d003     BRA       0x4030                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00402a   ecf3     CALL      0x3be6,0x0             USBPrepareForNextSetupTrf();        // Firmware work-around              C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00402c   f01d                                                                                                               
00402e   9070     BCF       0x70,0x0,0x0           UEP0bits.EPSTALL = 0;                                                    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                               }                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004030   9a68     BCF       0x68,0x5,0x0       UIRbits.STALLIF = 0;                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004032   0012     RETURN    0x0            }//end USBStallHandler                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBErrorHandler(void)                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Overview:        The purpose of this interrupt is mainly for debugging        C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  during development. Check UEIR to see which error causes     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  the interrupt.                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBErrorHandler(void)                                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004034   9268     BCF       0x68,0x1,0x0       UIRbits.UERRIF = 0;                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004036   0012     RETURN    0x0            }//end USBErrorHandler                                                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBProtocolResetHandler(void)                           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    A USB bus reset is received from the host.                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    Currently, this routine flushes any pending USB              C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  transactions. It empties out the USTAT FIFO. This action     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  might not be desirable in some applications.                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Overview:        Once a USB bus reset is received from the host, this         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  routine should be called. It resets the device address to    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  zero, disables all non-EP0 endpoints, initializes EP0 to     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  be ready for default communication, clears all USB           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  interrupt flags, unmasks applicable USB interrupts, and      C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                  reinitializes internal state-machine variables.              C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           void USBProtocolResetHandler(void)                                               C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004038   6a6a     CLRF      0x6a,0x0           UEIR = 0;                       // Clear all USB error flags                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00403a   6a68     CLRF      0x68,0x0           UIR = 0;                        // Clears all USB interrupts                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00403c   0e9f     MOVLW     0x9f               UEIE = 0b10011111;              // Unmask all USB error interrupts           C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00403e   6e6b     MOVWF     0x6b,0x0                                                                                        
004040   0e7b     MOVLW     0x7b               UIE = 0b01111011;               // Enable all interrupts except ACTVIE       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004042   6e69     MOVWF     0x69,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004044   6a6e     CLRF      0x6e,0x0           UADDR = 0x00;                   // Reset to default address                  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004046   0e0f     MOVLW     0xf                mDisableEP1to15();              // Reset all non-EP0 UEPn registers          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004048   6ee6     MOVWF     0xe6,0x0                                                                                        
00404a   0e71     MOVLW     0x71                                                                                            
00404c   6ee6     MOVWF     0xe6,0x0                                                                                        
00404e   0e0f     MOVLW     0xf                                                                                             
004050   6ee6     MOVWF     0xe6,0x0                                                                                        
004052   d814     RCALL     0x407c                                                                                          
004054   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004056   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004058   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00405a   0e16     MOVLW     0x16               UEP0 = EP_CTRL|HSHK_EN;         // Init EP0 as a Ctrl EP, see usbdrv.h       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00405c   6e70     MOVWF     0x70,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00405e   a668     BTFSS     0x68,0x3,0x0       while(UIRbits.TRNIF == 1)       // Flush any pending transactions            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004060   d002     BRA       0x4066                                                                                          
004064   d7fc     BRA       0x405e                                                                                          
004062   9668     BCF       0x68,0x3,0x0           UIRbits.TRNIF = 0;                                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004066   986d     BCF       0x6d,0x4,0x0       UCONbits.PKTDIS = 0;            // Make sure packet processing is enabled    C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004068   ecf3     CALL      0x3be6,0x0         USBPrepareForNextSetupTrf();    // Declared in usbctrltrf.c                  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00406a   f01d                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00406c   0101     MOVLB     0x1                usb_stat.RemoteWakeup = 0;      // Default status flag to disable            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00406e   91d6     BCF       0xd6,0x0,0x1                                                                                    
004070   0101     MOVLB     0x1                usb_active_cfg = 0;             // Clear active configuration                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004072   6bd7     CLRF      0xd7,0x1                                                                                        
004074   0101     MOVLB     0x1                usb_device_state = DEFAULT_STATE;                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004076   0e03     MOVLW     0x3                                                                                             
004078   6fd5     MOVWF     0xd5,0x1                                                                                        
00407a   0012     RETURN    0x0            }//end USBProtocolResetHandler                                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /* Auxiliary Function */                                                         C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00407c   cfd9     MOVFF     0xfd9,0xfe6    void ClearArray(byte* startAdr,byte count)                                       C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00407e   ffe6                                                                                                               
004080   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004082   ffd9                                                                                                               
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004084   0efd     MOVLW     0xfd               *startAdr;                                                                   C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004086   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004088   ffe9                                                                                                               
00408a   0efe     MOVLW     0xfe                                                                                            
00408c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00408e   ffea                                                                                                               
004090   0efc     MOVLW     0xfc               while(count)                                                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004092   50db     MOVF      0xdb,0x0,0x0                                                                                    
004094   e004     BZ        0x409e                                                                                          
00409c   d7f9     BRA       0x4090                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                   _asm                                                                     C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004096   6aee     CLRF      0xee,0x0               clrf POSTINC0,0                                                          C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                                   _endasm                                                                  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
004098   0efc     MOVLW     0xfc                   count--;                                                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00409a   06db     DECF      0xdb,0x1,0x0                                                                                    
                                               }//end while                                                                 C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
00409e   52e5     MOVF      0xe5,0x1,0x0   }//end ClearArray                                                                C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
0040a0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0040a2   ffd9                                                                                                               
0040a4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /** EOF usbdrv.c *************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbdrv\usbdrv.c
                                           /*********************************************************************           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *********************************************************************           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * FileName:        usb9.c                                                       C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Dependencies:    See INCLUDES section below                                   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Processor:       PIC18                                                        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Compiler:        C18 2.30.01+                                                 C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Company:         Microchip Technology, Inc.                                   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Software License Agreement                                                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * civil liability for the breach of the terms and conditions of this            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * license.                                                                      C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Author               Date        Comment                                      C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            ********************************************************************/           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           /** I N C L U D E S **********************************************************/  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           #include <p18cxxx.h>                                                             C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           #include "system\typedefs.h"                                                     C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           #include "system\usb\usb.h"                                                      C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           #include "io_cfg.h"                     // Required for self_power status        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           /** V A R I A B L E S ********************************************************/  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           #pragma udata                                                                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           void USBStdGetDscHandler(void);                                                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           void USBStdSetCfgHandler(void);                                                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           void USBStdGetStatusHandler(void);                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           void USBStdFeatureReqHandler(void);                                              C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           #pragma code                                                                     C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Function:        void USBCheckStdRequest(void)                                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Overview:        This routine checks the setup data packet to see if it       C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                  knows how to handle it                                       C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           void USBCheckStdRequest(void)                                                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c06   0104     MOVLB     0x4                if(SetupPkt.RequestType != STANDARD) return;                                 C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c08   5120     MOVF      0x20,0x0,0x1                                                                                    
003c0a   0b60     ANDLW     0x60                                                                                            
003c0c   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003c0e   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003c10   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003c12   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003c14   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003c16   0900     IORLW     0x0                                                                                             
003c18   e001     BZ        0x3c1c                                                                                          
003c1a   d058     BRA       0x3ccc                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c1c   0104     MOVLB     0x4                switch(SetupPkt.bRequest)                                                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c1e   5121     MOVF      0x21,0x0,0x1                                                                                    
003c20   0a07     XORLW     0x7                                                                                             
003c22   e053     BZ        0x3cca                                                                                          
003c24   0a0b     XORLW     0xb                                                                                             
003c26   e051     BZ        0x3cca                                                                                          
003c28   0a07     XORLW     0x7                                                                                             
003c2a   e042     BZ        0x3cb0                                                                                          
003c2c   0a01     XORLW     0x1                                                                                             
003c2e   e02c     BZ        0x3c88                                                                                          
003c30   0a0b     XORLW     0xb                                                                                             
003c32   e028     BZ        0x3c84                                                                                          
003c34   0a02     XORLW     0x2                                                                                             
003c36   e026     BZ        0x3c84                                                                                          
003c38   0a03     XORLW     0x3                                                                                             
003c3a   e022     BZ        0x3c80                                                                                          
003c3c   0a08     XORLW     0x8                                                                                             
003c3e   e012     BZ        0x3c64                                                                                          
003c40   0a01     XORLW     0x1                                                                                             
003c42   e00e     BZ        0x3c60                                                                                          
003c44   0a0f     XORLW     0xf                                                                                             
003c46   e00a     BZ        0x3c5c                                                                                          
003c48   0a03     XORLW     0x3                                                                                             
003c4a   e001     BZ        0x3c4e                                                                                          
003c4c   d03e     BRA       0x3cca                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case SET_ADR:                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c4e   0101     MOVLB     0x1                        ctrl_trf_session_owner = MUID_USB9;                                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c50   0e01     MOVLW     0x1                                                                                             
003c52   6fce     MOVWF     0xce,0x1                                                                                        
003c54   0101     MOVLB     0x1                        usb_device_state = ADR_PENDING_STATE;       // Update state only     C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c56   0e04     MOVLW     0x4                                                                                             
003c58   6fd5     MOVWF     0xd5,0x1                                                                                        
                                                       /* See USBCtrlTrfInHandler() in usbctrltrf.c for the next step */    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c5a   d038     BRA       0x3ccc                     break;                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case GET_DSC:                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c5c   d838     RCALL     0x3cce                     USBStdGetDscHandler();                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c5e   d036     BRA       0x3ccc                     break;                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case SET_CFG:                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c60   d893     RCALL     0x3d88                     USBStdSetCfgHandler();                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c62   d034     BRA       0x3ccc                     break;                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case GET_CFG:                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c64   0101     MOVLB     0x1                        ctrl_trf_session_owner = MUID_USB9;                                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c66   0e01     MOVLW     0x1                                                                                             
003c68   6fce     MOVWF     0xce,0x1                                                                                        
003c6a   0101     MOVLB     0x1                        pSrc.bRam = (byte*)&usb_active_cfg;         // Set Source            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c6c   0ed7     MOVLW     0xd7                                                                                            
003c6e   6fcf     MOVWF     0xcf,0x1                                                                                        
003c70   0e01     MOVLW     0x1                                                                                             
003c72   6fd0     MOVWF     0xd0,0x1                                                                                        
003c74   0101     MOVLB     0x1                        usb_stat.ctrl_trf_mem = _RAM;               // Set memory type       C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c76   93d6     BCF       0xd6,0x1,0x1                                                                                    
003c78   0101     MOVLB     0x1                        LSB(wCount) = 1;                            // Set data count        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c7a   0e01     MOVLW     0x1                                                                                             
003c7c   6fd3     MOVWF     0xd3,0x1                                                                                        
003c7e   d026     BRA       0x3ccc                     break;                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case GET_STATUS:                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c80   d8ab     RCALL     0x3dd8                     USBStdGetStatusHandler();                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c82   d024     BRA       0x3ccc                     break;                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case CLR_FEATURE:                                                        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case SET_FEATURE:                                                        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c84   d8f9     RCALL     0x3e78                     USBStdFeatureReqHandler();                                           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c86   d022     BRA       0x3ccc                     break;                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case GET_INTF:                                                           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c88   0101     MOVLB     0x1                        ctrl_trf_session_owner = MUID_USB9;                                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c8a   0e01     MOVLW     0x1                                                                                             
003c8c   6fce     MOVWF     0xce,0x1                                                                                        
003c8e   0104     MOVLB     0x4                        pSrc.bRam = (byte*)&usb_alt_intf+SetupPkt.bIntfID;  // Set source    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003c90   5124     MOVF      0x24,0x0,0x1                                                                                    
003c92   0101     MOVLB     0x1                                                                                             
003c94   6fcf     MOVWF     0xcf,0x1                                                                                        
003c96   6bd0     CLRF      0xd0,0x1                                                                                        
003c98   0ed8     MOVLW     0xd8                                                                                            
003c9a   0101     MOVLB     0x1                                                                                             
003c9c   27cf     ADDWF     0xcf,0x1,0x1                                                                                    
003c9e   0e01     MOVLW     0x1                                                                                             
003ca0   0101     MOVLB     0x1                                                                                             
003ca2   23d0     ADDWFC    0xd0,0x1,0x1                                                                                    
003ca4   0101     MOVLB     0x1                        usb_stat.ctrl_trf_mem = _RAM;               // Set memory type       C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003ca6   93d6     BCF       0xd6,0x1,0x1                                                                                    
003ca8   0101     MOVLB     0x1                        LSB(wCount) = 1;                            // Set data count        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003caa   0e01     MOVLW     0x1                                                                                             
003cac   6fd3     MOVWF     0xd3,0x1                                                                                        
003cae   d00e     BRA       0x3ccc                     break;                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case SET_INTF:                                                           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003cb0   0101     MOVLB     0x1                        ctrl_trf_session_owner = MUID_USB9;                                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003cb2   0e01     MOVLW     0x1                                                                                             
003cb4   6fce     MOVWF     0xce,0x1                                                                                        
003cb6   0104     MOVLB     0x4                        usb_alt_intf[SetupPkt.bIntfID] = SetupPkt.bAltID;                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003cb8   5124     MOVF      0x24,0x0,0x1                                                                                    
003cba   6aea     CLRF      0xea,0x0                                                                                        
003cbc   0fd8     ADDLW     0xd8                                                                                            
003cbe   6ee9     MOVWF     0xe9,0x0                                                                                        
003cc0   0e01     MOVLW     0x1                                                                                             
003cc2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003cc4   c422     MOVFF     0x422,0xfef                                                                                     
003cc6   ffef                                                                                                               
003cc8   d001     BRA       0x3ccc                     break;                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case SET_DSC:                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case SYNCH_FRAME:                                                        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   default:                                                                 C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003cca   d000     BRA       0x3ccc                     break;                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                               }//end switch                                                                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003ccc   0012     RETURN    0x0            }//end USBCheckStdRequest                                                        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Function:        void USBStdGetDscHandler(void)                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Overview:        This routine handles the standard GET_DESCRIPTOR request.    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                  It utilizes tables dynamically looks up descriptor size.     C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                  This routine should never have to be modified if the tables  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                  in usbdsc.c are declared correctly.                          C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           void USBStdGetDscHandler(void)                                                   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003cce   0e80     MOVLW     0x80               if(SetupPkt.bmRequestType == 0x80)                                           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003cd0   0104     MOVLB     0x4                                                                                             
003cd2   5d20     SUBWF     0x20,0x0,0x1                                                                                    
003cd4   e158     BNZ       0x3d86                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003cd6   0104     MOVLB     0x4                    switch(SetupPkt.bDscType)                                                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003cd8   5123     MOVF      0x23,0x0,0x1                                                                                    
003cda   0a03     XORLW     0x3                                                                                             
003cdc   e034     BZ        0x3d46                                                                                          
003cde   0a01     XORLW     0x1                                                                                             
003ce0   e010     BZ        0x3d02                                                                                          
003ce2   0a03     XORLW     0x3                                                                                             
003ce4   e001     BZ        0x3ce8                                                                                          
003ce6   d04d     BRA       0x3d82                                                                                          
                                                   {                                                                        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                       case DSC_DEV:                                                        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003ce8   0101     MOVLB     0x1                            ctrl_trf_session_owner = MUID_USB9;                              C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003cea   0e01     MOVLW     0x1                                                                                             
003cec   6fce     MOVWF     0xce,0x1                                                                                        
003cee   0101     MOVLB     0x1                            pSrc.bRom = (rom byte*)&device_dsc;                              C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003cf0   0ee6     MOVLW     0xe6                                                                                            
003cf2   6fcf     MOVWF     0xcf,0x1                                                                                        
003cf4   0e42     MOVLW     0x42                                                                                            
003cf6   6fd0     MOVWF     0xd0,0x1                                                                                        
003cf8   0e12     MOVLW     0x12                           wCount._word = sizeof(device_dsc);          // Set data count    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003cfa   0101     MOVLB     0x1                                                                                             
003cfc   6fd3     MOVWF     0xd3,0x1                                                                                        
003cfe   6bd4     CLRF      0xd4,0x1                                                                                        
003d00   d040     BRA       0x3d82                         break;                                                           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                       case DSC_CFG:                                                        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d02   0101     MOVLB     0x1                            ctrl_trf_session_owner = MUID_USB9;                              C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d04   0e01     MOVLW     0x1                                                                                             
003d06   6fce     MOVWF     0xce,0x1                                                                                        
003d08   0104     MOVLB     0x4                            pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d0a   5122     MOVF      0x22,0x0,0x1                                                                                    
003d0c   6ef6     MOVWF     0xf6,0x0                                                                                        
003d0e   6af7     CLRF      0xf7,0x0                                                                                        
003d10   90d8     BCF       0xd8,0x0,0x0                                                                                    
003d12   36f6     RLCF      0xf6,0x1,0x0                                                                                    
003d14   36f7     RLCF      0xf7,0x1,0x0                                                                                    
003d16   0ea7     MOVLW     0xa7                                                                                            
003d18   26f6     ADDWF     0xf6,0x1,0x0                                                                                    
003d1a   0e43     MOVLW     0x43                                                                                            
003d1c   22f7     ADDWFC    0xf7,0x1,0x0                                                                                    
003d1e   0009     TBLRDPOSTINC                                                                                              
003d20   cff5     MOVFF     0xff5,0x1cf                                                                                     
003d22   f1cf                                                                                                               
003d24   000a     TBLRDPOSTDEC                                                                                              
003d26   cff5     MOVFF     0xff5,0x1d0                                                                                     
003d28   f1d0                                                                                                               
003d2a   0e02     MOVLW     0x2                            wCount._word = *(pSrc.wRom+1);              // Set data count    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d2c   0101     MOVLB     0x1                                                                                             
003d2e   6af7     CLRF      0xf7,0x0                                                                                        
003d30   25cf     ADDWF     0xcf,0x0,0x1                                                                                    
003d32   6ef6     MOVWF     0xf6,0x0                                                                                        
003d34   51d0     MOVF      0xd0,0x0,0x1                                                                                    
003d36   22f7     ADDWFC    0xf7,0x1,0x0                                                                                    
003d38   0009     TBLRDPOSTINC                                                                                              
003d3a   cff5     MOVFF     0xff5,0x1d3                                                                                     
003d3c   f1d3                                                                                                               
003d3e   000a     TBLRDPOSTDEC                                                                                              
003d40   cff5     MOVFF     0xff5,0x1d4                                                                                     
003d42   f1d4                                                                                                               
003d44   d01e     BRA       0x3d82                         break;                                                           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                       case DSC_STR:                                                        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d46   0101     MOVLB     0x1                            ctrl_trf_session_owner = MUID_USB9;                              C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d48   0e01     MOVLW     0x1                                                                                             
003d4a   6fce     MOVWF     0xce,0x1                                                                                        
003d4c   0104     MOVLB     0x4                            pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d4e   5122     MOVF      0x22,0x0,0x1                                                                                    
003d50   6ef6     MOVWF     0xf6,0x0                                                                                        
003d52   6af7     CLRF      0xf7,0x0                                                                                        
003d54   90d8     BCF       0xd8,0x0,0x0                                                                                    
003d56   36f6     RLCF      0xf6,0x1,0x0                                                                                    
003d58   36f7     RLCF      0xf7,0x1,0x0                                                                                    
003d5a   0eab     MOVLW     0xab                                                                                            
003d5c   26f6     ADDWF     0xf6,0x1,0x0                                                                                    
003d5e   0e43     MOVLW     0x43                                                                                            
003d60   22f7     ADDWFC    0xf7,0x1,0x0                                                                                    
003d62   0009     TBLRDPOSTINC                                                                                              
003d64   cff5     MOVFF     0xff5,0x1cf                                                                                     
003d66   f1cf                                                                                                               
003d68   000a     TBLRDPOSTDEC                                                                                              
003d6a   cff5     MOVFF     0xff5,0x1d0                                                                                     
003d6c   f1d0                                                                                                               
003d6e   c1cf     MOVFF     0x1cf,0xff6                    wCount._word = *pSrc.bRom;                  // Set data count    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d70   fff6                                                                                                               
003d72   c1d0     MOVFF     0x1d0,0xff7                                                                                     
003d74   fff7                                                                                                               
003d76   0008     TBLRD                                                                                                     
003d78   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003d7a   0101     MOVLB     0x1                                                                                             
003d7c   6fd3     MOVWF     0xd3,0x1                                                                                        
003d7e   6bd4     CLRF      0xd4,0x1                                                                                        
003d80   d000     BRA       0x3d82                         break;                                                           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   }//end switch                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d82   0101     MOVLB     0x1                    usb_stat.ctrl_trf_mem = _ROM;                       // Set memory type   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d84   83d6     BSF       0xd6,0x1,0x1                                                                                    
                                               }//end if                                                                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d86   0012     RETURN    0x0            }//end USBStdGetDscHandler                                                       C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Function:        void USBStdSetCfgHandler(void)                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Overview:        This routine first disables all endpoints by clearing        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                  UEP registers. It then configures (initializes) endpoints    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                  specified in the modifiable section.                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           void USBStdSetCfgHandler(void)                                                   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d88   0101     MOVLB     0x1                ctrl_trf_session_owner = MUID_USB9;                                          C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d8a   0e01     MOVLW     0x1                                                                                             
003d8c   6fce     MOVWF     0xce,0x1                                                                                        
003d8e   0e0f     MOVLW     0xf                mDisableEP1to15();                          // See usbdrv.h                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003d90   6ee6     MOVWF     0xe6,0x0                                                                                        
003d92   0e71     MOVLW     0x71                                                                                            
003d94   6ee6     MOVWF     0xe6,0x0                                                                                        
003d96   0e0f     MOVLW     0xf                                                                                             
003d98   6ee6     MOVWF     0xe6,0x0                                                                                        
003d9a   ec3e     CALL      0x407c,0x0                                                                                      
003d9c   f020                                                                                                               
003d9e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003da0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003da2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003da4   0e01     MOVLW     0x1                ClearArray((byte*)&usb_alt_intf,MAX_NUM_INT);                                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003da6   6ee6     MOVWF     0xe6,0x0                                                                                        
003da8   0ed8     MOVLW     0xd8                                                                                            
003daa   6ee6     MOVWF     0xe6,0x0                                                                                        
003dac   0e01     MOVLW     0x1                                                                                             
003dae   6ee6     MOVWF     0xe6,0x0                                                                                        
003db0   ec3e     CALL      0x407c,0x0                                                                                      
003db2   f020                                                                                                               
003db4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003db6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003db8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003dba   c422     MOVFF     0x422,0x1d7        usb_active_cfg = SetupPkt.bCfgValue;                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dbc   f1d7                                                                                                               
003dbe   0104     MOVLB     0x4                if(SetupPkt.bCfgValue == 0)                                                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dc0   5122     MOVF      0x22,0x0,0x1                                                                                    
003dc2   e104     BNZ       0x3dcc                                                                                          
003dc4   0101     MOVLB     0x1                    usb_device_state = ADDRESS_STATE;                                        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dc6   0e05     MOVLW     0x5                                                                                             
003dc8   6fd5     MOVWF     0xd5,0x1                                                                                        
003dca   d005     BRA       0x3dd6             else                                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dcc   0101     MOVLB     0x1                    usb_device_state = CONFIGURED_STATE;                                     C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dce   0e06     MOVLW     0x6                                                                                             
003dd0   6fd5     MOVWF     0xd5,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   /* Modifiable Section */                                                 C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   #if defined(USB_USE_CDC)                // See autofiles\usbcfg.h        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dd2   ece1     CALL      0x35c2,0x0             CDCInitEP();                                                             C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dd4   f01a                                                                                                               
                                                   #endif                                                                   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   /* End modifiable section */                                             C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                               }//end if(SetupPkt.bcfgValue == 0)                                           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dd6   0012     RETURN    0x0            }//end USBStdSetCfgHandler                                                       C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Function:        void USBStdGetStatusHandler(void)                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Overview:        This routine handles the standard GET_STATUS request         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           void USBStdGetStatusHandler(void)                                                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dd8   0104     MOVLB     0x4                CtrlTrfData._byte0 = 0;                         // Initialize content        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dda   6b28     CLRF      0x28,0x1                                                                                        
003ddc   0104     MOVLB     0x4                CtrlTrfData._byte1 = 0;                                                      C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dde   6b29     CLRF      0x29,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003de0   0104     MOVLB     0x4                switch(SetupPkt.Recipient)                                                   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003de2   5120     MOVF      0x20,0x0,0x1                                                                                    
003de4   0b1f     ANDLW     0x1f                                                                                            
003de6   0a02     XORLW     0x2                                                                                             
003de8   e014     BZ        0x3e12                                                                                          
003dea   0a03     XORLW     0x3                                                                                             
003dec   e00e     BZ        0x3e0a                                                                                          
003dee   0a01     XORLW     0x1                                                                                             
003df0   e001     BZ        0x3df4                                                                                          
003df2   d034     BRA       0x3e5c                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case RCPT_DEV:                                                           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003df4   0101     MOVLB     0x1                        ctrl_trf_session_owner = MUID_USB9;                                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003df6   0e01     MOVLW     0x1                                                                                             
003df8   6fce     MOVWF     0xce,0x1                                                                                        
                                                       /*                                                                   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                        * _byte0: bit0: Self-Powered Status [0] Bus-Powered [1] Self-Powered C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                        *         bit1: RemoteWakeup        [0] Disabled    [1] Enabled     C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                        */                                                                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                       if(self_power == 1)                     // self_power defined in io_cfg.h C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dfa   0104     MOVLB     0x4                            CtrlTrfData._byte0|=0b000000001;    // Set bit0                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dfc   8128     BSF       0x28,0x0,0x1                                                                                    
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003dfe   0101     MOVLB     0x1                        if(usb_stat.RemoteWakeup == 1)          // usb_stat defined in usbmmap.c C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e00   a1d6     BTFSS     0xd6,0x0,0x1                                                                                    
003e02   d002     BRA       0x3e08                                                                                          
003e04   0104     MOVLB     0x4                            CtrlTrfData._byte0|=0b00000010;     // Set bit1                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e06   8328     BSF       0x28,0x1,0x1                                                                                    
003e08   d029     BRA       0x3e5c                     break;                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case RCPT_INTF:                                                          C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e0a   0101     MOVLB     0x1                        ctrl_trf_session_owner = MUID_USB9;     // No data to update         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e0c   0e01     MOVLW     0x1                                                                                             
003e0e   6fce     MOVWF     0xce,0x1                                                                                        
003e10   d025     BRA       0x3e5c                     break;                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   case RCPT_EP:                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e12   0101     MOVLB     0x1                        ctrl_trf_session_owner = MUID_USB9;                                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e14   0e01     MOVLW     0x1                                                                                             
003e16   6fce     MOVWF     0xce,0x1                                                                                        
                                                       /*                                                                   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                        * _byte0: bit0: Halt Status [0] Not Halted [1] Halted               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                        */                                                                  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e18   0104     MOVLB     0x4                        pDst.bRam = (byte*)&ep0Bo+(SetupPkt.EPNum*8)+(SetupPkt.EPDir*4);     C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e1a   5124     MOVF      0x24,0x0,0x1                                                                                    
003e1c   0b0f     ANDLW     0xf                                                                                             
003e1e   0d08     MULLW     0x8                                                                                             
003e20   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003e22   6a2b     CLRF      0x2b,0x0                                                                                        
003e24   0f00     ADDLW     0x0                                                                                             
003e26   6e2a     MOVWF     0x2a,0x0                                                                                        
003e28   0e04     MOVLW     0x4                                                                                             
003e2a   222b     ADDWFC    0x2b,0x1,0x0                                                                                    
003e2c   0104     MOVLB     0x4                                                                                             
003e2e   5124     MOVF      0x24,0x0,0x1                                                                                    
003e30   0b80     ANDLW     0x80                                                                                            
003e32   e001     BZ        0x3e36                                                                                          
003e34   0e01     MOVLW     0x1                                                                                             
003e36   0d04     MULLW     0x4                                                                                             
003e38   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003e3a   0101     MOVLB     0x1                                                                                             
003e3c   242a     ADDWF     0x2a,0x0,0x0                                                                                    
003e3e   6fd1     MOVWF     0xd1,0x1                                                                                        
003e40   0e00     MOVLW     0x0                                                                                             
003e42   202b     ADDWFC    0x2b,0x0,0x0                                                                                    
003e44   6fd2     MOVWF     0xd2,0x1                                                                                        
003e46   c1d1     MOVFF     0x1d1,0xfe9                if(*pDst.bRam & _BSTALL)    // Use _BSTALL as a bit mask             C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e48   ffe9                                                                                                               
003e4a   c1d2     MOVFF     0x1d2,0xfea                                                                                     
003e4c   ffea                                                                                                               
003e4e   50ef     MOVF      0xef,0x0,0x0                                                                                    
003e50   0b04     ANDLW     0x4                                                                                             
003e52   e003     BZ        0x3e5a                                                                                          
003e54   0104     MOVLB     0x4                            CtrlTrfData._byte0=0x01;// Set bit0                              C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e56   0e01     MOVLW     0x1                                                                                             
003e58   6f28     MOVWF     0x28,0x1                                                                                        
003e5a   d000     BRA       0x3e5c                     break;                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                               }//end switch                                                                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e5c   0101     MOVLB     0x1                if(ctrl_trf_session_owner == MUID_USB9)                                      C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e5e   05ce     DECF      0xce,0x0,0x1                                                                                    
003e60   e10a     BNZ       0x3e76                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e62   0101     MOVLB     0x1                    pSrc.bRam = (byte*)&CtrlTrfData;            // Set Source                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e64   0e28     MOVLW     0x28                                                                                            
003e66   6fcf     MOVWF     0xcf,0x1                                                                                        
003e68   0e04     MOVLW     0x4                                                                                             
003e6a   6fd0     MOVWF     0xd0,0x1                                                                                        
003e6c   0101     MOVLB     0x1                    usb_stat.ctrl_trf_mem = _RAM;               // Set memory type           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e6e   93d6     BCF       0xd6,0x1,0x1                                                                                    
003e70   0101     MOVLB     0x1                    LSB(wCount) = 2;                            // Set data count            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e72   0e02     MOVLW     0x2                                                                                             
003e74   6fd3     MOVWF     0xd3,0x1                                                                                        
                                               }//end if(...)                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e76   0012     RETURN    0x0            }//end USBStdGetStatusHandler                                                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Function:        void USBStdFeatureReqHandler(void)                           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Overview:        This routine handles the standard SET & CLEAR FEATURES       C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                  requests                                                     C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           void USBStdFeatureReqHandler(void)                                               C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e78   0104     MOVLB     0x4                if((SetupPkt.bFeature == DEVICE_REMOTE_WAKEUP)&&                             C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e7a   0522     DECF      0x22,0x0,0x1                                                                                    
003e7c   e111     BNZ       0x3ea0                (SetupPkt.Recipient == RCPT_DEV))                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e7e   0104     MOVLB     0x4                                                                                             
003e80   5120     MOVF      0x20,0x0,0x1                                                                                    
003e82   0b1f     ANDLW     0x1f                                                                                            
003e84   0900     IORLW     0x0                                                                                             
003e86   e10c     BNZ       0x3ea0                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e88   0101     MOVLB     0x1                    ctrl_trf_session_owner = MUID_USB9;                                      C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e8a   0e01     MOVLW     0x1                                                                                             
003e8c   6fce     MOVWF     0xce,0x1                                                                                        
003e8e   0e03     MOVLW     0x3                    if(SetupPkt.bRequest == SET_FEATURE)                                     C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e90   0104     MOVLB     0x4                                                                                             
003e92   5d21     SUBWF     0x21,0x0,0x1                                                                                    
003e94   e103     BNZ       0x3e9c                                                                                          
003e96   0101     MOVLB     0x1                        usb_stat.RemoteWakeup = 1;                                           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e98   81d6     BSF       0xd6,0x0,0x1                                                                                    
003e9a   d002     BRA       0x3ea0                 else                                                                     C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e9c   0101     MOVLB     0x1                        usb_stat.RemoteWakeup = 0;                                           C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003e9e   91d6     BCF       0xd6,0x0,0x1                                                                                    
                                               }//end if                                                                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003ea0   0104     MOVLB     0x4                if((SetupPkt.bFeature == ENDPOINT_HALT)&&                                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003ea2   5122     MOVF      0x22,0x0,0x1                                                                                    
003ea4   e13e     BNZ       0x3f22                (SetupPkt.Recipient == RCPT_EP)&&                                         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003ea6   0104     MOVLB     0x4                                                                                             
003ea8   5120     MOVF      0x20,0x0,0x1                                                                                    
003eaa   0b1f     ANDLW     0x1f                                                                                            
003eac   0802     SUBLW     0x2                                                                                             
003eae   e139     BNZ       0x3f22                                                                                          
003eb0   0104     MOVLB     0x4                   (SetupPkt.EPNum != 0))                                                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003eb2   5124     MOVF      0x24,0x0,0x1                                                                                    
003eb4   0b0f     ANDLW     0xf                                                                                             
003eb6   0900     IORLW     0x0                                                                                             
003eb8   e034     BZ        0x3f22                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003eba   0101     MOVLB     0x1                    ctrl_trf_session_owner = MUID_USB9;                                      C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003ebc   0e01     MOVLW     0x1                                                                                             
003ebe   6fce     MOVWF     0xce,0x1                                                                                        
                                                   /* Must do address calculation here */                                   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003ec0   0104     MOVLB     0x4                    pDst.bRam = (byte*)&ep0Bo+(SetupPkt.EPNum*8)+(SetupPkt.EPDir*4);         C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003ec2   5124     MOVF      0x24,0x0,0x1                                                                                    
003ec4   0b0f     ANDLW     0xf                                                                                             
003ec6   0d08     MULLW     0x8                                                                                             
003ec8   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003eca   6a2b     CLRF      0x2b,0x0                                                                                        
003ecc   0f00     ADDLW     0x0                                                                                             
003ece   6e2a     MOVWF     0x2a,0x0                                                                                        
003ed0   0e04     MOVLW     0x4                                                                                             
003ed2   222b     ADDWFC    0x2b,0x1,0x0                                                                                    
003ed4   0104     MOVLB     0x4                                                                                             
003ed6   5124     MOVF      0x24,0x0,0x1                                                                                    
003ed8   0b80     ANDLW     0x80                                                                                            
003eda   e001     BZ        0x3ede                                                                                          
003edc   0e01     MOVLW     0x1                                                                                             
003ede   0d04     MULLW     0x4                                                                                             
003ee0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003ee2   0101     MOVLB     0x1                                                                                             
003ee4   242a     ADDWF     0x2a,0x0,0x0                                                                                    
003ee6   6fd1     MOVWF     0xd1,0x1                                                                                        
003ee8   0e00     MOVLW     0x0                                                                                             
003eea   202b     ADDWFC    0x2b,0x0,0x0                                                                                    
003eec   6fd2     MOVWF     0xd2,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003eee   0e03     MOVLW     0x3                    if(SetupPkt.bRequest == SET_FEATURE)                                     C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003ef0   0104     MOVLB     0x4                                                                                             
003ef2   5d21     SUBWF     0x21,0x0,0x1                                                                                    
003ef4   e107     BNZ       0x3f04                                                                                          
003ef6   0e84     MOVLW     0x84                       *pDst.bRam = _USIE|_BSTALL;                                          C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003ef8   c1d1     MOVFF     0x1d1,0xfe9                                                                                     
003efa   ffe9                                                                                                               
003efc   c1d2     MOVFF     0x1d2,0xfea                                                                                     
003efe   ffea                                                                                                               
003f00   6eef     MOVWF     0xef,0x0                                                                                        
003f02   d00f     BRA       0x3f22                 else                                                                     C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                   {                                                                        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003f04   0104     MOVLB     0x4                        if(SetupPkt.EPDir == 1) // IN                                        C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003f06   af24     BTFSS     0x24,0x7,0x1                                                                                    
003f08   d006     BRA       0x3f16                                                                                          
003f0a   c1d1     MOVFF     0x1d1,0xfe9                    *pDst.bRam = _UCPU;                                              C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003f0c   ffe9                                                                                                               
003f0e   c1d2     MOVFF     0x1d2,0xfea                                                                                     
003f10   ffea                                                                                                               
003f12   6aef     CLRF      0xef,0x0                                                                                        
003f14   d006     BRA       0x3f22                     else                                                                 C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003f16   0e88     MOVLW     0x88                           *pDst.bRam = _USIE|_DAT0|_DTSEN;                                 C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003f18   c1d1     MOVFF     0x1d1,0xfe9                                                                                     
003f1a   ffe9                                                                                                               
003f1c   c1d2     MOVFF     0x1d2,0xfea                                                                                     
003f1e   ffea                                                                                                               
003f20   6eef     MOVWF     0xef,0x0                                                                                        
                                                   }//end if                                                                C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                               }//end if                                                                    C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
003f22   0012     RETURN    0x0            }//end USBStdFeatureReqHandler                                                   C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           /** EOF usb9.c ***************************************************************/  C:\Projects\UBW\FW\D\system\usb\usb9\usb9.c
                                           /*********************************************************************           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *********************************************************************           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * FileName:        usbdsc.c                                                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Dependencies:    See INCLUDES section below                                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Processor:       PIC18                                                        C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Compiler:        C18 2.30.01+                                                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Company:         Microchip Technology, Inc.                                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Software License Agreement                                                    C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * civil liability for the breach of the terms and conditions of this            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * license.                                                                      C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            ********************************************************************/           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           /*********************************************************************           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * -usbdsc.c-                                                                    C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * This file contains the USB descriptor information. It is used                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * in conjunction with the usbdsc.h file. When a descriptor is added             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * or removed from the main configuration descriptor, i.e. CFG01,                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * the user must also change the descriptor structure defined in                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * the usbdsc.h file. The structure is used to calculate the                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * descriptor size, i.e. sizeof(CFG01).                                          C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * A typical configuration descriptor consists of:                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * At least one configuration descriptor (USB_CFG_DSC)                           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * One or more interface descriptors (USB_INTF_DSC)                              C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * One or more endpoint descriptors (USB_EP_DSC)                                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Naming Convention:                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * To resolve ambiguity, the naming convention are as followed:                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * - USB_CFG_DSC type should be named cdxx, where xx is the                      C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *   configuration number. This number should match the actual                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *   index value of this configuration.                                          C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * - USB_INTF_DSC type should be named i<yy>a<zz>, where yy is the               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *   interface number and zz is the alternate interface number.                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * - USB_EP_DSC type should be named ep<##><d>_i<yy>a<zz>, where                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *   ## is the endpoint number and d is the direction of transfer.               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *   The interface name should also be listed as a suffix to identify            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *   which interface does the endpoint belong to.                                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Example:                                                                      C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * If a device has one configuration, two interfaces; interface 0                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * has two endpoints (in and out), and interface 1 has one endpoint(in).         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Then the CFG01 structure in the usbdsc.h should be:                           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * #define CFG01 rom struct                            \                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * {   USB_CFG_DSC             cd01;                   \                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *     USB_INTF_DSC            i00a00;                 \                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *     USB_EP_DSC              ep01o_i00a00;           \                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *     USB_EP_DSC              ep01i_i00a00;           \                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *     USB_INTF_DSC            i01a00;                 \                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *     USB_EP_DSC              ep02i_i01a00;           \                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * } cfg01                                                                       C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Note the hierarchy of the descriptors above, it follows the USB               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * specification requirement. All endpoints belonging to an interface            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * should be listed immediately after that interface.                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Filling in the descriptor values in the usbdsc.c file:                        C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Most items should be self-explanatory, however, a few will be                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * explained for clarification.                                                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * [Configuration Descriptor(USB_CFG_DSC)]                                       C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * The configuration attribute must always have the _DEFAULT                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * definition at the minimum. Additional options can be ORed                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * to the _DEFAULT attribute. Available options are _SELF and _RWU.              C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * These definitions are defined in the usbdefs_std_dsc.h file. The              C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * _SELF tells the USB host that this device is self-powered. The                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * _RWU tells the USB host that this device supports Remote Wakeup.              C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * [Endpoint Descriptor(USB_EP_DSC)]                                             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Assume the following example:                                                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * sizeof(USB_EP_DSC),DSC_EP,_EP01_OUT,_BULK,64,0x00                             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * The first two parameters are self-explanatory. They specify the               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * length of this endpoint descriptor (7) and the descriptor type.               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * The next parameter identifies the endpoint, the definitions are               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * defined in usbdefs_std_dsc.h and has the following naming                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * convention:                                                                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * _EP<##>_<dir>                                                                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * where ## is the endpoint number and dir is the direction of                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * transfer. The dir has the value of either 'OUT' or 'IN'.                      C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * The next parameter identifies the type of the endpoint. Available             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * options are _BULK, _INT, _ISO, and _CTRL. The _CTRL is not                    C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * typically used because the default control transfer endpoint is               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * not defined in the USB descriptors. When _ISO option is used,                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * addition options can be ORed to _ISO. Example:                                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * _ISO|_AD|_FE                                                                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * This describes the endpoint as an isochronous pipe with adaptive              C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * and feedback attributes. See usbdefs_std_dsc.h and the USB                    C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * specification for details. The next parameter defines the size of             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * the endpoint. The last parameter in the polling interval.                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Adding a USB String                                                           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * A string descriptor array should have the following format:                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * rom struct{byte bLength;byte bDscType;word string[size];}sdxxx={              C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * sizeof(sdxxx),DSC_STR,<text>};                                                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * The above structure provides a means for the C compiler to                    C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * calculate the length of string descriptor sdxxx, where xxx is the             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * index number. The first two bytes of the descriptor are descriptor            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * length and type. The rest <text> are string texts which must be               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * in the unicode format. The unicode format is achieved by declaring            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * each character as a word type. The whole text string is declared              C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * as a word array with the number of characters equals to <size>.               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * <size> has to be manually counted and entered into the array                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * declaration. Let's study this through an example:                             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * if the string is "USB" , then the string descriptor should be:                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * (Using index 02)                                                              C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * rom struct{byte bLength;byte bDscType;word string[3];}sd002={                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * sizeof(sd002),DSC_STR,'U','S','B'};                                           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * A USB project may have multiple strings and the firmware supports             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * the management of multiple strings through a look-up table.                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * The look-up table is defined as:                                              C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * rom const unsigned char *rom USB_SD_Ptr[]={&sd000,&sd001,&sd002};             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * The above declaration has 3 strings, sd000, sd001, and sd002.                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Strings can be removed or added. sd000 is a specialized string                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * descriptor. It defines the language code, usually this is                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * US English (0x0409). The index of the string must match the index             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * position of the USB_SD_Ptr array, &sd000 must be in position                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * USB_SD_Ptr[0], &sd001 must be in position USB_SD_Ptr[1] and so on.            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * The look-up table USB_SD_Ptr is used by the get string handler                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * function in usb9.c.                                                           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * The look-up table scheme also applies to the configuration                    C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * descriptor. A USB device may have multiple configuration                      C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * descriptors, i.e. CFG01, CFG02, etc. To add a configuration                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * descriptor, user must implement a structure similar to CFG01.                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * The next step is to add the configuration descriptor name, i.e.               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * cfg01, cfg02,.., to the look-up table USB_CD_Ptr. USB_CD_Ptr[0]               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * is a dummy place holder since configuration 0 is the un-configured            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * state according to the definition in the USB specification.                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            ********************************************************************/           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           /*********************************************************************           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Descriptor specific type definitions are defined in:                          C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * system\usb\usbdefs\usbdefs_std_dsc.h                                          C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            *                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * Configuration information is defined in:                                      C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            * autofiles\usbcfg.h                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                            ********************************************************************/           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           /** I N C L U D E S *************************************************/           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           #include "system\typedefs.h"                                                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           #include "system\usb\usb.h"                                                      C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           /** C O N S T A N T S ************************************************/          C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           #pragma romdata                                                                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           /* Device Descriptor */                                                          C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           rom USB_DEV_DSC device_dsc=                                                      C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           {                                                                                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               sizeof(USB_DEV_DSC),    // Size of this descriptor in bytes                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               DSC_DEV,                // DEVICE descriptor type                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0x0200,                 // USB Spec Release Number in BCD format             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               CDC_DEVICE,             // Class Code                                        C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0x00,                   // Subclass code                                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0x00,                   // Protocol code                                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               EP0_BUFF_SIZE,          // Max packet size for EP0, see usbcfg.h             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0x04D8,                 // Vendor ID                                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0x000A,                 // Product ID: CDC RS-232 Emulation Demo             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0x0000,                 // Device release number in BCD format               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0x01,                   // Manufacturer string index                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0x02,                   // Product string index                              C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0x00,                   // Device serial number string index                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0x01                    // Number of possible configurations                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           };                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           /* Configuration 1 Descriptor */                                                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           CFG01=                                                                           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           {                                                                                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               /* Configuration Descriptor */                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               sizeof(USB_CFG_DSC),    // Size of this descriptor in bytes                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               DSC_CFG,                // CONFIGURATION descriptor type                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               sizeof(cfg01),          // Total length of data for this cfg                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               2,                      // Number of interfaces in this cfg                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               1,                      // Index value of this configuration                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0,                      // Configuration string index                        C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               _DEFAULT,               // Attributes, see usbdefs_std_dsc.h                 C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               50,                     // Max power consumption (2X mA)                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               /* Interface Descriptor */                                                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               sizeof(USB_INTF_DSC),   // Size of this descriptor in bytes                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               DSC_INTF,               // INTERFACE descriptor type                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0,                      // Interface Number                                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0,                      // Alternate Setting Number                          C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               1,                      // Number of endpoints in this intf                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               COMM_INTF,              // Class code                                        C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               ABSTRACT_CONTROL_MODEL, // Subclass code                                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               V25TER,                 // Protocol code                                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0,                      // Interface string index                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               /* CDC Class-Specific Descriptors */                                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               sizeof(USB_CDC_HEADER_FN_DSC),CS_INTERFACE,DSC_FN_HEADER,0x0110,             C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               sizeof(USB_CDC_ACM_FN_DSC),CS_INTERFACE,DSC_FN_ACM,0x02,                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               sizeof(USB_CDC_UNION_FN_DSC),CS_INTERFACE,DSC_FN_UNION,CDC_COMM_INTF_ID,CDC_DATA_INTF_ID, C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               sizeof(USB_CDC_CALL_MGT_FN_DSC),CS_INTERFACE,DSC_FN_CALL_MGT,0x00,CDC_DATA_INTF_ID, C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               /* Endpoint Descriptor */                                                    C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               sizeof(USB_EP_DSC),DSC_EP,_EP02_IN,_INT,CDC_INT_EP_SIZE,0x02,                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               /* Interface Descriptor */                                                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               sizeof(USB_INTF_DSC),   // Size of this descriptor in bytes                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               DSC_INTF,               // INTERFACE descriptor type                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               1,                      // Interface Number                                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0,                      // Alternate Setting Number                          C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               2,                      // Number of endpoints in this intf                  C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               DATA_INTF,              // Class code                                        C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0,                      // Subclass code                                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               NO_PROTOCOL,            // Protocol code                                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               0,                      // Interface string index                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               /* Endpoint Descriptors */                                                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               sizeof(USB_EP_DSC),DSC_EP,_EP03_OUT,_BULK,CDC_BULK_OUT_EP_SIZE,0x00,         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               sizeof(USB_EP_DSC),DSC_EP,_EP03_IN,_BULK,CDC_BULK_IN_EP_SIZE,0x00            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           };                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           rom struct{byte bLength;byte bDscType;word string[1];}sd000={                    C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           sizeof(sd000),DSC_STR,0x0409};                                                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           rom struct{byte bLength;byte bDscType;word string[25];}sd001={                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           sizeof(sd001),DSC_STR,                                                           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           'M','i','c','r','o','c','h','i','p',' ',                                         C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           'T','e','c','h','n','o','l','o','g','y',' ','I','n','c','.'};                    C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           rom struct{byte bLength;byte bDscType;word string[25];}sd002={                   C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           sizeof(sd002),DSC_STR,                                                           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           'C','D','C',' ','R','S','-','2','3','2',' ',                                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           'E','m','u','l','a','t','i','o','n',' ','D','e','m','o'};                        C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           rom const unsigned char *rom USB_CD_Ptr[]={&cfg01,&cfg01};                       C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           rom const unsigned char *rom USB_SD_Ptr[]={&sd000,&sd001,&sd002};                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           rom pFunc ClassReqHandler[1]=                                                    C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           {                                                                                C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                               &USBCheckCDCRequest                                                          C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           };                                                                               C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           #pragma code                                                                     C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                                                                                                            C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           /** EOF usbdsc.c ****************************************************/           C:\Projects\UBW\FW\D\autofiles\usbdsc.c
                                           /*********************************************************************           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *********************************************************************           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * FileName:        usbctrltrf.c                                                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Dependencies:    See INCLUDES section below                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Processor:       PIC18                                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Compiler:        C18 2.30.01+                                                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Company:         Microchip Technology, Inc.                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Software License Agreement                                                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * civil liability for the breach of the terms and conditions of this            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * license.                                                                      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Author               Date        Comment                                      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            ********************************************************************/           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /** I N C L U D E S **********************************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           #include <p18cxxx.h>                                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           #include "system\typedefs.h"                                                     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           #include "system\usb\usb.h"                                                      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /** V A R I A B L E S ********************************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           #pragma udata                                                                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           byte ctrl_trf_state;                // Control Transfer State                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           byte ctrl_trf_session_owner;        // Current transfer session owner            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           POINTER pSrc;                       // Data source pointer                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           POINTER pDst;                       // Data destination pointer                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           WORD wCount;                        // Data counter                              C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfSetupHandler(void);                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfOutHandler(void);                                                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfInHandler(void);                                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           #pragma code                                                                     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlEPService(void)                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    USTAT is loaded with a valid endpoint address.               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        USBCtrlEPService checks for three transaction types that     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  it knows how to service and services them:                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  1. EP0 SETUP                                                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  2. EP0 OUT                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  3. EP0 IN                                                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  It ignores all other types (i.e. EP1, EP2, etc.)             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlEPService(void)                                                      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0038cc   506c     MOVF      0x6c,0x0,0x0       if(USTAT == EP00_OUT)                                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0038ce   e002     BZ        0x38d4                                                                                          
0038d0   0e00     MOVLW     0x0                                                                                             
0038d2   d001     BRA       0x38d6                                                                                          
0038d4   0e01     MOVLW     0x1                                                                                             
0038d6   0900     IORLW     0x0                                                                                             
0038d8   e00b     BZ        0x38f0                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0038da   0104     MOVLB     0x4                    if(ep0Bo.Stat.PID == SETUP_TOKEN)           // EP0 SETUP                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0038dc   5100     MOVF      0x0,0x0,0x1                                                                                     
0038de   0b3c     ANDLW     0x3c                                                                                            
0038e0   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
0038e2   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
0038e4   080d     SUBLW     0xd                                                                                             
0038e6   e102     BNZ       0x38ec                                                                                          
0038e8   d80c     RCALL     0x3902                     USBCtrlTrfSetupHandler();                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0038ea   d001     BRA       0x38ee                 else                                        // EP0 OUT                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0038ec   d842     RCALL     0x3972                     USBCtrlTrfOutHandler();                                              C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               }                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0038ee   d008     BRA       0x3900             else if(USTAT == EP00_IN)                       // EP0 IN                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0038f0   506c     MOVF      0x6c,0x0,0x0                                                                                    
0038f2   e002     BZ        0x38f8                                                                                          
0038f4   0e00     MOVLW     0x0                                                                                             
0038f6   d001     BRA       0x38fa                                                                                          
0038f8   0e01     MOVLW     0x1                                                                                             
0038fa   0904     IORLW     0x4                                                                                             
0038fc   e001     BZ        0x3900                                                                                          
0038fe   d84b     RCALL     0x3996                 USBCtrlTrfInHandler();                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003900   0012     RETURN    0x0            }//end USBCtrlEPService                                                          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfSetupHandler(void)                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    SetupPkt buffer is loaded with valid USB Setup Data          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine is a task dispatcher and has 3 stages.          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  1. It initializes the control transfer state machine.        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  2. It calls on each of the module that may know how to       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     service the Setup Request from the host.                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     Module Example: USB9, HID, CDC, MSD, ...                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     As new classes are added, ClassReqHandler table in        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     usbdsc.c should be updated to call all available          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     class handlers.                                           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  3. Once each of the modules has had a chance to check if     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     it is responsible for servicing the request, stage 3      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     then checks direction of the transfer to determine how    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     to prepare EP0 for the control transfer.                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     Refer to USBCtrlEPServiceComplete() for more details.     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            Microchip USB Firmware has three different states for        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  the control transfer state machine:                          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  1. WAIT_SETUP                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  2. CTRL_TRF_TX                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  3. CTRL_TRF_RX                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  Refer to firmware manual to find out how one state           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  is transitioned to another.                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  A Control Transfer is composed of many USB transactions.     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  When transferring data over multiple transactions,           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  it is important to keep track of data source, data           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  destination, and data count. These three parameters are      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  stored in pSrc,pDst, and wCount. A flag is used to           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  note if the data source is from ROM or RAM.                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003902   cfd9     MOVFF     0xfd9,0xfe6    void USBCtrlTrfSetupHandler(void)                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003904   ffe6                                                                                                               
003906   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003908   ffd9                                                                                                               
00390a   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               byte i;                                                                      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               /* Stage 1 */                                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
00390c   0101     MOVLB     0x1                ctrl_trf_state = WAIT_SETUP;                                                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
00390e   6bcd     CLRF      0xcd,0x1                                                                                        
003910   0101     MOVLB     0x1                ctrl_trf_session_owner = MUID_NULL;     // Set owner to NULL                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003912   6bce     CLRF      0xce,0x1                                                                                        
003914   0101     MOVLB     0x1                wCount._word = 0;                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003916   6bd3     CLRF      0xd3,0x1                                                                                        
003918   6bd4     CLRF      0xd4,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               /* Stage 2 */                                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
00391a   ec03     CALL      0x3c06,0x0         USBCheckStdRequest();                   // See system\usb9\usb9.c            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
00391c   f01e                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
00391e   6adf     CLRF      0xdf,0x0           for(i=0;i < (sizeof(ClassReqHandler)/sizeof(pFunc));i++)                     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003920   50df     MOVF      0xdf,0x0,0x0                                                                                    
003922   6e2a     MOVWF     0x2a,0x0                                                                                        
003924   6a2b     CLRF      0x2b,0x0                                                                                        
003926   0e01     MOVLW     0x1                                                                                             
003928   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
00392a   0e00     MOVLW     0x0                                                                                             
00392c   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
00392e   e21b     BC        0x3966                                                                                          
003962   2adf     INCF      0xdf,0x1,0x0                                                                                    
003964   d7dd     BRA       0x3920                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003930   0101     MOVLB     0x1                    if(ctrl_trf_session_owner != MUID_NULL)break;                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003932   51ce     MOVF      0xce,0x0,0x1                                                                                    
003934   e001     BZ        0x3938                                                                                          
003936   d017     BRA       0x3966                                                                                          
003938   6af7     CLRF      0xf7,0x0               ClassReqHandler[i]();               // See autofiles\usbdsc.c            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
00393a   34df     RLCF      0xdf,0x0,0x0                                                                                    
00393c   0bfe     ANDLW     0xfe                                                                                            
00393e   36f7     RLCF      0xf7,0x1,0x0                                                                                    
003940   6ef6     MOVWF     0xf6,0x0                                                                                        
003942   0eb1     MOVLW     0xb1                                                                                            
003944   26f6     ADDWF     0xf6,0x1,0x0                                                                                    
003946   0e43     MOVLW     0x43                                                                                            
003948   22f7     ADDWFC    0xf7,0x1,0x0                                                                                    
00394a   0009     TBLRDPOSTINC                                                                                              
00394c   cff5     MOVFF     0xff5,0x2a                                                                                      
00394e   f02a                                                                                                               
003950   0008     TBLRD                                                                                                     
003952   cff5     MOVFF     0xff5,0x2b                                                                                      
003954   f02b                                                                                                               
003956   d004     BRA       0x3960                                                                                          
003958   c02b     MOVFF     0x2b,0xffa                                                                                      
00395a   fffa                                                                                                               
00395c   502a     MOVF      0x2a,0x0,0x0                                                                                    
00395e   6ef9     MOVWF     0xf9,0x0                                                                                        
003960   dffb     RCALL     0x3958                                                                                          
                                               }//end while                                                                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               /* Stage 3 */                                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003966   d8f0     RCALL     0x3b48             USBCtrlEPServiceComplete();                                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003968   52e5     MOVF      0xe5,0x1,0x0   }//end USBCtrlTrfSetupHandler                                                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
00396a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00396c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00396e   ffd9                                                                                                               
003970   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfOutHandler(void)                              C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine handles an OUT transaction according to         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  which control transfer state is currently active.            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            Note that if the the control transfer was from               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  host to device, the session owner should be notified         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  at the end of each OUT transaction to service the            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  received data.                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfOutHandler(void)                                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003972   0e02     MOVLW     0x2                if(ctrl_trf_state == CTRL_TRF_RX)                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003974   0101     MOVLB     0x1                                                                                             
003976   5dcd     SUBWF     0xcd,0x0,0x1                                                                                    
003978   e10c     BNZ       0x3992                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
00397a   d8a4     RCALL     0x3ac4                 USBCtrlTrfRxService();                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                   /*                                                                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                    * Don't have to worry about overwriting _KEEP bit                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                    * because if _KEEP was set, TRNIF would not have been                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                    * generated in the first place.                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                    */                                                                      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
00397c   0104     MOVLB     0x4                    if(ep0Bo.Stat.DTS == 0)                                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
00397e   bd00     BTFSC     0x0,0x6,0x1                                                                                     
003980   d004     BRA       0x398a                                                                                          
003982   0104     MOVLB     0x4                        ep0Bo.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003984   0ec8     MOVLW     0xc8                                                                                            
003986   6f00     MOVWF     0x0,0x1                                                                                         
003988   d003     BRA       0x3990                 else                                                                     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
00398a   0104     MOVLB     0x4                        ep0Bo.Stat._byte = _USIE|_DAT0|_DTSEN;                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
00398c   0e88     MOVLW     0x88                                                                                            
00398e   6f00     MOVWF     0x0,0x1                                                                                         
                                               }                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003990   d001     BRA       0x3994             else    // CTRL_TRF_TX                                                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003992   d929     RCALL     0x3be6                 USBPrepareForNextSetupTrf();                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003994   0012     RETURN    0x0            }//end USBCtrlTrfOutHandler                                                      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfInHandler(void)                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine handles an IN transaction according to          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  which control transfer state is currently active.            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            A Set Address Request must not change the acutal address     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  of the device until the completion of the control            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  transfer. The end of the control transfer for Set Address    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  Request is an IN transaction. Therefore it is necessary      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  to service this unique situation when the condition is       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  right. Macro mUSBCheckAdrPendingState is defined in          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  usb9.h and its function is to specifically service this      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  event.                                                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfInHandler(void)                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003996   0e04     MOVLW     0x4                mUSBCheckAdrPendingState();         // Must check if in ADR_PENDING_STATE    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003998   0101     MOVLB     0x1                                                                                             
00399a   5dd5     SUBWF     0xd5,0x0,0x1                                                                                    
00399c   e10c     BNZ       0x39b6                                                                                          
00399e   c422     MOVFF     0x422,0xf6e                                                                                     
0039a0   ff6e                                                                                                               
0039a2   506e     MOVF      0x6e,0x0,0x0                                                                                    
0039a4   0800     SUBLW     0x0                                                                                             
0039a6   e204     BC        0x39b0                                                                                          
0039a8   0101     MOVLB     0x1                                                                                             
0039aa   0e05     MOVLW     0x5                                                                                             
0039ac   6fd5     MOVWF     0xd5,0x1                                                                                        
0039ae   d003     BRA       0x39b6                                                                                          
0039b0   0101     MOVLB     0x1                                                                                             
0039b2   0e03     MOVLW     0x3                                                                                             
0039b4   6fd5     MOVWF     0xd5,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039b6   0101     MOVLB     0x1                if(ctrl_trf_state == CTRL_TRF_TX)                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039b8   05cd     DECF      0xcd,0x0,0x1                                                                                    
0039ba   e10c     BNZ       0x39d4                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039bc   d80d     RCALL     0x39d8                 USBCtrlTrfTxService();                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039be   0104     MOVLB     0x4                    if(ep0Bi.Stat.DTS == 0)                                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039c0   bd04     BTFSC     0x4,0x6,0x1                                                                                     
0039c2   d004     BRA       0x39cc                                                                                          
0039c4   0104     MOVLB     0x4                        ep0Bi.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039c6   0ec8     MOVLW     0xc8                                                                                            
0039c8   6f04     MOVWF     0x4,0x1                                                                                         
0039ca   d003     BRA       0x39d2                 else                                                                     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039cc   0104     MOVLB     0x4                        ep0Bi.Stat._byte = _USIE|_DAT0|_DTSEN;                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039ce   0e88     MOVLW     0x88                                                                                            
0039d0   6f04     MOVWF     0x4,0x1                                                                                         
                                               }                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039d2   d001     BRA       0x39d6             else // CTRL_TRF_RX                                                          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039d4   d908     RCALL     0x3be6                 USBPrepareForNextSetupTrf();                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039d6   0012     RETURN    0x0            }//end USBCtrlTrfInHandler                                                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfTxService(void)                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    pSrc, wCount, and usb_stat.ctrl_trf_mem are setup properly.  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine should be called from only two places.          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  One from USBCtrlEPServiceComplete() and one from             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  USBCtrlTrfInHandler(). It takes care of managing a           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  transfer over multiple USB transactions.                     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            This routine works with isochronous endpoint larger than     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  256 bytes and is shown here as an example of how to deal     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  with BC9 and BC8. In reality, a control endpoint can never   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  be larger than 64 bytes.                                     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039d8   cfd9     MOVFF     0xfd9,0xfe6    void USBCtrlTrfTxService(void)                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039da   ffe6                                                                                                               
0039dc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0039de   ffd9                                                                                                               
0039e0   0e02     MOVLW     0x2                                                                                             
0039e2   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               WORD byte_to_send;                                                           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                * First, have to figure out how many byte of data to send.                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039e4   0101     MOVLB     0x1                if(wCount._word < EP0_BUFF_SIZE)                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039e6   0e08     MOVLW     0x8                                                                                             
0039e8   5dd3     SUBWF     0xd3,0x0,0x1                                                                                    
0039ea   0e00     MOVLW     0x0                                                                                             
0039ec   59d4     SUBWFB    0xd4,0x0,0x1                                                                                    
0039ee   e205     BC        0x39fa                                                                                          
0039f0   c1d3     MOVFF     0x1d3,0xfde            byte_to_send._word = wCount._word;                                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039f2   ffde                                                                                                               
0039f4   c1d4     MOVFF     0x1d4,0xfdd                                                                                     
0039f6   ffdd                                                                                                               
0039f8   d003     BRA       0x3a00             else                                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039fa   0e08     MOVLW     0x8                    byte_to_send._word = EP0_BUFF_SIZE;                                      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
0039fc   6ede     MOVWF     0xde,0x0                                                                                        
0039fe   6add     CLRF      0xdd,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                * Next, load the number of bytes to send to BC9..0 in buffer descriptor     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a00   0104     MOVLB     0x4                ep0Bi.Stat.BC9 = 0;                                                          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a02   9304     BCF       0x4,0x1,0x1                                                                                     
003a04   0104     MOVLB     0x4                ep0Bi.Stat.BC8 = 0;                                                          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a06   9104     BCF       0x4,0x0,0x1                                                                                     
003a08   0e01     MOVLW     0x1                ep0Bi.Stat._byte |= MSB(byte_to_send);                                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a0a   50db     MOVF      0xdb,0x0,0x0                                                                                    
003a0c   0104     MOVLB     0x4                                                                                             
003a0e   1304     IORWF     0x4,0x1,0x1                                                                                     
003a10   cfdf     MOVFF     0xfdf,0x405        ep0Bi.Cnt = LSB(byte_to_send);                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a12   f405                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                * Subtract the number of bytes just about to be sent from the total.        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a14   0e00     MOVLW     0x0                wCount._word = wCount._word - byte_to_send._word;                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a16   50db     MOVF      0xdb,0x0,0x0                                                                                    
003a18   0101     MOVLB     0x1                                                                                             
003a1a   5fd3     SUBWF     0xd3,0x1,0x1                                                                                    
003a1c   0e01     MOVLW     0x1                                                                                             
003a1e   50db     MOVF      0xdb,0x0,0x0                                                                                    
003a20   0101     MOVLB     0x1                                                                                             
003a22   5bd4     SUBWFB    0xd4,0x1,0x1                                                                                    
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a24   0101     MOVLB     0x1                pDst.bRam = (byte*)&CtrlTrfData;        // Set destination pointer           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a26   0e28     MOVLW     0x28                                                                                            
003a28   6fd1     MOVWF     0xd1,0x1                                                                                        
003a2a   0e04     MOVLW     0x4                                                                                             
003a2c   6fd2     MOVWF     0xd2,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a2e   0101     MOVLB     0x1                if(usb_stat.ctrl_trf_mem == _ROM)       // Determine type of memory source   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a30   a3d6     BTFSS     0xd6,0x1,0x1                                                                                    
003a32   d020     BRA       0x3a74                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a34   cfd9     MOVFF     0xfd9,0xfe9            while(byte_to_send._word)                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a36   ffe9                                                                                                               
003a38   cfda     MOVFF     0xfda,0xfea                                                                                     
003a3a   ffea                                                                                                               
003a3c   50ee     MOVF      0xee,0x0,0x0                                                                                    
003a3e   10ed     IORWF     0xed,0x0,0x0                                                                                    
003a40   e018     BZ        0x3a72                                                                                          
003a70   d7e1     BRA       0x3a34                                                                                          
                                                   {                                                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a42   c1cf     MOVFF     0x1cf,0xff6                *pDst.bRam = *pSrc.bRom;                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a44   fff6                                                                                                               
003a46   c1d0     MOVFF     0x1d0,0xff7                                                                                     
003a48   fff7                                                                                                               
003a4a   0008     TBLRD                                                                                                     
003a4c   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003a4e   c1d1     MOVFF     0x1d1,0xfe9                                                                                     
003a50   ffe9                                                                                                               
003a52   c1d2     MOVFF     0x1d2,0xfea                                                                                     
003a54   ffea                                                                                                               
003a56   6eef     MOVWF     0xef,0x0                                                                                        
003a58   0101     MOVLB     0x1                        pDst.bRam++;                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a5a   2bd1     INCF      0xd1,0x1,0x1                                                                                    
003a5c   0e00     MOVLW     0x0                                                                                             
003a5e   23d2     ADDWFC    0xd2,0x1,0x1                                                                                    
003a60   0101     MOVLB     0x1                        pSrc.bRom++;                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a62   2bcf     INCF      0xcf,0x1,0x1                                                                                    
003a64   0e00     MOVLW     0x0                                                                                             
003a66   23d0     ADDWFC    0xd0,0x1,0x1                                                                                    
003a68   06df     DECF      0xdf,0x1,0x0               byte_to_send._word--;                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a6a   0e01     MOVLW     0x1                                                                                             
003a6c   e201     BC        0x3a70                                                                                          
003a6e   06db     DECF      0xdb,0x1,0x0                                                                                    
                                                   }//end while(byte_to_send._word)                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               }                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a72   d01e     BRA       0x3ab0             else // RAM                                                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a74   cfd9     MOVFF     0xfd9,0xfe9            while(byte_to_send._word)                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a76   ffe9                                                                                                               
003a78   cfda     MOVFF     0xfda,0xfea                                                                                     
003a7a   ffea                                                                                                               
003a7c   50ee     MOVF      0xee,0x0,0x0                                                                                    
003a7e   10ed     IORWF     0xed,0x0,0x0                                                                                    
003a80   e017     BZ        0x3ab0                                                                                          
003aae   d7e2     BRA       0x3a74                                                                                          
                                                   {                                                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a82   c1cf     MOVFF     0x1cf,0xfe9                *pDst.bRam = *pSrc.bRam;                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a84   ffe9                                                                                                               
003a86   c1d0     MOVFF     0x1d0,0xfea                                                                                     
003a88   ffea                                                                                                               
003a8a   50ef     MOVF      0xef,0x0,0x0                                                                                    
003a8c   c1d1     MOVFF     0x1d1,0xfe9                                                                                     
003a8e   ffe9                                                                                                               
003a90   c1d2     MOVFF     0x1d2,0xfea                                                                                     
003a92   ffea                                                                                                               
003a94   6eef     MOVWF     0xef,0x0                                                                                        
003a96   0101     MOVLB     0x1                        pDst.bRam++;                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003a98   2bd1     INCF      0xd1,0x1,0x1                                                                                    
003a9a   0e00     MOVLW     0x0                                                                                             
003a9c   23d2     ADDWFC    0xd2,0x1,0x1                                                                                    
003a9e   0101     MOVLB     0x1                        pSrc.bRam++;                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003aa0   2bcf     INCF      0xcf,0x1,0x1                                                                                    
003aa2   0e00     MOVLW     0x0                                                                                             
003aa4   23d0     ADDWFC    0xd0,0x1,0x1                                                                                    
003aa6   06df     DECF      0xdf,0x1,0x0               byte_to_send._word--;                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003aa8   0e01     MOVLW     0x1                                                                                             
003aaa   e201     BC        0x3aae                                                                                          
003aac   06db     DECF      0xdb,0x1,0x0                                                                                    
                                                   }//end while(byte_to_send._word)                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               }//end if(usb_stat.ctrl_trf_mem == _ROM)                                     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003ab0   0e02     MOVLW     0x2            }//end USBCtrlTrfTxService                                                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003ab2   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
003ab4   e202     BC        0x3aba                                                                                          
003ab6   6ae1     CLRF      0xe1,0x0                                                                                        
003ab8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003aba   6ee1     MOVWF     0xe1,0x0                                                                                        
003abc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003abe   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003ac0   ffd9                                                                                                               
003ac2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfRxService(void)                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    pDst and wCount are setup properly.                          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  pSrc is always &CtrlTrfData                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  usb_stat.ctrl_trf_mem is always _RAM.                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  wCount should be set to 0 at the start of each control       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  transfer.                                                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        *** This routine is only partially complete. Check for       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  new version of the firmware.                                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003ac4   cfd9     MOVFF     0xfd9,0xfe6    void USBCtrlTrfRxService(void)                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003ac6   ffe6                                                                                                               
003ac8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003aca   ffd9                                                                                                               
003acc   0e02     MOVLW     0x2                                                                                             
003ace   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               WORD byte_to_read;                                                           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003ad0   0e03     MOVLW     0x3                MSB(byte_to_read) = 0x03 & ep0Bo.Stat._byte;    // Filter out last 2 bits    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003ad2   0104     MOVLB     0x4                                                                                             
003ad4   1500     ANDWF     0x0,0x0,0x1                                                                                     
003ad6   6ee7     MOVWF     0xe7,0x0                                                                                        
003ad8   0e01     MOVLW     0x1                                                                                             
003ada   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003adc   ffdb                                                                                                               
003ade   c401     MOVFF     0x401,0xfdf        LSB(byte_to_read) = ep0Bo.Cnt;                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003ae0   ffdf                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                * Accumulate total number of bytes read                                     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003ae2   50de     MOVF      0xde,0x0,0x0       wCount._word = wCount._word + byte_to_read._word;                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003ae4   0101     MOVLB     0x1                                                                                             
003ae6   27d3     ADDWF     0xd3,0x1,0x1                                                                                    
003ae8   50dd     MOVF      0xdd,0x0,0x0                                                                                    
003aea   0101     MOVLB     0x1                                                                                             
003aec   23d4     ADDWFC    0xd4,0x1,0x1                                                                                    
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003aee   0101     MOVLB     0x1                pSrc.bRam = (byte*)&CtrlTrfData;                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003af0   0e28     MOVLW     0x28                                                                                            
003af2   6fcf     MOVWF     0xcf,0x1                                                                                        
003af4   0e04     MOVLW     0x4                                                                                             
003af6   6fd0     MOVWF     0xd0,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003af8   cfd9     MOVFF     0xfd9,0xfe9        while(byte_to_read._word)                                                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003afa   ffe9                                                                                                               
003afc   cfda     MOVFF     0xfda,0xfea                                                                                     
003afe   ffea                                                                                                               
003b00   50ee     MOVF      0xee,0x0,0x0                                                                                    
003b02   10ed     IORWF     0xed,0x0,0x0                                                                                    
003b04   e017     BZ        0x3b34                                                                                          
003b32   d7e2     BRA       0x3af8                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b06   c1cf     MOVFF     0x1cf,0xfe9            *pDst.bRam = *pSrc.bRam;                                                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b08   ffe9                                                                                                               
003b0a   c1d0     MOVFF     0x1d0,0xfea                                                                                     
003b0c   ffea                                                                                                               
003b0e   50ef     MOVF      0xef,0x0,0x0                                                                                    
003b10   c1d1     MOVFF     0x1d1,0xfe9                                                                                     
003b12   ffe9                                                                                                               
003b14   c1d2     MOVFF     0x1d2,0xfea                                                                                     
003b16   ffea                                                                                                               
003b18   6eef     MOVWF     0xef,0x0                                                                                        
003b1a   0101     MOVLB     0x1                    pDst.bRam++;                                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b1c   2bd1     INCF      0xd1,0x1,0x1                                                                                    
003b1e   0e00     MOVLW     0x0                                                                                             
003b20   23d2     ADDWFC    0xd2,0x1,0x1                                                                                    
003b22   0101     MOVLB     0x1                    pSrc.bRam++;                                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b24   2bcf     INCF      0xcf,0x1,0x1                                                                                    
003b26   0e00     MOVLW     0x0                                                                                             
003b28   23d0     ADDWFC    0xd0,0x1,0x1                                                                                    
003b2a   06df     DECF      0xdf,0x1,0x0           byte_to_read._word--;                                                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b2c   0e01     MOVLW     0x1                                                                                             
003b2e   e201     BC        0x3b32                                                                                          
003b30   06db     DECF      0xdb,0x1,0x0                                                                                    
                                               }//end while(byte_to_read._word)                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b34   0e02     MOVLW     0x2            }//end USBCtrlTrfRxService                                                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b36   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
003b38   e202     BC        0x3b3e                                                                                          
003b3a   6ae1     CLRF      0xe1,0x0                                                                                        
003b3c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b3e   6ee1     MOVWF     0xe1,0x0                                                                                        
003b40   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b42   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003b44   ffd9                                                                                                               
003b46   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlEPServiceComplete(void)                          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine wrap up the ramaining tasks in servicing        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  a Setup Request. Its main task is to set the endpoint        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  controls appropriately for a given situation. See code       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  below.                                                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  There are three main scenarios:                              C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  a) There was no handler for the Request, in this case        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     a STALL should be sent out.                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  b) The host has requested a read control transfer,           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     endpoints are required to be setup in a specific way.     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  c) The host has requested a write control transfer, or       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     a control data stage is not required, endpoints are       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     required to be setup in a specific way.                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  Packet processing is resumed by clearing PKTDIS bit.         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlEPServiceComplete(void)                                              C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                * PKTDIS bit is set when a Setup Transaction is received.                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                * Clear to resume packet processing.                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b48   986d     BCF       0x6d,0x4,0x0       UCONbits.PKTDIS = 0;                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b4a   0101     MOVLB     0x1                if(ctrl_trf_session_owner == MUID_NULL)                                      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b4c   51ce     MOVF      0xce,0x0,0x1                                                                                    
003b4e   e10f     BNZ       0x3b6e                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                   /*                                                                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                    * If no one knows how to service this request then stall.               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                    * Must also prepare EP0 to receive the next SETUP transaction.          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                    */                                                                      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b50   0104     MOVLB     0x4                    ep0Bo.Cnt = EP0_BUFF_SIZE;                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b52   0e08     MOVLW     0x8                                                                                             
003b54   6f01     MOVWF     0x1,0x1                                                                                         
003b56   0104     MOVLB     0x4                    ep0Bo.ADR = (byte*)&SetupPkt;                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b58   0e20     MOVLW     0x20                                                                                            
003b5a   6f02     MOVWF     0x2,0x1                                                                                         
003b5c   0e04     MOVLW     0x4                                                                                             
003b5e   6f03     MOVWF     0x3,0x1                                                                                         
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b60   0104     MOVLB     0x4                    ep0Bo.Stat._byte = _USIE|_BSTALL;                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b62   0e84     MOVLW     0x84                                                                                            
003b64   6f00     MOVWF     0x0,0x1                                                                                         
003b66   0104     MOVLB     0x4                    ep0Bi.Stat._byte = _USIE|_BSTALL;                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b68   0e84     MOVLW     0x84                                                                                            
003b6a   6f04     MOVWF     0x4,0x1                                                                                         
                                               }                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b6c   d03b     BRA       0x3be4             else    // A module has claimed ownership of the control transfer session.   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b6e   0104     MOVLB     0x4                    if(SetupPkt.DataDir == DEV_TO_HOST)                                      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b70   af20     BTFSS     0x20,0x7,0x1                                                                                    
003b72   d025     BRA       0x3bbe                                                                                          
                                                   {                                                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b74   0101     MOVLB     0x1                        if(SetupPkt.wLength < wCount._word)                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b76   51d3     MOVF      0xd3,0x0,0x1                                                                                    
003b78   0104     MOVLB     0x4                                                                                             
003b7a   5d26     SUBWF     0x26,0x0,0x1                                                                                    
003b7c   0101     MOVLB     0x1                                                                                             
003b7e   51d4     MOVF      0xd4,0x0,0x1                                                                                    
003b80   0104     MOVLB     0x4                                                                                             
003b82   5927     SUBWFB    0x27,0x0,0x1                                                                                    
003b84   e204     BC        0x3b8e                                                                                          
003b86   c426     MOVFF     0x426,0x1d3                    wCount._word = SetupPkt.wLength;                                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b88   f1d3                                                                                                               
003b8a   c427     MOVFF     0x427,0x1d4                                                                                     
003b8c   f1d4                                                                                                               
003b8e   df24     RCALL     0x39d8                     USBCtrlTrfTxService();                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b90   0101     MOVLB     0x1                        ctrl_trf_state = CTRL_TRF_TX;                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b92   0e01     MOVLW     0x1                                                                                             
003b94   6fcd     MOVWF     0xcd,0x1                                                                                        
                                                       /*                                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * Control Read:                                                     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * <SETUP[0]><IN[1]><IN[0]>...<OUT[1]> | <SETUP[0]>                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * 1. Prepare OUT EP to respond to early termination                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * NOTE:                                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * If something went wrong during the control transfer,              C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * the last status stage may not be sent by the host.                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * When this happens, two different things could happen              C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * depending on the host.                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * a) The host could send out a RESET.                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * b) The host could send out a new SETUP transaction                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        *    without sending a RESET first.                                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * To properly handle case (b), the OUT EP must be setup             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * to receive either a zero length OUT transaction, or a             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * new SETUP transaction.                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * Since the SETUP transaction requires the DTS bit to be            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * DAT0 while the zero length OUT status requires the DTS            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * bit to be DAT1, the DTS bit check by the hardware should          C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * be disabled. This way the SIE could accept either of              C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * the two transactions.                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * Furthermore, the Cnt byte should be set to prepare for            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * the SETUP data (8-byte or more), and the buffer address           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * should be pointed to SetupPkt.                                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        */                                                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b96   0104     MOVLB     0x4                        ep0Bo.Cnt = EP0_BUFF_SIZE;                                           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b98   0e08     MOVLW     0x8                                                                                             
003b9a   6f01     MOVWF     0x1,0x1                                                                                         
003b9c   0104     MOVLB     0x4                        ep0Bo.ADR = (byte*)&SetupPkt;                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003b9e   0e20     MOVLW     0x20                                                                                            
003ba0   6f02     MOVWF     0x2,0x1                                                                                         
003ba2   0e04     MOVLW     0x4                                                                                             
003ba4   6f03     MOVWF     0x3,0x1                                                                                         
003ba6   0104     MOVLB     0x4                        ep0Bo.Stat._byte = _USIE;           // Note: DTSEN is 0!             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003ba8   0e80     MOVLW     0x80                                                                                            
003baa   6f00     MOVWF     0x0,0x1                                                                                         
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                       /*                                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * 2. Prepare IN EP to transfer data, Cnt should have                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        *    been initialized by responsible request owner.                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        */                                                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bac   0104     MOVLB     0x4                        ep0Bi.ADR = (byte*)&CtrlTrfData;                                     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bae   0e28     MOVLW     0x28                                                                                            
003bb0   6f06     MOVWF     0x6,0x1                                                                                         
003bb2   0e04     MOVLW     0x4                                                                                             
003bb4   6f07     MOVWF     0x7,0x1                                                                                         
003bb6   0104     MOVLB     0x4                        ep0Bi.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bb8   0ec8     MOVLW     0xc8                                                                                            
003bba   6f04     MOVWF     0x4,0x1                                                                                         
                                                   }                                                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bbc   d013     BRA       0x3be4                 else    // (SetupPkt.DataDir == HOST_TO_DEV)                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                   {                                                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bbe   0101     MOVLB     0x1                        ctrl_trf_state = CTRL_TRF_RX;                                        C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bc0   0e02     MOVLW     0x2                                                                                             
003bc2   6fcd     MOVWF     0xcd,0x1                                                                                        
                                                       /*                                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * Control Write:                                                    C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * <SETUP[0]><OUT[1]><OUT[0]>...<IN[1]> | <SETUP[0]>                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * 1. Prepare IN EP to respond to early termination                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        *    This is the same as a Zero Length Packet Response              C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        *    for control transfer without a data stage                      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        */                                                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bc4   0104     MOVLB     0x4                        ep0Bi.Cnt = 0;                                                       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bc6   6b05     CLRF      0x5,0x1                                                                                         
003bc8   0104     MOVLB     0x4                        ep0Bi.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bca   0ec8     MOVLW     0xc8                                                                                            
003bcc   6f04     MOVWF     0x4,0x1                                                                                         
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                       /*                                                                   C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        * 2. Prepare OUT EP to receive data.                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                        */                                                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bce   0104     MOVLB     0x4                        ep0Bo.Cnt = EP0_BUFF_SIZE;                                           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bd0   0e08     MOVLW     0x8                                                                                             
003bd2   6f01     MOVWF     0x1,0x1                                                                                         
003bd4   0104     MOVLB     0x4                        ep0Bo.ADR = (byte*)&CtrlTrfData;                                     C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bd6   0e28     MOVLW     0x28                                                                                            
003bd8   6f02     MOVWF     0x2,0x1                                                                                         
003bda   0e04     MOVLW     0x4                                                                                             
003bdc   6f03     MOVWF     0x3,0x1                                                                                         
003bde   0104     MOVLB     0x4                        ep0Bo.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003be0   0ec8     MOVLW     0xc8                                                                                            
003be2   6f00     MOVWF     0x0,0x1                                                                                         
                                                   }//end if(SetupPkt.DataDir == DEV_TO_HOST)                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                               }//end if(ctrl_trf_session_owner == MUID_NULL)                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003be4   0012     RETURN    0x0            }//end USBCtrlEPServiceComplete                                                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBPrepareForNextSetupTrf(void)                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        The routine forces EP0 OUT to be ready for a new Setup       C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  transaction, and forces EP0 IN to be owned by CPU.           C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBPrepareForNextSetupTrf(void)                                             C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003be6   0101     MOVLB     0x1                ctrl_trf_state = WAIT_SETUP;            // See usbctrltrf.h                  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003be8   6bcd     CLRF      0xcd,0x1                                                                                        
003bea   0104     MOVLB     0x4                ep0Bo.Cnt = EP0_BUFF_SIZE;              // Defined in usbcfg.h               C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bec   0e08     MOVLW     0x8                                                                                             
003bee   6f01     MOVWF     0x1,0x1                                                                                         
003bf0   0104     MOVLB     0x4                ep0Bo.ADR = (byte*)&SetupPkt;                                                C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bf2   0e20     MOVLW     0x20                                                                                            
003bf4   6f02     MOVWF     0x2,0x1                                                                                         
003bf6   0e04     MOVLW     0x4                                                                                             
003bf8   6f03     MOVWF     0x3,0x1                                                                                         
003bfa   0104     MOVLB     0x4                ep0Bo.Stat._byte = _USIE|_DAT0|_DTSEN;  // EP0 buff dsc init, see usbmmap.h  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003bfc   0e88     MOVLW     0x88                                                                                            
003bfe   6f00     MOVWF     0x0,0x1                                                                                         
003c00   0104     MOVLB     0x4                ep0Bi.Stat._byte = _UCPU;               // EP0 IN buffer initialization      C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
003c02   6b04     CLRF      0x4,0x1                                                                                         
003c04   0012     RETURN    0x0            }//end USBPrepareForNextSetupTrf                                                 C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /** EOF usbctrltrf.c *********************************************************/  C:\Projects\UBW\FW\D\system\usb\usbctrltrf\usbctrltrf.c
                                           /*********************************************************************           C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            *********************************************************************           C:\Projects\UBW\FW\D\user\user.c
                                            * FileName:        user.c                                                       C:\Projects\UBW\FW\D\user\user.c
                                            * Dependencies:    See INCLUDES section below                                   C:\Projects\UBW\FW\D\user\user.c
                                            * Processor:       PIC18                                                        C:\Projects\UBW\FW\D\user\user.c
                                            * Compiler:        C18 2.30.01+                                                 C:\Projects\UBW\FW\D\user\user.c
                                            * Company:         Microchip Technology, Inc.                                   C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * Software License Agreement                                                    C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\Projects\UBW\FW\D\user\user.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\Projects\UBW\FW\D\user\user.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\Projects\UBW\FW\D\user\user.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\Projects\UBW\FW\D\user\user.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\Projects\UBW\FW\D\user\user.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\Projects\UBW\FW\D\user\user.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\Projects\UBW\FW\D\user\user.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\Projects\UBW\FW\D\user\user.c
                                            * civil liability for the breach of the terms and conditions of this            C:\Projects\UBW\FW\D\user\user.c
                                            * license.                                                                      C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\Projects\UBW\FW\D\user\user.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\Projects\UBW\FW\D\user\user.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\Projects\UBW\FW\D\user\user.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\Projects\UBW\FW\D\user\user.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\Projects\UBW\FW\D\user\user.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * Author               Date        Comment                                      C:\Projects\UBW\FW\D\user\user.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\Projects\UBW\FW\D\user\user.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\Projects\UBW\FW\D\user\user.c
                                            * Brian Schmalz		03/15/06	Added user code to impliment                          C:\Projects\UBW\FW\D\user\user.c
                                            *									firmware version D v1.0 for UBW                                       C:\Projects\UBW\FW\D\user\user.c
                                            *									project. See www.greta.dhs.org/UBW                                    C:\Projects\UBW\FW\D\user\user.c
                                            * Brian Schmalz		05/04/06	Starting version 1.1, which will                      C:\Projects\UBW\FW\D\user\user.c
                                            * 									include several fixes. See website.                                  C:\Projects\UBW\FW\D\user\user.c
                                            * BPS					06/21/06	Starting v1.2 -                                              C:\Projects\UBW\FW\D\user\user.c
                                            * - Fixed problem with I packets (from T command) filling up TX buffer          C:\Projects\UBW\FW\D\user\user.c
                                            * 		and not letting any incoming commands be received. (strange)                C:\Projects\UBW\FW\D\user\user.c
                                            * - Adding several commands - Analog inputs being the biggest set.              C:\Projects\UBW\FW\D\user\user.c
                                            * - Also Byte read/Byte write (PEEK/POKE) anywhere in memory                    C:\Projects\UBW\FW\D\user\user.c
                                            * - Individual pin I/O and direction                                            C:\Projects\UBW\FW\D\user\user.c
                                            * BPS					08/16/06	v1.3 - Fixed bug with USB startup                            C:\Projects\UBW\FW\D\user\user.c
                                            * BPS					09/09/06	v1.4 - Starting 1.4                                          C:\Projects\UBW\FW\D\user\user.c
                                            * - Fixed Microchip bug with early silicon - UCONbits.PKTDIS = 0;               C:\Projects\UBW\FW\D\user\user.c
                                            * - Adding BO and BC commands for parallel output to graphics pannels           C:\Projects\UBW\FW\D\user\user.c
                                            * BPS					12/06/06	v1.4 - More work on 1.4                                      C:\Projects\UBW\FW\D\user\user.c
                                            * - Re-wrote all I/O buffering code for increased speed and functionality       C:\Projects\UBW\FW\D\user\user.c
                                            * - Re-wrote error handling code                                                C:\Projects\UBW\FW\D\user\user.c
                                            * - Added delays to BC/BO commands to help Corey                                C:\Projects\UBW\FW\D\user\user.c
                                            * BPS					01/06/07	v1.4 - Added RC command for servos                           C:\Projects\UBW\FW\D\user\user.c
                                            * BPS					03/07/07	v1.4.1 - Changed blink rate for SFE                          C:\Projects\UBW\FW\D\user\user.c
                                            ********************************************************************/           C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           /** I N C L U D E S **********************************************************/  C:\Projects\UBW\FW\D\user\user.c
                                           #include <p18cxxx.h>                                                             C:\Projects\UBW\FW\D\user\user.c
                                           #include <usart.h>                                                               C:\Projects\UBW\FW\D\user\user.c
                                           #include <stdio.h>                                                               C:\Projects\UBW\FW\D\user\user.c
                                           #include <ctype.h>                                                               C:\Projects\UBW\FW\D\user\user.c
                                           #include <delays.h>                                                              C:\Projects\UBW\FW\D\user\user.c
                                           #include "system\typedefs.h"                                                     C:\Projects\UBW\FW\D\user\user.c
                                           #include "system\usb\usb.h"                                                      C:\Projects\UBW\FW\D\user\user.c
                                           #include "io_cfg.h"             // I/O pin mapping                               C:\Projects\UBW\FW\D\user\user.c
                                           #include "user\user.h"                                                           C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           /** D E F I N E S ********************************************************/      C:\Projects\UBW\FW\D\user\user.c
                                           #define bitset(var,bitno) ((var) |= (1 << (bitno)))                              C:\Projects\UBW\FW\D\user\user.c
                                           #define bitclr(var,bitno) ((var) &= ~(1 << (bitno)))                             C:\Projects\UBW\FW\D\user\user.c
                                           #define bittst(var,bitno) (var& (1 << (bitno)))                                  C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // For the RC command, we define a little data structure that holds the          C:\Projects\UBW\FW\D\user\user.c
                                           // values assoicated with a particular servo connection                          C:\Projects\UBW\FW\D\user\user.c
                                           // It's port, pin, value (position) and state (INACTIVE, PRIMED or TIMING)       C:\Projects\UBW\FW\D\user\user.c
                                           // Later on we make an array of these (19 elements long - 19 pins) to track      C:\Projects\UBW\FW\D\user\user.c
                                           // the values of all of the servos.                                              C:\Projects\UBW\FW\D\user\user.c
                                           typedef enum {                                                                   C:\Projects\UBW\FW\D\user\user.c
                                           	 kOFF = 1                                                                       C:\Projects\UBW\FW\D\user\user.c
                                           	,kWAITING                                                                       C:\Projects\UBW\FW\D\user\user.c
                                           	,kPRIMED                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	,kTIMING                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           } tRC_state;                                                                     C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           #define kRC_DATA_SIZE			24				// In structs, since there are 3 ports of 8 bits each C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           #define kTX_BUF_SIZE 			64				// In bytes                                        C:\Projects\UBW\FW\D\user\user.c
                                           #define kRX_BUF_SIZE			64				// In bytes                                         C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           #define kUSART_TX_BUF_SIZE		64				// In bytes                                    C:\Projects\UBW\FW\D\user\user.c
                                           #define kUSART_RX_BUF_SIZE		64				// In bytes                                    C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Enum for extract_num() function parameter                                     C:\Projects\UBW\FW\D\user\user.c
                                           typedef enum {                                                                   C:\Projects\UBW\FW\D\user\user.c
                                           	 kCHAR                                                                          C:\Projects\UBW\FW\D\user\user.c
                                           	,kUCHAR                                                                         C:\Projects\UBW\FW\D\user\user.c
                                           	,kINT                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           	,kUINT                                                                          C:\Projects\UBW\FW\D\user\user.c
                                           	,kASCII_CHAR                                                                    C:\Projects\UBW\FW\D\user\user.c
                                           	,kUCASE_ASCII_CHAR                                                              C:\Projects\UBW\FW\D\user\user.c
                                           } tExtractType;                                                                  C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           #define advance_RX_buf_out()						\                                              C:\Projects\UBW\FW\D\user\user.c
                                           { 													\                                                                 C:\Projects\UBW\FW\D\user\user.c
                                           	g_RX_buf_out++;									\                                                       C:\Projects\UBW\FW\D\user\user.c
                                           	if (kRX_BUF_SIZE == g_RX_buf_out)				\                                          C:\Projects\UBW\FW\D\user\user.c
                                           	{												\                                                                  C:\Projects\UBW\FW\D\user\user.c
                                           		g_RX_buf_out = 0;							\                                                      C:\Projects\UBW\FW\D\user\user.c
                                           	}												\                                                                  C:\Projects\UBW\FW\D\user\user.c
                                           }                                                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           #define kISR_FIFO_A_DEPTH		3                                                     C:\Projects\UBW\FW\D\user\user.c
                                           #define kISR_FIFO_D_DEPTH		3                                                     C:\Projects\UBW\FW\D\user\user.c
                                           #define kPR2_RELOAD				250		// For 1ms TMR2 tick                                 C:\Projects\UBW\FW\D\user\user.c
                                           #define kCR						0x0D                                                            C:\Projects\UBW\FW\D\user\user.c
                                           #define kLF						0x0A                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // defines for the error_byte byte - each bit has a meaning                      C:\Projects\UBW\FW\D\user\user.c
                                           #define kERROR_BYTE_TX_BUF_OVERRUN			2                                           C:\Projects\UBW\FW\D\user\user.c
                                           #define kERROR_BYTE_RX_BUFFER_OVERRUN		3                                         C:\Projects\UBW\FW\D\user\user.c
                                           #define kERROR_BYTE_MISSING_PARAMETER		4                                         C:\Projects\UBW\FW\D\user\user.c
                                           #define kERROR_BYTE_PRINTED_ERROR			5			// We've already printed out an error    C:\Projects\UBW\FW\D\user\user.c
                                           #define kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT	6                                    C:\Projects\UBW\FW\D\user\user.c
                                           #define kERROR_BYTE_EXTRA_CHARACTERS 		7                                         C:\Projects\UBW\FW\D\user\user.c
                                           #define kERROR_BYTE_UNKNOWN_COMMAND			8			// Part of command parser, not error handler C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           /** V A R I A B L E S ********************************************************/  C:\Projects\UBW\FW\D\user\user.c
                                           #pragma udata access fast_vars                                                   C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Rate variable - how fast does interrupt fire to capture inputs?               C:\Projects\UBW\FW\D\user\user.c
                                           near unsigned int time_between_updates;                                          C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           near volatile unsigned int ISR_D_RepeatRate;			// How many 1ms ticks between Digital updates C:\Projects\UBW\FW\D\user\user.c
                                           near volatile unsigned char ISR_D_FIFO_in;				// In pointer                      C:\Projects\UBW\FW\D\user\user.c
                                           near volatile unsigned char ISR_D_FIFO_out;				// Out pointer                    C:\Projects\UBW\FW\D\user\user.c
                                           near volatile unsigned char ISR_D_FIFO_length;			// Current FIFO depth           C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           near volatile unsigned int ISR_A_RepeatRate;			// How many 1ms ticks between Analog updates C:\Projects\UBW\FW\D\user\user.c
                                           near volatile unsigned char ISR_A_FIFO_in;				// In pointer                      C:\Projects\UBW\FW\D\user\user.c
                                           near volatile unsigned char ISR_A_FIFO_out;				// Out pointer                    C:\Projects\UBW\FW\D\user\user.c
                                           near volatile unsigned char ISR_A_FIFO_length;			// Current FIFO depth           C:\Projects\UBW\FW\D\user\user.c
                                           near volatile unsigned char AnalogEnable;				// Maximum ADC channel to convert   C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // This byte has each of its bits used as a seperate error flag                  C:\Projects\UBW\FW\D\user\user.c
                                           near unsigned char error_byte;                                                   C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // RC servo variables                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // First the main array of data for each servo                                   C:\Projects\UBW\FW\D\user\user.c
                                           near unsigned char g_RC_primed_ptr;                                              C:\Projects\UBW\FW\D\user\user.c
                                           near unsigned char g_RC_next_ptr;                                                C:\Projects\UBW\FW\D\user\user.c
                                           near unsigned char g_RC_timing_ptr;                                              C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Used only in LowISR                                                           C:\Projects\UBW\FW\D\user\user.c
                                           near unsigned int D_tick_counter;                                                C:\Projects\UBW\FW\D\user\user.c
                                           near unsigned int A_tick_counter;                                                C:\Projects\UBW\FW\D\user\user.c
                                           near unsigned char A_cur_channel;                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // ROM strings                                                                   C:\Projects\UBW\FW\D\user\user.c
                                           const rom char st_OK[] = {"OK\r\n"};                                             C:\Projects\UBW\FW\D\user\user.c
                                           const rom char st_LFCR[] = {"\r\n"};                                             C:\Projects\UBW\FW\D\user\user.c
                                           const rom char st_version[] = {"UBW FW D Version 1.4.1\r\n"};                    C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           #pragma udata ISR_buf=0x100                                                      C:\Projects\UBW\FW\D\user\user.c
                                           volatile unsigned int ISR_A_FIFO[12][kISR_FIFO_A_DEPTH];	// Stores the most recent analog conversions C:\Projects\UBW\FW\D\user\user.c
                                           volatile unsigned char ISR_D_FIFO[3][kISR_FIFO_D_DEPTH];	// FIFO of actual data  C:\Projects\UBW\FW\D\user\user.c
                                           volatile tRC_state g_RC_state[kRC_DATA_SIZE];				// Stores states for each pin for RC command C:\Projects\UBW\FW\D\user\user.c
                                           volatile unsigned int g_RC_value[kRC_DATA_SIZE];			// Stores reload values for TMR0 C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           #pragma udata com_buf=0x200                                                      C:\Projects\UBW\FW\D\user\user.c
                                           // USB Transmit buffer for packets (back to PC)                                  C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_TX_buf[kTX_BUF_SIZE];                                            C:\Projects\UBW\FW\D\user\user.c
                                           // USB Receiving buffer for commands as they come from PC                        C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_RX_buf[kRX_BUF_SIZE];                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // USART Receiving buffer for data coming from the USART                         C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_USART_RX_buf[kUSART_RX_BUF_SIZE];                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // USART Transmit buffer for data going to the USART                             C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_USART_TX_buf[kUSART_TX_BUF_SIZE];                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // These variables are in normal storage space                                   C:\Projects\UBW\FW\D\user\user.c
                                           #pragma udata                                                                    C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // These are used for the Fast Parallel Output routines                          C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_BO_init;                                                         C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_BO_strobe_mask;                                                  C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_BO_wait_mask;                                                    C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_BO_wait_delay;                                                   C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_BO_strobe_delay;                                                 C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Pointers to USB transmit (back to PC) buffer                                  C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_TX_buf_in;                                                       C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_TX_buf_out;                                                      C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Pointers to USB receive (from PC) buffer                                      C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_RX_buf_in;                                                       C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_RX_buf_out;                                                      C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // In and out pointers to our USART input buffer                                 C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_USART_RX_buf_in;                                                 C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_USART_RX_buf_out;                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // In and out pointers to our USART output buffer                                C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_USART_TX_buf_in;                                                 C:\Projects\UBW\FW\D\user\user.c
                                           unsigned char g_USART_TX_buf_out;                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Normally set to TRUE. Able to set FALSE to not send "OK" message after packet recepetion C:\Projects\UBW\FW\D\user\user.c
                                           BOOL	g_ack_enable;                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\Projects\UBW\FW\D\user\user.c
                                           void BlinkUSBStatus (void);		// Handles blinking the USB status LED              C:\Projects\UBW\FW\D\user\user.c
                                           BOOL SwitchIsPressed (void);	// Check to see if the user (PRG) switch is pressed C:\Projects\UBW\FW\D\user\user.c
                                           void parse_packet (void);		// Take a full packet and dispatch it to the right function C:\Projects\UBW\FW\D\user\user.c
                                           signed short long extract_number (tExtractType type); // Pull a number paramter out of the packet C:\Projects\UBW\FW\D\user\user.c
                                           signed char extract_digit (signed short long * acc, unsigned char digits); // Pull a character out of the packet C:\Projects\UBW\FW\D\user\user.c
                                           void parse_R_packet (void);		// R for resetting UBW                              C:\Projects\UBW\FW\D\user\user.c
                                           void parse_C_packet (void);		// C for configuring I/O and analog pins            C:\Projects\UBW\FW\D\user\user.c
                                           void parse_CX_packet (void); 	// CX For configuring serial port                  C:\Projects\UBW\FW\D\user\user.c
                                           void parse_O_packet (void);		// O for output digital to pins                     C:\Projects\UBW\FW\D\user\user.c
                                           void parse_I_packet (void);		// I for input digital from pins                    C:\Projects\UBW\FW\D\user\user.c
                                           void parse_V_packet (void);		// V for printing version                           C:\Projects\UBW\FW\D\user\user.c
                                           void parse_A_packet (void);		// A for requesting analog inputs                   C:\Projects\UBW\FW\D\user\user.c
                                           void parse_T_packet (void);		// T for setting up timed I/O (digital or analog)   C:\Projects\UBW\FW\D\user\user.c
                                           void parse_PI_packet (void);	// PI for reading a single pin                      C:\Projects\UBW\FW\D\user\user.c
                                           void parse_PO_packet (void);	// PO for setting a single pin state                C:\Projects\UBW\FW\D\user\user.c
                                           void parse_PD_packet (void);	// PD for setting a pin's direction                 C:\Projects\UBW\FW\D\user\user.c
                                           void parse_MR_packet (void);	// MR for Memory Read                               C:\Projects\UBW\FW\D\user\user.c
                                           void parse_MW_packet (void); 	// MW for Memory Write                             C:\Projects\UBW\FW\D\user\user.c
                                           void parse_TX_packet (void);	// TX for transmitting serial                       C:\Projects\UBW\FW\D\user\user.c
                                           void parse_RX_packet (void);	// RX for receiving serial                          C:\Projects\UBW\FW\D\user\user.c
                                           void parse_RC_packet (void);	// RC is for outputing RC servo pulses              C:\Projects\UBW\FW\D\user\user.c
                                           void parse_BO_packet (void);	// BO sends data to fast parallel output            C:\Projects\UBW\FW\D\user\user.c
                                           void parse_BC_packet (void);	// BC configures fast parallel outputs              C:\Projects\UBW\FW\D\user\user.c
                                           void parse_BS_packet (void);	// BS sends binary data to fast parallel output     C:\Projects\UBW\FW\D\user\user.c
                                           void parse_CU_packet (void);	// CU configures UBW (system wide parameters)       C:\Projects\UBW\FW\D\user\user.c
                                           void parse_SS_packet (void);	// SS Send SPI                                      C:\Projects\UBW\FW\D\user\user.c
                                           void parse_RS_packet (void);	// RS Receive SPI                                   C:\Projects\UBW\FW\D\user\user.c
                                           void parse_CS_packet (void);	// CS Configure SPI                                 C:\Projects\UBW\FW\D\user\user.c
                                           void parse_SI_packet (void);	// SI Send I2C                                      C:\Projects\UBW\FW\D\user\user.c
                                           void parse_RI_packet (void);	// RI Receive I2C                                   C:\Projects\UBW\FW\D\user\user.c
                                           void parse_CI_packet (void);	// CI Configure I2C                                 C:\Projects\UBW\FW\D\user\user.c
                                           void check_and_send_TX_data (void); // See if there is any data to send to PC, and if so, do it C:\Projects\UBW\FW\D\user\user.c
                                           void print_ack (void);			// Print "OK" after packet is parsed                    C:\Projects\UBW\FW\D\user\user.c
                                           int _user_putc (char c);		// Our UBS based stream character printer              C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\Projects\UBW\FW\D\user\user.c
                                           #pragma code                                                                     C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           #pragma interruptlow low_ISR                                                     C:\Projects\UBW\FW\D\user\user.c
000844   cfd8     MOVFF     0xfd8,0xfe4    void low_ISR(void)                                                               C:\Projects\UBW\FW\D\user\user.c
000846   ffe4                                                                                                               
000848   cfe0     MOVFF     0xfe0,0xfe4                                                                                     
00084a   ffe4                                                                                                               
00084c   6ee4     MOVWF     0xe4,0x0                                                                                        
00084e   cfda     MOVFF     0xfda,0xfe4                                                                                     
000850   ffe4                                                                                                               
000852   cfe2     MOVFF     0xfe2,0xfda                                                                                     
000854   ffda                                                                                                               
000856   cfe9     MOVFF     0xfe9,0xfe4                                                                                     
000858   ffe4                                                                                                               
00085a   cfea     MOVFF     0xfea,0xfe4                                                                                     
00085c   ffe4                                                                                                               
00085e   cff3     MOVFF     0xff3,0xfe4                                                                                     
000860   ffe4                                                                                                               
000862   cff4     MOVFF     0xff4,0xfe4                                                                                     
000864   ffe4                                                                                                               
000866   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {	                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	// Do we have a Timer2 interrupt? (1ms rate)                                    C:\Projects\UBW\FW\D\user\user.c
000868   a29e     BTFSS     0x9e,0x1,0x0   	if (PIR1bits.TMR2IF)                                                            C:\Projects\UBW\FW\D\user\user.c
00086a   d101     BRA       0xa6e                                                                                           
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// Clear the interrupt                                                         C:\Projects\UBW\FW\D\user\user.c
00086c   929e     BCF       0x9e,0x1,0x0   		PIR1bits.TMR2IF = 0;                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// The most time critical part of this interrupt service routine is the        C:\Projects\UBW\FW\D\user\user.c
                                           		// handling of the RC command's servo output pulses.                           C:\Projects\UBW\FW\D\user\user.c
                                           		// Each time we get this interrupt, we look to see if the next pin on the      C:\Projects\UBW\FW\D\user\user.c
                                           		// list has a value greater than zero. If so, we arm set it high and set       C:\Projects\UBW\FW\D\user\user.c
                                           		// it's state to PRIMED. Then we advance the pointers to the next pair.        C:\Projects\UBW\FW\D\user\user.c
00086e   0e03     MOVLW     0x3            		if (kPRIMED == g_RC_state[g_RC_primed_ptr])                                    C:\Projects\UBW\FW\D\user\user.c
000870   6e38     MOVWF     0x38,0x0                                                                                        
000872   500e     MOVF      0xe,0x0,0x0                                                                                     
000874   6aea     CLRF      0xea,0x0                                                                                        
000876   0f51     ADDLW     0x51                                                                                            
000878   6ee9     MOVWF     0xe9,0x0                                                                                        
00087a   0e01     MOVLW     0x1                                                                                             
00087c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00087e   50ef     MOVF      0xef,0x0,0x0                                                                                    
000880   5c38     SUBWF     0x38,0x0,0x0                                                                                    
000882   e130     BNZ       0x8e4                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// This is easy, throw the value into the timer                               C:\Projects\UBW\FW\D\user\user.c
000884   500e     MOVF      0xe,0x0,0x0    			TMR0H = g_RC_value[g_RC_primed_ptr] >> 8;                                     C:\Projects\UBW\FW\D\user\user.c
000886   6ee9     MOVWF     0xe9,0x0                                                                                        
000888   6aea     CLRF      0xea,0x0                                                                                        
00088a   90d8     BCF       0xd8,0x0,0x0                                                                                    
00088c   36e9     RLCF      0xe9,0x1,0x0                                                                                    
00088e   36ea     RLCF      0xea,0x1,0x0                                                                                    
000890   0e69     MOVLW     0x69                                                                                            
000892   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000894   0e01     MOVLW     0x1                                                                                             
000896   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000898   cfee     MOVFF     0xfee,0x38                                                                                      
00089a   f038                                                                                                               
00089c   cfef     MOVFF     0xfef,0x39                                                                                      
00089e   f039                                                                                                               
0008a0   c039     MOVFF     0x39,0x38                                                                                       
0008a2   f038                                                                                                               
0008a4   6a39     CLRF      0x39,0x0                                                                                        
0008a6   5038     MOVF      0x38,0x0,0x0                                                                                    
0008a8   6ed7     MOVWF     0xd7,0x0                                                                                        
0008aa   500e     MOVF      0xe,0x0,0x0    			TMR0L = g_RC_value[g_RC_primed_ptr] & 0xFF;                                   C:\Projects\UBW\FW\D\user\user.c
0008ac   6ee9     MOVWF     0xe9,0x0                                                                                        
0008ae   6aea     CLRF      0xea,0x0                                                                                        
0008b0   90d8     BCF       0xd8,0x0,0x0                                                                                    
0008b2   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0008b4   36ea     RLCF      0xea,0x1,0x0                                                                                    
0008b6   0e69     MOVLW     0x69                                                                                            
0008b8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0008ba   0e01     MOVLW     0x1                                                                                             
0008bc   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0008be   cfee     MOVFF     0xfee,0x38                                                                                      
0008c0   f038                                                                                                               
0008c2   cfef     MOVFF     0xfef,0x39                                                                                      
0008c4   f039                                                                                                               
0008c6   5038     MOVF      0x38,0x0,0x0                                                                                    
0008c8   6ed6     MOVWF     0xd6,0x0                                                                                        
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           			// Then make sure the timer's interrupt enable is set                         C:\Projects\UBW\FW\D\user\user.c
0008ca   8af2     BSF       0xf2,0x5,0x0   			INTCONbits.TMR0IE = 1;                                                        C:\Projects\UBW\FW\D\user\user.c
                                           			// And be sure to clear the flag too                                          C:\Projects\UBW\FW\D\user\user.c
0008cc   94f2     BCF       0xf2,0x2,0x0   			INTCONbits.TMR0IF = 0;                                                        C:\Projects\UBW\FW\D\user\user.c
                                           			// Turn on Timer0                                                             C:\Projects\UBW\FW\D\user\user.c
0008ce   8ed5     BSF       0xd5,0x7,0x0   			T0CONbits.TMR0ON = 1;                                                         C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           			// And set this pin's state to timing                                         C:\Projects\UBW\FW\D\user\user.c
0008d0   500e     MOVF      0xe,0x0,0x0    			g_RC_state[g_RC_primed_ptr] = kTIMING;                                        C:\Projects\UBW\FW\D\user\user.c
0008d2   6aea     CLRF      0xea,0x0                                                                                        
0008d4   0f51     ADDLW     0x51                                                                                            
0008d6   6ee9     MOVWF     0xe9,0x0                                                                                        
0008d8   0e01     MOVLW     0x1                                                                                             
0008da   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0008dc   0e04     MOVLW     0x4                                                                                             
0008de   6eef     MOVWF     0xef,0x0                                                                                        
                                           			                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Remember which pin is now timing                                           C:\Projects\UBW\FW\D\user\user.c
0008e0   500e     MOVF      0xe,0x0,0x0    			g_RC_timing_ptr = g_RC_primed_ptr;                                            C:\Projects\UBW\FW\D\user\user.c
0008e2   6e10     MOVWF     0x10,0x0                                                                                        
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
0008e4   0e02     MOVLW     0x2            		if (kWAITING == g_RC_state[g_RC_next_ptr])                                     C:\Projects\UBW\FW\D\user\user.c
0008e6   6e38     MOVWF     0x38,0x0                                                                                        
0008e8   500f     MOVF      0xf,0x0,0x0                                                                                     
0008ea   6aea     CLRF      0xea,0x0                                                                                        
0008ec   0f51     ADDLW     0x51                                                                                            
0008ee   6ee9     MOVWF     0xe9,0x0                                                                                        
0008f0   0e01     MOVLW     0x1                                                                                             
0008f2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0008f4   50ef     MOVF      0xef,0x0,0x0                                                                                    
0008f6   5c38     SUBWF     0x38,0x0,0x0                                                                                    
0008f8   e149     BNZ       0x98c                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// If the value is zero, then shut this pin off                               C:\Projects\UBW\FW\D\user\user.c
                                           			// otherwise, prime it for sending a pulse                                    C:\Projects\UBW\FW\D\user\user.c
0008fa   500f     MOVF      0xf,0x0,0x0    			if (0 == g_RC_value[g_RC_next_ptr])                                           C:\Projects\UBW\FW\D\user\user.c
0008fc   6ee9     MOVWF     0xe9,0x0                                                                                        
0008fe   6aea     CLRF      0xea,0x0                                                                                        
000900   90d8     BCF       0xd8,0x0,0x0                                                                                    
000902   36e9     RLCF      0xe9,0x1,0x0                                                                                    
000904   36ea     RLCF      0xea,0x1,0x0                                                                                    
000906   0e69     MOVLW     0x69                                                                                            
000908   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00090a   0e01     MOVLW     0x1                                                                                             
00090c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00090e   50ee     MOVF      0xee,0x0,0x0                                                                                    
000910   10ed     IORWF     0xed,0x0,0x0                                                                                    
000912   e109     BNZ       0x926                                                                                           
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
000914   500f     MOVF      0xf,0x0,0x0    				g_RC_state[g_RC_next_ptr] = kOFF;                                            C:\Projects\UBW\FW\D\user\user.c
000916   6aea     CLRF      0xea,0x0                                                                                        
000918   0f51     ADDLW     0x51                                                                                            
00091a   6ee9     MOVWF     0xe9,0x0                                                                                        
00091c   0e01     MOVLW     0x1                                                                                             
00091e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000920   0e01     MOVLW     0x1                                                                                             
000922   6eef     MOVWF     0xef,0x0                                                                                        
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
000924   d033     BRA       0x98c          			else                                                                          C:\Projects\UBW\FW\D\user\user.c
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           				// Set the bit high                                                          C:\Projects\UBW\FW\D\user\user.c
000926   0e08     MOVLW     0x8            				if (g_RC_next_ptr < 8)                                                       C:\Projects\UBW\FW\D\user\user.c
000928   5c0f     SUBWF     0xf,0x0,0x0                                                                                     
00092a   e20c     BC        0x944                                                                                           
                                           				{                                                                            C:\Projects\UBW\FW\D\user\user.c
00092c   0e07     MOVLW     0x7            					bitset (LATA, g_RC_next_ptr & 0x7);                                         C:\Projects\UBW\FW\D\user\user.c
00092e   140f     ANDWF     0xf,0x0,0x0                                                                                     
000930   6e38     MOVWF     0x38,0x0                                                                                        
000932   0e01     MOVLW     0x1                                                                                             
000934   5238     MOVF      0x38,0x1,0x0                                                                                    
000936   e004     BZ        0x940                                                                                           
000938   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
00093a   0bfe     ANDLW     0xfe                                                                                            
00093c   0638     DECF      0x38,0x1,0x0                                                                                    
00093e   e1fc     BNZ       0x938                                                                                           
000940   1289     IORWF     0x89,0x1,0x0                                                                                    
                                           				}                                                                            C:\Projects\UBW\FW\D\user\user.c
000942   d01a     BRA       0x978          				else if (g_RC_next_ptr < 16)                                                 C:\Projects\UBW\FW\D\user\user.c
000944   0e10     MOVLW     0x10                                                                                            
000946   5c0f     SUBWF     0xf,0x0,0x0                                                                                     
000948   e20c     BC        0x962                                                                                           
                                           				{                                                                            C:\Projects\UBW\FW\D\user\user.c
00094a   0e07     MOVLW     0x7            					bitset (LATB, g_RC_next_ptr & 0x7);                                         C:\Projects\UBW\FW\D\user\user.c
00094c   140f     ANDWF     0xf,0x0,0x0                                                                                     
00094e   6e38     MOVWF     0x38,0x0                                                                                        
000950   0e01     MOVLW     0x1                                                                                             
000952   5238     MOVF      0x38,0x1,0x0                                                                                    
000954   e004     BZ        0x95e                                                                                           
000956   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
000958   0bfe     ANDLW     0xfe                                                                                            
00095a   0638     DECF      0x38,0x1,0x0                                                                                    
00095c   e1fc     BNZ       0x956                                                                                           
00095e   128a     IORWF     0x8a,0x1,0x0                                                                                    
                                           				}                                                                            C:\Projects\UBW\FW\D\user\user.c
000960   d00b     BRA       0x978          				else                                                                         C:\Projects\UBW\FW\D\user\user.c
                                           				{                                                                            C:\Projects\UBW\FW\D\user\user.c
000962   0e07     MOVLW     0x7            					bitset (LATC, g_RC_next_ptr & 0x7);                                         C:\Projects\UBW\FW\D\user\user.c
000964   140f     ANDWF     0xf,0x0,0x0                                                                                     
000966   6e38     MOVWF     0x38,0x0                                                                                        
000968   0e01     MOVLW     0x1                                                                                             
00096a   5238     MOVF      0x38,0x1,0x0                                                                                    
00096c   e004     BZ        0x976                                                                                           
00096e   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
000970   0bfe     ANDLW     0xfe                                                                                            
000972   0638     DECF      0x38,0x1,0x0                                                                                    
000974   e1fc     BNZ       0x96e                                                                                           
000976   128b     IORWF     0x8b,0x1,0x0                                                                                    
                                           				}                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           				// Set the state to primed so we know to do next                             C:\Projects\UBW\FW\D\user\user.c
000978   500f     MOVF      0xf,0x0,0x0    				g_RC_state[g_RC_next_ptr] = kPRIMED;                                         C:\Projects\UBW\FW\D\user\user.c
00097a   6aea     CLRF      0xea,0x0                                                                                        
00097c   0f51     ADDLW     0x51                                                                                            
00097e   6ee9     MOVWF     0xe9,0x0                                                                                        
000980   0e01     MOVLW     0x1                                                                                             
000982   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000984   0e03     MOVLW     0x3                                                                                             
000986   6eef     MOVWF     0xef,0x0                                                                                        
                                           				// And remember which pin is primed                                          C:\Projects\UBW\FW\D\user\user.c
000988   500f     MOVF      0xf,0x0,0x0    				g_RC_primed_ptr = g_RC_next_ptr;                                             C:\Projects\UBW\FW\D\user\user.c
00098a   6e0e     MOVWF     0xe,0x0                                                                                         
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		// And always advance the main pointer                                         C:\Projects\UBW\FW\D\user\user.c
                                           		// NOTE: we need to skip RA6, RA7, and RC3, RC4, and RC5                       C:\Projects\UBW\FW\D\user\user.c
                                           		// (Because UBW doesn't bring those pins out to headers)                       C:\Projects\UBW\FW\D\user\user.c
00098c   2a0f     INCF      0xf,0x1,0x0    		g_RC_next_ptr++;                                                               C:\Projects\UBW\FW\D\user\user.c
00098e   0e06     MOVLW     0x6            		if (6 == g_RC_next_ptr)                                                        C:\Projects\UBW\FW\D\user\user.c
000990   5c0f     SUBWF     0xf,0x0,0x0                                                                                     
000992   e103     BNZ       0x99a                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
000994   0e08     MOVLW     0x8            			g_RC_next_ptr = 8;                                                            C:\Projects\UBW\FW\D\user\user.c
000996   6e0f     MOVWF     0xf,0x0                                                                                         
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
000998   d00a     BRA       0x9ae          		else if (19 == g_RC_next_ptr)                                                  C:\Projects\UBW\FW\D\user\user.c
00099a   0e13     MOVLW     0x13                                                                                            
00099c   5c0f     SUBWF     0xf,0x0,0x0                                                                                     
00099e   e103     BNZ       0x9a6                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0009a0   0e16     MOVLW     0x16           			g_RC_next_ptr = 22;                                                           C:\Projects\UBW\FW\D\user\user.c
0009a2   6e0f     MOVWF     0xf,0x0                                                                                         
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
0009a4   d004     BRA       0x9ae          		else if (kRC_DATA_SIZE == g_RC_next_ptr)                                       C:\Projects\UBW\FW\D\user\user.c
0009a6   0e18     MOVLW     0x18                                                                                            
0009a8   5c0f     SUBWF     0xf,0x0,0x0                                                                                     
0009aa   e101     BNZ       0x9ae                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0009ac   6a0f     CLRF      0xf,0x0        			g_RC_next_ptr = 0;                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           				                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		// See if it's time to fire off an I packet                                    C:\Projects\UBW\FW\D\user\user.c
0009ae   0e00     MOVLW     0x0            		if (ISR_D_RepeatRate > 0)                                                      C:\Projects\UBW\FW\D\user\user.c
0009b0   80d8     BSF       0xd8,0x0,0x0                                                                                    
0009b2   5402     SUBFWB    0x2,0x0,0x0                                                                                     
0009b4   0e00     MOVLW     0x0                                                                                             
0009b6   5403     SUBFWB    0x3,0x0,0x0                                                                                     
0009b8   e22e     BC        0xa16                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0009ba   2a11     INCF      0x11,0x1,0x0   			D_tick_counter++;                                                             C:\Projects\UBW\FW\D\user\user.c
0009bc   0e00     MOVLW     0x0                                                                                             
0009be   2212     ADDWFC    0x12,0x1,0x0                                                                                    
0009c0   5002     MOVF      0x2,0x0,0x0    			if (D_tick_counter >= ISR_D_RepeatRate)                                       C:\Projects\UBW\FW\D\user\user.c
0009c2   5c11     SUBWF     0x11,0x0,0x0                                                                                    
0009c4   5003     MOVF      0x3,0x0,0x0                                                                                     
0009c6   5812     SUBWFB    0x12,0x0,0x0                                                                                    
0009c8   e326     BNC       0xa16                                                                                           
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
0009ca   6a11     CLRF      0x11,0x0       				D_tick_counter = 0;                                                          C:\Projects\UBW\FW\D\user\user.c
0009cc   6a12     CLRF      0x12,0x0                                                                                        
                                           				// Tell the main code to send an I packet                                    C:\Projects\UBW\FW\D\user\user.c
0009ce   0e03     MOVLW     0x3            				if (ISR_D_FIFO_length < kISR_FIFO_D_DEPTH)                                   C:\Projects\UBW\FW\D\user\user.c
0009d0   5c06     SUBWF     0x6,0x0,0x0                                                                                     
0009d2   e21f     BC        0xa12                                                                                           
                                           				{                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           					// And copy over our port values                                            C:\Projects\UBW\FW\D\user\user.c
0009d4   5004     MOVF      0x4,0x0,0x0    					ISR_D_FIFO[0][ISR_D_FIFO_in] = PORTA;                                       C:\Projects\UBW\FW\D\user\user.c
0009d6   6aea     CLRF      0xea,0x0                                                                                        
0009d8   0f48     ADDLW     0x48                                                                                            
0009da   6ee9     MOVWF     0xe9,0x0                                                                                        
0009dc   0e01     MOVLW     0x1                                                                                             
0009de   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0009e0   cf80     MOVFF     0xf80,0xfef                                                                                     
0009e2   ffef                                                                                                               
0009e4   5004     MOVF      0x4,0x0,0x0    					ISR_D_FIFO[1][ISR_D_FIFO_in] = PORTB;                                       C:\Projects\UBW\FW\D\user\user.c
0009e6   6aea     CLRF      0xea,0x0                                                                                        
0009e8   0f4b     ADDLW     0x4b                                                                                            
0009ea   6ee9     MOVWF     0xe9,0x0                                                                                        
0009ec   0e01     MOVLW     0x1                                                                                             
0009ee   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0009f0   cf81     MOVFF     0xf81,0xfef                                                                                     
0009f2   ffef                                                                                                               
0009f4   5004     MOVF      0x4,0x0,0x0    					ISR_D_FIFO[2][ISR_D_FIFO_in] = PORTC;                                       C:\Projects\UBW\FW\D\user\user.c
0009f6   6aea     CLRF      0xea,0x0                                                                                        
0009f8   0f4e     ADDLW     0x4e                                                                                            
0009fa   6ee9     MOVWF     0xe9,0x0                                                                                        
0009fc   0e01     MOVLW     0x1                                                                                             
0009fe   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a00   cf82     MOVFF     0xf82,0xfef                                                                                     
000a02   ffef                                                                                                               
000a04   2a04     INCF      0x4,0x1,0x0    					ISR_D_FIFO_in++;                                                            C:\Projects\UBW\FW\D\user\user.c
000a06   0e03     MOVLW     0x3            					if (ISR_D_FIFO_in >= kISR_FIFO_D_DEPTH)                                     C:\Projects\UBW\FW\D\user\user.c
000a08   5c04     SUBWF     0x4,0x0,0x0                                                                                     
000a0a   e301     BNC       0xa0e                                                                                           
                                           					{                                                                           C:\Projects\UBW\FW\D\user\user.c
000a0c   6a04     CLRF      0x4,0x0        						ISR_D_FIFO_in = 0;	                                                        C:\Projects\UBW\FW\D\user\user.c
                                           					}                                                                           C:\Projects\UBW\FW\D\user\user.c
000a0e   2a06     INCF      0x6,0x1,0x0    					ISR_D_FIFO_length++;                                                        C:\Projects\UBW\FW\D\user\user.c
                                           				}                                                                            C:\Projects\UBW\FW\D\user\user.c
000a10   d002     BRA       0xa16          				else                                                                         C:\Projects\UBW\FW\D\user\user.c
                                           				{                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           					// Stop the madness! Something is wrong, we're                              C:\Projects\UBW\FW\D\user\user.c
                                           					// not getting our packets out. So kill the                                 C:\Projects\UBW\FW\D\user\user.c
                                           					// timer.                                                                   C:\Projects\UBW\FW\D\user\user.c
000a12   6a02     CLRF      0x2,0x0        					ISR_D_RepeatRate = 0;                                                       C:\Projects\UBW\FW\D\user\user.c
000a14   6a03     CLRF      0x3,0x0                                                                                         
                                           				}                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			}	                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// See if it's time to fire off an A packet                                    C:\Projects\UBW\FW\D\user\user.c
000a16   0e00     MOVLW     0x0            		if ((ISR_A_RepeatRate > 0) && (AnalogEnable > 0))                              C:\Projects\UBW\FW\D\user\user.c
000a18   80d8     BSF       0xd8,0x0,0x0                                                                                    
000a1a   5407     SUBFWB    0x7,0x0,0x0                                                                                     
000a1c   0e00     MOVLW     0x0                                                                                             
000a1e   5408     SUBFWB    0x8,0x0,0x0                                                                                     
000a20   e219     BC        0xa54                                                                                           
000a22   500c     MOVF      0xc,0x0,0x0                                                                                     
000a24   0800     SUBLW     0x0                                                                                             
000a26   e216     BC        0xa54                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
000a28   2a13     INCF      0x13,0x1,0x0   			A_tick_counter++;                                                             C:\Projects\UBW\FW\D\user\user.c
000a2a   0e00     MOVLW     0x0                                                                                             
000a2c   2214     ADDWFC    0x14,0x1,0x0                                                                                    
000a2e   5007     MOVF      0x7,0x0,0x0    			if (A_tick_counter >= ISR_A_RepeatRate)                                       C:\Projects\UBW\FW\D\user\user.c
000a30   5c13     SUBWF     0x13,0x0,0x0                                                                                    
000a32   5008     MOVF      0x8,0x0,0x0                                                                                     
000a34   5814     SUBWFB    0x14,0x0,0x0                                                                                    
000a36   e30e     BNC       0xa54                                                                                           
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
000a38   6a13     CLRF      0x13,0x0       				A_tick_counter = 0;                                                          C:\Projects\UBW\FW\D\user\user.c
000a3a   6a14     CLRF      0x14,0x0                                                                                        
                                           				// Tell the main code to send an A packet                                    C:\Projects\UBW\FW\D\user\user.c
000a3c   0e03     MOVLW     0x3            				if (ISR_A_FIFO_length < kISR_FIFO_A_DEPTH)                                   C:\Projects\UBW\FW\D\user\user.c
000a3e   5c0b     SUBWF     0xb,0x0,0x0                                                                                     
000a40   e207     BC        0xa50                                                                                           
                                           				{                                                                            C:\Projects\UBW\FW\D\user\user.c
000a42   2a09     INCF      0x9,0x1,0x0    					ISR_A_FIFO_in++;                                                            C:\Projects\UBW\FW\D\user\user.c
000a44   0e03     MOVLW     0x3            					if (ISR_A_FIFO_in >= kISR_FIFO_A_DEPTH)                                     C:\Projects\UBW\FW\D\user\user.c
000a46   5c09     SUBWF     0x9,0x0,0x0                                                                                     
000a48   e301     BNC       0xa4c                                                                                           
                                           					{                                                                           C:\Projects\UBW\FW\D\user\user.c
000a4a   6a09     CLRF      0x9,0x0        						ISR_A_FIFO_in = 0;	                                                        C:\Projects\UBW\FW\D\user\user.c
                                           					}                                                                           C:\Projects\UBW\FW\D\user\user.c
000a4c   2a0b     INCF      0xb,0x1,0x0    					ISR_A_FIFO_length++;                                                        C:\Projects\UBW\FW\D\user\user.c
                                           				}                                                                            C:\Projects\UBW\FW\D\user\user.c
000a4e   d002     BRA       0xa54          				else                                                                         C:\Projects\UBW\FW\D\user\user.c
                                           				{                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           					// Stop the madness! Something is wrong, we're                              C:\Projects\UBW\FW\D\user\user.c
                                           					// not getting our packets out. So kill the A                               C:\Projects\UBW\FW\D\user\user.c
                                           					// packets.                                                                 C:\Projects\UBW\FW\D\user\user.c
000a50   6a07     CLRF      0x7,0x0        					ISR_A_RepeatRate = 0;                                                       C:\Projects\UBW\FW\D\user\user.c
000a52   6a08     CLRF      0x8,0x0                                                                                         
                                           				}                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			}	                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		// See if it's time to start analog conversions                                C:\Projects\UBW\FW\D\user\user.c
000a54   500c     MOVF      0xc,0x0,0x0    		if (AnalogEnable > 0)                                                          C:\Projects\UBW\FW\D\user\user.c
000a56   0800     SUBLW     0x0                                                                                             
000a58   e20a     BC        0xa6e                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Set the channel to zero to start off with                                  C:\Projects\UBW\FW\D\user\user.c
000a5a   6a15     CLRF      0x15,0x0       			A_cur_channel = 0;                                                            C:\Projects\UBW\FW\D\user\user.c
000a5c   5015     MOVF      0x15,0x0,0x0   			ADCON0 = (A_cur_channel << 2) + 1;                                            C:\Projects\UBW\FW\D\user\user.c
000a5e   0d04     MULLW     0x4                                                                                             
000a60   28f3     INCF      0xf3,0x0,0x0                                                                                    
000a62   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			// Clear the interrupt                                                        C:\Projects\UBW\FW\D\user\user.c
000a64   9c9e     BCF       0x9e,0x6,0x0   			PIR1bits.ADIF = 0;                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			// And make sure to always use low priority.                                  C:\Projects\UBW\FW\D\user\user.c
000a66   9c9f     BCF       0x9f,0x6,0x0   			IPR1bits.ADIP = 0;                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			// Set the interrupt enable                                                   C:\Projects\UBW\FW\D\user\user.c
000a68   8c9d     BSF       0x9d,0x6,0x0   			PIE1bits.ADIE = 1;                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			// Make sure it's on!                                                         C:\Projects\UBW\FW\D\user\user.c
000a6a   80c2     BSF       0xc2,0x0,0x0   			ADCON0bits.ADON = 1;                                                          C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			// And tell the A/D to GO!                                                    C:\Projects\UBW\FW\D\user\user.c
000a6c   82c2     BSF       0xc2,0x1,0x0   			ADCON0bits.GO_DONE = 1;                                                       C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Do we have an analog interrupt?                                              C:\Projects\UBW\FW\D\user\user.c
000a6e   ac9e     BTFSS     0x9e,0x6,0x0   	if (PIR1bits.ADIF)                                                              C:\Projects\UBW\FW\D\user\user.c
000a70   d02d     BRA       0xacc                                                                                           
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// Clear the interrupt                                                         C:\Projects\UBW\FW\D\user\user.c
000a72   9c9e     BCF       0x9e,0x6,0x0   		PIR1bits.ADIF = 0;                                                             C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		// Read out the value that we just converted, and store it.                    C:\Projects\UBW\FW\D\user\user.c
000a8a   5015     MOVF      0x15,0x0,0x0   		ISR_A_FIFO[A_cur_channel][ISR_A_FIFO_in] =                                     C:\Projects\UBW\FW\D\user\user.c
000a8c   0d06     MULLW     0x6                                                                                             
000a8e   cff3     MOVFF     0xff3,0x38                                                                                      
000a90   f038                                                                                                               
000a92   cff4     MOVFF     0xff4,0x39                                                                                      
000a94   f039                                                                                                               
000a96   0e00     MOVLW     0x0                                                                                             
000a98   2638     ADDWF     0x38,0x1,0x0                                                                                    
000a9a   0e01     MOVLW     0x1                                                                                             
000a9c   2239     ADDWFC    0x39,0x1,0x0                                                                                    
000a9e   5009     MOVF      0x9,0x0,0x0                                                                                     
000aa0   0d02     MULLW     0x2                                                                                             
000aa2   5038     MOVF      0x38,0x0,0x0                                                                                    
000aa4   24f3     ADDWF     0xf3,0x0,0x0                                                                                    
000aa6   6ee9     MOVWF     0xe9,0x0                                                                                        
000aa8   5039     MOVF      0x39,0x0,0x0                                                                                    
000aaa   20f4     ADDWFC    0xf4,0x0,0x0                                                                                    
000aac   6eea     MOVWF     0xea,0x0                                                                                        
000a7e   50c3     MOVF      0xc3,0x0,0x0   			(unsigned int)ADRESL                                                          C:\Projects\UBW\FW\D\user\user.c
                                           			|                                                                             C:\Projects\UBW\FW\D\user\user.c
000a74   50c4     MOVF      0xc4,0x0,0x0   			((unsigned int)ADRESH << 8);                                                  C:\Projects\UBW\FW\D\user\user.c
000a76   6e3c     MOVWF     0x3c,0x0                                                                                        
000a78   c03c     MOVFF     0x3c,0x3d                                                                                       
000a7a   f03d                                                                                                               
000a7c   6a3c     CLRF      0x3c,0x0                                                                                        
000a80   0100     MOVLB     0x0                                                                                             
000a82   103c     IORWF     0x3c,0x0,0x0                                                                                    
000a84   6e3a     MOVWF     0x3a,0x0                                                                                        
000a86   c03d     MOVFF     0x3d,0x3b                                                                                       
000a88   f03b                                                                                                               
000aae   c03a     MOVFF     0x3a,0xfee                                                                                      
000ab0   ffee                                                                                                               
000ab2   c03b     MOVFF     0x3b,0xfed                                                                                      
000ab4   ffed                                                                                                               
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           		// Incriment the channel and write the new one in                              C:\Projects\UBW\FW\D\user\user.c
000ab6   2a15     INCF      0x15,0x1,0x0   		A_cur_channel++;                                                               C:\Projects\UBW\FW\D\user\user.c
000ab8   500c     MOVF      0xc,0x0,0x0    		if (A_cur_channel >= AnalogEnable)                                             C:\Projects\UBW\FW\D\user\user.c
000aba   5c15     SUBWF     0x15,0x0,0x0                                                                                    
000abc   e302     BNC       0xac2                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// We're done, so just sit and wait                                           C:\Projects\UBW\FW\D\user\user.c
                                           			// Turn off our interrupts though.                                            C:\Projects\UBW\FW\D\user\user.c
000abe   9c9d     BCF       0x9d,0x6,0x0   			PIE1bits.ADIE = 0;                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
000ac0   d005     BRA       0xacc          		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Update the channel number                                                  C:\Projects\UBW\FW\D\user\user.c
000ac2   5015     MOVF      0x15,0x0,0x0   			ADCON0 = (A_cur_channel << 2) + 1;                                            C:\Projects\UBW\FW\D\user\user.c
000ac4   0d04     MULLW     0x4                                                                                             
000ac6   28f3     INCF      0xf3,0x0,0x0                                                                                    
000ac8   6ec2     MOVWF     0xc2,0x0                                                                                        
                                           			// And start the next conversion                                              C:\Projects\UBW\FW\D\user\user.c
000aca   82c2     BSF       0xc2,0x1,0x0   			ADCON0bits.GO_DONE = 1;                                                       C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Do we have a TMR0 interrupt? (RC command)                                    C:\Projects\UBW\FW\D\user\user.c
                                           	// TMR0 is in 16 bit mode, and counts up to FFFF and overflows, generating      C:\Projects\UBW\FW\D\user\user.c
                                           	// this interrupt.                                                              C:\Projects\UBW\FW\D\user\user.c
000acc   a4f2     BTFSS     0xf2,0x2,0x0   	if (INTCONbits.TMR0IF)                                                          C:\Projects\UBW\FW\D\user\user.c
000ace   d042     BRA       0xb54                                                                                           
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// Turn off Timer0                                                             C:\Projects\UBW\FW\D\user\user.c
000ad0   9ed5     BCF       0xd5,0x7,0x0   		T0CONbits.TMR0ON = 0;                                                          C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		// Clear the interrupt                                                         C:\Projects\UBW\FW\D\user\user.c
000ad2   94f2     BCF       0xf2,0x2,0x0   		INTCONbits.TMR0IF = 0;                                                         C:\Projects\UBW\FW\D\user\user.c
                                           		                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// And disable it                                                              C:\Projects\UBW\FW\D\user\user.c
000ad4   9af2     BCF       0xf2,0x5,0x0   		INTCONbits.TMR0IE = 0;                                                         C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		// Only do our stuff if the pin is in the proper state                         C:\Projects\UBW\FW\D\user\user.c
000ad6   0e04     MOVLW     0x4            		if (kTIMING == g_RC_state[g_RC_timing_ptr])                                    C:\Projects\UBW\FW\D\user\user.c
000ad8   6e38     MOVWF     0x38,0x0                                                                                        
000ada   5010     MOVF      0x10,0x0,0x0                                                                                    
000adc   6aea     CLRF      0xea,0x0                                                                                        
000ade   0f51     ADDLW     0x51                                                                                            
000ae0   6ee9     MOVWF     0xe9,0x0                                                                                        
000ae2   0e01     MOVLW     0x1                                                                                             
000ae4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000ae6   50ef     MOVF      0xef,0x0,0x0                                                                                    
000ae8   5c38     SUBWF     0x38,0x0,0x0                                                                                    
000aea   e134     BNZ       0xb54                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// All we need to do is clear the pin and change its state to kWAITING        C:\Projects\UBW\FW\D\user\user.c
000aec   0e08     MOVLW     0x8            			if (g_RC_timing_ptr < 8)                                                      C:\Projects\UBW\FW\D\user\user.c
000aee   5c10     SUBWF     0x10,0x0,0x0                                                                                    
000af0   e20d     BC        0xb0c                                                                                           
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
000af2   0e07     MOVLW     0x7            				bitclr (LATA, g_RC_timing_ptr & 0x7);                                        C:\Projects\UBW\FW\D\user\user.c
000af4   1410     ANDWF     0x10,0x0,0x0                                                                                    
000af6   6e38     MOVWF     0x38,0x0                                                                                        
000af8   0e01     MOVLW     0x1                                                                                             
000afa   5238     MOVF      0x38,0x1,0x0                                                                                    
000afc   e004     BZ        0xb06                                                                                           
000afe   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
000b00   0bfe     ANDLW     0xfe                                                                                            
000b02   0638     DECF      0x38,0x1,0x0                                                                                    
000b04   e1fc     BNZ       0xafe                                                                                           
000b06   1ce8     COMF      0xe8,0x0,0x0                                                                                    
000b08   1689     ANDWF     0x89,0x1,0x0                                                                                    
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
000b0a   d01c     BRA       0xb44          			else if (g_RC_timing_ptr < 16)                                                C:\Projects\UBW\FW\D\user\user.c
000b0c   0e10     MOVLW     0x10                                                                                            
000b0e   5c10     SUBWF     0x10,0x0,0x0                                                                                    
000b10   e20d     BC        0xb2c                                                                                           
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
000b12   0e07     MOVLW     0x7            				bitclr (LATB, g_RC_timing_ptr & 0x7);                                        C:\Projects\UBW\FW\D\user\user.c
000b14   1410     ANDWF     0x10,0x0,0x0                                                                                    
000b16   6e38     MOVWF     0x38,0x0                                                                                        
000b18   0e01     MOVLW     0x1                                                                                             
000b1a   5238     MOVF      0x38,0x1,0x0                                                                                    
000b1c   e004     BZ        0xb26                                                                                           
000b1e   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
000b20   0bfe     ANDLW     0xfe                                                                                            
000b22   0638     DECF      0x38,0x1,0x0                                                                                    
000b24   e1fc     BNZ       0xb1e                                                                                           
000b26   1ce8     COMF      0xe8,0x0,0x0                                                                                    
000b28   168a     ANDWF     0x8a,0x1,0x0                                                                                    
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
000b2a   d00c     BRA       0xb44          			else                                                                          C:\Projects\UBW\FW\D\user\user.c
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
000b2c   0e07     MOVLW     0x7            				bitclr (LATC, g_RC_timing_ptr & 0x7);                                        C:\Projects\UBW\FW\D\user\user.c
000b2e   1410     ANDWF     0x10,0x0,0x0                                                                                    
000b30   6e38     MOVWF     0x38,0x0                                                                                        
000b32   0e01     MOVLW     0x1                                                                                             
000b34   5238     MOVF      0x38,0x1,0x0                                                                                    
000b36   e004     BZ        0xb40                                                                                           
000b38   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
000b3a   0bfe     ANDLW     0xfe                                                                                            
000b3c   0638     DECF      0x38,0x1,0x0                                                                                    
000b3e   e1fc     BNZ       0xb38                                                                                           
000b40   1ce8     COMF      0xe8,0x0,0x0                                                                                    
000b42   168b     ANDWF     0x8b,0x1,0x0                                                                                    
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
000b44   5010     MOVF      0x10,0x0,0x0   			g_RC_state[g_RC_timing_ptr] = kWAITING;		                                     C:\Projects\UBW\FW\D\user\user.c
000b46   6aea     CLRF      0xea,0x0                                                                                        
000b48   0f51     ADDLW     0x51                                                                                            
000b4a   6ee9     MOVWF     0xe9,0x0                                                                                        
000b4c   0e01     MOVLW     0x1                                                                                             
000b4e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000b50   0e02     MOVLW     0x2                                                                                             
000b52   6eef     MOVWF     0xef,0x0                                                                                        
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
000b54   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\Projects\UBW\FW\D\user\user.c
000b56   cfe5     MOVFF     0xfe5,0xff4                                                                                     
000b58   fff4                                                                                                               
000b5a   cfe5     MOVFF     0xfe5,0xff3                                                                                     
000b5c   fff3                                                                                                               
000b5e   cfe5     MOVFF     0xfe5,0xfea                                                                                     
000b60   ffea                                                                                                               
000b62   cfe5     MOVFF     0xfe5,0xfe9                                                                                     
000b64   ffe9                                                                                                               
000b66   cfe5     MOVFF     0xfe5,0xfda                                                                                     
000b68   ffda                                                                                                               
000b6a   50e5     MOVF      0xe5,0x0,0x0                                                                                    
000b6c   cfe5     MOVFF     0xfe5,0xfe0                                                                                     
000b6e   ffe0                                                                                                               
000b70   cfe5     MOVFF     0xfe5,0xfd8                                                                                     
000b72   ffd8                                                                                                               
000b74   0010     RETFIE    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           #pragma interrupt high_ISR                                                       C:\Projects\UBW\FW\D\user\user.c
000b76   cfda     MOVFF     0xfda,0xfe4    void high_ISR(void)                                                              C:\Projects\UBW\FW\D\user\user.c
000b78   ffe4                                                                                                               
000b7a   cfe2     MOVFF     0xfe2,0xfda                                                                                     
000b7c   ffda                                                                                                               
000b7e   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
000b80   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\Projects\UBW\FW\D\user\user.c
000b82   cfe5     MOVFF     0xfe5,0xfda                                                                                     
000b84   ffda                                                                                                               
000b86   0011     RETFIE    0x1                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
000b88   cfd9     MOVFF     0xfd9,0xfe6    void UserInit(void)                                                              C:\Projects\UBW\FW\D\user\user.c
000b8a   ffe6                                                                                                               
000b8c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000b8e   ffd9                                                                                                               
000b90   0e02     MOVLW     0x2                                                                                             
000b92   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	char i, j;                                                                      C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Make all of 3 digital inputs                                                 C:\Projects\UBW\FW\D\user\user.c
000b94   6a89     CLRF      0x89,0x0       	LATA = 0x00;                                                                    C:\Projects\UBW\FW\D\user\user.c
000b96   6892     SETF      0x92,0x0       	TRISA = 0xFF;                                                                   C:\Projects\UBW\FW\D\user\user.c
                                           	// Turn all analog inputs into digital inputs                                   C:\Projects\UBW\FW\D\user\user.c
000b98   0e0f     MOVLW     0xf            	ADCON1 = 0x0F;                                                                  C:\Projects\UBW\FW\D\user\user.c
000b9a   6ec1     MOVWF     0xc1,0x0                                                                                        
                                           	// Turn off the ADC                                                             C:\Projects\UBW\FW\D\user\user.c
000b9c   90c2     BCF       0xc2,0x0,0x0   	ADCON0bits.ADON = 0;                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Turn off our own idea of how many analog channels to convert                 C:\Projects\UBW\FW\D\user\user.c
000b9e   6a0c     CLRF      0xc,0x0        	AnalogEnable = 0;                                                               C:\Projects\UBW\FW\D\user\user.c
000ba0   0e07     MOVLW     0x7            	CMCON = 0x07;	// Comparators as digital inputs                                  C:\Projects\UBW\FW\D\user\user.c
000ba2   6eb4     MOVWF     0xb4,0x0                                                                                        
                                           	// Make all of PORTB inputs                                                     C:\Projects\UBW\FW\D\user\user.c
000ba4   6a8a     CLRF      0x8a,0x0       	LATB = 0x00;                                                                    C:\Projects\UBW\FW\D\user\user.c
000ba6   6893     SETF      0x93,0x0       	TRISB = 0xFF;                                                                   C:\Projects\UBW\FW\D\user\user.c
                                           	// Make all of PORTC inputs                                                     C:\Projects\UBW\FW\D\user\user.c
000ba8   6a8b     CLRF      0x8b,0x0       	LATC = 0x00;                                                                    C:\Projects\UBW\FW\D\user\user.c
000baa   6894     SETF      0x94,0x0       	TRISC = 0xFF;                                                                   C:\Projects\UBW\FW\D\user\user.c
                                           #ifdef __18F4550                                                                 C:\Projects\UBW\FW\D\user\user.c
                                           	// Make all of PORTD and PORTE inputs too                                       C:\Projects\UBW\FW\D\user\user.c
000bac   6a8c     CLRF      0x8c,0x0       	LATD = 0x00;                                                                    C:\Projects\UBW\FW\D\user\user.c
000bae   6895     SETF      0x95,0x0       	TRISD = 0xFF;                                                                   C:\Projects\UBW\FW\D\user\user.c
000bb0   6a8d     CLRF      0x8d,0x0       	LATE = 0x00;                                                                    C:\Projects\UBW\FW\D\user\user.c
000bb2   6896     SETF      0x96,0x0       	TRISE = 0xFF;                                                                   C:\Projects\UBW\FW\D\user\user.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Initalize LED I/Os to outputs                                                C:\Projects\UBW\FW\D\user\user.c
000bb4   0efc     MOVLW     0xfc               mInitAllLEDs();                                                              C:\Projects\UBW\FW\D\user\user.c
000bb6   168b     ANDWF     0x8b,0x1,0x0                                                                                    
000bb8   0efc     MOVLW     0xfc                                                                                            
000bba   1694     ANDWF     0x94,0x1,0x0                                                                                    
                                           	// Initalize switch as an input                                                 C:\Projects\UBW\FW\D\user\user.c
000bbc   8494     BSF       0x94,0x2,0x0       mInitSwitch();                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Start off always using "OK" acknoledge.                                      C:\Projects\UBW\FW\D\user\user.c
000bbe   0101     MOVLB     0x1            	g_ack_enable = TRUE;                                                            C:\Projects\UBW\FW\D\user\user.c
000bc0   0e01     MOVLW     0x1                                                                                             
000bc2   6fc1     MOVWF     0xc1,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Use our own special output function for STDOUT                               C:\Projects\UBW\FW\D\user\user.c
000bc4   0101     MOVLB     0x1            	stdout = _H_USER;                                                               C:\Projects\UBW\FW\D\user\user.c
000bc6   69df     SETF      0xdf,0x1                                                                                        
000bc8   69e0     SETF      0xe0,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Initalize all of the ISR FIFOs                                               C:\Projects\UBW\FW\D\user\user.c
000bca   6a0a     CLRF      0xa,0x0            ISR_A_FIFO_out = 0;                                                          C:\Projects\UBW\FW\D\user\user.c
000bcc   6a09     CLRF      0x9,0x0            ISR_A_FIFO_in = 0;                                                           C:\Projects\UBW\FW\D\user\user.c
000bce   6a0b     CLRF      0xb,0x0            ISR_A_FIFO_length = 0;                                                       C:\Projects\UBW\FW\D\user\user.c
000bd0   6a05     CLRF      0x5,0x0            ISR_D_FIFO_out = 0;                                                          C:\Projects\UBW\FW\D\user\user.c
000bd2   6a04     CLRF      0x4,0x0            ISR_D_FIFO_in = 0;                                                           C:\Projects\UBW\FW\D\user\user.c
000bd4   6a06     CLRF      0x6,0x0            ISR_D_FIFO_length = 0;                                                       C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Make sure that our timer stuff starts out disabled                           C:\Projects\UBW\FW\D\user\user.c
000bd6   6a02     CLRF      0x2,0x0        	ISR_D_RepeatRate = 0;                                                           C:\Projects\UBW\FW\D\user\user.c
000bd8   6a03     CLRF      0x3,0x0                                                                                         
000bda   6a07     CLRF      0x7,0x0        	ISR_A_RepeatRate = 0;                                                           C:\Projects\UBW\FW\D\user\user.c
000bdc   6a08     CLRF      0x8,0x0                                                                                         
000bde   6a11     CLRF      0x11,0x0       	D_tick_counter = 0;                                                             C:\Projects\UBW\FW\D\user\user.c
000be0   6a12     CLRF      0x12,0x0                                                                                        
000be2   6a13     CLRF      0x13,0x0       	A_tick_counter = 0;                                                             C:\Projects\UBW\FW\D\user\user.c
000be4   6a14     CLRF      0x14,0x0                                                                                        
000be6   6a15     CLRF      0x15,0x0       	A_cur_channel = 0;                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                               // Now init our registers                                                    C:\Projects\UBW\FW\D\user\user.c
                                           	// The prescaler will be at 16                                                  C:\Projects\UBW\FW\D\user\user.c
000be8   82ca     BSF       0xca,0x1,0x0       T2CONbits.T2CKPS1 = 1;                                                       C:\Projects\UBW\FW\D\user\user.c
000bea   80ca     BSF       0xca,0x0,0x0       T2CONbits.T2CKPS0 = 1;                                                       C:\Projects\UBW\FW\D\user\user.c
                                               // We want the TMR2 post scaler to be a 3                                    C:\Projects\UBW\FW\D\user\user.c
000bec   9cca     BCF       0xca,0x6,0x0       T2CONbits.T2OUTPS3 = 0;                                                      C:\Projects\UBW\FW\D\user\user.c
000bee   9aca     BCF       0xca,0x5,0x0       T2CONbits.T2OUTPS2 = 0;                                                      C:\Projects\UBW\FW\D\user\user.c
000bf0   88ca     BSF       0xca,0x4,0x0       T2CONbits.T2OUTPS1 = 1;                                                      C:\Projects\UBW\FW\D\user\user.c
000bf2   96ca     BCF       0xca,0x3,0x0       T2CONbits.T2OUTPS0 = 0;                                                      C:\Projects\UBW\FW\D\user\user.c
                                           	// Set our reload value                                                         C:\Projects\UBW\FW\D\user\user.c
000bf4   0efa     MOVLW     0xfa           	PR2 = kPR2_RELOAD;                                                              C:\Projects\UBW\FW\D\user\user.c
000bf6   6ecb     MOVWF     0xcb,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Set up the Analog to Digital converter                                       C:\Projects\UBW\FW\D\user\user.c
                                           	// Clear out the FIFO data                                                      C:\Projects\UBW\FW\D\user\user.c
000bf8   6adf     CLRF      0xdf,0x0       	for (i = 0; i < 12; i++)                                                        C:\Projects\UBW\FW\D\user\user.c
000bfa   cfdf     MOVFF     0xfdf,0x2a                                                                                      
000bfc   f02a                                                                                                               
000bfe   0e0c     MOVLW     0xc                                                                                             
000c00   6ee7     MOVWF     0xe7,0x0                                                                                        
000c02   182a     XORWF     0x2a,0x0,0x0                                                                                    
000c04   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000c06   d002     BRA       0xc0c                                                                                           
000c08   34e7     RLCF      0xe7,0x0,0x0                                                                                    
000c0a   d002     BRA       0xc10                                                                                           
000c0c   50e7     MOVF      0xe7,0x0,0x0                                                                                    
000c0e   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
000c10   e238     BC        0xc82                                                                                           
000c7e   2adf     INCF      0xdf,0x1,0x0                                                                                    
000c80   d7bc     BRA       0xbfa                                                                                           
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
000c12   0e01     MOVLW     0x1            		for (j = 0; j < kISR_FIFO_A_DEPTH; j++)                                        C:\Projects\UBW\FW\D\user\user.c
000c14   6adb     CLRF      0xdb,0x0                                                                                        
000c16   0e01     MOVLW     0x1                                                                                             
000c18   cfdb     MOVFF     0xfdb,0x2a                                                                                      
000c1a   f02a                                                                                                               
000c1c   0e03     MOVLW     0x3                                                                                             
000c1e   6ee7     MOVWF     0xe7,0x0                                                                                        
000c20   182a     XORWF     0x2a,0x0,0x0                                                                                    
000c22   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000c24   d002     BRA       0xc2a                                                                                           
000c26   34e7     RLCF      0xe7,0x0,0x0                                                                                    
000c28   d002     BRA       0xc2e                                                                                           
000c2a   50e7     MOVF      0xe7,0x0,0x0                                                                                    
000c2c   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
000c2e   e227     BC        0xc7e                                                                                           
000c78   0e01     MOVLW     0x1                                                                                             
000c7a   2adb     INCF      0xdb,0x1,0x0                                                                                    
000c7c   d7cc     BRA       0xc16                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
000c30   cfdf     MOVFF     0xfdf,0x2a     			ISR_A_FIFO[i][j] = 0;                                                         C:\Projects\UBW\FW\D\user\user.c
000c32   f02a                                                                                                               
000c34   6a2b     CLRF      0x2b,0x0                                                                                        
000c36   be2a     BTFSC     0x2a,0x7,0x0                                                                                    
000c38   682b     SETF      0x2b,0x0                                                                                        
000c3a   0e06     MOVLW     0x6                                                                                             
000c3c   022b     MULWF     0x2b,0x0                                                                                        
000c3e   cff3     MOVFF     0xff3,0x2b                                                                                      
000c40   f02b                                                                                                               
000c42   0e06     MOVLW     0x6                                                                                             
000c44   022a     MULWF     0x2a,0x0                                                                                        
000c46   cff3     MOVFF     0xff3,0x2a                                                                                      
000c48   f02a                                                                                                               
000c4a   50f4     MOVF      0xf4,0x0,0x0                                                                                    
000c4c   262b     ADDWF     0x2b,0x1,0x0                                                                                    
000c4e   0e00     MOVLW     0x0                                                                                             
000c50   262a     ADDWF     0x2a,0x1,0x0                                                                                    
000c52   0e01     MOVLW     0x1                                                                                             
000c54   222b     ADDWFC    0x2b,0x1,0x0                                                                                    
000c56   0e01     MOVLW     0x1                                                                                             
000c58   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000c5a   f02c                                                                                                               
000c5c   6a2d     CLRF      0x2d,0x0                                                                                        
000c5e   be2c     BTFSC     0x2c,0x7,0x0                                                                                    
000c60   682d     SETF      0x2d,0x0                                                                                        
000c62   90d8     BCF       0xd8,0x0,0x0                                                                                    
000c64   362c     RLCF      0x2c,0x1,0x0                                                                                    
000c66   362d     RLCF      0x2d,0x1,0x0                                                                                    
000c68   502a     MOVF      0x2a,0x0,0x0                                                                                    
000c6a   242c     ADDWF     0x2c,0x0,0x0                                                                                    
000c6c   6ee9     MOVWF     0xe9,0x0                                                                                        
000c6e   502b     MOVF      0x2b,0x0,0x0                                                                                    
000c70   202d     ADDWFC    0x2d,0x0,0x0                                                                                    
000c72   6eea     MOVWF     0xea,0x0                                                                                        
000c74   6aee     CLRF      0xee,0x0                                                                                        
000c76   6aed     CLRF      0xed,0x0                                                                                        
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}	                                                                              C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                               // Inialize USB TX and RX buffer management                                  C:\Projects\UBW\FW\D\user\user.c
000c82   0101     MOVLB     0x1                g_RX_buf_in = 0;                                                             C:\Projects\UBW\FW\D\user\user.c
000c84   6bbb     CLRF      0xbb,0x1                                                                                        
000c86   0101     MOVLB     0x1                g_RX_buf_out = 0;                                                            C:\Projects\UBW\FW\D\user\user.c
000c88   6bbc     CLRF      0xbc,0x1                                                                                        
000c8a   0101     MOVLB     0x1            	g_TX_buf_in = 0;                                                                C:\Projects\UBW\FW\D\user\user.c
000c8c   6bb9     CLRF      0xb9,0x1                                                                                        
000c8e   0101     MOVLB     0x1            	g_TX_buf_out = 0;                                                               C:\Projects\UBW\FW\D\user\user.c
000c90   6bba     CLRF      0xba,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// And the USART TX and RX buffer management                                    C:\Projects\UBW\FW\D\user\user.c
000c92   0101     MOVLB     0x1            	g_USART_RX_buf_in = 0;                                                          C:\Projects\UBW\FW\D\user\user.c
000c94   6bbd     CLRF      0xbd,0x1                                                                                        
000c96   0101     MOVLB     0x1            	g_USART_RX_buf_out = 0;                                                         C:\Projects\UBW\FW\D\user\user.c
000c98   6bbe     CLRF      0xbe,0x1                                                                                        
000c9a   0101     MOVLB     0x1            	g_USART_TX_buf_in = 0;                                                          C:\Projects\UBW\FW\D\user\user.c
000c9c   6bbf     CLRF      0xbf,0x1                                                                                        
000c9e   0101     MOVLB     0x1            	g_USART_TX_buf_out = 0;                                                         C:\Projects\UBW\FW\D\user\user.c
000ca0   6bc0     CLRF      0xc0,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Clear out the RC servo output pointer values                                 C:\Projects\UBW\FW\D\user\user.c
000ca2   6a0e     CLRF      0xe,0x0        	g_RC_primed_ptr = 0;                                                            C:\Projects\UBW\FW\D\user\user.c
000ca4   6a0f     CLRF      0xf,0x0        	g_RC_next_ptr = 0;                                                              C:\Projects\UBW\FW\D\user\user.c
000ca6   6a10     CLRF      0x10,0x0       	g_RC_timing_ptr = 0;                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Clear the RC data structure                                                  C:\Projects\UBW\FW\D\user\user.c
000ca8   6adf     CLRF      0xdf,0x0       	for (i = 0; i < kRC_DATA_SIZE; i++)                                             C:\Projects\UBW\FW\D\user\user.c
000caa   cfdf     MOVFF     0xfdf,0x2a                                                                                      
000cac   f02a                                                                                                               
000cae   0e18     MOVLW     0x18                                                                                            
000cb0   6ee7     MOVWF     0xe7,0x0                                                                                        
000cb2   182a     XORWF     0x2a,0x0,0x0                                                                                    
000cb4   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000cb6   d002     BRA       0xcbc                                                                                           
000cb8   34e7     RLCF      0xe7,0x0,0x0                                                                                    
000cba   d002     BRA       0xcc0                                                                                           
000cbc   50e7     MOVF      0xe7,0x0,0x0                                                                                    
000cbe   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
000cc0   e21b     BC        0xcf8                                                                                           
000cf4   2adf     INCF      0xdf,0x1,0x0                                                                                    
000cf6   d7d9     BRA       0xcaa                                                                                           
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
000cc2   cfdf     MOVFF     0xfdf,0xfe9    		g_RC_value[i] = 0;                                                             C:\Projects\UBW\FW\D\user\user.c
000cc4   ffe9                                                                                                               
000cc6   6aea     CLRF      0xea,0x0                                                                                        
000cc8   bee9     BTFSC     0xe9,0x7,0x0                                                                                    
000cca   68ea     SETF      0xea,0x0                                                                                        
000ccc   90d8     BCF       0xd8,0x0,0x0                                                                                    
000cce   36e9     RLCF      0xe9,0x1,0x0                                                                                    
000cd0   36ea     RLCF      0xea,0x1,0x0                                                                                    
000cd2   0e69     MOVLW     0x69                                                                                            
000cd4   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000cd6   0e01     MOVLW     0x1                                                                                             
000cd8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000cda   6aee     CLRF      0xee,0x0                                                                                        
000cdc   6aed     CLRF      0xed,0x0                                                                                        
000cde   cfdf     MOVFF     0xfdf,0xfe9    		g_RC_state[i] = kOFF;                                                          C:\Projects\UBW\FW\D\user\user.c
000ce0   ffe9                                                                                                               
000ce2   6aea     CLRF      0xea,0x0                                                                                        
000ce4   bee9     BTFSC     0xe9,0x7,0x0                                                                                    
000ce6   68ea     SETF      0xea,0x0                                                                                        
000ce8   0e51     MOVLW     0x51                                                                                            
000cea   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000cec   0e01     MOVLW     0x1                                                                                             
000cee   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000cf0   0e01     MOVLW     0x1                                                                                             
000cf2   6eef     MOVWF     0xef,0x0                                                                                        
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Enable TMR0 for our RC timing operation                                      C:\Projects\UBW\FW\D\user\user.c
000cf8   86d5     BSF       0xd5,0x3,0x0   	T0CONbits.PSA = 1;		// Do NOT use the prescaler                                 C:\Projects\UBW\FW\D\user\user.c
000cfa   9ad5     BCF       0xd5,0x5,0x0   	T0CONbits.T0CS = 0;		// Use internal clock                                      C:\Projects\UBW\FW\D\user\user.c
000cfc   9cd5     BCF       0xd5,0x6,0x0   	T0CONbits.T08BIT = 0;	// 16 bit timer                                           C:\Projects\UBW\FW\D\user\user.c
000cfe   94f2     BCF       0xf2,0x2,0x0   	INTCONbits.TMR0IF = 0;	// Clear the interrupt flag                              C:\Projects\UBW\FW\D\user\user.c
000d00   9af2     BCF       0xf2,0x5,0x0   	INTCONbits.TMR0IE = 0;	// And clear the interrupt enable                        C:\Projects\UBW\FW\D\user\user.c
000d02   94f1     BCF       0xf1,0x2,0x0   	INTCON2bits.TMR0IP = 0;	// Low priority                                         C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                               // Enable interrupt priorities                                               C:\Projects\UBW\FW\D\user\user.c
000d04   8ed0     BSF       0xd0,0x7,0x0       RCONbits.IPEN = 1;                                                           C:\Projects\UBW\FW\D\user\user.c
000d06   94ca     BCF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 0;                                                           C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
000d08   829d     BSF       0x9d,0x1,0x0       PIE1bits.TMR2IE = 1;                                                         C:\Projects\UBW\FW\D\user\user.c
000d0a   929f     BCF       0x9f,0x1,0x0       IPR1bits.TMR2IP = 0;                                                         C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
000d0c   8ef2     BSF       0xf2,0x7,0x0       INTCONbits.GIEH = 1;	// Turn high priority interrupts on                     C:\Projects\UBW\FW\D\user\user.c
000d0e   8cf2     BSF       0xf2,0x6,0x0       INTCONbits.GIEL = 1;	// Turn low priority interrupts on                      C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Turn on the Timer2                                                           C:\Projects\UBW\FW\D\user\user.c
000d10   84ca     BSF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 1;                                                           C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
000d12   0e02     MOVLW     0x2            }//end UserInit                                                                  C:\Projects\UBW\FW\D\user\user.c
000d14   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
000d16   e202     BC        0xd1c                                                                                           
000d18   6ae1     CLRF      0xe1,0x0                                                                                        
000d1a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d1c   6ee1     MOVWF     0xe1,0x0                                                                                        
000d1e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d20   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000d22   ffd9                                                                                                               
000d24   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\user\user.c
                                            * Function:        void ProcessIO(void)                                         C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * Overview:        In this function, we check for a new packet that just        C:\Projects\UBW\FW\D\user\user.c
                                            * 					arrived via USB. We do a few checks on the packet to see                 C:\Projects\UBW\FW\D\user\user.c
                                            *					if it is worthy of us trying to interpret it. If it is,                   C:\Projects\UBW\FW\D\user\user.c
                                            *					we go and call the proper function based upon the first                   C:\Projects\UBW\FW\D\user\user.c
                                            *					character of the packet.                                                  C:\Projects\UBW\FW\D\user\user.c
                                            *					NOTE: We need to see everything in one packet (i.e. we                    C:\Projects\UBW\FW\D\user\user.c
                                            *					won't treat the USB data as a stream and try to find our                  C:\Projects\UBW\FW\D\user\user.c
                                            *					start and end of packets within the stream. We just look                  C:\Projects\UBW\FW\D\user\user.c
                                            *					at the first character of each packet for a command and                   C:\Projects\UBW\FW\D\user\user.c
                                            * 					check that there's a CR as the last character of the                     C:\Projects\UBW\FW\D\user\user.c
                                            *					packet.                                                                   C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\user\user.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\user\user.c
000d26   cfd9     MOVFF     0xfd9,0xfe6    void ProcessIO(void)                                                             C:\Projects\UBW\FW\D\user\user.c
000d28   ffe6                                                                                                               
000d2a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000d2c   ffd9                                                                                                               
000d2e   0e02     MOVLW     0x2                                                                                             
000d30   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	static BOOL in_cr = FALSE;                                                      C:\Projects\UBW\FW\D\user\user.c
                                           	static byte last_fifo_size;                                                     C:\Projects\UBW\FW\D\user\user.c
                                               unsigned char tst_char;                                                      C:\Projects\UBW\FW\D\user\user.c
000d32   0e01     MOVLW     0x1            	BOOL	got_full_packet = FALSE;                                                   C:\Projects\UBW\FW\D\user\user.c
000d34   6adb     CLRF      0xdb,0x0                                                                                        
000d36   0101     MOVLB     0x1            	cdc_rx_len = 0;                                                                 C:\Projects\UBW\FW\D\user\user.c
000d38   6b99     CLRF      0x99,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
000d3a   ecf6     CALL      0x27ec,0x0     	BlinkUSBStatus();                                                               C:\Projects\UBW\FW\D\user\user.c
000d3c   f013                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                               // User Application USB tasks                                                C:\Projects\UBW\FW\D\user\user.c
000d3e   0e06     MOVLW     0x6                if((usb_device_state < CONFIGURED_STATE) || (UCONbits.SUSPND == 1))          C:\Projects\UBW\FW\D\user\user.c
000d40   0101     MOVLB     0x1                                                                                             
000d42   5dd5     SUBWF     0xd5,0x0,0x1                                                                                    
000d44   e303     BNC       0xd4c                                                                                           
000d46   506d     MOVF      0x6d,0x0,0x0                                                                                    
000d48   0b02     ANDLW     0x2                                                                                             
000d4a   e001     BZ        0xd4e                                                                                           
                                           	{	                                                                              C:\Projects\UBW\FW\D\user\user.c
000d4c   d105     BRA       0xf58          		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Check for any new I packets (from T command) ready to go out                 C:\Projects\UBW\FW\D\user\user.c
000d4e   5006     MOVF      0x6,0x0,0x0    	while (ISR_D_FIFO_length > 0)                                                   C:\Projects\UBW\FW\D\user\user.c
000d50   0800     SUBLW     0x0                                                                                             
000d52   e209     BC        0xd66                                                                                           
000d64   d7f4     BRA       0xd4e                                                                                           
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// Spit out an I packet first                                                  C:\Projects\UBW\FW\D\user\user.c
000d54   ec33     CALL      0x1666,0x0     		parse_I_packet ();                                                             C:\Projects\UBW\FW\D\user\user.c
000d56   f00b                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		// Then upate our I packet fifo stuff                                          C:\Projects\UBW\FW\D\user\user.c
000d58   2a05     INCF      0x5,0x1,0x0    		ISR_D_FIFO_out++;                                                              C:\Projects\UBW\FW\D\user\user.c
000d5a   0e03     MOVLW     0x3            		if (ISR_D_FIFO_out == kISR_FIFO_D_DEPTH)                                       C:\Projects\UBW\FW\D\user\user.c
000d5c   5c05     SUBWF     0x5,0x0,0x0                                                                                     
000d5e   e101     BNZ       0xd62                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
000d60   6a05     CLRF      0x5,0x0        			ISR_D_FIFO_out = 0;                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
000d62   0606     DECF      0x6,0x1,0x0    		ISR_D_FIFO_length--;                                                           C:\Projects\UBW\FW\D\user\user.c
                                           	}			                                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Check for a new A packet (from T command) ready to go out                    C:\Projects\UBW\FW\D\user\user.c
000d66   500b     MOVF      0xb,0x0,0x0    	while (ISR_A_FIFO_length > 0)                                                   C:\Projects\UBW\FW\D\user\user.c
000d68   0800     SUBLW     0x0                                                                                             
000d6a   e209     BC        0xd7e                                                                                           
000d7c   d7f4     BRA       0xd66                                                                                           
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// Spit out an A packet first                                                  C:\Projects\UBW\FW\D\user\user.c
000d6c   ec65     CALL      0x16ca,0x0     		parse_A_packet ();                                                             C:\Projects\UBW\FW\D\user\user.c
000d6e   f00b                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		// Then update our A packet fifo stuff                                         C:\Projects\UBW\FW\D\user\user.c
000d70   2a0a     INCF      0xa,0x1,0x0    		ISR_A_FIFO_out++;                                                              C:\Projects\UBW\FW\D\user\user.c
000d72   0e03     MOVLW     0x3            		if (ISR_A_FIFO_out == kISR_FIFO_A_DEPTH)                                       C:\Projects\UBW\FW\D\user\user.c
000d74   5c0a     SUBWF     0xa,0x0,0x0                                                                                     
000d76   e101     BNZ       0xd7a                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
000d78   6a0a     CLRF      0xa,0x0        			ISR_A_FIFO_out = 0;                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
000d7a   060b     DECF      0xb,0x1,0x0    		ISR_A_FIFO_length--;                                                           C:\Projects\UBW\FW\D\user\user.c
                                           	}			                                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Pull in some new data if there is new data to pull in                        C:\Projects\UBW\FW\D\user\user.c
000d7e   0104     MOVLB     0x4            	if(!mCDCUsartRxIsBusy())                                                        C:\Projects\UBW\FW\D\user\user.c
000d80   bf18     BTFSC     0x18,0x7,0x1                                                                                    
000d82   d065     BRA       0xe4e                                                                                           
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// Copy data from dual-ram buffer to user's buffer                             C:\Projects\UBW\FW\D\user\user.c
000d84   0101     MOVLB     0x1            		for(cdc_rx_len = 0; cdc_rx_len < CDC_BULK_BD_OUT.Cnt; cdc_rx_len++)            C:\Projects\UBW\FW\D\user\user.c
000d86   6b99     CLRF      0x99,0x1                                                                                        
000d88   0104     MOVLB     0x4                                                                                             
000d8a   5119     MOVF      0x19,0x0,0x1                                                                                    
000d8c   0101     MOVLB     0x1                                                                                             
000d8e   5d99     SUBWF     0x99,0x0,0x1                                                                                    
000d90   e253     BC        0xe38                                                                                           
000e32   0101     MOVLB     0x1                                                                                             
000e34   2b99     INCF      0x99,0x1,0x1                                                                                    
000e36   d7a8     BRA       0xd88                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Check to see if we are in a CR/LF situation                                C:\Projects\UBW\FW\D\user\user.c
000d92   0101     MOVLB     0x1            			tst_char = cdc_data_rx[cdc_rx_len];                                           C:\Projects\UBW\FW\D\user\user.c
000d94   5199     MOVF      0x99,0x0,0x1                                                                                    
000d96   6aea     CLRF      0xea,0x0                                                                                        
000d98   0f08     ADDLW     0x8                                                                                             
000d9a   6ee9     MOVWF     0xe9,0x0                                                                                        
000d9c   0e05     MOVLW     0x5                                                                                             
000d9e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000da0   cfef     MOVFF     0xfef,0xfdf                                                                                     
000da2   ffdf                                                                                                               
                                           			if (                                                                          C:\Projects\UBW\FW\D\user\user.c
000da4   0101     MOVLB     0x1            				!in_cr                                                                       C:\Projects\UBW\FW\D\user\user.c
000da6   51d9     MOVF      0xd9,0x0,0x1                                                                                    
                                           				&&                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           				(                                                                            C:\Projects\UBW\FW\D\user\user.c
000daa   0e0d     MOVLW     0xd            					kCR == tst_char                                                             C:\Projects\UBW\FW\D\user\user.c
000dac   6e2a     MOVWF     0x2a,0x0                                                                                        
000dae   50df     MOVF      0xdf,0x0,0x0                                                                                    
000db0   5c2a     SUBWF     0x2a,0x0,0x0   					||                                                                          C:\Projects\UBW\FW\D\user\user.c
000db4   0e0a     MOVLW     0xa            					kLF == tst_char                                                             C:\Projects\UBW\FW\D\user\user.c
000db6   6e2b     MOVWF     0x2b,0x0                                                                                        
000db8   50df     MOVF      0xdf,0x0,0x0                                                                                    
000db2   e005     BZ        0xdbe          				)                                                                            C:\Projects\UBW\FW\D\user\user.c
000dba   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
000dbc   e112     BNZ       0xde2                                                                                           
000da8   e11c     BNZ       0xde2          			)                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
000dbe   0101     MOVLB     0x1            				in_cr = TRUE;                                                                C:\Projects\UBW\FW\D\user\user.c
000dc0   0e01     MOVLW     0x1                                                                                             
000dc2   6fd9     MOVWF     0xd9,0x1                                                                                        
000dc4   0101     MOVLB     0x1            				g_RX_buf[g_RX_buf_in] = kCR;                                                 C:\Projects\UBW\FW\D\user\user.c
000dc6   51bb     MOVF      0xbb,0x0,0x1                                                                                    
000dc8   6aea     CLRF      0xea,0x0                                                                                        
000dca   0f40     ADDLW     0x40                                                                                            
000dcc   6ee9     MOVWF     0xe9,0x0                                                                                        
000dce   0e02     MOVLW     0x2                                                                                             
000dd0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000dd2   0e0d     MOVLW     0xd                                                                                             
000dd4   6eef     MOVWF     0xef,0x0                                                                                        
000dd6   0101     MOVLB     0x1            				g_RX_buf_in++;                                                               C:\Projects\UBW\FW\D\user\user.c
000dd8   2bbb     INCF      0xbb,0x1,0x1                                                                                    
                                           			                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           				// At this point, we know we have a full packet                              C:\Projects\UBW\FW\D\user\user.c
                                           				// of information from the PC to parse                                       C:\Projects\UBW\FW\D\user\user.c
000dda   52de     MOVF      0xde,0x1,0x0   				got_full_packet = TRUE;                                                      C:\Projects\UBW\FW\D\user\user.c
000ddc   0e01     MOVLW     0x1                                                                                             
000dde   6edd     MOVWF     0xdd,0x0                                                                                        
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
000de0   d015     BRA       0xe0c          			else if (                                                                     C:\Projects\UBW\FW\D\user\user.c
000de2   0e0d     MOVLW     0xd            				tst_char != kCR                                                              C:\Projects\UBW\FW\D\user\user.c
000de4   5cdf     SUBWF     0xdf,0x0,0x0   				&&                                                                           C:\Projects\UBW\FW\D\user\user.c
000de8   0e0a     MOVLW     0xa            				tst_char != kLF                                                              C:\Projects\UBW\FW\D\user\user.c
000de6   e011     BZ        0xe0a          			)                                                                             C:\Projects\UBW\FW\D\user\user.c
000dea   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000dec   e00e     BZ        0xe0a                                                                                           
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           				// Only add a byte if it is not a CR or LF                                   C:\Projects\UBW\FW\D\user\user.c
000dee   0101     MOVLB     0x1            				g_RX_buf[g_RX_buf_in] = tst_char;                                            C:\Projects\UBW\FW\D\user\user.c
000df0   51bb     MOVF      0xbb,0x0,0x1                                                                                    
000df2   6aea     CLRF      0xea,0x0                                                                                        
000df4   0f40     ADDLW     0x40                                                                                            
000df6   6ee9     MOVWF     0xe9,0x0                                                                                        
000df8   0e02     MOVLW     0x2                                                                                             
000dfa   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000dfc   cfdf     MOVFF     0xfdf,0xfef                                                                                     
000dfe   ffef                                                                                                               
000e00   0101     MOVLB     0x1            				in_cr = FALSE;                                                               C:\Projects\UBW\FW\D\user\user.c
000e02   6bd9     CLRF      0xd9,0x1                                                                                        
000e04   0101     MOVLB     0x1            				g_RX_buf_in++;                                                               C:\Projects\UBW\FW\D\user\user.c
000e06   2bbb     INCF      0xbb,0x1,0x1                                                                                    
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
000e08   d001     BRA       0xe0c          			else                                                                          C:\Projects\UBW\FW\D\user\user.c
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
000e0a   d013     BRA       0xe32          				continue;                                                                    C:\Projects\UBW\FW\D\user\user.c
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           			// Check for buffer wraparound                                                C:\Projects\UBW\FW\D\user\user.c
000e0c   0e40     MOVLW     0x40           			if (kRX_BUF_SIZE == g_RX_buf_in)                                              C:\Projects\UBW\FW\D\user\user.c
000e0e   0101     MOVLB     0x1                                                                                             
000e10   5dbb     SUBWF     0xbb,0x0,0x1                                                                                    
000e12   e102     BNZ       0xe18                                                                                           
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
000e14   0101     MOVLB     0x1            				g_RX_buf_in = 0;                                                             C:\Projects\UBW\FW\D\user\user.c
000e16   6bbb     CLRF      0xbb,0x1                                                                                        
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           			// If we hit the out pointer, then this is bad.                               C:\Projects\UBW\FW\D\user\user.c
000e18   0101     MOVLB     0x1            			if (g_RX_buf_in == g_RX_buf_out)                                              C:\Projects\UBW\FW\D\user\user.c
000e1a   51bc     MOVF      0xbc,0x0,0x1                                                                                    
000e1c   0101     MOVLB     0x1                                                                                             
000e1e   5dbb     SUBWF     0xbb,0x0,0x1                                                                                    
000e20   e102     BNZ       0xe26                                                                                           
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
000e22   860d     BSF       0xd,0x3,0x0    				bitset (error_byte, kERROR_BYTE_RX_BUFFER_OVERRUN);                          C:\Projects\UBW\FW\D\user\user.c
000e24   d009     BRA       0xe38          				break;                                                                       C:\Projects\UBW\FW\D\user\user.c
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           			// Now, if we've gotten a full command (user send <CR>) then                  C:\Projects\UBW\FW\D\user\user.c
                                           			// go call the code that deals with that command, and then                    C:\Projects\UBW\FW\D\user\user.c
                                           			// keep parsing. (This allows multiple small commands per packet)             C:\Projects\UBW\FW\D\user\user.c
000e26   0e01     MOVLW     0x1            			if (got_full_packet)                                                          C:\Projects\UBW\FW\D\user\user.c
000e28   50db     MOVF      0xdb,0x0,0x0                                                                                    
000e2a   e003     BZ        0xe32                                                                                           
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
000e2c   d915     RCALL     0x1058         				parse_packet ();                                                             C:\Projects\UBW\FW\D\user\user.c
000e2e   0e01     MOVLW     0x1            				got_full_packet = FALSE;                                                     C:\Projects\UBW\FW\D\user\user.c
000e30   6adb     CLRF      0xdb,0x0                                                                                        
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		}		                                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		// Prepare dual-ram buffer for next OUT transaction                            C:\Projects\UBW\FW\D\user\user.c
000e38   0104     MOVLB     0x4            		CDC_BULK_BD_OUT.Cnt = sizeof(cdc_data_rx);                                     C:\Projects\UBW\FW\D\user\user.c
000e3a   0e40     MOVLW     0x40                                                                                            
000e3c   6f19     MOVWF     0x19,0x1                                                                                        
000e3e   0e40     MOVLW     0x40           		mUSBBufferReady(CDC_BULK_BD_OUT);                                              C:\Projects\UBW\FW\D\user\user.c
000e40   0104     MOVLB     0x4                                                                                             
000e42   1718     ANDWF     0x18,0x1,0x1                                                                                    
000e44   0104     MOVLB     0x4                                                                                             
000e46   7d18     BTG       0x18,0x6,0x1                                                                                    
000e48   0e88     MOVLW     0x88                                                                                            
000e4a   0104     MOVLB     0x4                                                                                             
000e4c   1318     IORWF     0x18,0x1,0x1                                                                                    
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Check for any errors logged in error_byte that need to be sent out           C:\Projects\UBW\FW\D\user\user.c
000e4e   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\Projects\UBW\FW\D\user\user.c
000e50   e101     BNZ       0xe54                                                                                           
000e52   d081     BRA       0xf56                                                                                           
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
000e54   a00d     BTFSS     0xd,0x0,0x0    		if (bittst (error_byte, 0))                                                    C:\Projects\UBW\FW\D\user\user.c
000e56   d010     BRA       0xe78                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Unused as of yet                                                           C:\Projects\UBW\FW\D\user\user.c
000e58   0ef3     MOVLW     0xf3           			printf ((rom char *)"!0 \r\n");                                               C:\Projects\UBW\FW\D\user\user.c
000e5a   6e2a     MOVWF     0x2a,0x0                                                                                        
000e5c   0e41     MOVLW     0x41                                                                                            
000e5e   6e2b     MOVWF     0x2b,0x0                                                                                        
000e60   6a2c     CLRF      0x2c,0x0                                                                                        
000e62   c02a     MOVFF     0x2a,0xfe6                                                                                      
000e64   ffe6                                                                                                               
000e66   c02b     MOVFF     0x2b,0xfe6                                                                                      
000e68   ffe6                                                                                                               
000e6a   c02c     MOVFF     0x2c,0xfe6                                                                                      
000e6c   ffe6                                                                                                               
000e6e   ec29     CALL      0x4452,0x0                                                                                      
000e70   f022                                                                                                               
000e72   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e74   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e76   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
000e78   a20d     BTFSS     0xd,0x1,0x0    		if (bittst (error_byte, 1))                                                    C:\Projects\UBW\FW\D\user\user.c
000e7a   d010     BRA       0xe9c                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Unused as of yet                                                           C:\Projects\UBW\FW\D\user\user.c
000e7c   0eed     MOVLW     0xed           			printf ((rom char *)"!1 \r\n");                                               C:\Projects\UBW\FW\D\user\user.c
000e7e   6e2a     MOVWF     0x2a,0x0                                                                                        
000e80   0e41     MOVLW     0x41                                                                                            
000e82   6e2b     MOVWF     0x2b,0x0                                                                                        
000e84   6a2c     CLRF      0x2c,0x0                                                                                        
000e86   c02a     MOVFF     0x2a,0xfe6                                                                                      
000e88   ffe6                                                                                                               
000e8a   c02b     MOVFF     0x2b,0xfe6                                                                                      
000e8c   ffe6                                                                                                               
000e8e   c02c     MOVFF     0x2c,0xfe6                                                                                      
000e90   ffe6                                                                                                               
000e92   ec29     CALL      0x4452,0x0                                                                                      
000e94   f022                                                                                                               
000e96   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e98   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e9a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
000e9c   a40d     BTFSS     0xd,0x2,0x0    		if (bittst (error_byte, kERROR_BYTE_TX_BUF_OVERRUN))                           C:\Projects\UBW\FW\D\user\user.c
000e9e   d010     BRA       0xec0                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
000ea0   0ed1     MOVLW     0xd1           			printf ((rom char *)"!2 Err: TX Buffer overrun\r\n");                         C:\Projects\UBW\FW\D\user\user.c
000ea2   6e2a     MOVWF     0x2a,0x0                                                                                        
000ea4   0e41     MOVLW     0x41                                                                                            
000ea6   6e2b     MOVWF     0x2b,0x0                                                                                        
000ea8   6a2c     CLRF      0x2c,0x0                                                                                        
000eaa   c02a     MOVFF     0x2a,0xfe6                                                                                      
000eac   ffe6                                                                                                               
000eae   c02b     MOVFF     0x2b,0xfe6                                                                                      
000eb0   ffe6                                                                                                               
000eb2   c02c     MOVFF     0x2c,0xfe6                                                                                      
000eb4   ffe6                                                                                                               
000eb6   ec29     CALL      0x4452,0x0                                                                                      
000eb8   f022                                                                                                               
000eba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ebc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ebe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
000ec0   a60d     BTFSS     0xd,0x3,0x0    		if (bittst (error_byte, kERROR_BYTE_RX_BUFFER_OVERRUN))                        C:\Projects\UBW\FW\D\user\user.c
000ec2   d010     BRA       0xee4                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
000ec4   0eb5     MOVLW     0xb5           			printf ((rom char *)"!3 Err: RX Buffer overrun\r\n");                         C:\Projects\UBW\FW\D\user\user.c
000ec6   6e2a     MOVWF     0x2a,0x0                                                                                        
000ec8   0e41     MOVLW     0x41                                                                                            
000eca   6e2b     MOVWF     0x2b,0x0                                                                                        
000ecc   6a2c     CLRF      0x2c,0x0                                                                                        
000ece   c02a     MOVFF     0x2a,0xfe6                                                                                      
000ed0   ffe6                                                                                                               
000ed2   c02b     MOVFF     0x2b,0xfe6                                                                                      
000ed4   ffe6                                                                                                               
000ed6   c02c     MOVFF     0x2c,0xfe6                                                                                      
000ed8   ffe6                                                                                                               
000eda   ec29     CALL      0x4452,0x0                                                                                      
000edc   f022                                                                                                               
000ede   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ee0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ee2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
000ee4   a80d     BTFSS     0xd,0x4,0x0    		if (bittst (error_byte, kERROR_BYTE_MISSING_PARAMETER))                        C:\Projects\UBW\FW\D\user\user.c
000ee6   d010     BRA       0xf08                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
000ee8   0e96     MOVLW     0x96           			printf ((rom char *)"!4 Err: Missing parameter(s)\r\n");                      C:\Projects\UBW\FW\D\user\user.c
000eea   6e2a     MOVWF     0x2a,0x0                                                                                        
000eec   0e41     MOVLW     0x41                                                                                            
000eee   6e2b     MOVWF     0x2b,0x0                                                                                        
000ef0   6a2c     CLRF      0x2c,0x0                                                                                        
000ef2   c02a     MOVFF     0x2a,0xfe6                                                                                      
000ef4   ffe6                                                                                                               
000ef6   c02b     MOVFF     0x2b,0xfe6                                                                                      
000ef8   ffe6                                                                                                               
000efa   c02c     MOVFF     0x2c,0xfe6                                                                                      
000efc   ffe6                                                                                                               
000efe   ec29     CALL      0x4452,0x0                                                                                      
000f00   f022                                                                                                               
000f02   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f04   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f06   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
000f08   aa0d     BTFSS     0xd,0x5,0x0    		if (bittst (error_byte, kERROR_BYTE_PRINTED_ERROR))                            C:\Projects\UBW\FW\D\user\user.c
000f0a   d000     BRA       0xf0c                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// We don't need to do anything since something has already been printed out  C:\Projects\UBW\FW\D\user\user.c
                                           			//printf ((rom char *)"!5\r\n");                                              C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
000f0c   ac0d     BTFSS     0xd,0x6,0x0    		if (bittst (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT))                  C:\Projects\UBW\FW\D\user\user.c
000f0e   d010     BRA       0xf30                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
000f10   0e75     MOVLW     0x75           			printf ((rom char *)"!6 Err: Invalid paramter value\r\n");                    C:\Projects\UBW\FW\D\user\user.c
000f12   6e2a     MOVWF     0x2a,0x0                                                                                        
000f14   0e41     MOVLW     0x41                                                                                            
000f16   6e2b     MOVWF     0x2b,0x0                                                                                        
000f18   6a2c     CLRF      0x2c,0x0                                                                                        
000f1a   c02a     MOVFF     0x2a,0xfe6                                                                                      
000f1c   ffe6                                                                                                               
000f1e   c02b     MOVFF     0x2b,0xfe6                                                                                      
000f20   ffe6                                                                                                               
000f22   c02c     MOVFF     0x2c,0xfe6                                                                                      
000f24   ffe6                                                                                                               
000f26   ec29     CALL      0x4452,0x0                                                                                      
000f28   f022                                                                                                               
000f2a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f2c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f2e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
000f30   ae0d     BTFSS     0xd,0x7,0x0    		if (bittst (error_byte, kERROR_BYTE_EXTRA_CHARACTERS))                         C:\Projects\UBW\FW\D\user\user.c
000f32   d010     BRA       0xf54                                                                                           
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
000f34   0e5c     MOVLW     0x5c           			printf ((rom char *)"!7 Err: Extra parmater\r\n");                            C:\Projects\UBW\FW\D\user\user.c
000f36   6e2a     MOVWF     0x2a,0x0                                                                                        
000f38   0e41     MOVLW     0x41                                                                                            
000f3a   6e2b     MOVWF     0x2b,0x0                                                                                        
000f3c   6a2c     CLRF      0x2c,0x0                                                                                        
000f3e   c02a     MOVFF     0x2a,0xfe6                                                                                      
000f40   ffe6                                                                                                               
000f42   c02b     MOVFF     0x2b,0xfe6                                                                                      
000f44   ffe6                                                                                                               
000f46   c02c     MOVFF     0x2c,0xfe6                                                                                      
000f48   ffe6                                                                                                               
000f4a   ec29     CALL      0x4452,0x0                                                                                      
000f4c   f022                                                                                                               
000f4e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f50   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f52   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
000f54   6a0d     CLRF      0xd,0x0        		error_byte = 0;                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Go send any data that needs sending to PC                                    C:\Projects\UBW\FW\D\user\user.c
000f56   d835     RCALL     0xfc2          	check_and_send_TX_data ();                                                      C:\Projects\UBW\FW\D\user\user.c
000f58   0e02     MOVLW     0x2            }                                                                                C:\Projects\UBW\FW\D\user\user.c
000f5a   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
000f5c   e202     BC        0xf62                                                                                           
000f5e   6ae1     CLRF      0xe1,0x0                                                                                        
000f60   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f62   6ee1     MOVWF     0xe1,0x0                                                                                        
000f64   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f66   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000f68   ffd9                                                                                                               
000f6a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // This is our replacement for the standard putc routine                         C:\Projects\UBW\FW\D\user\user.c
                                           // This enables printf() and all related functions to print to                   C:\Projects\UBW\FW\D\user\user.c
                                           // the UBS output (i.e. to the PC) buffer                                        C:\Projects\UBW\FW\D\user\user.c
000f6c   cfd9     MOVFF     0xfd9,0xfe6    int _user_putc (char c)                                                          C:\Projects\UBW\FW\D\user\user.c
000f6e   ffe6                                                                                                               
000f70   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000f72   ffd9                                                                                                               
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// Copy the character into the output buffer                                    C:\Projects\UBW\FW\D\user\user.c
000f74   0101     MOVLB     0x1            	g_TX_buf[g_TX_buf_in] = c;                                                      C:\Projects\UBW\FW\D\user\user.c
000f76   51b9     MOVF      0xb9,0x0,0x1                                                                                    
000f78   6aea     CLRF      0xea,0x0                                                                                        
000f7a   0f00     ADDLW     0x0                                                                                             
000f7c   6ee9     MOVWF     0xe9,0x0                                                                                        
000f7e   0e02     MOVLW     0x2                                                                                             
000f80   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000f82   0efe     MOVLW     0xfe                                                                                            
000f84   cfdb     MOVFF     0xfdb,0xfef                                                                                     
000f86   ffef                                                                                                               
000f88   0101     MOVLB     0x1            	g_TX_buf_in++;                                                                  C:\Projects\UBW\FW\D\user\user.c
000f8a   2bb9     INCF      0xb9,0x1,0x1                                                                                    
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Check for wrap around                                                        C:\Projects\UBW\FW\D\user\user.c
000f8c   0e40     MOVLW     0x40           	if (kTX_BUF_SIZE == g_TX_buf_in)                                                C:\Projects\UBW\FW\D\user\user.c
000f8e   0101     MOVLB     0x1                                                                                             
000f90   5db9     SUBWF     0xb9,0x0,0x1                                                                                    
000f92   e102     BNZ       0xf98                                                                                           
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
000f94   0101     MOVLB     0x1            		g_TX_buf_in = 0;                                                               C:\Projects\UBW\FW\D\user\user.c
000f96   6bb9     CLRF      0xb9,0x1                                                                                        
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// Also check to see if we bumpted up against our output pointer                C:\Projects\UBW\FW\D\user\user.c
000f98   0101     MOVLB     0x1            	if (g_TX_buf_in == g_TX_buf_out)                                                C:\Projects\UBW\FW\D\user\user.c
000f9a   51ba     MOVF      0xba,0x0,0x1                                                                                    
000f9c   0101     MOVLB     0x1                                                                                             
000f9e   5db9     SUBWF     0xb9,0x0,0x1                                                                                    
000fa0   e101     BNZ       0xfa4                                                                                           
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
000fa2   840d     BSF       0xd,0x2,0x0    		bitset (error_byte, kERROR_BYTE_TX_BUF_OVERRUN);                               C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
000fa4   0efe     MOVLW     0xfe           	return (c);                                                                     C:\Projects\UBW\FW\D\user\user.c
000fa6   cfdb     MOVFF     0xfdb,0x2a                                                                                      
000fa8   f02a                                                                                                               
000faa   6a2b     CLRF      0x2b,0x0                                                                                        
000fac   be2a     BTFSC     0x2a,0x7,0x0                                                                                    
000fae   682b     SETF      0x2b,0x0                                                                                        
000fb0   c02a     MOVFF     0x2a,0xff3                                                                                      
000fb2   fff3                                                                                                               
000fb4   c02b     MOVFF     0x2b,0xff4                                                                                      
000fb6   fff4                                                                                                               
000fb8   d000     BRA       0xfba                                                                                           
000fba   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\Projects\UBW\FW\D\user\user.c
000fbc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000fbe   ffd9                                                                                                               
000fc0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // In this function, we check to see it is OK to transmit. If so                 C:\Projects\UBW\FW\D\user\user.c
                                           // we see if there is any data to transmit to PC. If so, we schedule             C:\Projects\UBW\FW\D\user\user.c
                                           // it for sending.                                                               C:\Projects\UBW\FW\D\user\user.c
000fc2   cfd9     MOVFF     0xfd9,0xfe6    void check_and_send_TX_data (void)                                               C:\Projects\UBW\FW\D\user\user.c
000fc4   ffe6                                                                                                               
000fc6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000fc8   ffd9                                                                                                               
000fca   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	char temp;                                                                      C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Only send if we're not already sending something                             C:\Projects\UBW\FW\D\user\user.c
000fcc   0101     MOVLB     0x1            	if (mUSBUSARTIsTxTrfReady ())                                                   C:\Projects\UBW\FW\D\user\user.c
000fce   519a     MOVF      0x9a,0x0,0x1                                                                                    
000fd0   e13e     BNZ       0x104e                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// And only send if there's something there to send                            C:\Projects\UBW\FW\D\user\user.c
000fd2   0101     MOVLB     0x1            		if (g_TX_buf_out != g_TX_buf_in)                                               C:\Projects\UBW\FW\D\user\user.c
000fd4   51b9     MOVF      0xb9,0x0,0x1                                                                                    
000fd6   0101     MOVLB     0x1                                                                                             
000fd8   5dba     SUBWF     0xba,0x0,0x1                                                                                    
000fda   e039     BZ        0x104e                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Now decide if we need to break it up into two parts or not                 C:\Projects\UBW\FW\D\user\user.c
000fdc   0101     MOVLB     0x1            			if (g_TX_buf_in > g_TX_buf_out)                                               C:\Projects\UBW\FW\D\user\user.c
000fde   51ba     MOVF      0xba,0x0,0x1                                                                                    
000fe0   0101     MOVLB     0x1                                                                                             
000fe2   80d8     BSF       0xd8,0x0,0x0                                                                                    
000fe4   55b9     SUBFWB    0xb9,0x0,0x1                                                                                    
000fe6   e21a     BC        0x101c                                                                                          
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           				// Since IN is beyond OUT, only need one chunk                               C:\Projects\UBW\FW\D\user\user.c
000fe8   0101     MOVLB     0x1            				temp = g_TX_buf_in - g_TX_buf_out;                                           C:\Projects\UBW\FW\D\user\user.c
000fea   51ba     MOVF      0xba,0x0,0x1                                                                                    
000fec   0101     MOVLB     0x1                                                                                             
000fee   5db9     SUBWF     0xb9,0x0,0x1                                                                                    
000ff0   6edf     MOVWF     0xdf,0x0                                                                                        
000ff2   0101     MOVLB     0x1            				mUSBUSARTTxRam (&g_TX_buf[g_TX_buf_out], temp);                              C:\Projects\UBW\FW\D\user\user.c
000ff4   51ba     MOVF      0xba,0x0,0x1                                                                                    
000ff6   0101     MOVLB     0x1                                                                                             
000ff8   6f9b     MOVWF     0x9b,0x1                                                                                        
000ffa   6b9c     CLRF      0x9c,0x1                                                                                        
000ffc   0e00     MOVLW     0x0                                                                                             
000ffe   0101     MOVLB     0x1                                                                                             
001000   279b     ADDWF     0x9b,0x1,0x1                                                                                    
001002   0e02     MOVLW     0x2                                                                                             
001004   0101     MOVLB     0x1                                                                                             
001006   239c     ADDWFC    0x9c,0x1,0x1                                                                                    
001008   cfdf     MOVFF     0xfdf,0x19f                                                                                     
00100a   f19f                                                                                                               
00100c   0101     MOVLB     0x1                                                                                             
00100e   6ba0     CLRF      0xa0,0x1                                                                                        
001010   0101     MOVLB     0x1                                                                                             
001012   0e01     MOVLW     0x1                                                                                             
001014   6f9a     MOVWF     0x9a,0x1                                                                                        
                                           				// Now that we've scheduled the data for sending,                            C:\Projects\UBW\FW\D\user\user.c
                                           				// update the pointer                                                        C:\Projects\UBW\FW\D\user\user.c
001016   c1b9     MOVFF     0x1b9,0x1ba    				g_TX_buf_out = g_TX_buf_in;                                                  C:\Projects\UBW\FW\D\user\user.c
001018   f1ba                                                                                                               
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
00101a   d019     BRA       0x104e         			else                                                                          C:\Projects\UBW\FW\D\user\user.c
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           				// Since IN is before OUT, we need to send from OUT to the end               C:\Projects\UBW\FW\D\user\user.c
                                           				// of the buffer, then the next time around we'll catch                      C:\Projects\UBW\FW\D\user\user.c
                                           				// from the beginning to IN.                                                 C:\Projects\UBW\FW\D\user\user.c
00101c   0e40     MOVLW     0x40           				temp = kTX_BUF_SIZE - g_TX_buf_out;                                          C:\Projects\UBW\FW\D\user\user.c
00101e   0101     MOVLB     0x1                                                                                             
001020   80d8     BSF       0xd8,0x0,0x0                                                                                    
001022   55ba     SUBFWB    0xba,0x0,0x1                                                                                    
001024   6edf     MOVWF     0xdf,0x0                                                                                        
001026   0101     MOVLB     0x1            				mUSBUSARTTxRam (&g_TX_buf[g_TX_buf_out], temp);                              C:\Projects\UBW\FW\D\user\user.c
001028   51ba     MOVF      0xba,0x0,0x1                                                                                    
00102a   0101     MOVLB     0x1                                                                                             
00102c   6f9b     MOVWF     0x9b,0x1                                                                                        
00102e   6b9c     CLRF      0x9c,0x1                                                                                        
001030   0e00     MOVLW     0x0                                                                                             
001032   0101     MOVLB     0x1                                                                                             
001034   279b     ADDWF     0x9b,0x1,0x1                                                                                    
001036   0e02     MOVLW     0x2                                                                                             
001038   0101     MOVLB     0x1                                                                                             
00103a   239c     ADDWFC    0x9c,0x1,0x1                                                                                    
00103c   cfdf     MOVFF     0xfdf,0x19f                                                                                     
00103e   f19f                                                                                                               
001040   0101     MOVLB     0x1                                                                                             
001042   6ba0     CLRF      0xa0,0x1                                                                                        
001044   0101     MOVLB     0x1                                                                                             
001046   0e01     MOVLW     0x1                                                                                             
001048   6f9a     MOVWF     0x9a,0x1                                                                                        
                                           				// Now that we've scheduled the data for sending,                            C:\Projects\UBW\FW\D\user\user.c
                                           				// update the pointer                                                        C:\Projects\UBW\FW\D\user\user.c
00104a   0101     MOVLB     0x1            				g_TX_buf_out = 0;                                                            C:\Projects\UBW\FW\D\user\user.c
00104c   6bba     CLRF      0xba,0x1                                                                                        
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
00104e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\Projects\UBW\FW\D\user\user.c
001050   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001052   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001054   ffd9                                                                                                               
001056   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Look at the new packet, see what command it is, and                           C:\Projects\UBW\FW\D\user\user.c
                                           // route it appropriately. We come in knowing that                               C:\Projects\UBW\FW\D\user\user.c
                                           // our packet is in g_RX_buf[], and that the beginning                           C:\Projects\UBW\FW\D\user\user.c
                                           // of the packet is at g_RX_buf_out, and the end (CR) is at                      C:\Projects\UBW\FW\D\user\user.c
                                           // g_RX_buf_in. Note that because of buffer wrapping,                            C:\Projects\UBW\FW\D\user\user.c
                                           // g_RX_buf_in may be less than g_RX_buf_out.                                    C:\Projects\UBW\FW\D\user\user.c
001058   cfd9     MOVFF     0xfd9,0xfe6    void parse_packet(void)                                                          C:\Projects\UBW\FW\D\user\user.c
00105a   ffe6                                                                                                               
00105c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00105e   ffd9                                                                                                               
001060   0e04     MOVLW     0x4                                                                                             
001062   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
001064   6ade     CLRF      0xde,0x0       	unsigned int	command = 0;                                                       C:\Projects\UBW\FW\D\user\user.c
001066   6add     CLRF      0xdd,0x0                                                                                        
001068   0e02     MOVLW     0x2            	unsigned char	cmd1 = 0;                                                         C:\Projects\UBW\FW\D\user\user.c
00106a   6adb     CLRF      0xdb,0x0                                                                                        
00106c   0e03     MOVLW     0x3            	unsigned char	cmd2 = 0;                                                         C:\Projects\UBW\FW\D\user\user.c
00106e   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Always grab the first character (which is the first byte of the command)     C:\Projects\UBW\FW\D\user\user.c
001070   0101     MOVLB     0x1            	cmd1 = toupper (g_RX_buf[g_RX_buf_out]);                                        C:\Projects\UBW\FW\D\user\user.c
001072   51bc     MOVF      0xbc,0x0,0x1                                                                                    
001074   6aea     CLRF      0xea,0x0                                                                                        
001076   0f40     ADDLW     0x40                                                                                            
001078   6ee9     MOVWF     0xe9,0x0                                                                                        
00107a   0e02     MOVLW     0x2                                                                                             
00107c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00107e   50ef     MOVF      0xef,0x0,0x0                                                                                    
001080   6ee6     MOVWF     0xe6,0x0                                                                                        
001082   6ae6     CLRF      0xe6,0x0                                                                                        
001084   ec22     CALL      0x4644,0x0                                                                                      
001086   f023                                                                                                               
001088   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00108a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00108c   0e02     MOVLW     0x2                                                                                             
00108e   cff3     MOVFF     0xff3,0xfdb                                                                                     
001090   ffdb                                                                                                               
001092   0101     MOVLB     0x1            	advance_RX_buf_out();                                                           C:\Projects\UBW\FW\D\user\user.c
001094   2bbc     INCF      0xbc,0x1,0x1                                                                                    
001096   0e40     MOVLW     0x40                                                                                            
001098   0101     MOVLB     0x1                                                                                             
00109a   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
00109c   e102     BNZ       0x10a2                                                                                          
00109e   0101     MOVLB     0x1                                                                                             
0010a0   6bbc     CLRF      0xbc,0x1                                                                                        
0010a2   0e02     MOVLW     0x2            	command = cmd1;                                                                 C:\Projects\UBW\FW\D\user\user.c
0010a4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0010a6   6ede     MOVWF     0xde,0x0                                                                                        
0010a8   6add     CLRF      0xdd,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Only grab second one if it is not a comma                                    C:\Projects\UBW\FW\D\user\user.c
0010aa   0101     MOVLB     0x1            	if (g_RX_buf[g_RX_buf_out] != ',' && g_RX_buf[g_RX_buf_out] != kCR)             C:\Projects\UBW\FW\D\user\user.c
0010ac   51bc     MOVF      0xbc,0x0,0x1                                                                                    
0010ae   6aea     CLRF      0xea,0x0                                                                                        
0010b0   0f40     ADDLW     0x40                                                                                            
0010b2   6ee9     MOVWF     0xe9,0x0                                                                                        
0010b4   0e02     MOVLW     0x2                                                                                             
0010b6   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0010b8   50ef     MOVF      0xef,0x0,0x0                                                                                    
0010ba   082c     SUBLW     0x2c                                                                                            
0010bc   e035     BZ        0x1128                                                                                          
0010be   0101     MOVLB     0x1                                                                                             
0010c0   51bc     MOVF      0xbc,0x0,0x1                                                                                    
0010c2   6aea     CLRF      0xea,0x0                                                                                        
0010c4   0f40     ADDLW     0x40                                                                                            
0010c6   6ee9     MOVWF     0xe9,0x0                                                                                        
0010c8   0e02     MOVLW     0x2                                                                                             
0010ca   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0010cc   50ef     MOVF      0xef,0x0,0x0                                                                                    
0010ce   080d     SUBLW     0xd                                                                                             
0010d0   e02b     BZ        0x1128                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0010d2   0101     MOVLB     0x1            		cmd2 = toupper (g_RX_buf[g_RX_buf_out]);                                       C:\Projects\UBW\FW\D\user\user.c
0010d4   51bc     MOVF      0xbc,0x0,0x1                                                                                    
0010d6   6aea     CLRF      0xea,0x0                                                                                        
0010d8   0f40     ADDLW     0x40                                                                                            
0010da   6ee9     MOVWF     0xe9,0x0                                                                                        
0010dc   0e02     MOVLW     0x2                                                                                             
0010de   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0010e0   50ef     MOVF      0xef,0x0,0x0                                                                                    
0010e2   6ee6     MOVWF     0xe6,0x0                                                                                        
0010e4   6ae6     CLRF      0xe6,0x0                                                                                        
0010e6   ec22     CALL      0x4644,0x0                                                                                      
0010e8   f023                                                                                                               
0010ea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0010ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0010ee   0e03     MOVLW     0x3                                                                                             
0010f0   cff3     MOVFF     0xff3,0xfdb                                                                                     
0010f2   ffdb                                                                                                               
0010f4   0101     MOVLB     0x1            		advance_RX_buf_out();                                                          C:\Projects\UBW\FW\D\user\user.c
0010f6   2bbc     INCF      0xbc,0x1,0x1                                                                                    
0010f8   0e40     MOVLW     0x40                                                                                            
0010fa   0101     MOVLB     0x1                                                                                             
0010fc   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
0010fe   e102     BNZ       0x1104                                                                                          
001100   0101     MOVLB     0x1                                                                                             
001102   6bbc     CLRF      0xbc,0x1                                                                                        
001104   0e02     MOVLW     0x2            		command = ((unsigned int)(cmd1) << 8) + cmd2;                                  C:\Projects\UBW\FW\D\user\user.c
001106   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001108   f02c                                                                                                               
00110a   c02c     MOVFF     0x2c,0x2d                                                                                       
00110c   f02d                                                                                                               
00110e   6a2c     CLRF      0x2c,0x0                                                                                        
001110   0e03     MOVLW     0x3                                                                                             
001112   50db     MOVF      0xdb,0x0,0x0                                                                                    
001114   0100     MOVLB     0x0                                                                                             
001116   242c     ADDWF     0x2c,0x0,0x0                                                                                    
001118   6e2a     MOVWF     0x2a,0x0                                                                                        
00111a   0e00     MOVLW     0x0                                                                                             
00111c   202d     ADDWFC    0x2d,0x0,0x0                                                                                    
00111e   6e2b     MOVWF     0x2b,0x0                                                                                        
001120   c02a     MOVFF     0x2a,0xfde                                                                                      
001122   ffde                                                                                                               
001124   c02b     MOVFF     0x2b,0xfdd                                                                                      
001126   ffdd                                                                                                               
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Now 'command' is equal to one or two bytes of our command                    C:\Projects\UBW\FW\D\user\user.c
001128   0e00     MOVLW     0x0            	switch (command)                                                                C:\Projects\UBW\FW\D\user\user.c
00112a   cfdb     MOVFF     0xfdb,0x1e                                                                                      
00112c   f01e                                                                                                               
00112e   0e01     MOVLW     0x1                                                                                             
001130   cfdb     MOVFF     0xfdb,0x1f                                                                                      
001132   f01f                                                                                                               
001134   0e49     MOVLW     0x49                                                                                            
001136   181e     XORWF     0x1e,0x0,0x0                                                                                    
001138   e102     BNZ       0x113e                                                                                          
00113a   0e43     MOVLW     0x43                                                                                            
00113c   181f     XORWF     0x1f,0x0,0x0                                                                                    
00113e   e101     BNZ       0x1142                                                                                          
001140   d0d8     BRA       0x12f2                                                                                          
001142   0e49     MOVLW     0x49                                                                                            
001144   181e     XORWF     0x1e,0x0,0x0                                                                                    
001146   e102     BNZ       0x114c                                                                                          
001148   0e52     MOVLW     0x52                                                                                            
00114a   181f     XORWF     0x1f,0x0,0x0                                                                                    
00114c   e101     BNZ       0x1150                                                                                          
00114e   d0ce     BRA       0x12ec                                                                                          
001150   0e49     MOVLW     0x49                                                                                            
001152   181e     XORWF     0x1e,0x0,0x0                                                                                    
001154   e102     BNZ       0x115a                                                                                          
001156   0e53     MOVLW     0x53                                                                                            
001158   181f     XORWF     0x1f,0x0,0x0                                                                                    
00115a   e101     BNZ       0x115e                                                                                          
00115c   d0c4     BRA       0x12e6                                                                                          
00115e   0e53     MOVLW     0x53                                                                                            
001160   181e     XORWF     0x1e,0x0,0x0                                                                                    
001162   e102     BNZ       0x1168                                                                                          
001164   0e43     MOVLW     0x43                                                                                            
001166   181f     XORWF     0x1f,0x0,0x0                                                                                    
001168   e101     BNZ       0x116c                                                                                          
00116a   d0ba     BRA       0x12e0                                                                                          
00116c   0e53     MOVLW     0x53                                                                                            
00116e   181e     XORWF     0x1e,0x0,0x0                                                                                    
001170   e102     BNZ       0x1176                                                                                          
001172   0e52     MOVLW     0x52                                                                                            
001174   181f     XORWF     0x1f,0x0,0x0                                                                                    
001176   e101     BNZ       0x117a                                                                                          
001178   d0b0     BRA       0x12da                                                                                          
00117a   0e53     MOVLW     0x53                                                                                            
00117c   181e     XORWF     0x1e,0x0,0x0                                                                                    
00117e   e102     BNZ       0x1184                                                                                          
001180   0e53     MOVLW     0x53                                                                                            
001182   181f     XORWF     0x1f,0x0,0x0                                                                                    
001184   e101     BNZ       0x1188                                                                                          
001186   d0a6     BRA       0x12d4                                                                                          
001188   0e53     MOVLW     0x53                                                                                            
00118a   181e     XORWF     0x1e,0x0,0x0                                                                                    
00118c   e102     BNZ       0x1192                                                                                          
00118e   0e42     MOVLW     0x42                                                                                            
001190   181f     XORWF     0x1f,0x0,0x0                                                                                    
001192   e101     BNZ       0x1196                                                                                          
001194   d09c     BRA       0x12ce                                                                                          
001196   0e43     MOVLW     0x43                                                                                            
001198   181e     XORWF     0x1e,0x0,0x0                                                                                    
00119a   e102     BNZ       0x11a0                                                                                          
00119c   0e42     MOVLW     0x42                                                                                            
00119e   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011a0   e101     BNZ       0x11a4                                                                                          
0011a2   d092     BRA       0x12c8                                                                                          
0011a4   0e43     MOVLW     0x43                                                                                            
0011a6   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011a8   e102     BNZ       0x11ae                                                                                          
0011aa   0e52     MOVLW     0x52                                                                                            
0011ac   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011ae   e101     BNZ       0x11b2                                                                                          
0011b0   d088     BRA       0x12c2                                                                                          
0011b2   0e4f     MOVLW     0x4f                                                                                            
0011b4   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011b6   e102     BNZ       0x11bc                                                                                          
0011b8   0e42     MOVLW     0x42                                                                                            
0011ba   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011bc   e101     BNZ       0x11c0                                                                                          
0011be   d07e     BRA       0x12bc                                                                                          
0011c0   0e57     MOVLW     0x57                                                                                            
0011c2   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011c4   e102     BNZ       0x11ca                                                                                          
0011c6   0e4d     MOVLW     0x4d                                                                                            
0011c8   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011ca   e076     BZ        0x12b8                                                                                          
0011cc   0e52     MOVLW     0x52                                                                                            
0011ce   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011d0   e102     BNZ       0x11d6                                                                                          
0011d2   0e4d     MOVLW     0x4d                                                                                            
0011d4   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011d6   e06e     BZ        0x12b4                                                                                          
0011d8   0e44     MOVLW     0x44                                                                                            
0011da   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011dc   e102     BNZ       0x11e2                                                                                          
0011de   0e50     MOVLW     0x50                                                                                            
0011e0   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011e2   e066     BZ        0x12b0                                                                                          
0011e4   0e4f     MOVLW     0x4f                                                                                            
0011e6   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011e8   e102     BNZ       0x11ee                                                                                          
0011ea   0e50     MOVLW     0x50                                                                                            
0011ec   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011ee   e05d     BZ        0x12aa                                                                                          
0011f0   0e49     MOVLW     0x49                                                                                            
0011f2   181e     XORWF     0x1e,0x0,0x0                                                                                    
0011f4   e102     BNZ       0x11fa                                                                                          
0011f6   0e50     MOVLW     0x50                                                                                            
0011f8   181f     XORWF     0x1f,0x0,0x0                                                                                    
0011fa   e055     BZ        0x12a6                                                                                          
0011fc   0e58     MOVLW     0x58                                                                                            
0011fe   181e     XORWF     0x1e,0x0,0x0                                                                                    
001200   e102     BNZ       0x1206                                                                                          
001202   0e54     MOVLW     0x54                                                                                            
001204   181f     XORWF     0x1f,0x0,0x0                                                                                    
001206   e04c     BZ        0x12a0                                                                                          
001208   0e54     MOVLW     0x54                                                                                            
00120a   181e     XORWF     0x1e,0x0,0x0                                                                                    
00120c   e101     BNZ       0x1210                                                                                          
00120e   501f     MOVF      0x1f,0x0,0x0                                                                                    
001210   e045     BZ        0x129c                                                                                          
001212   0e41     MOVLW     0x41                                                                                            
001214   181e     XORWF     0x1e,0x0,0x0                                                                                    
001216   e101     BNZ       0x121a                                                                                          
001218   501f     MOVF      0x1f,0x0,0x0                                                                                    
00121a   e03e     BZ        0x1298                                                                                          
00121c   0e56     MOVLW     0x56                                                                                            
00121e   181e     XORWF     0x1e,0x0,0x0                                                                                    
001220   e101     BNZ       0x1224                                                                                          
001222   501f     MOVF      0x1f,0x0,0x0                                                                                    
001224   e037     BZ        0x1294                                                                                          
001226   0e49     MOVLW     0x49                                                                                            
001228   181e     XORWF     0x1e,0x0,0x0                                                                                    
00122a   e101     BNZ       0x122e                                                                                          
00122c   501f     MOVF      0x1f,0x0,0x0                                                                                    
00122e   e030     BZ        0x1290                                                                                          
001230   0e4f     MOVLW     0x4f                                                                                            
001232   181e     XORWF     0x1e,0x0,0x0                                                                                    
001234   e101     BNZ       0x1238                                                                                          
001236   501f     MOVF      0x1f,0x0,0x0                                                                                    
001238   e029     BZ        0x128c                                                                                          
00123a   0e55     MOVLW     0x55                                                                                            
00123c   181e     XORWF     0x1e,0x0,0x0                                                                                    
00123e   e102     BNZ       0x1244                                                                                          
001240   0e43     MOVLW     0x43                                                                                            
001242   181f     XORWF     0x1f,0x0,0x0                                                                                    
001244   e021     BZ        0x1288                                                                                          
001246   0e58     MOVLW     0x58                                                                                            
001248   181e     XORWF     0x1e,0x0,0x0                                                                                    
00124a   e102     BNZ       0x1250                                                                                          
00124c   0e43     MOVLW     0x43                                                                                            
00124e   181f     XORWF     0x1f,0x0,0x0                                                                                    
001250   e018     BZ        0x1282                                                                                          
001252   0e43     MOVLW     0x43                                                                                            
001254   181e     XORWF     0x1e,0x0,0x0                                                                                    
001256   e101     BNZ       0x125a                                                                                          
001258   501f     MOVF      0x1f,0x0,0x0                                                                                    
00125a   e011     BZ        0x127e                                                                                          
00125c   0e52     MOVLW     0x52                                                                                            
00125e   181e     XORWF     0x1e,0x0,0x0                                                                                    
001260   e101     BNZ       0x1264                                                                                          
001262   501f     MOVF      0x1f,0x0,0x0                                                                                    
001264   e00a     BZ        0x127a                                                                                          
001266   0e58     MOVLW     0x58                                                                                            
001268   181e     XORWF     0x1e,0x0,0x0                                                                                    
00126a   e102     BNZ       0x1270                                                                                          
00126c   0e52     MOVLW     0x52                                                                                            
00126e   181f     XORWF     0x1f,0x0,0x0                                                                                    
001270   e001     BZ        0x1274                                                                                          
001272   d042     BRA       0x12f8                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		case ('R' * 256) + 'X':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// For receiving serial                                                       C:\Projects\UBW\FW\D\user\user.c
001274   eca3     CALL      0x1d46,0x0     			parse_RX_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
001276   f00e                                                                                                               
001278   d07e     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case 'R':                                                                      C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Reset command (resets everything to power-on state)                        C:\Projects\UBW\FW\D\user\user.c
00127a   d8b4     RCALL     0x13e4         			parse_R_packet ();                                                            C:\Projects\UBW\FW\D\user\user.c
00127c   d07c     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case 'C':                                                                      C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Configure command (configure ports for Input or Ouptut)                    C:\Projects\UBW\FW\D\user\user.c
00127e   d937     RCALL     0x14ee         			parse_C_packet ();                                                            C:\Projects\UBW\FW\D\user\user.c
001280   d07a     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}		                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		case ('C' * 256) + 'X':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// For configuring serial port                                                C:\Projects\UBW\FW\D\user\user.c
001282   eca6     CALL      0x1d4c,0x0     			parse_CX_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
001284   f00e                                                                                                               
001286   d077     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('C' * 256) + 'U':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// For configuring UBW                                                        C:\Projects\UBW\FW\D\user\user.c
001288   d8b1     RCALL     0x13ec         			parse_CU_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
00128a   d075     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case 'O':                                                                      C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Output command (tell the ports to output something)                        C:\Projects\UBW\FW\D\user\user.c
00128c   d9a3     RCALL     0x15d4         			parse_O_packet ();                                                            C:\Projects\UBW\FW\D\user\user.c
00128e   d073     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case 'I':                                                                      C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Input command (return the current status of the ports)                     C:\Projects\UBW\FW\D\user\user.c
001290   d9ea     RCALL     0x1666         			parse_I_packet ();                                                            C:\Projects\UBW\FW\D\user\user.c
001292   d071     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case 'V':                                                                      C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Version command                                                            C:\Projects\UBW\FW\D\user\user.c
001294   da09     RCALL     0x16a8         			parse_V_packet ();                                                            C:\Projects\UBW\FW\D\user\user.c
001296   d06f     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case 'A':                                                                      C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Analog command                                                             C:\Projects\UBW\FW\D\user\user.c
001298   da18     RCALL     0x16ca         			parse_A_packet ();                                                            C:\Projects\UBW\FW\D\user\user.c
00129a   d06d     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case 'T':                                                                      C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// For timed I/O                                                              C:\Projects\UBW\FW\D\user\user.c
00129c   d8e7     RCALL     0x146c         			parse_T_packet ();                                                            C:\Projects\UBW\FW\D\user\user.c
00129e   d06b     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}	                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		case ('T' * 256) + 'X':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// For transmitting serial                                                    C:\Projects\UBW\FW\D\user\user.c
0012a0   eca0     CALL      0x1d40,0x0     			parse_TX_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012a2   f00e                                                                                                               
0012a4   d068     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('P' * 256) + 'I':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// PI for reading a single pin                                                C:\Projects\UBW\FW\D\user\user.c
0012a6   dbc6     RCALL     0x1a34         			parse_PI_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012a8   d066     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('P' * 256) + 'O':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// PO for setting a single pin                                                C:\Projects\UBW\FW\D\user\user.c
0012aa   ecc4     CALL      0x1b88,0x0     			parse_PO_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012ac   f00d                                                                                                               
0012ae   d063     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		case ('P' * 256) + 'D':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// PD for setting a pin's direction                                           C:\Projects\UBW\FW\D\user\user.c
0012b0   dae3     RCALL     0x1878         			parse_PD_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012b2   d061     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('M' * 256) + 'R':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// MR for Memory Read                                                         C:\Projects\UBW\FW\D\user\user.c
0012b4   daa0     RCALL     0x17f6         			parse_MR_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012b6   d05f     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('M' * 256) + 'W':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// MW for Memory Write                                                        C:\Projects\UBW\FW\D\user\user.c
0012b8   da69     RCALL     0x178c         			parse_MW_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012ba   d05d     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('B' * 256) + 'O':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// MR for Fast Parallel Output                                                C:\Projects\UBW\FW\D\user\user.c
0012bc   ec99     CALL      0x1f32,0x0     			parse_BO_packet ();		                                                         C:\Projects\UBW\FW\D\user\user.c
0012be   f00f                                                                                                               
0012c0   d05a     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('R' * 256) + 'C':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// RC for RC servo output                                                     C:\Projects\UBW\FW\D\user\user.c
0012c2   eca9     CALL      0x1d52,0x0     			parse_RC_packet ();		                                                         C:\Projects\UBW\FW\D\user\user.c
0012c4   f00e                                                                                                               
0012c6   d057     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('B' * 256) + 'C':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// BC for Fast Parallel Configure                                             C:\Projects\UBW\FW\D\user\user.c
0012c8   ec52     CALL      0x1ea4,0x0     			parse_BC_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012ca   f00f                                                                                                               
0012cc   d054     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('B' * 256) + 'S':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// BS for Fast Binary Stream output                                           C:\Projects\UBW\FW\D\user\user.c
0012ce   ece0     CALL      0x21c0,0x0     			parse_BS_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012d0   f010                                                                                                               
0012d2   d051     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('S' * 256) + 'S':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// SS for Send SPI                                                            C:\Projects\UBW\FW\D\user\user.c
0012d4   ec9c     CALL      0x2338,0x0     			parse_SS_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012d6   f011                                                                                                               
0012d8   d04e     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('R' * 256) + 'S':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// RS for Receive SPI                                                         C:\Projects\UBW\FW\D\user\user.c
0012da   ec9f     CALL      0x233e,0x0     			parse_RS_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012dc   f011                                                                                                               
0012de   d04b     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('C' * 256) + 'S':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// CS for Configure SPI                                                       C:\Projects\UBW\FW\D\user\user.c
0012e0   eca2     CALL      0x2344,0x0     			parse_CS_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012e2   f011                                                                                                               
0012e4   d048     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('S' * 256) + 'I':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// SI for Send I2C                                                            C:\Projects\UBW\FW\D\user\user.c
0012e6   eca5     CALL      0x234a,0x0     			parse_SI_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012e8   f011                                                                                                               
0012ea   d045     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('R' * 256) + 'I':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// RI for Receive I2C                                                         C:\Projects\UBW\FW\D\user\user.c
0012ec   eca8     CALL      0x2350,0x0     			parse_RI_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012ee   f011                                                                                                               
0012f0   d042     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		case ('C' * 256) + 'I':                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// CI for Configure I2C                                                       C:\Projects\UBW\FW\D\user\user.c
0012f2   ecab     CALL      0x2356,0x0     			parse_CI_packet ();                                                           C:\Projects\UBW\FW\D\user\user.c
0012f4   f011                                                                                                               
0012f6   d03f     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		default:                                                                       C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0012f8   0e03     MOVLW     0x3            			if (0 == cmd2)                                                                C:\Projects\UBW\FW\D\user\user.c
0012fa   50db     MOVF      0xdb,0x0,0x0                                                                                    
0012fc   e11a     BNZ       0x1332                                                                                          
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           				// Send back 'unknown command' error                                         C:\Projects\UBW\FW\D\user\user.c
                                           				printf (                                                                     C:\Projects\UBW\FW\D\user\user.c
                                           					 (rom char *)"!8 Err: Unknown command '%c:%2X'\r\n"                         C:\Projects\UBW\FW\D\user\user.c
00130e   0e39     MOVLW     0x39           					,cmd1                                                                       C:\Projects\UBW\FW\D\user\user.c
001310   6e2a     MOVWF     0x2a,0x0                                                                                        
001312   0e41     MOVLW     0x41                                                                                            
001314   6e2b     MOVWF     0x2b,0x0                                                                                        
001316   6a2c     CLRF      0x2c,0x0                                                                                        
001318   c02a     MOVFF     0x2a,0xfe6                                                                                      
00131a   ffe6                                                                                                               
00131c   c02b     MOVFF     0x2b,0xfe6                                                                                      
00131e   ffe6                                                                                                               
001320   c02c     MOVFF     0x2c,0xfe6                                                                                      
001322   ffe6                                                                                                               
001306   0e02     MOVLW     0x2            					,cmd1                                                                       C:\Projects\UBW\FW\D\user\user.c
001308   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00130a   ffe6                                                                                                               
00130c   6ae6     CLRF      0xe6,0x0                                                                                        
0012fe   0e02     MOVLW     0x2            				);                                                                           C:\Projects\UBW\FW\D\user\user.c
001300   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001302   ffe6                                                                                                               
001304   6ae6     CLRF      0xe6,0x0                                                                                        
001324   ec29     CALL      0x4452,0x0                                                                                      
001326   f022                                                                                                               
001328   6e2d     MOVWF     0x2d,0x0                                                                                        
00132a   0e07     MOVLW     0x7                                                                                             
00132c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00132e   502d     MOVF      0x2d,0x0,0x0                                                                                    
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
001330   d021     BRA       0x1374         			else                                                                          C:\Projects\UBW\FW\D\user\user.c
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           				// Send back 'unknown command' error                                         C:\Projects\UBW\FW\D\user\user.c
                                           				printf (                                                                     C:\Projects\UBW\FW\D\user\user.c
                                           					 (rom char *)"!8 Err: Unknown command '%c%c:%2X%2X'\r\n"                    C:\Projects\UBW\FW\D\user\user.c
001352   0e11     MOVLW     0x11           					,cmd1                                                                       C:\Projects\UBW\FW\D\user\user.c
001354   6e2a     MOVWF     0x2a,0x0                                                                                        
001356   0e41     MOVLW     0x41                                                                                            
001358   6e2b     MOVWF     0x2b,0x0                                                                                        
00135a   6a2c     CLRF      0x2c,0x0                                                                                        
00135c   c02a     MOVFF     0x2a,0xfe6                                                                                      
00135e   ffe6                                                                                                               
001360   c02b     MOVFF     0x2b,0xfe6                                                                                      
001362   ffe6                                                                                                               
001364   c02c     MOVFF     0x2c,0xfe6                                                                                      
001366   ffe6                                                                                                               
00134a   0e02     MOVLW     0x2            					,cmd2                                                                       C:\Projects\UBW\FW\D\user\user.c
00134c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00134e   ffe6                                                                                                               
001350   6ae6     CLRF      0xe6,0x0                                                                                        
001342   0e03     MOVLW     0x3            					,cmd1                                                                       C:\Projects\UBW\FW\D\user\user.c
001344   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001346   ffe6                                                                                                               
001348   6ae6     CLRF      0xe6,0x0                                                                                        
00133a   0e02     MOVLW     0x2            					,cmd2                                                                       C:\Projects\UBW\FW\D\user\user.c
00133c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00133e   ffe6                                                                                                               
001340   6ae6     CLRF      0xe6,0x0                                                                                        
001332   0e03     MOVLW     0x3            				);                                                                           C:\Projects\UBW\FW\D\user\user.c
001334   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001336   ffe6                                                                                                               
001338   6ae6     CLRF      0xe6,0x0                                                                                        
001368   ec29     CALL      0x4452,0x0                                                                                      
00136a   f022                                                                                                               
00136c   6e2d     MOVWF     0x2d,0x0                                                                                        
00136e   0e0b     MOVLW     0xb                                                                                             
001370   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001372   502d     MOVF      0x2d,0x0,0x0                                                                                    
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
001374   d000     BRA       0x1376         			break;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Double check that our output pointer is now at the ending <CR>               C:\Projects\UBW\FW\D\user\user.c
                                           	// If it is not, this indicates that there were extra characters that           C:\Projects\UBW\FW\D\user\user.c
                                           	// the command parsing routine didn't eat. This would be an error and needs     C:\Projects\UBW\FW\D\user\user.c
                                           	// to be reported. (Ignore for Reset command because FIFO pointers get cleared.) C:\Projects\UBW\FW\D\user\user.c
                                           	if (                                                                            C:\Projects\UBW\FW\D\user\user.c
001376   0101     MOVLB     0x1            		(g_RX_buf[g_RX_buf_out] != kCR && 0 == error_byte)                             C:\Projects\UBW\FW\D\user\user.c
001378   51bc     MOVF      0xbc,0x0,0x1                                                                                    
00137a   6aea     CLRF      0xea,0x0                                                                                        
00137c   0f40     ADDLW     0x40                                                                                            
00137e   6ee9     MOVWF     0xe9,0x0                                                                                        
001380   0e02     MOVLW     0x2                                                                                             
001382   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001384   50ef     MOVF      0xef,0x0,0x0                                                                                    
001386   080d     SUBLW     0xd                                                                                             
001388   e00d     BZ        0x13a4                                                                                          
00138a   500d     MOVF      0xd,0x0,0x0                                                                                     
00138c   e10b     BNZ       0x13a4                                                                                          
                                           		&&                                                                             C:\Projects\UBW\FW\D\user\user.c
00138e   0e52     MOVLW     0x52           		('R' != command)                                                               C:\Projects\UBW\FW\D\user\user.c
001390   6e2a     MOVWF     0x2a,0x0                                                                                        
001392   6a2b     CLRF      0x2b,0x0                                                                                        
001394   50df     MOVF      0xdf,0x0,0x0                                                                                    
001396   182a     XORWF     0x2a,0x0,0x0                                                                                    
001398   e103     BNZ       0x13a0                                                                                          
00139a   52de     MOVF      0xde,0x1,0x0                                                                                    
00139c   50dd     MOVF      0xdd,0x0,0x0                                                                                    
00139e   182b     XORWF     0x2b,0x0,0x0                                                                                    
0013a0   e001     BZ        0x13a4         	)                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0013a2   8e0d     BSF       0xd,0x7,0x0    		bitset (error_byte, kERROR_BYTE_EXTRA_CHARACTERS);                             C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Clean up by skipping over any bytes we haven't eaten                         C:\Projects\UBW\FW\D\user\user.c
                                           	// This is safe since we parse each packet as we get a <CR>                     C:\Projects\UBW\FW\D\user\user.c
                                           	// (i.e. g_RX_buf_in doesn't move while we are in this routine)                 C:\Projects\UBW\FW\D\user\user.c
0013a4   c1bb     MOVFF     0x1bb,0x1bc    	g_RX_buf_out = g_RX_buf_in;                                                     C:\Projects\UBW\FW\D\user\user.c
0013a6   f1bc                                                                                                               
0013a8   0e04     MOVLW     0x4            }                                                                                C:\Projects\UBW\FW\D\user\user.c
0013aa   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0013ac   e202     BC        0x13b2                                                                                          
0013ae   6ae1     CLRF      0xe1,0x0                                                                                        
0013b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0013b2   6ee1     MOVWF     0xe1,0x0                                                                                        
0013b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0013b6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0013b8   ffd9                                                                                                               
0013ba   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Print out the positive acknoledgement that the packet was received            C:\Projects\UBW\FW\D\user\user.c
                                           // if we have acks turned on.                                                    C:\Projects\UBW\FW\D\user\user.c
                                           void print_ack(void)                                                             C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
0013bc   0101     MOVLB     0x1            	if (g_ack_enable)                                                               C:\Projects\UBW\FW\D\user\user.c
0013be   51c1     MOVF      0xc1,0x0,0x1                                                                                    
0013c0   e010     BZ        0x13e2                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0013c2   0e10     MOVLW     0x10           		printf ((rom char *)st_OK);                                                    C:\Projects\UBW\FW\D\user\user.c
0013c4   6e2a     MOVWF     0x2a,0x0                                                                                        
0013c6   0e47     MOVLW     0x47                                                                                            
0013c8   6e2b     MOVWF     0x2b,0x0                                                                                        
0013ca   6a2c     CLRF      0x2c,0x0                                                                                        
0013cc   c02a     MOVFF     0x2a,0xfe6                                                                                      
0013ce   ffe6                                                                                                               
0013d0   c02b     MOVFF     0x2b,0xfe6                                                                                      
0013d2   ffe6                                                                                                               
0013d4   c02c     MOVFF     0x2c,0xfe6                                                                                      
0013d6   ffe6                                                                                                               
0013d8   ec29     CALL      0x4452,0x0                                                                                      
0013da   f022                                                                                                               
0013dc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0013de   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0013e0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
0013e2   0012     RETURN    0x0            }                                                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Return all I/Os to their default power-on values                              C:\Projects\UBW\FW\D\user\user.c
                                           void parse_R_packet(void)                                                        C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
0013e4   ecc4     CALL      0xb88,0x0      	UserInit ();                                                                    C:\Projects\UBW\FW\D\user\user.c
0013e6   f005                                                                                                               
0013e8   dfe9     RCALL     0x13bc         	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
0013ea   0012     RETURN    0x0            }                                                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // CU is "Configure UBW" and controls system-wide configruation values           C:\Projects\UBW\FW\D\user\user.c
                                           // "CU,<parameter_number>,<paramter_value><CR>"                                  C:\Projects\UBW\FW\D\user\user.c
                                           // <paramter_number>	<parameter_value>                                           C:\Projects\UBW\FW\D\user\user.c
                                           // 1					{1|0} turns on or off the 'ack' ("OK" at end of packets)                C:\Projects\UBW\FW\D\user\user.c
0013ec   cfd9     MOVFF     0xfd9,0xfe6    void parse_CU_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
0013ee   ffe6                                                                                                               
0013f0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0013f2   ffd9                                                                                                               
0013f4   0e03     MOVLW     0x3                                                                                             
0013f6   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char parameter_number;                                                 C:\Projects\UBW\FW\D\user\user.c
                                           	signed int paramater_value;                                                     C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
0013f8   0e01     MOVLW     0x1            	parameter_number = extract_number (kUCHAR);                                     C:\Projects\UBW\FW\D\user\user.c
0013fa   6ee6     MOVWF     0xe6,0x0                                                                                        
0013fc   ecae     CALL      0x235c,0x0                                                                                      
0013fe   f011                                                                                                               
001400   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001402   501d     MOVF      0x1d,0x0,0x0                                                                                    
001404   6edf     MOVWF     0xdf,0x0                                                                                        
001406   0e02     MOVLW     0x2            	paramater_value = extract_number (kINT);                                        C:\Projects\UBW\FW\D\user\user.c
001408   6ee6     MOVWF     0xe6,0x0                                                                                        
00140a   ecae     CALL      0x235c,0x0                                                                                      
00140c   f011                                                                                                               
00140e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001410   52de     MOVF      0xde,0x1,0x0                                                                                    
001412   c01d     MOVFF     0x1d,0xfde                                                                                      
001414   ffde                                                                                                               
001416   c01e     MOVFF     0x1e,0xfdd                                                                                      
001418   ffdd                                                                                                               
00141a   52dd     MOVF      0xdd,0x1,0x0                                                                                    
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Bail if we got a conversion error                                            C:\Projects\UBW\FW\D\user\user.c
00141c   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\Projects\UBW\FW\D\user\user.c
00141e   e001     BZ        0x1422                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001420   d01b     BRA       0x1458         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
001422   04df     DECF      0xdf,0x0,0x0   	if (1 == parameter_number)                                                      C:\Projects\UBW\FW\D\user\user.c
001424   e118     BNZ       0x1456                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001426   50d9     MOVF      0xd9,0x0,0x0   		if (0 == paramater_value || 1 == paramater_value)                              C:\Projects\UBW\FW\D\user\user.c
001428   0f01     ADDLW     0x1                                                                                             
00142a   6ee9     MOVWF     0xe9,0x0                                                                                        
00142c   cfda     MOVFF     0xfda,0xfea                                                                                     
00142e   ffea                                                                                                               
001430   50ee     MOVF      0xee,0x0,0x0                                                                                    
001432   10ed     IORWF     0xed,0x0,0x0                                                                                    
001434   e00b     BZ        0x144c                                                                                          
001436   0e01     MOVLW     0x1                                                                                             
001438   6e2a     MOVWF     0x2a,0x0                                                                                        
00143a   6a2b     CLRF      0x2b,0x0                                                                                        
00143c   0e01     MOVLW     0x1                                                                                             
00143e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001440   182a     XORWF     0x2a,0x0,0x0                                                                                    
001442   e103     BNZ       0x144a                                                                                          
001444   0e02     MOVLW     0x2                                                                                             
001446   50db     MOVF      0xdb,0x0,0x0                                                                                    
001448   182b     XORWF     0x2b,0x0,0x0                                                                                    
00144a   e104     BNZ       0x1454                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
00144c   0e01     MOVLW     0x1            			g_ack_enable = paramater_value;			                                            C:\Projects\UBW\FW\D\user\user.c
00144e   cfdb     MOVFF     0xfdb,0x1c1                                                                                     
001450   f1c1                                                                                                               
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
001452   d001     BRA       0x1456         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001454   8c0d     BSF       0xd,0x6,0x0    			bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                     C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001456   dfb2     RCALL     0x13bc         	print_ack();                                                                    C:\Projects\UBW\FW\D\user\user.c
001458   0e03     MOVLW     0x3            }                                                                                C:\Projects\UBW\FW\D\user\user.c
00145a   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00145c   e202     BC        0x1462                                                                                          
00145e   6ae1     CLRF      0xe1,0x0                                                                                        
001460   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001462   6ee1     MOVWF     0xe1,0x0                                                                                        
001464   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001466   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001468   ffd9                                                                                                               
00146a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // "T" Packet                                                                    C:\Projects\UBW\FW\D\user\user.c
                                           // Causes PIC to sample digital or analog inputs at a regular interval and send  C:\Projects\UBW\FW\D\user\user.c
                                           // I (or A) packets back at that interval.                                       C:\Projects\UBW\FW\D\user\user.c
                                           // Send T,0,0<CR> to stop I (or A) packets                                       C:\Projects\UBW\FW\D\user\user.c
                                           // FORMAT: T,<TIME_BETWEEN_UPDATES_IN_MS>,<MODE><CR>                             C:\Projects\UBW\FW\D\user\user.c
                                           // <MODE> is 0 for digital (I packets) and 1 for analog (A packets)              C:\Projects\UBW\FW\D\user\user.c
                                           // EXAMPLE: "T,4000,0<CR>" to send an I packet back every 4 seconds.             C:\Projects\UBW\FW\D\user\user.c
                                           // EXAMPLE: "T,2000,1<CR>" to send an A packet back every 2 seconds.             C:\Projects\UBW\FW\D\user\user.c
00146c   cfd9     MOVFF     0xfd9,0xfe6    void parse_T_packet(void)                                                        C:\Projects\UBW\FW\D\user\user.c
00146e   ffe6                                                                                                               
001470   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001472   ffd9                                                                                                               
001474   0e03     MOVLW     0x3                                                                                             
001476   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned int value;                                                             C:\Projects\UBW\FW\D\user\user.c
001478   0e02     MOVLW     0x2            	unsigned char mode = 0;                                                         C:\Projects\UBW\FW\D\user\user.c
00147a   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Extract the <TIME_BETWEEN_UPDATES_IN_MS> value                               C:\Projects\UBW\FW\D\user\user.c
00147c   0e03     MOVLW     0x3            	time_between_updates = extract_number (kUINT);                                  C:\Projects\UBW\FW\D\user\user.c
00147e   6ee6     MOVWF     0xe6,0x0                                                                                        
001480   ecae     CALL      0x235c,0x0                                                                                      
001482   f011                                                                                                               
001484   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001486   c01d     MOVFF     0x1d,0x0                                                                                        
001488   f000                                                                                                               
00148a   c01e     MOVFF     0x1e,0x1                                                                                        
00148c   f001                                                                                                               
                                           	// Extract the <MODE> value                                                     C:\Projects\UBW\FW\D\user\user.c
00148e   0e01     MOVLW     0x1            	mode = extract_number (kUCHAR);                                                 C:\Projects\UBW\FW\D\user\user.c
001490   6ee6     MOVWF     0xe6,0x0                                                                                        
001492   ecae     CALL      0x235c,0x0                                                                                      
001494   f011                                                                                                               
001496   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001498   0e02     MOVLW     0x2                                                                                             
00149a   c01d     MOVFF     0x1d,0xfdb                                                                                      
00149c   ffdb                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Bail if we got a conversion error                                            C:\Projects\UBW\FW\D\user\user.c
00149e   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\Projects\UBW\FW\D\user\user.c
0014a0   e001     BZ        0x14a4                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0014a2   d01b     BRA       0x14da         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Now start up the timer at the right rate or shut                             C:\Projects\UBW\FW\D\user\user.c
                                           	// it down.                                                                     C:\Projects\UBW\FW\D\user\user.c
0014a4   0e02     MOVLW     0x2            	if (0 == mode)                                                                  C:\Projects\UBW\FW\D\user\user.c
0014a6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0014a8   e10c     BNZ       0x14c2                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0014aa   5000     MOVF      0x0,0x0,0x0    		if (0 == time_between_updates)                                                 C:\Projects\UBW\FW\D\user\user.c
0014ac   1001     IORWF     0x1,0x0,0x0                                                                                     
0014ae   e103     BNZ       0x14b6                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Turn off sending of I packets.                                             C:\Projects\UBW\FW\D\user\user.c
0014b0   6a02     CLRF      0x2,0x0        			ISR_D_RepeatRate = 0;                                                         C:\Projects\UBW\FW\D\user\user.c
0014b2   6a03     CLRF      0x3,0x0                                                                                         
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
0014b4   d005     BRA       0x14c0         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0014b6   84ca     BSF       0xca,0x2,0x0   			T2CONbits.TMR2ON = 1;                                                         C:\Projects\UBW\FW\D\user\user.c
                                           		                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           			// Eventually gaurd this section from interrupts                              C:\Projects\UBW\FW\D\user\user.c
0014b8   c000     MOVFF     0x0,0x2        			ISR_D_RepeatRate = time_between_updates;                                      C:\Projects\UBW\FW\D\user\user.c
0014ba   f002                                                                                                               
0014bc   c001     MOVFF     0x1,0x3                                                                                         
0014be   f003                                                                                                               
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}	                                                                              C:\Projects\UBW\FW\D\user\user.c
0014c0   d00b     BRA       0x14d8         	else                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0014c2   5000     MOVF      0x0,0x0,0x0    		if (0 == time_between_updates)                                                 C:\Projects\UBW\FW\D\user\user.c
0014c4   1001     IORWF     0x1,0x0,0x0                                                                                     
0014c6   e103     BNZ       0x14ce                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Turn off sending of A packets.                                             C:\Projects\UBW\FW\D\user\user.c
0014c8   6a07     CLRF      0x7,0x0        			ISR_A_RepeatRate = 0;                                                         C:\Projects\UBW\FW\D\user\user.c
0014ca   6a08     CLRF      0x8,0x0                                                                                         
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
0014cc   d005     BRA       0x14d8         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0014ce   84ca     BSF       0xca,0x2,0x0   			T2CONbits.TMR2ON = 1;                                                         C:\Projects\UBW\FW\D\user\user.c
                                           		                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           			// Eventually gaurd this section from interrupts                              C:\Projects\UBW\FW\D\user\user.c
0014d0   c000     MOVFF     0x0,0x7        			ISR_A_RepeatRate = time_between_updates;                                      C:\Projects\UBW\FW\D\user\user.c
0014d2   f007                                                                                                               
0014d4   c001     MOVFF     0x1,0x8                                                                                         
0014d6   f008                                                                                                               
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
0014d8   df71     RCALL     0x13bc         	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
0014da   0e03     MOVLW     0x3            }                                                                                C:\Projects\UBW\FW\D\user\user.c
0014dc   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0014de   e202     BC        0x14e4                                                                                          
0014e0   6ae1     CLRF      0xe1,0x0                                                                                        
0014e2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0014e4   6ee1     MOVWF     0xe1,0x0                                                                                        
0014e6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0014e8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0014ea   ffd9                                                                                                               
0014ec   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // FORMAT: C,<portA_IO>,<portB_IO>,<portC_IO>,<analog_config><CR>                C:\Projects\UBW\FW\D\user\user.c
                                           // EXAMPLE: "C,255,0,4,0<CR>"                                                    C:\Projects\UBW\FW\D\user\user.c
                                           // <portX_IO> is the byte sent to the Data Direction (DDR) regsiter for          C:\Projects\UBW\FW\D\user\user.c
                                           // each port. A 1 in a bit location means input, a 0 means output.               C:\Projects\UBW\FW\D\user\user.c
                                           // <analog_config> is a value between 0 and 12. It tells the UBW                 C:\Projects\UBW\FW\D\user\user.c
                                           // how many analog inputs to enable. If a zero is sent for this                  C:\Projects\UBW\FW\D\user\user.c
                                           // parameter, all analog inputs are disabled.                                    C:\Projects\UBW\FW\D\user\user.c
                                           // For the other values, see the following chart to know what pins are           C:\Projects\UBW\FW\D\user\user.c
                                           // used for what:                                                                C:\Projects\UBW\FW\D\user\user.c
                                           //                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           // Note that in the following chart, PortE is references. This port              C:\Projects\UBW\FW\D\user\user.c
                                           // only exists on the 40 and 44 pin versions of the UBW. For the                 C:\Projects\UBW\FW\D\user\user.c
                                           // 28 pin versions of the UBW, all PortE based analog pins will return           C:\Projects\UBW\FW\D\user\user.c
                                           // zero.                                                                         C:\Projects\UBW\FW\D\user\user.c
                                           //                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           // <analog_config>	Analog Inputs Enabled	Pins Used For Analog Inputs             C:\Projects\UBW\FW\D\user\user.c
                                           // ---------------	---------------------	-------------------------------         C:\Projects\UBW\FW\D\user\user.c
                                           //	0				<none>					<none>                                                        C:\Projects\UBW\FW\D\user\user.c
                                           //	1				AN0						A0                                                              C:\Projects\UBW\FW\D\user\user.c
                                           //	2				AN0,AN1					A0,A1	                                                       C:\Projects\UBW\FW\D\user\user.c
                                           //	3				AN0,AN1,AN2				A0,A1,A2	                                                 C:\Projects\UBW\FW\D\user\user.c
                                           //	4				AN0,AN1,AN2,AN3			A0,A1,A2,A3	                                           C:\Projects\UBW\FW\D\user\user.c
                                           //	5				AN0,AN1,AN2,AN3,AN4		A0,A1,A2,A3,A5		                                    C:\Projects\UBW\FW\D\user\user.c
                                           //	6				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0                                   C:\Projects\UBW\FW\D\user\user.c
                                           //						AN5						                                                                C:\Projects\UBW\FW\D\user\user.c
                                           //	7				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0,E1                                C:\Projects\UBW\FW\D\user\user.c
                                           //						AN5,AN6						                                                            C:\Projects\UBW\FW\D\user\user.c
                                           //	8				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0,E1,E2                             C:\Projects\UBW\FW\D\user\user.c
                                           //						AN5,AN6,AN7						                                                        C:\Projects\UBW\FW\D\user\user.c
                                           //	9				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0,E1,E2,B2                          C:\Projects\UBW\FW\D\user\user.c
                                           //						AN5,AN6,AN7,AN8						                                                    C:\Projects\UBW\FW\D\user\user.c
                                           //	10				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0,E1,E2,B2,B3                      C:\Projects\UBW\FW\D\user\user.c
                                           //						AN5,AN6,AN7,AN8,                                                         C:\Projects\UBW\FW\D\user\user.c
                                           //						AN9						                                                                C:\Projects\UBW\FW\D\user\user.c
                                           //	11				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0,E1,E2,B2,B3,B1                   C:\Projects\UBW\FW\D\user\user.c
                                           //						AN5,AN6,AN7,AN8,                                                         C:\Projects\UBW\FW\D\user\user.c
                                           //						AB9,AN10						                                                           C:\Projects\UBW\FW\D\user\user.c
                                           //	12				AN0,AN1,AN2,AN3,AN4,	A0,A1,A2,A3,A5,E0,E1,E2,B2,B3,B1,B4                C:\Projects\UBW\FW\D\user\user.c
                                           //						AN5,AN6,AN7,AN8,                                                         C:\Projects\UBW\FW\D\user\user.c
                                           //						AN9,AN10,AN11                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // NOTE: it is up to the user to tell the proper port direction bits to be       C:\Projects\UBW\FW\D\user\user.c
                                           // inputs for the analog channels they wish to use.                              C:\Projects\UBW\FW\D\user\user.c
0014ee   cfd9     MOVFF     0xfd9,0xfe6    void parse_C_packet(void)                                                        C:\Projects\UBW\FW\D\user\user.c
0014f0   ffe6                                                                                                               
0014f2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0014f4   ffd9                                                                                                               
0014f6   0e06     MOVLW     0x6                                                                                             
0014f8   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char PA, PB, PC, AA;                                                   C:\Projects\UBW\FW\D\user\user.c
                                           #ifdef __18F4550                                                                 C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char PD, PE;                                                           C:\Projects\UBW\FW\D\user\user.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Extract each of the four values.                                             C:\Projects\UBW\FW\D\user\user.c
0014fa   0e01     MOVLW     0x1            	PA = extract_number (kUCHAR);                                                   C:\Projects\UBW\FW\D\user\user.c
0014fc   6ee6     MOVWF     0xe6,0x0                                                                                        
0014fe   ecae     CALL      0x235c,0x0                                                                                      
001500   f011                                                                                                               
001502   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001504   501d     MOVF      0x1d,0x0,0x0                                                                                    
001506   6edf     MOVWF     0xdf,0x0                                                                                        
001508   0e01     MOVLW     0x1            	PB = extract_number (kUCHAR);                                                   C:\Projects\UBW\FW\D\user\user.c
00150a   6ee6     MOVWF     0xe6,0x0                                                                                        
00150c   ecae     CALL      0x235c,0x0                                                                                      
00150e   f011                                                                                                               
001510   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001512   0e01     MOVLW     0x1                                                                                             
001514   c01d     MOVFF     0x1d,0xfdb                                                                                      
001516   ffdb                                                                                                               
001518   0e01     MOVLW     0x1            	PC = extract_number (kUCHAR);                                                   C:\Projects\UBW\FW\D\user\user.c
00151a   6ee6     MOVWF     0xe6,0x0                                                                                        
00151c   ecae     CALL      0x235c,0x0                                                                                      
00151e   f011                                                                                                               
001520   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001522   0e02     MOVLW     0x2                                                                                             
001524   c01d     MOVFF     0x1d,0xfdb                                                                                      
001526   ffdb                                                                                                               
                                           #ifdef __18F4550                                                                 C:\Projects\UBW\FW\D\user\user.c
001528   0e01     MOVLW     0x1            	PD = extract_number (kUCHAR);                                                   C:\Projects\UBW\FW\D\user\user.c
00152a   6ee6     MOVWF     0xe6,0x0                                                                                        
00152c   ecae     CALL      0x235c,0x0                                                                                      
00152e   f011                                                                                                               
001530   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001532   0e04     MOVLW     0x4                                                                                             
001534   c01d     MOVFF     0x1d,0xfdb                                                                                      
001536   ffdb                                                                                                               
001538   0e01     MOVLW     0x1            	PE = extract_number (kUCHAR);                                                   C:\Projects\UBW\FW\D\user\user.c
00153a   6ee6     MOVWF     0xe6,0x0                                                                                        
00153c   ecae     CALL      0x235c,0x0                                                                                      
00153e   f011                                                                                                               
001540   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001542   0e05     MOVLW     0x5                                                                                             
001544   c01d     MOVFF     0x1d,0xfdb                                                                                      
001546   ffdb                                                                                                               
                                           #endif                                                                           C:\Projects\UBW\FW\D\user\user.c
001548   0e01     MOVLW     0x1            	AA = extract_number (kUCHAR);                                                   C:\Projects\UBW\FW\D\user\user.c
00154a   6ee6     MOVWF     0xe6,0x0                                                                                        
00154c   ecae     CALL      0x235c,0x0                                                                                      
00154e   f011                                                                                                               
001550   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001552   0e03     MOVLW     0x3                                                                                             
001554   c01d     MOVFF     0x1d,0xfdb                                                                                      
001556   ffdb                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Bail if we got a conversion error                                            C:\Projects\UBW\FW\D\user\user.c
001558   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\Projects\UBW\FW\D\user\user.c
00155a   e001     BZ        0x155e                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
00155c   d031     BRA       0x15c0         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Now write those values to the data direction registers.                      C:\Projects\UBW\FW\D\user\user.c
00155e   50df     MOVF      0xdf,0x0,0x0   	TRISA = PA;                                                                     C:\Projects\UBW\FW\D\user\user.c
001560   6e92     MOVWF     0x92,0x0                                                                                        
001562   0e01     MOVLW     0x1            	TRISB = PB;                                                                     C:\Projects\UBW\FW\D\user\user.c
001564   50db     MOVF      0xdb,0x0,0x0                                                                                    
001566   6e93     MOVWF     0x93,0x0                                                                                        
001568   0e02     MOVLW     0x2            	TRISC = PC;                                                                     C:\Projects\UBW\FW\D\user\user.c
00156a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00156c   6e94     MOVWF     0x94,0x0                                                                                        
                                           #ifdef __18F4550                                                                 C:\Projects\UBW\FW\D\user\user.c
00156e   0e04     MOVLW     0x4            	TRISD = PD;                                                                     C:\Projects\UBW\FW\D\user\user.c
001570   50db     MOVF      0xdb,0x0,0x0                                                                                    
001572   6e95     MOVWF     0x95,0x0                                                                                        
001574   0e05     MOVLW     0x5            	TRISE = PE;                                                                     C:\Projects\UBW\FW\D\user\user.c
001576   50db     MOVF      0xdb,0x0,0x0                                                                                    
001578   6e96     MOVWF     0x96,0x0                                                                                        
                                           #endif                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// Handle the analog value.                                                     C:\Projects\UBW\FW\D\user\user.c
                                           	// Maximum value of 12.                                                         C:\Projects\UBW\FW\D\user\user.c
00157a   0e03     MOVLW     0x3            	if (AA > 12)                                                                    C:\Projects\UBW\FW\D\user\user.c
00157c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00157e   080c     SUBLW     0xc                                                                                             
001580   e205     BC        0x158c                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001582   0e0c     MOVLW     0xc            		AA = 12;                                                                       C:\Projects\UBW\FW\D\user\user.c
001584   6ef3     MOVWF     0xf3,0x0                                                                                        
001586   0e03     MOVLW     0x3                                                                                             
001588   cff3     MOVFF     0xff3,0xfdb                                                                                     
00158a   ffdb                                                                                                               
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// If we are turning off Analog inputs                                          C:\Projects\UBW\FW\D\user\user.c
00158c   0e03     MOVLW     0x3            	if (0 == AA)                                                                    C:\Projects\UBW\FW\D\user\user.c
00158e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001590   e105     BNZ       0x159c                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// Turn all analog inputs into digital inputs                                  C:\Projects\UBW\FW\D\user\user.c
001592   0e0f     MOVLW     0xf            		ADCON1 = 0x0F;                                                                 C:\Projects\UBW\FW\D\user\user.c
001594   6ec1     MOVWF     0xc1,0x0                                                                                        
                                           		// Turn off the ADC                                                            C:\Projects\UBW\FW\D\user\user.c
001596   90c2     BCF       0xc2,0x0,0x0   		ADCON0bits.ADON = 0;                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		// Turn off our own idea of how many analog channels to convert                C:\Projects\UBW\FW\D\user\user.c
001598   6a0c     CLRF      0xc,0x0        		AnalogEnable = 0;                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
00159a   d011     BRA       0x15be         	else                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// Some protection from ISR                                                    C:\Projects\UBW\FW\D\user\user.c
00159c   6a0c     CLRF      0xc,0x0        		AnalogEnable = 0;                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           		// We're turning some on.                                                      C:\Projects\UBW\FW\D\user\user.c
                                           		// Start by selecting channel zero		                                           C:\Projects\UBW\FW\D\user\user.c
00159e   6ac2     CLRF      0xc2,0x0       		ADCON0 = 0;                                                                    C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           		// Then enabling the proper number of channels                                 C:\Projects\UBW\FW\D\user\user.c
0015a0   0e03     MOVLW     0x3            		ADCON1 = 15 - AA;                                                              C:\Projects\UBW\FW\D\user\user.c
0015a2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0015a4   ffe6                                                                                                               
0015a6   0e0f     MOVLW     0xf                                                                                             
0015a8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0015aa   80d8     BSF       0xd8,0x0,0x0                                                                                    
0015ac   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
0015ae   6ec1     MOVWF     0xc1,0x0                                                                                        
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           		// Set up ADCON2 options                                                       C:\Projects\UBW\FW\D\user\user.c
                                           		// A/D Result right justified                                                  C:\Projects\UBW\FW\D\user\user.c
                                           		// Acq time = 20 Tad (?)                                                       C:\Projects\UBW\FW\D\user\user.c
                                           		// Tad = Fosc/64                                                               C:\Projects\UBW\FW\D\user\user.c
0015b0   0ebe     MOVLW     0xbe           		ADCON2 = 0b10111110;                                                           C:\Projects\UBW\FW\D\user\user.c
0015b2   6ec0     MOVWF     0xc0,0x0                                                                                        
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           		// Turn on the ADC                                                             C:\Projects\UBW\FW\D\user\user.c
0015b4   80c2     BSF       0xc2,0x0,0x0   		ADCON0bits.ADON = 1;                                                           C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           		// Tell ourselves how many channels to convert, and turn on ISR conversions    C:\Projects\UBW\FW\D\user\user.c
0015b6   0e03     MOVLW     0x3            		AnalogEnable = AA;                                                             C:\Projects\UBW\FW\D\user\user.c
0015b8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0015ba   6e0c     MOVWF     0xc,0x0                                                                                         
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
0015bc   84ca     BSF       0xca,0x2,0x0   		T2CONbits.TMR2ON = 1;                                                          C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
0015be   defe     RCALL     0x13bc         	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
0015c0   0e06     MOVLW     0x6            }                                                                                C:\Projects\UBW\FW\D\user\user.c
0015c2   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0015c4   e202     BC        0x15ca                                                                                          
0015c6   6ae1     CLRF      0xe1,0x0                                                                                        
0015c8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0015ca   6ee1     MOVWF     0xe1,0x0                                                                                        
0015cc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0015ce   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0015d0   ffd9                                                                                                               
0015d2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Outputs values to the ports pins that are set up as outputs.                  C:\Projects\UBW\FW\D\user\user.c
                                           // Example "O,121,224,002<CR>"                                                   C:\Projects\UBW\FW\D\user\user.c
0015d4   cfd9     MOVFF     0xfd9,0xfe6    void parse_O_packet(void)                                                        C:\Projects\UBW\FW\D\user\user.c
0015d6   ffe6                                                                                                               
0015d8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0015da   ffd9                                                                                                               
0015dc   0e05     MOVLW     0x5                                                                                             
0015de   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char PA, PB, PC;                                                       C:\Projects\UBW\FW\D\user\user.c
                                           #ifdef __18F4550                                                                 C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char PD, PE;                                                           C:\Projects\UBW\FW\D\user\user.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Extract each of the values.                                                  C:\Projects\UBW\FW\D\user\user.c
0015e0   0e01     MOVLW     0x1            	PA = extract_number (kUCHAR);                                                   C:\Projects\UBW\FW\D\user\user.c
0015e2   6ee6     MOVWF     0xe6,0x0                                                                                        
0015e4   ecae     CALL      0x235c,0x0                                                                                      
0015e6   f011                                                                                                               
0015e8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0015ea   501d     MOVF      0x1d,0x0,0x0                                                                                    
0015ec   6edf     MOVWF     0xdf,0x0                                                                                        
0015ee   0e01     MOVLW     0x1            	PB = extract_number (kUCHAR);                                                   C:\Projects\UBW\FW\D\user\user.c
0015f0   6ee6     MOVWF     0xe6,0x0                                                                                        
0015f2   ecae     CALL      0x235c,0x0                                                                                      
0015f4   f011                                                                                                               
0015f6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0015f8   0e01     MOVLW     0x1                                                                                             
0015fa   c01d     MOVFF     0x1d,0xfdb                                                                                      
0015fc   ffdb                                                                                                               
0015fe   0e01     MOVLW     0x1            	PC = extract_number (kUCHAR);                                                   C:\Projects\UBW\FW\D\user\user.c
001600   6ee6     MOVWF     0xe6,0x0                                                                                        
001602   ecae     CALL      0x235c,0x0                                                                                      
001604   f011                                                                                                               
001606   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001608   0e02     MOVLW     0x2                                                                                             
00160a   c01d     MOVFF     0x1d,0xfdb                                                                                      
00160c   ffdb                                                                                                               
                                           #ifdef __18F4550                                                                 C:\Projects\UBW\FW\D\user\user.c
00160e   0e01     MOVLW     0x1            	PD = extract_number (kUCHAR);                                                   C:\Projects\UBW\FW\D\user\user.c
001610   6ee6     MOVWF     0xe6,0x0                                                                                        
001612   ecae     CALL      0x235c,0x0                                                                                      
001614   f011                                                                                                               
001616   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001618   0e03     MOVLW     0x3                                                                                             
00161a   c01d     MOVFF     0x1d,0xfdb                                                                                      
00161c   ffdb                                                                                                               
00161e   0e01     MOVLW     0x1            	PE = extract_number (kUCHAR);                                                   C:\Projects\UBW\FW\D\user\user.c
001620   6ee6     MOVWF     0xe6,0x0                                                                                        
001622   ecae     CALL      0x235c,0x0                                                                                      
001624   f011                                                                                                               
001626   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001628   0e04     MOVLW     0x4                                                                                             
00162a   c01d     MOVFF     0x1d,0xfdb                                                                                      
00162c   ffdb                                                                                                               
                                           #endif                                                                           C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Bail if we got a conversion error                                            C:\Projects\UBW\FW\D\user\user.c
00162e   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\Projects\UBW\FW\D\user\user.c
001630   e001     BZ        0x1634                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001632   d00f     BRA       0x1652         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	// Now write those values to the data port registers.                           C:\Projects\UBW\FW\D\user\user.c
001634   50df     MOVF      0xdf,0x0,0x0   	LATA = PA;                                                                      C:\Projects\UBW\FW\D\user\user.c
001636   6e89     MOVWF     0x89,0x0                                                                                        
001638   0e01     MOVLW     0x1            	LATB = PB;                                                                      C:\Projects\UBW\FW\D\user\user.c
00163a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00163c   6e8a     MOVWF     0x8a,0x0                                                                                        
00163e   0e02     MOVLW     0x2            	LATC = PC;                                                                      C:\Projects\UBW\FW\D\user\user.c
001640   50db     MOVF      0xdb,0x0,0x0                                                                                    
001642   6e8b     MOVWF     0x8b,0x0                                                                                        
                                           #ifdef __18F4550                                                                 C:\Projects\UBW\FW\D\user\user.c
001644   0e03     MOVLW     0x3            	LATD = PD;                                                                      C:\Projects\UBW\FW\D\user\user.c
001646   50db     MOVF      0xdb,0x0,0x0                                                                                    
001648   6e8c     MOVWF     0x8c,0x0                                                                                        
00164a   0e04     MOVLW     0x4            	LATE = PE;                                                                      C:\Projects\UBW\FW\D\user\user.c
00164c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00164e   6e8d     MOVWF     0x8d,0x0                                                                                        
                                           #endif                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		                                                                               C:\Projects\UBW\FW\D\user\user.c
001650   deb5     RCALL     0x13bc         	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
001652   0e05     MOVLW     0x5            }                                                                                C:\Projects\UBW\FW\D\user\user.c
001654   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001656   e202     BC        0x165c                                                                                          
001658   6ae1     CLRF      0xe1,0x0                                                                                        
00165a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00165c   6ee1     MOVWF     0xe1,0x0                                                                                        
00165e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001660   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001662   ffd9                                                                                                               
001664   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Read in the three I/O ports (A,B,C) and create                                C:\Projects\UBW\FW\D\user\user.c
                                           // a packet to send back with all of values.                                     C:\Projects\UBW\FW\D\user\user.c
                                           // Example: "I,143,221,010<CR>"                                                  C:\Projects\UBW\FW\D\user\user.c
                                           // Remember that on UBW 28 pin boards, we only have                              C:\Projects\UBW\FW\D\user\user.c
                                           // Port A bits 0 through 5                                                       C:\Projects\UBW\FW\D\user\user.c
                                           // Port B bits 0 through 7                                                       C:\Projects\UBW\FW\D\user\user.c
                                           // Port C bits 0,1,2 and 7,8                                                     C:\Projects\UBW\FW\D\user\user.c
                                           // And that Port C bits 0,1,2 are used for                                       C:\Projects\UBW\FW\D\user\user.c
                                           // 		User1 LED, User2 LED and Program switch respectively.                       C:\Projects\UBW\FW\D\user\user.c
                                           // The rest will be read in as zeros.                                            C:\Projects\UBW\FW\D\user\user.c
                                           void parse_I_packet(void)                                                        C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           #ifdef __18F4550                                                                 C:\Projects\UBW\FW\D\user\user.c
                                           	printf (                                                                        C:\Projects\UBW\FW\D\user\user.c
001684   0ef4     MOVLW     0xf4           		(rom char*)"I,%03i,%03i,%03i,%03i,%03i\r\n",                                   C:\Projects\UBW\FW\D\user\user.c
001686   6e2a     MOVWF     0x2a,0x0                                                                                        
001688   0e40     MOVLW     0x40                                                                                            
00168a   6e2b     MOVWF     0x2b,0x0                                                                                        
00168c   6a2c     CLRF      0x2c,0x0                                                                                        
00168e   c02a     MOVFF     0x2a,0xfe6                                                                                      
001690   ffe6                                                                                                               
001692   c02b     MOVFF     0x2b,0xfe6                                                                                      
001694   ffe6                                                                                                               
001696   c02c     MOVFF     0x2c,0xfe6                                                                                      
001698   ffe6                                                                                                               
00167e   5080     MOVF      0x80,0x0,0x0   		PORTA,                                                                         C:\Projects\UBW\FW\D\user\user.c
001680   6ee6     MOVWF     0xe6,0x0                                                                                        
001682   6ae6     CLRF      0xe6,0x0                                                                                        
001678   5081     MOVF      0x81,0x0,0x0   		PORTB,                                                                         C:\Projects\UBW\FW\D\user\user.c
00167a   6ee6     MOVWF     0xe6,0x0                                                                                        
00167c   6ae6     CLRF      0xe6,0x0                                                                                        
001672   5082     MOVF      0x82,0x0,0x0   		PORTC,                                                                         C:\Projects\UBW\FW\D\user\user.c
001674   6ee6     MOVWF     0xe6,0x0                                                                                        
001676   6ae6     CLRF      0xe6,0x0                                                                                        
00166c   5083     MOVF      0x83,0x0,0x0   		PORTD,                                                                         C:\Projects\UBW\FW\D\user\user.c
00166e   6ee6     MOVWF     0xe6,0x0                                                                                        
001670   6ae6     CLRF      0xe6,0x0                                                                                        
001666   5084     MOVF      0x84,0x0,0x0   		PORTE                                                                          C:\Projects\UBW\FW\D\user\user.c
001668   6ee6     MOVWF     0xe6,0x0       	);                                                                              C:\Projects\UBW\FW\D\user\user.c
00166a   6ae6     CLRF      0xe6,0x0                                                                                        
00169a   ec29     CALL      0x4452,0x0                                                                                      
00169c   f022                                                                                                               
00169e   6e2d     MOVWF     0x2d,0x0                                                                                        
0016a0   0e0d     MOVLW     0xd                                                                                             
0016a2   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0016a4   502d     MOVF      0x2d,0x0,0x0                                                                                    
                                           #else                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	printf (                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		(rom char*)"I,%03i,%03i,%03i\r\n",                                             C:\Projects\UBW\FW\D\user\user.c
                                           		PORTA,                                                                         C:\Projects\UBW\FW\D\user\user.c
                                           		PORTB,                                                                         C:\Projects\UBW\FW\D\user\user.c
                                           		PORTC                                                                          C:\Projects\UBW\FW\D\user\user.c
                                           	);                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\user\user.c
0016a6   0012     RETURN    0x0            }                                                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // All we do here is just print out our version number                           C:\Projects\UBW\FW\D\user\user.c
                                           void parse_V_packet(void)                                                        C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
0016a8   0e18     MOVLW     0x18           	printf ((rom char *)st_version);                                                C:\Projects\UBW\FW\D\user\user.c
0016aa   6e2a     MOVWF     0x2a,0x0                                                                                        
0016ac   0e47     MOVLW     0x47                                                                                            
0016ae   6e2b     MOVWF     0x2b,0x0                                                                                        
0016b0   6a2c     CLRF      0x2c,0x0                                                                                        
0016b2   c02a     MOVFF     0x2a,0xfe6                                                                                      
0016b4   ffe6                                                                                                               
0016b6   c02b     MOVFF     0x2b,0xfe6                                                                                      
0016b8   ffe6                                                                                                               
0016ba   c02c     MOVFF     0x2c,0xfe6                                                                                      
0016bc   ffe6                                                                                                               
0016be   ec29     CALL      0x4452,0x0                                                                                      
0016c0   f022                                                                                                               
0016c2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016c4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016c6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016c8   0012     RETURN    0x0            }                                                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // A is for read Analog inputs                                                   C:\Projects\UBW\FW\D\user\user.c
                                           // Just print out the last analog values for each of the                         C:\Projects\UBW\FW\D\user\user.c
                                           // enabled channels. The number of value returned in the                         C:\Projects\UBW\FW\D\user\user.c
                                           // A packet depend upon the number of analog inputs enabled.                     C:\Projects\UBW\FW\D\user\user.c
                                           // The user can enabled any number of analog inputs between                      C:\Projects\UBW\FW\D\user\user.c
                                           // 0 and 12. (none enabled, through all 12 analog inputs enabled).               C:\Projects\UBW\FW\D\user\user.c
                                           // Returned packet will look like "A,0,0,0,0,0,0<CR>" if                         C:\Projects\UBW\FW\D\user\user.c
                                           // six analog inputs are enabled but they are all                                C:\Projects\UBW\FW\D\user\user.c
                                           // grounded. Note that each one is a 10 bit                                      C:\Projects\UBW\FW\D\user\user.c
                                           // value, where 0 means the intput was at ground, and                            C:\Projects\UBW\FW\D\user\user.c
                                           // 1024 means it was at +5 V. (Or whatever the USB +5                            C:\Projects\UBW\FW\D\user\user.c
                                           // pin is at.)                                                                   C:\Projects\UBW\FW\D\user\user.c
0016ca   cfd9     MOVFF     0xfd9,0xfe6    void parse_A_packet(void)                                                        C:\Projects\UBW\FW\D\user\user.c
0016cc   ffe6                                                                                                               
0016ce   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0016d0   ffd9                                                                                                               
0016d2   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
0016d4   6adf     CLRF      0xdf,0x0       	char channel = 0;                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Put the beginning of the packet in place                                     C:\Projects\UBW\FW\D\user\user.c
0016d6   0ef2     MOVLW     0xf2           	printf ((rom char *)"A");                                                       C:\Projects\UBW\FW\D\user\user.c
0016d8   6e2a     MOVWF     0x2a,0x0                                                                                        
0016da   0e40     MOVLW     0x40                                                                                            
0016dc   6e2b     MOVWF     0x2b,0x0                                                                                        
0016de   6a2c     CLRF      0x2c,0x0                                                                                        
0016e0   c02a     MOVFF     0x2a,0xfe6                                                                                      
0016e2   ffe6                                                                                                               
0016e4   c02b     MOVFF     0x2b,0xfe6                                                                                      
0016e6   ffe6                                                                                                               
0016e8   c02c     MOVFF     0x2c,0xfe6                                                                                      
0016ea   ffe6                                                                                                               
0016ec   ec29     CALL      0x4452,0x0                                                                                      
0016ee   f022                                                                                                               
0016f0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016f2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016f4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// Now add each analog value                                                    C:\Projects\UBW\FW\D\user\user.c
0016f6   6adf     CLRF      0xdf,0x0       	for (channel = 0; channel < AnalogEnable; channel++)                            C:\Projects\UBW\FW\D\user\user.c
0016f8   500c     MOVF      0xc,0x0,0x0                                                                                     
0016fa   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0016fc   e232     BC        0x1762                                                                                          
00175e   2adf     INCF      0xdf,0x1,0x0                                                                                    
001760   d7cb     BRA       0x16f8                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		printf(                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           			(rom char *)",%04u"                                                           C:\Projects\UBW\FW\D\user\user.c
0016fe   cfdf     MOVFF     0xfdf,0x2a     			,ISR_A_FIFO[channel][ISR_A_FIFO_out]                                          C:\Projects\UBW\FW\D\user\user.c
001700   f02a                                                                                                               
001702   6a2b     CLRF      0x2b,0x0                                                                                        
001704   be2a     BTFSC     0x2a,0x7,0x0                                                                                    
001706   682b     SETF      0x2b,0x0                                                                                        
001708   0e06     MOVLW     0x6                                                                                             
00170a   022b     MULWF     0x2b,0x0                                                                                        
00170c   cff3     MOVFF     0xff3,0x2b                                                                                      
00170e   f02b                                                                                                               
001710   0e06     MOVLW     0x6                                                                                             
001712   022a     MULWF     0x2a,0x0                                                                                        
001714   cff3     MOVFF     0xff3,0x2a                                                                                      
001716   f02a                                                                                                               
001718   50f4     MOVF      0xf4,0x0,0x0                                                                                    
00171a   262b     ADDWF     0x2b,0x1,0x0                                                                                    
00171c   0e00     MOVLW     0x0                                                                                             
00171e   262a     ADDWF     0x2a,0x1,0x0                                                                                    
001720   0e01     MOVLW     0x1                                                                                             
001722   222b     ADDWFC    0x2b,0x1,0x0                                                                                    
001724   500a     MOVF      0xa,0x0,0x0                                                                                     
001726   0d02     MULLW     0x2                                                                                             
001728   502a     MOVF      0x2a,0x0,0x0                                                                                    
00172a   24f3     ADDWF     0xf3,0x0,0x0                                                                                    
00172c   6ee9     MOVWF     0xe9,0x0                                                                                        
00172e   502b     MOVF      0x2b,0x0,0x0                                                                                    
001730   20f4     ADDWFC    0xf4,0x0,0x0                                                                                    
001732   6eea     MOVWF     0xea,0x0                                                                                        
00173c   0eec     MOVLW     0xec                                                                                            
00173e   6e2c     MOVWF     0x2c,0x0                                                                                        
001740   0e40     MOVLW     0x40                                                                                            
001742   6e2d     MOVWF     0x2d,0x0                                                                                        
001744   6a2e     CLRF      0x2e,0x0                                                                                        
001746   c02c     MOVFF     0x2c,0xfe6                                                                                      
001748   ffe6                                                                                                               
00174a   c02d     MOVFF     0x2d,0xfe6                                                                                      
00174c   ffe6                                                                                                               
00174e   c02e     MOVFF     0x2e,0xfe6                                                                                      
001750   ffe6                                                                                                               
001734   cfee     MOVFF     0xfee,0xfe6    		);                                                                             C:\Projects\UBW\FW\D\user\user.c
001736   ffe6                                                                                                               
001738   cfef     MOVFF     0xfef,0xfe6                                                                                     
00173a   ffe6                                                                                                               
001752   ec29     CALL      0x4452,0x0                                                                                      
001754   f022                                                                                                               
001756   6e2f     MOVWF     0x2f,0x0                                                                                        
001758   0e05     MOVLW     0x5                                                                                             
00175a   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00175c   502f     MOVF      0x2f,0x0,0x0                                                                                    
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// Add \r\n and terminating zero.                                               C:\Projects\UBW\FW\D\user\user.c
001762   0e15     MOVLW     0x15           	printf ((rom char *)st_LFCR);                                                   C:\Projects\UBW\FW\D\user\user.c
001764   6e2a     MOVWF     0x2a,0x0                                                                                        
001766   0e47     MOVLW     0x47                                                                                            
001768   6e2b     MOVWF     0x2b,0x0                                                                                        
00176a   6a2c     CLRF      0x2c,0x0                                                                                        
00176c   c02a     MOVFF     0x2a,0xfe6                                                                                      
00176e   ffe6                                                                                                               
001770   c02b     MOVFF     0x2b,0xfe6                                                                                      
001772   ffe6                                                                                                               
001774   c02c     MOVFF     0x2c,0xfe6                                                                                      
001776   ffe6                                                                                                               
001778   ec29     CALL      0x4452,0x0                                                                                      
00177a   f022                                                                                                               
00177c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00177e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001780   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001782   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\Projects\UBW\FW\D\user\user.c
001784   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001786   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001788   ffd9                                                                                                               
00178a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // MW is for Memory Write                                                        C:\Projects\UBW\FW\D\user\user.c
                                           // "MW,<location>,<value><CR>"                                                   C:\Projects\UBW\FW\D\user\user.c
                                           // <location> is a decimal value between 0 and 4096 indicating the RAM address to write to  C:\Projects\UBW\FW\D\user\user.c
                                           // <value> is a decimal value between 0 and 255 that is the value to write       C:\Projects\UBW\FW\D\user\user.c
00178c   cfd9     MOVFF     0xfd9,0xfe6    void parse_MW_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
00178e   ffe6                                                                                                               
001790   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001792   ffd9                                                                                                               
001794   0e03     MOVLW     0x3                                                                                             
001796   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned int location;                                                          C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char value;                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
001798   0e03     MOVLW     0x3            	location = extract_number (kUINT);                                              C:\Projects\UBW\FW\D\user\user.c
00179a   6ee6     MOVWF     0xe6,0x0                                                                                        
00179c   ecae     CALL      0x235c,0x0                                                                                      
00179e   f011                                                                                                               
0017a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0017a2   c01d     MOVFF     0x1d,0xfde                                                                                      
0017a4   ffde                                                                                                               
0017a6   c01e     MOVFF     0x1e,0xfdd                                                                                      
0017a8   ffdd                                                                                                               
0017aa   0e01     MOVLW     0x1            	value = extract_number (kUCHAR);                                                C:\Projects\UBW\FW\D\user\user.c
0017ac   6ee6     MOVWF     0xe6,0x0                                                                                        
0017ae   ecae     CALL      0x235c,0x0                                                                                      
0017b0   f011                                                                                                               
0017b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0017b4   0e02     MOVLW     0x2                                                                                             
0017b6   c01d     MOVFF     0x1d,0xfdb                                                                                      
0017b8   ffdb                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Bail if we got a conversion error                                            C:\Projects\UBW\FW\D\user\user.c
0017ba   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\Projects\UBW\FW\D\user\user.c
0017bc   e001     BZ        0x17c0                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0017be   d011     BRA       0x17e2         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	// Limit check the address and write the byte in                                C:\Projects\UBW\FW\D\user\user.c
0017c0   cfde     MOVFF     0xfde,0x2a     	if (location < 4096)                                                            C:\Projects\UBW\FW\D\user\user.c
0017c2   f02a                                                                                                               
0017c4   cfdd     MOVFF     0xfdd,0x2b                                                                                      
0017c6   f02b                                                                                                               
0017c8   0e00     MOVLW     0x0                                                                                             
0017ca   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
0017cc   0e10     MOVLW     0x10                                                                                            
0017ce   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
0017d0   e207     BC        0x17e0                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0017d2   cfde     MOVFF     0xfde,0xfe9    		*((unsigned char *)location) = value;                                          C:\Projects\UBW\FW\D\user\user.c
0017d4   ffe9                                                                                                               
0017d6   cfdd     MOVFF     0xfdd,0xfea                                                                                     
0017d8   ffea                                                                                                               
0017da   0e02     MOVLW     0x2                                                                                             
0017dc   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0017de   ffef                                                                                                               
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
0017e0   dded     RCALL     0x13bc         	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
0017e2   0e03     MOVLW     0x3            }                                                                                C:\Projects\UBW\FW\D\user\user.c
0017e4   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0017e6   e202     BC        0x17ec                                                                                          
0017e8   6ae1     CLRF      0xe1,0x0                                                                                        
0017ea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0017ec   6ee1     MOVWF     0xe1,0x0                                                                                        
0017ee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0017f0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0017f2   ffd9                                                                                                               
0017f4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // MR is for Memory Read                                                         C:\Projects\UBW\FW\D\user\user.c
                                           // "MW,<location><CR>"                                                           C:\Projects\UBW\FW\D\user\user.c
                                           // <location> is a decimal value between 0 and 4096 indicating the RAM address to read from  C:\Projects\UBW\FW\D\user\user.c
                                           // The UBW will then send a "MR,<value><CR>" packet back to the PC               C:\Projects\UBW\FW\D\user\user.c
                                           // where <value> is the byte value read from the address                         C:\Projects\UBW\FW\D\user\user.c
0017f6   cfd9     MOVFF     0xfd9,0xfe6    void parse_MR_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
0017f8   ffe6                                                                                                               
0017fa   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0017fc   ffd9                                                                                                               
0017fe   0e03     MOVLW     0x3                                                                                             
001800   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned int location;                                                          C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char value;                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
001802   0e03     MOVLW     0x3            	location = extract_number (kUINT);                                              C:\Projects\UBW\FW\D\user\user.c
001804   6ee6     MOVWF     0xe6,0x0                                                                                        
001806   ecae     CALL      0x235c,0x0                                                                                      
001808   f011                                                                                                               
00180a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00180c   c01d     MOVFF     0x1d,0xfde                                                                                      
00180e   ffde                                                                                                               
001810   c01e     MOVFF     0x1e,0xfdd                                                                                      
001812   ffdd                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Bail if we got a conversion error                                            C:\Projects\UBW\FW\D\user\user.c
001814   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\Projects\UBW\FW\D\user\user.c
001816   e001     BZ        0x181a                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001818   d025     BRA       0x1864         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Limit check the address and write the byte in                                C:\Projects\UBW\FW\D\user\user.c
00181a   cfde     MOVFF     0xfde,0x2a     	if (location < 4096)                                                            C:\Projects\UBW\FW\D\user\user.c
00181c   f02a                                                                                                               
00181e   cfdd     MOVFF     0xfdd,0x2b                                                                                      
001820   f02b                                                                                                               
001822   0e00     MOVLW     0x0                                                                                             
001824   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001826   0e10     MOVLW     0x10                                                                                            
001828   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
00182a   e207     BC        0x183a                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
00182c   cfde     MOVFF     0xfde,0xfe9    		value = *((unsigned char *)location);                                          C:\Projects\UBW\FW\D\user\user.c
00182e   ffe9                                                                                                               
001830   cfdd     MOVFF     0xfdd,0xfea                                                                                     
001832   ffea                                                                                                               
001834   0e02     MOVLW     0x2                                                                                             
001836   cfef     MOVFF     0xfef,0xfdb                                                                                     
001838   ffdb                                                                                                               
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// Now send back the MR packet                                                  C:\Projects\UBW\FW\D\user\user.c
                                           	printf (                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           		(rom char *)"MR,%03u\r\n"                                                      C:\Projects\UBW\FW\D\user\user.c
001842   0ee2     MOVLW     0xe2           		,value                                                                         C:\Projects\UBW\FW\D\user\user.c
001844   6e2a     MOVWF     0x2a,0x0                                                                                        
001846   0e40     MOVLW     0x40                                                                                            
001848   6e2b     MOVWF     0x2b,0x0                                                                                        
00184a   6a2c     CLRF      0x2c,0x0                                                                                        
00184c   c02a     MOVFF     0x2a,0xfe6                                                                                      
00184e   ffe6                                                                                                               
001850   c02b     MOVFF     0x2b,0xfe6                                                                                      
001852   ffe6                                                                                                               
001854   c02c     MOVFF     0x2c,0xfe6                                                                                      
001856   ffe6                                                                                                               
00183a   0e02     MOVLW     0x2            	);                                                                              C:\Projects\UBW\FW\D\user\user.c
00183c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00183e   ffe6                                                                                                               
001840   6ae6     CLRF      0xe6,0x0                                                                                        
001858   ec29     CALL      0x4452,0x0                                                                                      
00185a   f022                                                                                                               
00185c   6e2d     MOVWF     0x2d,0x0                                                                                        
00185e   0e05     MOVLW     0x5                                                                                             
001860   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001862   502d     MOVF      0x2d,0x0,0x0                                                                                    
001864   0e03     MOVLW     0x3            }                                                                                C:\Projects\UBW\FW\D\user\user.c
001866   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001868   e202     BC        0x186e                                                                                          
00186a   6ae1     CLRF      0xe1,0x0                                                                                        
00186c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00186e   6ee1     MOVWF     0xe1,0x0                                                                                        
001870   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001872   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001874   ffd9                                                                                                               
001876   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // PD is for Pin Direction                                                       C:\Projects\UBW\FW\D\user\user.c
                                           // "PD,<port>,<pin>,<direction><CR>"                                             C:\Projects\UBW\FW\D\user\user.c
                                           // <port> is "A", "B", "C" and indicates the port                                C:\Projects\UBW\FW\D\user\user.c
                                           // <pin> is a number between 0 and 7 and indicates which pin to change direction on C:\Projects\UBW\FW\D\user\user.c
                                           // <direction> is "1" for input, "0" for output                                  C:\Projects\UBW\FW\D\user\user.c
001878   cfd9     MOVFF     0xfd9,0xfe6    void parse_PD_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
00187a   ffe6                                                                                                               
00187c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00187e   ffd9                                                                                                               
001880   0e03     MOVLW     0x3                                                                                             
001882   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char port;                                                             C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char pin;                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char direction;                                                        C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
001884   0e05     MOVLW     0x5            	port = extract_number (kUCASE_ASCII_CHAR);                                      C:\Projects\UBW\FW\D\user\user.c
001886   6ee6     MOVWF     0xe6,0x0                                                                                        
001888   ecae     CALL      0x235c,0x0                                                                                      
00188a   f011                                                                                                               
00188c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00188e   501d     MOVF      0x1d,0x0,0x0                                                                                    
001890   6edf     MOVWF     0xdf,0x0                                                                                        
001892   0e01     MOVLW     0x1            	pin = extract_number (kUCHAR);                                                  C:\Projects\UBW\FW\D\user\user.c
001894   6ee6     MOVWF     0xe6,0x0                                                                                        
001896   ecae     CALL      0x235c,0x0                                                                                      
001898   f011                                                                                                               
00189a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00189c   0e01     MOVLW     0x1                                                                                             
00189e   c01d     MOVFF     0x1d,0xfdb                                                                                      
0018a0   ffdb                                                                                                               
0018a2   0e01     MOVLW     0x1            	direction = extract_number (kUCHAR);                                            C:\Projects\UBW\FW\D\user\user.c
0018a4   6ee6     MOVWF     0xe6,0x0                                                                                        
0018a6   ecae     CALL      0x235c,0x0                                                                                      
0018a8   f011                                                                                                               
0018aa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0018ac   0e02     MOVLW     0x2                                                                                             
0018ae   c01d     MOVFF     0x1d,0xfdb                                                                                      
0018b0   ffdb                                                                                                               
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// Bail if we got a conversion error                                            C:\Projects\UBW\FW\D\user\user.c
0018b2   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\Projects\UBW\FW\D\user\user.c
0018b4   e001     BZ        0x18b8                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0018b6   d0b4     BRA       0x1a20         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Limit check the parameters                                                   C:\Projects\UBW\FW\D\user\user.c
0018b8   0e02     MOVLW     0x2            	if (direction > 1)                                                              C:\Projects\UBW\FW\D\user\user.c
0018ba   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018bc   0801     SUBLW     0x1                                                                                             
0018be   e202     BC        0x18c4                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0018c0   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
0018c2   d0ae     BRA       0x1a20         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
0018c4   0e01     MOVLW     0x1            	if (pin > 7)                                                                    C:\Projects\UBW\FW\D\user\user.c
0018c6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018c8   0807     SUBLW     0x7                                                                                             
0018ca   e202     BC        0x18d0                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0018cc   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
0018ce   d0a8     BRA       0x1a20         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
0018d0   0e41     MOVLW     0x41           	if ('A' == port)                                                                C:\Projects\UBW\FW\D\user\user.c
0018d2   6e2a     MOVWF     0x2a,0x0                                                                                        
0018d4   50df     MOVF      0xdf,0x0,0x0                                                                                    
0018d6   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
0018d8   e11c     BNZ       0x1912                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0018da   0e02     MOVLW     0x2            		if (0 == direction)                                                            C:\Projects\UBW\FW\D\user\user.c
0018dc   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018de   e10d     BNZ       0x18fa                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0018e0   0e01     MOVLW     0x1            			bitclr (DDRA, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
0018e2   6ef3     MOVWF     0xf3,0x0                                                                                        
0018e4   0e01     MOVLW     0x1                                                                                             
0018e6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018e8   e004     BZ        0x18f2                                                                                          
0018ea   90d8     BCF       0xd8,0x0,0x0                                                                                    
0018ec   36f3     RLCF      0xf3,0x1,0x0                                                                                    
0018ee   06e8     DECF      0xe8,0x1,0x0                                                                                    
0018f0   e1fc     BNZ       0x18ea                                                                                          
0018f2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0018f4   1ce8     COMF      0xe8,0x0,0x0                                                                                    
0018f6   1692     ANDWF     0x92,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
0018f8   d00b     BRA       0x1910         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0018fa   0e01     MOVLW     0x1            			bitset (DDRA, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
0018fc   6ef3     MOVWF     0xf3,0x0                                                                                        
0018fe   0e01     MOVLW     0x1                                                                                             
001900   50db     MOVF      0xdb,0x0,0x0                                                                                    
001902   e004     BZ        0x190c                                                                                          
001904   90d8     BCF       0xd8,0x0,0x0                                                                                    
001906   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001908   06e8     DECF      0xe8,0x1,0x0                                                                                    
00190a   e1fc     BNZ       0x1904                                                                                          
00190c   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00190e   1292     IORWF     0x92,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001910   d086     BRA       0x1a1e         	else if ('B' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001912   0e42     MOVLW     0x42                                                                                            
001914   6e2a     MOVWF     0x2a,0x0                                                                                        
001916   50df     MOVF      0xdf,0x0,0x0                                                                                    
001918   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
00191a   e11c     BNZ       0x1954                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
00191c   0e02     MOVLW     0x2            		if (0 == direction)                                                            C:\Projects\UBW\FW\D\user\user.c
00191e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001920   e10d     BNZ       0x193c                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001922   0e01     MOVLW     0x1            			bitclr (DDRB, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001924   6ef3     MOVWF     0xf3,0x0                                                                                        
001926   0e01     MOVLW     0x1                                                                                             
001928   50db     MOVF      0xdb,0x0,0x0                                                                                    
00192a   e004     BZ        0x1934                                                                                          
00192c   90d8     BCF       0xd8,0x0,0x0                                                                                    
00192e   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001930   06e8     DECF      0xe8,0x1,0x0                                                                                    
001932   e1fc     BNZ       0x192c                                                                                          
001934   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001936   1ce8     COMF      0xe8,0x0,0x0                                                                                    
001938   1693     ANDWF     0x93,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
00193a   d00b     BRA       0x1952         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
00193c   0e01     MOVLW     0x1            			bitset (DDRB, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
00193e   6ef3     MOVWF     0xf3,0x0                                                                                        
001940   0e01     MOVLW     0x1                                                                                             
001942   50db     MOVF      0xdb,0x0,0x0                                                                                    
001944   e004     BZ        0x194e                                                                                          
001946   90d8     BCF       0xd8,0x0,0x0                                                                                    
001948   36f3     RLCF      0xf3,0x1,0x0                                                                                    
00194a   06e8     DECF      0xe8,0x1,0x0                                                                                    
00194c   e1fc     BNZ       0x1946                                                                                          
00194e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001950   1293     IORWF     0x93,0x1,0x0                                                                                    
                                           		}		                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001952   d065     BRA       0x1a1e         	else if ('C' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001954   0e43     MOVLW     0x43                                                                                            
001956   6e2a     MOVWF     0x2a,0x0                                                                                        
001958   50df     MOVF      0xdf,0x0,0x0                                                                                    
00195a   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
00195c   e11c     BNZ       0x1996                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
00195e   0e02     MOVLW     0x2            		if (0 == direction)                                                            C:\Projects\UBW\FW\D\user\user.c
001960   50db     MOVF      0xdb,0x0,0x0                                                                                    
001962   e10d     BNZ       0x197e                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001964   0e01     MOVLW     0x1            			bitclr (DDRC, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001966   6ef3     MOVWF     0xf3,0x0                                                                                        
001968   0e01     MOVLW     0x1                                                                                             
00196a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00196c   e004     BZ        0x1976                                                                                          
00196e   90d8     BCF       0xd8,0x0,0x0                                                                                    
001970   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001972   06e8     DECF      0xe8,0x1,0x0                                                                                    
001974   e1fc     BNZ       0x196e                                                                                          
001976   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001978   1ce8     COMF      0xe8,0x0,0x0                                                                                    
00197a   1694     ANDWF     0x94,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
00197c   d00b     BRA       0x1994         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
00197e   0e01     MOVLW     0x1            			bitset (DDRC, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001980   6ef3     MOVWF     0xf3,0x0                                                                                        
001982   0e01     MOVLW     0x1                                                                                             
001984   50db     MOVF      0xdb,0x0,0x0                                                                                    
001986   e004     BZ        0x1990                                                                                          
001988   90d8     BCF       0xd8,0x0,0x0                                                                                    
00198a   36f3     RLCF      0xf3,0x1,0x0                                                                                    
00198c   06e8     DECF      0xe8,0x1,0x0                                                                                    
00198e   e1fc     BNZ       0x1988                                                                                          
001990   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001992   1294     IORWF     0x94,0x1,0x0                                                                                    
                                           		}		                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           #ifdef __18F4550                                                                 C:\Projects\UBW\FW\D\user\user.c
001994   d044     BRA       0x1a1e         	else if ('D' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001996   0e44     MOVLW     0x44                                                                                            
001998   6e2a     MOVWF     0x2a,0x0                                                                                        
00199a   50df     MOVF      0xdf,0x0,0x0                                                                                    
00199c   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
00199e   e11c     BNZ       0x19d8                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0019a0   0e02     MOVLW     0x2            		if (0 == direction)                                                            C:\Projects\UBW\FW\D\user\user.c
0019a2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0019a4   e10d     BNZ       0x19c0                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0019a6   0e01     MOVLW     0x1            			bitclr (DDRD, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
0019a8   6ef3     MOVWF     0xf3,0x0                                                                                        
0019aa   0e01     MOVLW     0x1                                                                                             
0019ac   50db     MOVF      0xdb,0x0,0x0                                                                                    
0019ae   e004     BZ        0x19b8                                                                                          
0019b0   90d8     BCF       0xd8,0x0,0x0                                                                                    
0019b2   36f3     RLCF      0xf3,0x1,0x0                                                                                    
0019b4   06e8     DECF      0xe8,0x1,0x0                                                                                    
0019b6   e1fc     BNZ       0x19b0                                                                                          
0019b8   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0019ba   1ce8     COMF      0xe8,0x0,0x0                                                                                    
0019bc   1695     ANDWF     0x95,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
0019be   d00b     BRA       0x19d6         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0019c0   0e01     MOVLW     0x1            			bitset (DDRD, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
0019c2   6ef3     MOVWF     0xf3,0x0                                                                                        
0019c4   0e01     MOVLW     0x1                                                                                             
0019c6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0019c8   e004     BZ        0x19d2                                                                                          
0019ca   90d8     BCF       0xd8,0x0,0x0                                                                                    
0019cc   36f3     RLCF      0xf3,0x1,0x0                                                                                    
0019ce   06e8     DECF      0xe8,0x1,0x0                                                                                    
0019d0   e1fc     BNZ       0x19ca                                                                                          
0019d2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0019d4   1295     IORWF     0x95,0x1,0x0                                                                                    
                                           		}		                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
0019d6   d023     BRA       0x1a1e         	else if ('E' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
0019d8   0e45     MOVLW     0x45                                                                                            
0019da   6e2a     MOVWF     0x2a,0x0                                                                                        
0019dc   50df     MOVF      0xdf,0x0,0x0                                                                                    
0019de   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
0019e0   e11c     BNZ       0x1a1a                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0019e2   0e02     MOVLW     0x2            		if (0 == direction)                                                            C:\Projects\UBW\FW\D\user\user.c
0019e4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0019e6   e10d     BNZ       0x1a02                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0019e8   0e01     MOVLW     0x1            			bitclr (DDRE, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
0019ea   6ef3     MOVWF     0xf3,0x0                                                                                        
0019ec   0e01     MOVLW     0x1                                                                                             
0019ee   50db     MOVF      0xdb,0x0,0x0                                                                                    
0019f0   e004     BZ        0x19fa                                                                                          
0019f2   90d8     BCF       0xd8,0x0,0x0                                                                                    
0019f4   36f3     RLCF      0xf3,0x1,0x0                                                                                    
0019f6   06e8     DECF      0xe8,0x1,0x0                                                                                    
0019f8   e1fc     BNZ       0x19f2                                                                                          
0019fa   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0019fc   1ce8     COMF      0xe8,0x0,0x0                                                                                    
0019fe   1696     ANDWF     0x96,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
001a00   d00b     BRA       0x1a18         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001a02   0e01     MOVLW     0x1            			bitset (DDRE, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001a04   6ef3     MOVWF     0xf3,0x0                                                                                        
001a06   0e01     MOVLW     0x1                                                                                             
001a08   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a0a   e004     BZ        0x1a14                                                                                          
001a0c   90d8     BCF       0xd8,0x0,0x0                                                                                    
001a0e   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001a10   06e8     DECF      0xe8,0x1,0x0                                                                                    
001a12   e1fc     BNZ       0x1a0c                                                                                          
001a14   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001a16   1296     IORWF     0x96,0x1,0x0                                                                                    
                                           		}		                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\user\user.c
001a18   d002     BRA       0x1a1e         	else                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001a1a   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
001a1c   d001     BRA       0x1a20         		return;	                                                                       C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
001a1e   dcce     RCALL     0x13bc         	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
001a20   0e03     MOVLW     0x3            }                                                                                C:\Projects\UBW\FW\D\user\user.c
001a22   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001a24   e202     BC        0x1a2a                                                                                          
001a26   6ae1     CLRF      0xe1,0x0                                                                                        
001a28   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001a2a   6ee1     MOVWF     0xe1,0x0                                                                                        
001a2c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001a2e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001a30   ffd9                                                                                                               
001a32   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // PI is for Pin Input                                                           C:\Projects\UBW\FW\D\user\user.c
                                           // "PI,<port>,<pin><CR>"                                                         C:\Projects\UBW\FW\D\user\user.c
                                           // <port> is "A", "B", "C" and indicates the port                                C:\Projects\UBW\FW\D\user\user.c
                                           // <pin> is a number between 0 and 7 and indicates which pin to read             C:\Projects\UBW\FW\D\user\user.c
                                           // The command returns a "PI,<value><CR>" packet,                                C:\Projects\UBW\FW\D\user\user.c
                                           // where <value> is the value (0 or 1 for digital, 0 to 1024 for Analog)         C:\Projects\UBW\FW\D\user\user.c
                                           // value for that pin.                                                           C:\Projects\UBW\FW\D\user\user.c
001a34   cfd9     MOVFF     0xfd9,0xfe6    void parse_PI_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
001a36   ffe6                                                                                                               
001a38   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001a3a   ffd9                                                                                                               
001a3c   0e03     MOVLW     0x3                                                                                             
001a3e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char port;                                                             C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char pin;                                                              C:\Projects\UBW\FW\D\user\user.c
001a40   0e02     MOVLW     0x2            	unsigned char value = 0;                                                        C:\Projects\UBW\FW\D\user\user.c
001a42   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
001a44   0e05     MOVLW     0x5            	port = extract_number (kUCASE_ASCII_CHAR);                                      C:\Projects\UBW\FW\D\user\user.c
001a46   6ee6     MOVWF     0xe6,0x0                                                                                        
001a48   ecae     CALL      0x235c,0x0                                                                                      
001a4a   f011                                                                                                               
001a4c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001a4e   501d     MOVF      0x1d,0x0,0x0                                                                                    
001a50   6edf     MOVWF     0xdf,0x0                                                                                        
001a52   0e01     MOVLW     0x1            	pin = extract_number (kUCHAR);                                                  C:\Projects\UBW\FW\D\user\user.c
001a54   6ee6     MOVWF     0xe6,0x0                                                                                        
001a56   ecae     CALL      0x235c,0x0                                                                                      
001a58   f011                                                                                                               
001a5a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001a5c   0e01     MOVLW     0x1                                                                                             
001a5e   c01d     MOVFF     0x1d,0xfdb                                                                                      
001a60   ffdb                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Bail if we got a conversion error                                            C:\Projects\UBW\FW\D\user\user.c
001a62   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\Projects\UBW\FW\D\user\user.c
001a64   e001     BZ        0x1a68                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001a66   d086     BRA       0x1b74         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Limit check the parameters                                                   C:\Projects\UBW\FW\D\user\user.c
001a68   0e01     MOVLW     0x1            	if (pin > 7)                                                                    C:\Projects\UBW\FW\D\user\user.c
001a6a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a6c   0807     SUBLW     0x7                                                                                             
001a6e   e202     BC        0x1a74                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001a70   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
001a72   d080     BRA       0x1b74         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// Then test the bit in question based upon port                                C:\Projects\UBW\FW\D\user\user.c
001a74   0e41     MOVLW     0x41           	if ('A' == port)                                                                C:\Projects\UBW\FW\D\user\user.c
001a76   6e2a     MOVWF     0x2a,0x0                                                                                        
001a78   50df     MOVF      0xdf,0x0,0x0                                                                                    
001a7a   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001a7c   e110     BNZ       0x1a9e                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001a7e   0e01     MOVLW     0x1            		value = bittst (PORTA, pin);  	                                                C:\Projects\UBW\FW\D\user\user.c
001a80   6ef3     MOVWF     0xf3,0x0                                                                                        
001a82   0e01     MOVLW     0x1                                                                                             
001a84   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a86   e004     BZ        0x1a90                                                                                          
001a88   90d8     BCF       0xd8,0x0,0x0                                                                                    
001a8a   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001a8c   06e8     DECF      0xe8,0x1,0x0                                                                                    
001a8e   e1fc     BNZ       0x1a88                                                                                          
001a90   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001a92   1480     ANDWF     0x80,0x0,0x0                                                                                    
001a94   6ee7     MOVWF     0xe7,0x0                                                                                        
001a96   0e02     MOVLW     0x2                                                                                             
001a98   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001a9a   ffdb                                                                                                               
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001a9c   d056     BRA       0x1b4a         	else if ('B' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001a9e   0e42     MOVLW     0x42                                                                                            
001aa0   6e2a     MOVWF     0x2a,0x0                                                                                        
001aa2   50df     MOVF      0xdf,0x0,0x0                                                                                    
001aa4   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001aa6   e110     BNZ       0x1ac8                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001aa8   0e01     MOVLW     0x1            		value = bittst (PORTB, pin);  	                                                C:\Projects\UBW\FW\D\user\user.c
001aaa   6ef3     MOVWF     0xf3,0x0                                                                                        
001aac   0e01     MOVLW     0x1                                                                                             
001aae   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ab0   e004     BZ        0x1aba                                                                                          
001ab2   90d8     BCF       0xd8,0x0,0x0                                                                                    
001ab4   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001ab6   06e8     DECF      0xe8,0x1,0x0                                                                                    
001ab8   e1fc     BNZ       0x1ab2                                                                                          
001aba   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001abc   1481     ANDWF     0x81,0x0,0x0                                                                                    
001abe   6ee7     MOVWF     0xe7,0x0                                                                                        
001ac0   0e02     MOVLW     0x2                                                                                             
001ac2   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001ac4   ffdb                                                                                                               
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001ac6   d041     BRA       0x1b4a         	else if ('C' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001ac8   0e43     MOVLW     0x43                                                                                            
001aca   6e2a     MOVWF     0x2a,0x0                                                                                        
001acc   50df     MOVF      0xdf,0x0,0x0                                                                                    
001ace   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001ad0   e110     BNZ       0x1af2                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001ad2   0e01     MOVLW     0x1            		value = bittst (PORTC, pin);  	                                                C:\Projects\UBW\FW\D\user\user.c
001ad4   6ef3     MOVWF     0xf3,0x0                                                                                        
001ad6   0e01     MOVLW     0x1                                                                                             
001ad8   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ada   e004     BZ        0x1ae4                                                                                          
001adc   90d8     BCF       0xd8,0x0,0x0                                                                                    
001ade   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001ae0   06e8     DECF      0xe8,0x1,0x0                                                                                    
001ae2   e1fc     BNZ       0x1adc                                                                                          
001ae4   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001ae6   1482     ANDWF     0x82,0x0,0x0                                                                                    
001ae8   6ee7     MOVWF     0xe7,0x0                                                                                        
001aea   0e02     MOVLW     0x2                                                                                             
001aec   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001aee   ffdb                                                                                                               
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           #ifdef __18F4550                                                                 C:\Projects\UBW\FW\D\user\user.c
001af0   d02c     BRA       0x1b4a         	else if ('D' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001af2   0e44     MOVLW     0x44                                                                                            
001af4   6e2a     MOVWF     0x2a,0x0                                                                                        
001af6   50df     MOVF      0xdf,0x0,0x0                                                                                    
001af8   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001afa   e110     BNZ       0x1b1c                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001afc   0e01     MOVLW     0x1            		value = bittst (PORTD, pin);  	                                                C:\Projects\UBW\FW\D\user\user.c
001afe   6ef3     MOVWF     0xf3,0x0                                                                                        
001b00   0e01     MOVLW     0x1                                                                                             
001b02   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b04   e004     BZ        0x1b0e                                                                                          
001b06   90d8     BCF       0xd8,0x0,0x0                                                                                    
001b08   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001b0a   06e8     DECF      0xe8,0x1,0x0                                                                                    
001b0c   e1fc     BNZ       0x1b06                                                                                          
001b0e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001b10   1483     ANDWF     0x83,0x0,0x0                                                                                    
001b12   6ee7     MOVWF     0xe7,0x0                                                                                        
001b14   0e02     MOVLW     0x2                                                                                             
001b16   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001b18   ffdb                                                                                                               
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001b1a   d017     BRA       0x1b4a         	else if ('E' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001b1c   0e45     MOVLW     0x45                                                                                            
001b1e   6e2a     MOVWF     0x2a,0x0                                                                                        
001b20   50df     MOVF      0xdf,0x0,0x0                                                                                    
001b22   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001b24   e110     BNZ       0x1b46                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001b26   0e01     MOVLW     0x1            		value = bittst (PORTE, pin);  	                                                C:\Projects\UBW\FW\D\user\user.c
001b28   6ef3     MOVWF     0xf3,0x0                                                                                        
001b2a   0e01     MOVLW     0x1                                                                                             
001b2c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b2e   e004     BZ        0x1b38                                                                                          
001b30   90d8     BCF       0xd8,0x0,0x0                                                                                    
001b32   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001b34   06e8     DECF      0xe8,0x1,0x0                                                                                    
001b36   e1fc     BNZ       0x1b30                                                                                          
001b38   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001b3a   1484     ANDWF     0x84,0x0,0x0                                                                                    
001b3c   6ee7     MOVWF     0xe7,0x0                                                                                        
001b3e   0e02     MOVLW     0x2                                                                                             
001b40   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001b42   ffdb                                                                                                               
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\user\user.c
001b44   d002     BRA       0x1b4a         	else                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001b46   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
001b48   d015     BRA       0x1b74         		return;	                                                                       C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// Now send back our response                                                   C:\Projects\UBW\FW\D\user\user.c
                                           	printf(                                                                         C:\Projects\UBW\FW\D\user\user.c
                                           		 (rom char *)"PI,%1u\r\n"                                                      C:\Projects\UBW\FW\D\user\user.c
001b52   0ed9     MOVLW     0xd9           		,value                                                                         C:\Projects\UBW\FW\D\user\user.c
001b54   6e2a     MOVWF     0x2a,0x0                                                                                        
001b56   0e40     MOVLW     0x40                                                                                            
001b58   6e2b     MOVWF     0x2b,0x0                                                                                        
001b5a   6a2c     CLRF      0x2c,0x0                                                                                        
001b5c   c02a     MOVFF     0x2a,0xfe6                                                                                      
001b5e   ffe6                                                                                                               
001b60   c02b     MOVFF     0x2b,0xfe6                                                                                      
001b62   ffe6                                                                                                               
001b64   c02c     MOVFF     0x2c,0xfe6                                                                                      
001b66   ffe6                                                                                                               
001b4a   0e02     MOVLW     0x2            	);                                                                              C:\Projects\UBW\FW\D\user\user.c
001b4c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001b4e   ffe6                                                                                                               
001b50   6ae6     CLRF      0xe6,0x0                                                                                        
001b68   ec29     CALL      0x4452,0x0                                                                                      
001b6a   f022                                                                                                               
001b6c   6e2d     MOVWF     0x2d,0x0                                                                                        
001b6e   0e05     MOVLW     0x5                                                                                             
001b70   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001b72   502d     MOVF      0x2d,0x0,0x0                                                                                    
001b74   0e03     MOVLW     0x3            }                                                                                C:\Projects\UBW\FW\D\user\user.c
001b76   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001b78   e202     BC        0x1b7e                                                                                          
001b7a   6ae1     CLRF      0xe1,0x0                                                                                        
001b7c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b7e   6ee1     MOVWF     0xe1,0x0                                                                                        
001b80   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b82   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001b84   ffd9                                                                                                               
001b86   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // PO is for Pin Output                                                          C:\Projects\UBW\FW\D\user\user.c
                                           // "PO,<port>,<pin>,<value><CR>"                                                 C:\Projects\UBW\FW\D\user\user.c
                                           // <port> is "A", "B", "C" and indicates the port                                C:\Projects\UBW\FW\D\user\user.c
                                           // <pin> is a number between 0 and 7 and indicates which pin to write out the value to C:\Projects\UBW\FW\D\user\user.c
                                           // <value> is "1" or "0" and indicates the state to change the pin to            C:\Projects\UBW\FW\D\user\user.c
001b88   cfd9     MOVFF     0xfd9,0xfe6    void parse_PO_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
001b8a   ffe6                                                                                                               
001b8c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001b8e   ffd9                                                                                                               
001b90   0e03     MOVLW     0x3                                                                                             
001b92   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char port;                                                             C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char pin;                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char value;                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
001b94   0e05     MOVLW     0x5            	port = extract_number (kUCASE_ASCII_CHAR);                                      C:\Projects\UBW\FW\D\user\user.c
001b96   6ee6     MOVWF     0xe6,0x0                                                                                        
001b98   dbe1     RCALL     0x235c                                                                                          
001b9a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b9c   501d     MOVF      0x1d,0x0,0x0                                                                                    
001b9e   6edf     MOVWF     0xdf,0x0                                                                                        
001ba0   0e01     MOVLW     0x1            	pin = extract_number (kUCHAR);                                                  C:\Projects\UBW\FW\D\user\user.c
001ba2   6ee6     MOVWF     0xe6,0x0                                                                                        
001ba4   dbdb     RCALL     0x235c                                                                                          
001ba6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001ba8   0e01     MOVLW     0x1                                                                                             
001baa   c01d     MOVFF     0x1d,0xfdb                                                                                      
001bac   ffdb                                                                                                               
001bae   0e01     MOVLW     0x1            	value = extract_number (kUCHAR);                                                C:\Projects\UBW\FW\D\user\user.c
001bb0   6ee6     MOVWF     0xe6,0x0                                                                                        
001bb2   dbd4     RCALL     0x235c                                                                                          
001bb4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001bb6   0e02     MOVLW     0x2                                                                                             
001bb8   c01d     MOVFF     0x1d,0xfdb                                                                                      
001bba   ffdb                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Bail if we got a conversion error                                            C:\Projects\UBW\FW\D\user\user.c
001bbc   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\Projects\UBW\FW\D\user\user.c
001bbe   e001     BZ        0x1bc2                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001bc0   d0b5     BRA       0x1d2c         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Limit check the parameters                                                   C:\Projects\UBW\FW\D\user\user.c
001bc2   0e02     MOVLW     0x2            	if (value > 1)                                                                  C:\Projects\UBW\FW\D\user\user.c
001bc4   50db     MOVF      0xdb,0x0,0x0                                                                                    
001bc6   0801     SUBLW     0x1                                                                                             
001bc8   e202     BC        0x1bce                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001bca   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
001bcc   d0af     BRA       0x1d2c         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001bce   0e01     MOVLW     0x1            	if (pin > 7)                                                                    C:\Projects\UBW\FW\D\user\user.c
001bd0   50db     MOVF      0xdb,0x0,0x0                                                                                    
001bd2   0807     SUBLW     0x7                                                                                             
001bd4   e202     BC        0x1bda                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001bd6   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
001bd8   d0a9     BRA       0x1d2c         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001bda   0e41     MOVLW     0x41           	if ('A' == port)                                                                C:\Projects\UBW\FW\D\user\user.c
001bdc   6e2a     MOVWF     0x2a,0x0                                                                                        
001bde   50df     MOVF      0xdf,0x0,0x0                                                                                    
001be0   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001be2   e11c     BNZ       0x1c1c                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001be4   0e02     MOVLW     0x2            		if (0 == value)                                                                C:\Projects\UBW\FW\D\user\user.c
001be6   50db     MOVF      0xdb,0x0,0x0                                                                                    
001be8   e10d     BNZ       0x1c04                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001bea   0e01     MOVLW     0x1            			bitclr (LATA, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001bec   6ef3     MOVWF     0xf3,0x0                                                                                        
001bee   0e01     MOVLW     0x1                                                                                             
001bf0   50db     MOVF      0xdb,0x0,0x0                                                                                    
001bf2   e004     BZ        0x1bfc                                                                                          
001bf4   90d8     BCF       0xd8,0x0,0x0                                                                                    
001bf6   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001bf8   06e8     DECF      0xe8,0x1,0x0                                                                                    
001bfa   e1fc     BNZ       0x1bf4                                                                                          
001bfc   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001bfe   1ce8     COMF      0xe8,0x0,0x0                                                                                    
001c00   1689     ANDWF     0x89,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
001c02   d00b     BRA       0x1c1a         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001c04   0e01     MOVLW     0x1            			bitset (LATA, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001c06   6ef3     MOVWF     0xf3,0x0                                                                                        
001c08   0e01     MOVLW     0x1                                                                                             
001c0a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c0c   e004     BZ        0x1c16                                                                                          
001c0e   90d8     BCF       0xd8,0x0,0x0                                                                                    
001c10   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001c12   06e8     DECF      0xe8,0x1,0x0                                                                                    
001c14   e1fc     BNZ       0x1c0e                                                                                          
001c16   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001c18   1289     IORWF     0x89,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001c1a   d086     BRA       0x1d28         	else if ('B' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001c1c   0e42     MOVLW     0x42                                                                                            
001c1e   6e2a     MOVWF     0x2a,0x0                                                                                        
001c20   50df     MOVF      0xdf,0x0,0x0                                                                                    
001c22   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001c24   e11c     BNZ       0x1c5e                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001c26   0e02     MOVLW     0x2            		if (0 == value)                                                                C:\Projects\UBW\FW\D\user\user.c
001c28   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c2a   e10d     BNZ       0x1c46                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001c2c   0e01     MOVLW     0x1            			bitclr (LATB, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001c2e   6ef3     MOVWF     0xf3,0x0                                                                                        
001c30   0e01     MOVLW     0x1                                                                                             
001c32   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c34   e004     BZ        0x1c3e                                                                                          
001c36   90d8     BCF       0xd8,0x0,0x0                                                                                    
001c38   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001c3a   06e8     DECF      0xe8,0x1,0x0                                                                                    
001c3c   e1fc     BNZ       0x1c36                                                                                          
001c3e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001c40   1ce8     COMF      0xe8,0x0,0x0                                                                                    
001c42   168a     ANDWF     0x8a,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
001c44   d00b     BRA       0x1c5c         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001c46   0e01     MOVLW     0x1            			bitset (LATB, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001c48   6ef3     MOVWF     0xf3,0x0                                                                                        
001c4a   0e01     MOVLW     0x1                                                                                             
001c4c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c4e   e004     BZ        0x1c58                                                                                          
001c50   90d8     BCF       0xd8,0x0,0x0                                                                                    
001c52   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001c54   06e8     DECF      0xe8,0x1,0x0                                                                                    
001c56   e1fc     BNZ       0x1c50                                                                                          
001c58   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001c5a   128a     IORWF     0x8a,0x1,0x0                                                                                    
                                           		}		                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001c5c   d065     BRA       0x1d28         	else if ('C' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001c5e   0e43     MOVLW     0x43                                                                                            
001c60   6e2a     MOVWF     0x2a,0x0                                                                                        
001c62   50df     MOVF      0xdf,0x0,0x0                                                                                    
001c64   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001c66   e11c     BNZ       0x1ca0                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001c68   0e02     MOVLW     0x2            		if (0 == value)                                                                C:\Projects\UBW\FW\D\user\user.c
001c6a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c6c   e10d     BNZ       0x1c88                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001c6e   0e01     MOVLW     0x1            			bitclr (LATC, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001c70   6ef3     MOVWF     0xf3,0x0                                                                                        
001c72   0e01     MOVLW     0x1                                                                                             
001c74   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c76   e004     BZ        0x1c80                                                                                          
001c78   90d8     BCF       0xd8,0x0,0x0                                                                                    
001c7a   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001c7c   06e8     DECF      0xe8,0x1,0x0                                                                                    
001c7e   e1fc     BNZ       0x1c78                                                                                          
001c80   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001c82   1ce8     COMF      0xe8,0x0,0x0                                                                                    
001c84   168b     ANDWF     0x8b,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
001c86   d00b     BRA       0x1c9e         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001c88   0e01     MOVLW     0x1            			bitset (LATC, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001c8a   6ef3     MOVWF     0xf3,0x0                                                                                        
001c8c   0e01     MOVLW     0x1                                                                                             
001c8e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c90   e004     BZ        0x1c9a                                                                                          
001c92   90d8     BCF       0xd8,0x0,0x0                                                                                    
001c94   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001c96   06e8     DECF      0xe8,0x1,0x0                                                                                    
001c98   e1fc     BNZ       0x1c92                                                                                          
001c9a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001c9c   128b     IORWF     0x8b,0x1,0x0                                                                                    
                                           		}		                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           #ifdef __18F4550                                                                 C:\Projects\UBW\FW\D\user\user.c
001c9e   d044     BRA       0x1d28         	else if ('D' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001ca0   0e44     MOVLW     0x44                                                                                            
001ca2   6e2a     MOVWF     0x2a,0x0                                                                                        
001ca4   50df     MOVF      0xdf,0x0,0x0                                                                                    
001ca6   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001ca8   e11c     BNZ       0x1ce2                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001caa   0e02     MOVLW     0x2            		if (0 == value)                                                                C:\Projects\UBW\FW\D\user\user.c
001cac   50db     MOVF      0xdb,0x0,0x0                                                                                    
001cae   e10d     BNZ       0x1cca                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001cb0   0e01     MOVLW     0x1            			bitclr (LATD, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001cb2   6ef3     MOVWF     0xf3,0x0                                                                                        
001cb4   0e01     MOVLW     0x1                                                                                             
001cb6   50db     MOVF      0xdb,0x0,0x0                                                                                    
001cb8   e004     BZ        0x1cc2                                                                                          
001cba   90d8     BCF       0xd8,0x0,0x0                                                                                    
001cbc   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001cbe   06e8     DECF      0xe8,0x1,0x0                                                                                    
001cc0   e1fc     BNZ       0x1cba                                                                                          
001cc2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001cc4   1ce8     COMF      0xe8,0x0,0x0                                                                                    
001cc6   168c     ANDWF     0x8c,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
001cc8   d00b     BRA       0x1ce0         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001cca   0e01     MOVLW     0x1            			bitset (LATD, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001ccc   6ef3     MOVWF     0xf3,0x0                                                                                        
001cce   0e01     MOVLW     0x1                                                                                             
001cd0   50db     MOVF      0xdb,0x0,0x0                                                                                    
001cd2   e004     BZ        0x1cdc                                                                                          
001cd4   90d8     BCF       0xd8,0x0,0x0                                                                                    
001cd6   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001cd8   06e8     DECF      0xe8,0x1,0x0                                                                                    
001cda   e1fc     BNZ       0x1cd4                                                                                          
001cdc   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001cde   128c     IORWF     0x8c,0x1,0x0                                                                                    
                                           		}		                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001ce0   d023     BRA       0x1d28         	else if ('E' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001ce2   0e45     MOVLW     0x45                                                                                            
001ce4   6e2a     MOVWF     0x2a,0x0                                                                                        
001ce6   50df     MOVF      0xdf,0x0,0x0                                                                                    
001ce8   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001cea   e11c     BNZ       0x1d24                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001cec   0e02     MOVLW     0x2            		if (0 == value)                                                                C:\Projects\UBW\FW\D\user\user.c
001cee   50db     MOVF      0xdb,0x0,0x0                                                                                    
001cf0   e10d     BNZ       0x1d0c                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001cf2   0e01     MOVLW     0x1            			bitclr (LATE, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001cf4   6ef3     MOVWF     0xf3,0x0                                                                                        
001cf6   0e01     MOVLW     0x1                                                                                             
001cf8   50db     MOVF      0xdb,0x0,0x0                                                                                    
001cfa   e004     BZ        0x1d04                                                                                          
001cfc   90d8     BCF       0xd8,0x0,0x0                                                                                    
001cfe   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001d00   06e8     DECF      0xe8,0x1,0x0                                                                                    
001d02   e1fc     BNZ       0x1cfc                                                                                          
001d04   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001d06   1ce8     COMF      0xe8,0x0,0x0                                                                                    
001d08   168d     ANDWF     0x8d,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
001d0a   d00b     BRA       0x1d22         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
001d0c   0e01     MOVLW     0x1            			bitset (LATE, pin);  	                                                        C:\Projects\UBW\FW\D\user\user.c
001d0e   6ef3     MOVWF     0xf3,0x0                                                                                        
001d10   0e01     MOVLW     0x1                                                                                             
001d12   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d14   e004     BZ        0x1d1e                                                                                          
001d16   90d8     BCF       0xd8,0x0,0x0                                                                                    
001d18   36f3     RLCF      0xf3,0x1,0x0                                                                                    
001d1a   06e8     DECF      0xe8,0x1,0x0                                                                                    
001d1c   e1fc     BNZ       0x1d16                                                                                          
001d1e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001d20   128d     IORWF     0x8d,0x1,0x0                                                                                    
                                           		}		                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           #endif                                                                           C:\Projects\UBW\FW\D\user\user.c
001d22   d002     BRA       0x1d28         	else                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001d24   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
001d26   d002     BRA       0x1d2c         		return;	                                                                       C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
001d28   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
001d2a   f009                                                                                                               
001d2c   0e03     MOVLW     0x3            }                                                                                C:\Projects\UBW\FW\D\user\user.c
001d2e   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001d30   e202     BC        0x1d36                                                                                          
001d32   6ae1     CLRF      0xe1,0x0                                                                                        
001d34   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d36   6ee1     MOVWF     0xe1,0x0                                                                                        
001d38   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d3a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001d3c   ffd9                                                                                                               
001d3e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // TX is for Serial Transmit                                                     C:\Projects\UBW\FW\D\user\user.c
                                           // "TX,<data_length>,<variable_length_data><CR>"                                 C:\Projects\UBW\FW\D\user\user.c
                                           // <data_length> is a count of the number of bytes in the <variable_length_data> field. C:\Projects\UBW\FW\D\user\user.c
                                           // It must never be larger than the number of bytes that are currently free in the C:\Projects\UBW\FW\D\user\user.c
                                           // software TX buffer or some data will get lost.                                C:\Projects\UBW\FW\D\user\user.c
                                           // <variable_length_data> are the bytes that you want the UBW to send. It will store them C:\Projects\UBW\FW\D\user\user.c
                                           // in its software TX buffer until there is time to send them out the TX pin.    C:\Projects\UBW\FW\D\user\user.c
                                           // If you send in "0" for a <data_length" (and thus nothing for <variable_length_data> C:\Projects\UBW\FW\D\user\user.c
                                           // then the UBW will send back a "TX,<free_buffer_space><CR>" packet,            C:\Projects\UBW\FW\D\user\user.c
                                           // where <free_buffer_space> is the number of bytes currently available in the   C:\Projects\UBW\FW\D\user\user.c
                                           // software TX buffer.                                                           C:\Projects\UBW\FW\D\user\user.c
                                           void parse_TX_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
001d40   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
001d42   f009                                                                                                               
001d44   0012     RETURN    0x0            }                                                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // RX is for Serial Receive                                                      C:\Projects\UBW\FW\D\user\user.c
                                           // "RX,<length_request><CR>"                                                     C:\Projects\UBW\FW\D\user\user.c
                                           // <length_request> is the maximum number of characters that you want the UBW to send C:\Projects\UBW\FW\D\user\user.c
                                           // back to you in the RX packet. If you use "0" for <length_request> then the UBW C:\Projects\UBW\FW\D\user\user.c
                                           // will just send you the current number of bytes in it's RX buffer, and if      C:\Projects\UBW\FW\D\user\user.c
                                           // there have been any buffer overruns since the last time a <length_request> of  C:\Projects\UBW\FW\D\user\user.c
                                           // "0" was received by the UBW.                                                  C:\Projects\UBW\FW\D\user\user.c
                                           // This command will send back a "RX,<length>,<variable_length_data><CR>"        C:\Projects\UBW\FW\D\user\user.c
                                           // or "RX,<buffer_fullness>,<status><CR>" packet depending upon if you send      C:\Projects\UBW\FW\D\user\user.c
                                           // "0" or something else for <length_request>                                    C:\Projects\UBW\FW\D\user\user.c
                                           // <length> in the returning RX packet is a count of the number of bytes         C:\Projects\UBW\FW\D\user\user.c
                                           // in the <variable_length_data> field. It will never be more than the           C:\Projects\UBW\FW\D\user\user.c
                                           // <length_request> you sent in.                                                 C:\Projects\UBW\FW\D\user\user.c
                                           // <variable_length_data> is the data (in raw form - byte for byte what was received -  C:\Projects\UBW\FW\D\user\user.c
                                           // i.e. not translated in any way, into ASCII values or anything else) that the UBW C:\Projects\UBW\FW\D\user\user.c
                                           // received. This may include <CR>s and NULLs among any other bytes, so make sure C:\Projects\UBW\FW\D\user\user.c
                                           // your PC application treates the RX packet coming back from the UBW in a speical way C:\Projects\UBW\FW\D\user\user.c
                                           // so as not to screw up normal packet processing if any special caracters are received. C:\Projects\UBW\FW\D\user\user.c
                                           // <buffer_fullness> is a valule between 0 and MAX_SERIAL_RX_BUFFER_SIZE that records C:\Projects\UBW\FW\D\user\user.c
                                           // the total number of bytes, at that point in time, that the UBW is holding, waiting C:\Projects\UBW\FW\D\user\user.c
                                           // to pass on to the PC.                                                         C:\Projects\UBW\FW\D\user\user.c
                                           // <status> has several bits.                                                    C:\Projects\UBW\FW\D\user\user.c
                                           //	Bit 0 = Software RX Buffer Overrun (1 means software RX buffer (on RX pin)    C:\Projects\UBW\FW\D\user\user.c
                                           //		has been overrun and data has been lost) This will happen if you don't       C:\Projects\UBW\FW\D\user\user.c
                                           //		read the data out of the UWB often enough and the data is coming in too fast. C:\Projects\UBW\FW\D\user\user.c
                                           //	Bit 1 = Software TX Buffer Overrun (1 means software TX buffer (on TX pin)    C:\Projects\UBW\FW\D\user\user.c
                                           //		as been overrun and data hs been lost. This will happen if you send too much C:\Projects\UBW\FW\D\user\user.c
                                           //		data to the UBW and you have the serial port set to a low baud rate.         C:\Projects\UBW\FW\D\user\user.c
                                           void parse_RX_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
001d46   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
001d48   f009                                                                                                               
001d4a   0012     RETURN    0x0            }                                                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // CX is for setting up serial port parameters                                   C:\Projects\UBW\FW\D\user\user.c
                                           // TBD                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           void parse_CX_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
001d4c   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
001d4e   f009                                                                                                               
001d50   0012     RETURN    0x0            }                                                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // RC is for outputting RC servo pulses on a pin                                 C:\Projects\UBW\FW\D\user\user.c
                                           // "RC,<port>,<pin>,<value><CR>"                                                 C:\Projects\UBW\FW\D\user\user.c
                                           // <port> is "A", "B", "C" and indicates the port                                C:\Projects\UBW\FW\D\user\user.c
                                           // <pin> is a number between 0 and 7 and indicates which pin to output the new value on C:\Projects\UBW\FW\D\user\user.c
                                           // <value> is an unsigned 16 bit number between 0 and 11890.                     C:\Projects\UBW\FW\D\user\user.c
                                           // If <value> is "0" then the RC output on that pin is disabled.                 C:\Projects\UBW\FW\D\user\user.c
                                           // Otherwise <value> = 1 means 1ms pulse, <value> = 11890 means 2ms pulse,       C:\Projects\UBW\FW\D\user\user.c
                                           // any value inbetween means proportional pulse values between those two         C:\Projects\UBW\FW\D\user\user.c
                                           // Note: The pin used for RC output must be set as an output, or not much will happen. C:\Projects\UBW\FW\D\user\user.c
                                           // The RC command will continue to send out pulses at the last set value on      C:\Projects\UBW\FW\D\user\user.c
                                           // each pin that has RC output with a repition rate of 1 pulse about every 19ms. C:\Projects\UBW\FW\D\user\user.c
                                           // If you have RC output enabled on a pin, outputting a digital value to that pin C:\Projects\UBW\FW\D\user\user.c
                                           // will be overwritten the next time the RC pulses. Make sure to turn off the RC C:\Projects\UBW\FW\D\user\user.c
                                           // output if you want to use the pin for something else.                         C:\Projects\UBW\FW\D\user\user.c
001d52   cfd9     MOVFF     0xfd9,0xfe6    void parse_RC_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
001d54   ffe6                                                                                                               
001d56   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001d58   ffd9                                                                                                               
001d5a   0e06     MOVLW     0x6                                                                                             
001d5c   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char port;                                                             C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char pin;                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned int value;                                                             C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned int orig_value;                                                        C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
001d5e   0e05     MOVLW     0x5            	port = extract_number (kUCASE_ASCII_CHAR);                                      C:\Projects\UBW\FW\D\user\user.c
001d60   6ee6     MOVWF     0xe6,0x0                                                                                        
001d62   dafc     RCALL     0x235c                                                                                          
001d64   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d66   501d     MOVF      0x1d,0x0,0x0                                                                                    
001d68   6edf     MOVWF     0xdf,0x0                                                                                        
001d6a   0e01     MOVLW     0x1            	pin = extract_number (kUCHAR);                                                  C:\Projects\UBW\FW\D\user\user.c
001d6c   6ee6     MOVWF     0xe6,0x0                                                                                        
001d6e   daf6     RCALL     0x235c                                                                                          
001d70   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d72   0e01     MOVLW     0x1                                                                                             
001d74   c01d     MOVFF     0x1d,0xfdb                                                                                      
001d76   ffdb                                                                                                               
001d78   0e03     MOVLW     0x3            	value = extract_number (kUINT);                                                 C:\Projects\UBW\FW\D\user\user.c
001d7a   6ee6     MOVWF     0xe6,0x0                                                                                        
001d7c   daef     RCALL     0x235c                                                                                          
001d7e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d80   0e02     MOVLW     0x2                                                                                             
001d82   c01d     MOVFF     0x1d,0xfdb                                                                                      
001d84   ffdb                                                                                                               
001d86   0e03     MOVLW     0x3                                                                                             
001d88   c01e     MOVFF     0x1e,0xfdb                                                                                      
001d8a   ffdb                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Bail if we got a conversion error                                            C:\Projects\UBW\FW\D\user\user.c
001d8c   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\Projects\UBW\FW\D\user\user.c
001d8e   e001     BZ        0x1d92                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001d90   d07f     BRA       0x1e90         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Max value user can input. (min is zero)                                      C:\Projects\UBW\FW\D\user\user.c
001d92   50d9     MOVF      0xd9,0x0,0x0   	if (value > 11890)                                                              C:\Projects\UBW\FW\D\user\user.c
001d94   0f02     ADDLW     0x2                                                                                             
001d96   6ee9     MOVWF     0xe9,0x0                                                                                        
001d98   cfda     MOVFF     0xfda,0xfea                                                                                     
001d9a   ffea                                                                                                               
001d9c   0e72     MOVLW     0x72                                                                                            
001d9e   80d8     BSF       0xd8,0x0,0x0                                                                                    
001da0   54ee     SUBFWB    0xee,0x0,0x0                                                                                    
001da2   0e2e     MOVLW     0x2e                                                                                            
001da4   54ed     SUBFWB    0xed,0x0,0x0                                                                                    
001da6   e202     BC        0x1dac                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001da8   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
001daa   d072     BRA       0x1e90         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
001dac   0e02     MOVLW     0x2            	orig_value = value;                                                             C:\Projects\UBW\FW\D\user\user.c
001dae   cfdb     MOVFF     0xfdb,0x1e                                                                                      
001db0   f01e                                                                                                               
001db2   0e03     MOVLW     0x3                                                                                             
001db4   cfdb     MOVFF     0xfdb,0x1f                                                                                      
001db6   f01f                                                                                                               
001db8   0e04     MOVLW     0x4                                                                                             
001dba   c01e     MOVFF     0x1e,0xfdb                                                                                      
001dbc   ffdb                                                                                                               
001dbe   0e05     MOVLW     0x5                                                                                             
001dc0   c01f     MOVFF     0x1f,0xfdb                                                                                      
001dc2   ffdb                                                                                                               
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// Now get Value in the form that TMR0 needs it                                 C:\Projects\UBW\FW\D\user\user.c
                                           	// TMR0 needs to get filled with values from 65490 (1ms) to 53600 (2ms)         C:\Projects\UBW\FW\D\user\user.c
001dc4   682d     SETF      0x2d,0x0       	value = (65535 - (value + 45));                                                 C:\Projects\UBW\FW\D\user\user.c
001dc6   682e     SETF      0x2e,0x0                                                                                        
001dc8   6a2f     CLRF      0x2f,0x0                                                                                        
001dca   0e2d     MOVLW     0x2d                                                                                            
001dcc   6ee7     MOVWF     0xe7,0x0                                                                                        
001dce   0e02     MOVLW     0x2                                                                                             
001dd0   cfdb     MOVFF     0xfdb,0x30                                                                                      
001dd2   f030                                                                                                               
001dd4   0e03     MOVLW     0x3                                                                                             
001dd6   cfdb     MOVFF     0xfdb,0x31                                                                                      
001dd8   f031                                                                                                               
001dda   50e7     MOVF      0xe7,0x0,0x0                                                                                    
001ddc   2630     ADDWF     0x30,0x1,0x0                                                                                    
001dde   0e00     MOVLW     0x0                                                                                             
001de0   2231     ADDWFC    0x31,0x1,0x0                                                                                    
001de2   6a32     CLRF      0x32,0x0                                                                                        
001de4   5030     MOVF      0x30,0x0,0x0                                                                                    
001de6   5c2d     SUBWF     0x2d,0x0,0x0                                                                                    
001de8   6e2a     MOVWF     0x2a,0x0                                                                                        
001dea   5031     MOVF      0x31,0x0,0x0                                                                                    
001dec   582e     SUBWFB    0x2e,0x0,0x0                                                                                    
001dee   6e2b     MOVWF     0x2b,0x0                                                                                        
001df0   5032     MOVF      0x32,0x0,0x0                                                                                    
001df2   582f     SUBWFB    0x2f,0x0,0x0                                                                                    
001df4   6e2c     MOVWF     0x2c,0x0                                                                                        
001df6   0e02     MOVLW     0x2                                                                                             
001df8   c02a     MOVFF     0x2a,0xfdb                                                                                      
001dfa   ffdb                                                                                                               
001dfc   0e03     MOVLW     0x3                                                                                             
001dfe   c02b     MOVFF     0x2b,0xfdb                                                                                      
001e00   ffdb                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
001e02   0e01     MOVLW     0x1            	if (pin > 7)                                                                    C:\Projects\UBW\FW\D\user\user.c
001e04   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e06   0807     SUBLW     0x7                                                                                             
001e08   e202     BC        0x1e0e                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001e0a   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
001e0c   d041     BRA       0x1e90         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001e0e   0e41     MOVLW     0x41           	if ('A' == port)                                                                C:\Projects\UBW\FW\D\user\user.c
001e10   6e2a     MOVWF     0x2a,0x0                                                                                        
001e12   50df     MOVF      0xdf,0x0,0x0                                                                                    
001e14   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001e16   e102     BNZ       0x1e1c                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001e18   6adf     CLRF      0xdf,0x0       		port = 0;                                                                      C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001e1a   d012     BRA       0x1e40         	else if ('B' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001e1c   0e42     MOVLW     0x42                                                                                            
001e1e   6e2a     MOVWF     0x2a,0x0                                                                                        
001e20   50df     MOVF      0xdf,0x0,0x0                                                                                    
001e22   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001e24   e103     BNZ       0x1e2c                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001e26   0e08     MOVLW     0x8            		port = 8;                                                                      C:\Projects\UBW\FW\D\user\user.c
001e28   6edf     MOVWF     0xdf,0x0                                                                                        
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001e2a   d00a     BRA       0x1e40         	else if ('C' == port)                                                           C:\Projects\UBW\FW\D\user\user.c
001e2c   0e43     MOVLW     0x43                                                                                            
001e2e   6e2a     MOVWF     0x2a,0x0                                                                                        
001e30   50df     MOVF      0xdf,0x0,0x0                                                                                    
001e32   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
001e34   e103     BNZ       0x1e3c                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001e36   0e10     MOVLW     0x10           		port = 16;                                                                     C:\Projects\UBW\FW\D\user\user.c
001e38   6edf     MOVWF     0xdf,0x0                                                                                        
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
001e3a   d002     BRA       0x1e40         	else                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001e3c   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
001e3e   d028     BRA       0x1e90         		return;	                                                                       C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Store the new RC time value                                                  C:\Projects\UBW\FW\D\user\user.c
001e40   0e01     MOVLW     0x1            	g_RC_value[pin + port] = value;                                                 C:\Projects\UBW\FW\D\user\user.c
001e42   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e44   24df     ADDWF     0xdf,0x0,0x0                                                                                    
001e46   6ee9     MOVWF     0xe9,0x0                                                                                        
001e48   6aea     CLRF      0xea,0x0                                                                                        
001e4a   90d8     BCF       0xd8,0x0,0x0                                                                                    
001e4c   36e9     RLCF      0xe9,0x1,0x0                                                                                    
001e4e   36ea     RLCF      0xea,0x1,0x0                                                                                    
001e50   0e69     MOVLW     0x69                                                                                            
001e52   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001e54   0e01     MOVLW     0x1                                                                                             
001e56   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001e58   0e02     MOVLW     0x2                                                                                             
001e5a   cfdb     MOVFF     0xfdb,0xfee                                                                                     
001e5c   ffee                                                                                                               
001e5e   0e03     MOVLW     0x3                                                                                             
001e60   cfdb     MOVFF     0xfdb,0xfed                                                                                     
001e62   ffed                                                                                                               
                                           	// Only set this state if we are off - if we are already running on             C:\Projects\UBW\FW\D\user\user.c
                                           	// this pin, then the new value will be picked up next time around (19ms)       C:\Projects\UBW\FW\D\user\user.c
001e64   0e01     MOVLW     0x1            	if (kOFF == g_RC_state[pin + port])                                             C:\Projects\UBW\FW\D\user\user.c
001e66   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e68   24df     ADDWF     0xdf,0x0,0x0                                                                                    
001e6a   6aea     CLRF      0xea,0x0                                                                                        
001e6c   0f51     ADDLW     0x51                                                                                            
001e6e   6ee9     MOVWF     0xe9,0x0                                                                                        
001e70   0e01     MOVLW     0x1                                                                                             
001e72   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001e74   04ef     DECF      0xef,0x0,0x0                                                                                    
001e76   e10a     BNZ       0x1e8c                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001e78   0e01     MOVLW     0x1            		g_RC_state[pin + port] = kWAITING;                                             C:\Projects\UBW\FW\D\user\user.c
001e7a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e7c   24df     ADDWF     0xdf,0x0,0x0                                                                                    
001e7e   6aea     CLRF      0xea,0x0                                                                                        
001e80   0f51     ADDLW     0x51                                                                                            
001e82   6ee9     MOVWF     0xe9,0x0                                                                                        
001e84   0e01     MOVLW     0x1                                                                                             
001e86   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001e88   0e02     MOVLW     0x2                                                                                             
001e8a   6eef     MOVWF     0xef,0x0                                                                                        
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
001e8c   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
001e8e   f009                                                                                                               
001e90   0e06     MOVLW     0x6            }                                                                                C:\Projects\UBW\FW\D\user\user.c
001e92   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001e94   e202     BC        0x1e9a                                                                                          
001e96   6ae1     CLRF      0xe1,0x0                                                                                        
001e98   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001e9a   6ee1     MOVWF     0xe1,0x0                                                                                        
001e9c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001e9e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001ea0   ffd9                                                                                                               
001ea2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // BC is for Bulk Configure                                                      C:\Projects\UBW\FW\D\user\user.c
                                           // BC,<port A init>,<waitmask>,<wait delay>,<strobemask>,<strobe delay><CR>      C:\Projects\UBW\FW\D\user\user.c
                                           // This command sets up the mask and strobe bits on port A for the               C:\Projects\UBW\FW\D\user\user.c
                                           // BO (Bulk Output) command below. Also suck in wait delay, strobe delay, etc.   C:\Projects\UBW\FW\D\user\user.c
001ea4   cfd9     MOVFF     0xfd9,0xfe6    void parse_BC_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
001ea6   ffe6                                                                                                               
001ea8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001eaa   ffd9                                                                                                               
001eac   0e05     MOVLW     0x5                                                                                             
001eae   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char BO_init;                                                          C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char BO_strobe_mask;                                                   C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char BO_wait_mask;                                                     C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char BO_wait_delay;                                                    C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char BO_strobe_delay;                                                  C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
001eb0   0e01     MOVLW     0x1            	BO_init = extract_number (kUCHAR);                                              C:\Projects\UBW\FW\D\user\user.c
001eb2   6ee6     MOVWF     0xe6,0x0                                                                                        
001eb4   da53     RCALL     0x235c                                                                                          
001eb6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001eb8   501d     MOVF      0x1d,0x0,0x0                                                                                    
001eba   6edf     MOVWF     0xdf,0x0                                                                                        
001ebc   0e01     MOVLW     0x1            	BO_wait_mask = extract_number (kUCHAR);                                         C:\Projects\UBW\FW\D\user\user.c
001ebe   6ee6     MOVWF     0xe6,0x0                                                                                        
001ec0   da4d     RCALL     0x235c                                                                                          
001ec2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001ec4   0e02     MOVLW     0x2                                                                                             
001ec6   c01d     MOVFF     0x1d,0xfdb                                                                                      
001ec8   ffdb                                                                                                               
001eca   0e01     MOVLW     0x1            	BO_wait_delay = extract_number (kUCHAR);                                        C:\Projects\UBW\FW\D\user\user.c
001ecc   6ee6     MOVWF     0xe6,0x0                                                                                        
001ece   da46     RCALL     0x235c                                                                                          
001ed0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001ed2   0e03     MOVLW     0x3                                                                                             
001ed4   c01d     MOVFF     0x1d,0xfdb                                                                                      
001ed6   ffdb                                                                                                               
001ed8   0e01     MOVLW     0x1            	BO_strobe_mask = extract_number (kUCHAR);                                       C:\Projects\UBW\FW\D\user\user.c
001eda   6ee6     MOVWF     0xe6,0x0                                                                                        
001edc   da3f     RCALL     0x235c                                                                                          
001ede   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001ee0   0e01     MOVLW     0x1                                                                                             
001ee2   c01d     MOVFF     0x1d,0xfdb                                                                                      
001ee4   ffdb                                                                                                               
001ee6   0e01     MOVLW     0x1            	BO_strobe_delay = extract_number (kUCHAR);                                      C:\Projects\UBW\FW\D\user\user.c
001ee8   6ee6     MOVWF     0xe6,0x0                                                                                        
001eea   da38     RCALL     0x235c                                                                                          
001eec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001eee   0e04     MOVLW     0x4                                                                                             
001ef0   c01d     MOVFF     0x1d,0xfdb                                                                                      
001ef2   ffdb                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Bail if we got a conversion error                                            C:\Projects\UBW\FW\D\user\user.c
001ef4   500d     MOVF      0xd,0x0,0x0    	if (error_byte)                                                                 C:\Projects\UBW\FW\D\user\user.c
001ef6   e001     BZ        0x1efa                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001ef8   d012     BRA       0x1f1e         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Copy over values to their gloabls                                            C:\Projects\UBW\FW\D\user\user.c
001efa   cfdf     MOVFF     0xfdf,0x1b4    	g_BO_init = BO_init;                                                            C:\Projects\UBW\FW\D\user\user.c
001efc   f1b4                                                                                                               
001efe   0e02     MOVLW     0x2            	g_BO_wait_mask = BO_wait_mask;                                                  C:\Projects\UBW\FW\D\user\user.c
001f00   cfdb     MOVFF     0xfdb,0x1b6                                                                                     
001f02   f1b6                                                                                                               
001f04   0e01     MOVLW     0x1            	g_BO_strobe_mask = BO_strobe_mask;                                              C:\Projects\UBW\FW\D\user\user.c
001f06   cfdb     MOVFF     0xfdb,0x1b5                                                                                     
001f08   f1b5                                                                                                               
001f0a   0e03     MOVLW     0x3            	g_BO_wait_delay = BO_wait_delay;                                                C:\Projects\UBW\FW\D\user\user.c
001f0c   cfdb     MOVFF     0xfdb,0x1b7                                                                                     
001f0e   f1b7                                                                                                               
001f10   0e04     MOVLW     0x4            	g_BO_strobe_delay = BO_strobe_delay;                                            C:\Projects\UBW\FW\D\user\user.c
001f12   cfdb     MOVFF     0xfdb,0x1b8                                                                                     
001f14   f1b8                                                                                                               
                                           	// And initalize Port A                                                         C:\Projects\UBW\FW\D\user\user.c
001f16   c1b4     MOVFF     0x1b4,0xf89    	LATA = g_BO_init;                                                               C:\Projects\UBW\FW\D\user\user.c
001f18   ff89                                                                                                               
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
001f1a   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
001f1c   f009                                                                                                               
001f1e   0e05     MOVLW     0x5            }                                                                                C:\Projects\UBW\FW\D\user\user.c
001f20   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001f22   e202     BC        0x1f28                                                                                          
001f24   6ae1     CLRF      0xe1,0x0                                                                                        
001f26   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001f28   6ee1     MOVWF     0xe1,0x0                                                                                        
001f2a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001f2c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001f2e   ffd9                                                                                                               
001f30   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Bulk Output (BO)                                                              C:\Projects\UBW\FW\D\user\user.c
                                           // BO,4AF2C124<CR>                                                               C:\Projects\UBW\FW\D\user\user.c
                                           // After the inital comma, pull in hex values and spit them out to port A        C:\Projects\UBW\FW\D\user\user.c
                                           // Note that the procedure here is as follows:                                   C:\Projects\UBW\FW\D\user\user.c
                                           //	1) Write new value to PortB                                                   C:\Projects\UBW\FW\D\user\user.c
                                           //	2) Assert <strobemask>                                                        C:\Projects\UBW\FW\D\user\user.c
                                           //	3) Wait for <strobdelay> (if not zero)                                        C:\Projects\UBW\FW\D\user\user.c
                                           //	4) Deassert <strobemask>                                                      C:\Projects\UBW\FW\D\user\user.c
                                           //	5) Wait for <waitmask> to be asserted                                         C:\Projects\UBW\FW\D\user\user.c
                                           //	6) Wait for <waitmask> to be deasserted                                       C:\Projects\UBW\FW\D\user\user.c
                                           //	7) If 5) or 6) takes longer than <waitdelay> then just move on to next byte   C:\Projects\UBW\FW\D\user\user.c
                                           //	Repeat for each byte                                                          C:\Projects\UBW\FW\D\user\user.c
001f32   cfd9     MOVFF     0xfd9,0xfe6    void parse_BO_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
001f34   ffe6                                                                                                               
001f36   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001f38   ffd9                                                                                                               
001f3a   0e04     MOVLW     0x4                                                                                             
001f3c   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char BO_data_byte;                                                     C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char new_port_A_value;                                                 C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char tmp;                                                              C:\Projects\UBW\FW\D\user\user.c
001f3e   0e03     MOVLW     0x3            	unsigned char wait_count = 0;                                                   C:\Projects\UBW\FW\D\user\user.c
001f40   6adb     CLRF      0xdb,0x0                                                                                        
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// Check for comma where ptr points                                             C:\Projects\UBW\FW\D\user\user.c
001f42   0101     MOVLB     0x1            	if (g_RX_buf[g_RX_buf_out] != ',')                                              C:\Projects\UBW\FW\D\user\user.c
001f44   51bc     MOVF      0xbc,0x0,0x1                                                                                    
001f46   6aea     CLRF      0xea,0x0                                                                                        
001f48   0f40     ADDLW     0x40                                                                                            
001f4a   6ee9     MOVWF     0xe9,0x0                                                                                        
001f4c   0e02     MOVLW     0x2                                                                                             
001f4e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001f50   50ef     MOVF      0xef,0x0,0x0                                                                                    
001f52   082c     SUBLW     0x2c                                                                                            
001f54   e01d     BZ        0x1f90                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
001f56   0101     MOVLB     0x1            		printf ((rom char *)"!5 Err: Need comma next, found: '%c'\r\n", g_RX_buf[g_RX_buf_out]); C:\Projects\UBW\FW\D\user\user.c
001f58   51bc     MOVF      0xbc,0x0,0x1                                                                                    
001f5a   6aea     CLRF      0xea,0x0                                                                                        
001f5c   0f40     ADDLW     0x40                                                                                            
001f5e   6ee9     MOVWF     0xe9,0x0                                                                                        
001f60   0e02     MOVLW     0x2                                                                                             
001f62   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001f64   50ef     MOVF      0xef,0x0,0x0                                                                                    
001f66   6ee6     MOVWF     0xe6,0x0                                                                                        
001f68   6ae6     CLRF      0xe6,0x0                                                                                        
001f6a   0eb2     MOVLW     0xb2                                                                                            
001f6c   6e2a     MOVWF     0x2a,0x0                                                                                        
001f6e   0e40     MOVLW     0x40                                                                                            
001f70   6e2b     MOVWF     0x2b,0x0                                                                                        
001f72   6a2c     CLRF      0x2c,0x0                                                                                        
001f74   c02a     MOVFF     0x2a,0xfe6                                                                                      
001f76   ffe6                                                                                                               
001f78   c02b     MOVFF     0x2b,0xfe6                                                                                      
001f7a   ffe6                                                                                                               
001f7c   c02c     MOVFF     0x2c,0xfe6                                                                                      
001f7e   ffe6                                                                                                               
001f80   ec29     CALL      0x4452,0x0                                                                                      
001f82   f022                                                                                                               
001f84   6e2d     MOVWF     0x2d,0x0                                                                                        
001f86   0e05     MOVLW     0x5                                                                                             
001f88   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001f8a   502d     MOVF      0x2d,0x0,0x0                                                                                    
001f8c   8a0d     BSF       0xd,0x5,0x0    		bitset (error_byte, kERROR_BYTE_PRINTED_ERROR);                                C:\Projects\UBW\FW\D\user\user.c
001f8e   d10e     BRA       0x21ac         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Move to the next character                                                   C:\Projects\UBW\FW\D\user\user.c
001f90   0101     MOVLB     0x1            	advance_RX_buf_out ();                                                          C:\Projects\UBW\FW\D\user\user.c
001f92   2bbc     INCF      0xbc,0x1,0x1                                                                                    
001f94   0e40     MOVLW     0x40                                                                                            
001f96   0101     MOVLB     0x1                                                                                             
001f98   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
001f9a   e102     BNZ       0x1fa0                                                                                          
001f9c   0101     MOVLB     0x1                                                                                             
001f9e   6bbc     CLRF      0xbc,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Make sure Port A is correct                                                  C:\Projects\UBW\FW\D\user\user.c
001fa0   c1b4     MOVFF     0x1b4,0xf89    	LATA = g_BO_init;                                                               C:\Projects\UBW\FW\D\user\user.c
001fa2   ff89                                                                                                               
001fa4   0101     MOVLB     0x1            	new_port_A_value = ((~LATA & g_BO_strobe_mask)) | (LATA & ~g_BO_strobe_mask);   C:\Projects\UBW\FW\D\user\user.c
001fa6   1db5     COMF      0xb5,0x0,0x1                                                                                    
001fa8   1489     ANDWF     0x89,0x0,0x0                                                                                    
001faa   6e2a     MOVWF     0x2a,0x0                                                                                        
001fac   1c89     COMF      0x89,0x0,0x0                                                                                    
001fae   0101     MOVLB     0x1                                                                                             
001fb0   15b5     ANDWF     0xb5,0x0,0x1                                                                                    
001fb2   102a     IORWF     0x2a,0x0,0x0                                                                                    
001fb4   6ee7     MOVWF     0xe7,0x0                                                                                        
001fb6   0e01     MOVLW     0x1                                                                                             
001fb8   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001fba   ffdb                                                                                                               
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
001fbc   0101     MOVLB     0x1            	while (g_RX_buf[g_RX_buf_out] != 13)                                            C:\Projects\UBW\FW\D\user\user.c
001fbe   51bc     MOVF      0xbc,0x0,0x1                                                                                    
001fc0   6aea     CLRF      0xea,0x0                                                                                        
001fc2   0f40     ADDLW     0x40                                                                                            
001fc4   6ee9     MOVWF     0xe9,0x0                                                                                        
001fc6   0e02     MOVLW     0x2                                                                                             
001fc8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001fca   50ef     MOVF      0xef,0x0,0x0                                                                                    
001fcc   080d     SUBLW     0xd                                                                                             
001fce   e101     BNZ       0x1fd2                                                                                          
001fd0   d0eb     BRA       0x21a8                                                                                          
0021a6   d70a     BRA       0x1fbc                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// Pull in a nibble from the input buffer                                      C:\Projects\UBW\FW\D\user\user.c
001fd2   0101     MOVLB     0x1            		tmp = toupper (g_RX_buf[g_RX_buf_out]);                                        C:\Projects\UBW\FW\D\user\user.c
001fd4   51bc     MOVF      0xbc,0x0,0x1                                                                                    
001fd6   6aea     CLRF      0xea,0x0                                                                                        
001fd8   0f40     ADDLW     0x40                                                                                            
001fda   6ee9     MOVWF     0xe9,0x0                                                                                        
001fdc   0e02     MOVLW     0x2                                                                                             
001fde   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001fe0   50ef     MOVF      0xef,0x0,0x0                                                                                    
001fe2   6ee6     MOVWF     0xe6,0x0                                                                                        
001fe4   6ae6     CLRF      0xe6,0x0                                                                                        
001fe6   ec22     CALL      0x4644,0x0                                                                                      
001fe8   f023                                                                                                               
001fea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001fec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001fee   0e02     MOVLW     0x2                                                                                             
001ff0   cff3     MOVFF     0xff3,0xfdb                                                                                     
001ff2   ffdb                                                                                                               
001ff4   0e30     MOVLW     0x30           		if (tmp >= '0' && tmp <= '9')                                                  C:\Projects\UBW\FW\D\user\user.c
001ff6   6ef3     MOVWF     0xf3,0x0                                                                                        
001ff8   0e02     MOVLW     0x2                                                                                             
001ffa   cfdb     MOVFF     0xfdb,0xff4                                                                                     
001ffc   fff4                                                                                                               
001ffe   50f3     MOVF      0xf3,0x0,0x0                                                                                    
002000   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
002002   e30f     BNC       0x2022                                                                                          
002004   0e02     MOVLW     0x2                                                                                             
002006   50db     MOVF      0xdb,0x0,0x0                                                                                    
002008   0839     SUBLW     0x39                                                                                            
00200a   e30b     BNC       0x2022                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
00200c   0e30     MOVLW     0x30           			tmp -= '0';	                                                                  C:\Projects\UBW\FW\D\user\user.c
00200e   6e2a     MOVWF     0x2a,0x0                                                                                        
002010   0e02     MOVLW     0x2                                                                                             
002012   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
002014   ffe7                                                                                                               
002016   502a     MOVF      0x2a,0x0,0x0                                                                                    
002018   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
00201a   0e02     MOVLW     0x2                                                                                             
00201c   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00201e   ffdb                                                                                                               
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
002020   d019     BRA       0x2054         		else if (tmp >= 'A' && tmp <= 'F')                                             C:\Projects\UBW\FW\D\user\user.c
002022   0e41     MOVLW     0x41                                                                                            
002024   6ef3     MOVWF     0xf3,0x0                                                                                        
002026   0e02     MOVLW     0x2                                                                                             
002028   cfdb     MOVFF     0xfdb,0xff4                                                                                     
00202a   fff4                                                                                                               
00202c   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00202e   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
002030   e30f     BNC       0x2050                                                                                          
002032   0e02     MOVLW     0x2                                                                                             
002034   50db     MOVF      0xdb,0x0,0x0                                                                                    
002036   0846     SUBLW     0x46                                                                                            
002038   e30b     BNC       0x2050                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
00203a   0e37     MOVLW     0x37           			tmp -= 55;                                                                    C:\Projects\UBW\FW\D\user\user.c
00203c   6e2a     MOVWF     0x2a,0x0                                                                                        
00203e   0e02     MOVLW     0x2                                                                                             
002040   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
002042   ffe7                                                                                                               
002044   502a     MOVF      0x2a,0x0,0x0                                                                                    
002046   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
002048   0e02     MOVLW     0x2                                                                                             
00204a   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00204c   ffdb                                                                                                               
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
00204e   d002     BRA       0x2054         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
002050   8c0d     BSF       0xd,0x6,0x0    			bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                     C:\Projects\UBW\FW\D\user\user.c
002052   d0ac     BRA       0x21ac         			return;                                                                       C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
002054   0e02     MOVLW     0x2            		BO_data_byte = tmp << 4;                                                       C:\Projects\UBW\FW\D\user\user.c
002056   38db     SWAPF     0xdb,0x0,0x0                                                                                    
002058   0bf0     ANDLW     0xf0                                                                                            
00205a   6edf     MOVWF     0xdf,0x0                                                                                        
00205c   0101     MOVLB     0x1            		advance_RX_buf_out ();                                                         C:\Projects\UBW\FW\D\user\user.c
00205e   2bbc     INCF      0xbc,0x1,0x1                                                                                    
002060   0e40     MOVLW     0x40                                                                                            
002062   0101     MOVLB     0x1                                                                                             
002064   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
002066   e102     BNZ       0x206c                                                                                          
002068   0101     MOVLB     0x1                                                                                             
00206a   6bbc     CLRF      0xbc,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		// Check for CR next                                                           C:\Projects\UBW\FW\D\user\user.c
00206c   0e0d     MOVLW     0xd            		if (kCR == g_RX_buf[g_RX_buf_out])                                             C:\Projects\UBW\FW\D\user\user.c
00206e   6e2a     MOVWF     0x2a,0x0                                                                                        
002070   0101     MOVLB     0x1                                                                                             
002072   51bc     MOVF      0xbc,0x0,0x1                                                                                    
002074   6aea     CLRF      0xea,0x0                                                                                        
002076   0f40     ADDLW     0x40                                                                                            
002078   6ee9     MOVWF     0xe9,0x0                                                                                        
00207a   0e02     MOVLW     0x2                                                                                             
00207c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00207e   50ef     MOVF      0xef,0x0,0x0                                                                                    
002080   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
002082   e102     BNZ       0x2088                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
002084   880d     BSF       0xd,0x4,0x0    			bitset (error_byte, kERROR_BYTE_MISSING_PARAMETER);                           C:\Projects\UBW\FW\D\user\user.c
002086   d092     BRA       0x21ac         			return;                                                                       C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
002088   0101     MOVLB     0x1            		tmp =  toupper (g_RX_buf[g_RX_buf_out]);                                       C:\Projects\UBW\FW\D\user\user.c
00208a   51bc     MOVF      0xbc,0x0,0x1                                                                                    
00208c   6aea     CLRF      0xea,0x0                                                                                        
00208e   0f40     ADDLW     0x40                                                                                            
002090   6ee9     MOVWF     0xe9,0x0                                                                                        
002092   0e02     MOVLW     0x2                                                                                             
002094   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002096   50ef     MOVF      0xef,0x0,0x0                                                                                    
002098   6ee6     MOVWF     0xe6,0x0                                                                                        
00209a   6ae6     CLRF      0xe6,0x0                                                                                        
00209c   ec22     CALL      0x4644,0x0                                                                                      
00209e   f023                                                                                                               
0020a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0020a2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0020a4   0e02     MOVLW     0x2                                                                                             
0020a6   cff3     MOVFF     0xff3,0xfdb                                                                                     
0020a8   ffdb                                                                                                               
0020aa   0e30     MOVLW     0x30           		if (tmp >= '0' && tmp <= '9')                                                  C:\Projects\UBW\FW\D\user\user.c
0020ac   6ef3     MOVWF     0xf3,0x0                                                                                        
0020ae   0e02     MOVLW     0x2                                                                                             
0020b0   cfdb     MOVFF     0xfdb,0xff4                                                                                     
0020b2   fff4                                                                                                               
0020b4   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0020b6   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
0020b8   e30f     BNC       0x20d8                                                                                          
0020ba   0e02     MOVLW     0x2                                                                                             
0020bc   50db     MOVF      0xdb,0x0,0x0                                                                                    
0020be   0839     SUBLW     0x39                                                                                            
0020c0   e30b     BNC       0x20d8                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0020c2   0e30     MOVLW     0x30           			tmp -= '0';	                                                                  C:\Projects\UBW\FW\D\user\user.c
0020c4   6e2a     MOVWF     0x2a,0x0                                                                                        
0020c6   0e02     MOVLW     0x2                                                                                             
0020c8   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
0020ca   ffe7                                                                                                               
0020cc   502a     MOVF      0x2a,0x0,0x0                                                                                    
0020ce   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
0020d0   0e02     MOVLW     0x2                                                                                             
0020d2   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0020d4   ffdb                                                                                                               
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
0020d6   d019     BRA       0x210a         		else if (tmp >= 'A' && tmp <= 'F')                                             C:\Projects\UBW\FW\D\user\user.c
0020d8   0e41     MOVLW     0x41                                                                                            
0020da   6ef3     MOVWF     0xf3,0x0                                                                                        
0020dc   0e02     MOVLW     0x2                                                                                             
0020de   cfdb     MOVFF     0xfdb,0xff4                                                                                     
0020e0   fff4                                                                                                               
0020e2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0020e4   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
0020e6   e30f     BNC       0x2106                                                                                          
0020e8   0e02     MOVLW     0x2                                                                                             
0020ea   50db     MOVF      0xdb,0x0,0x0                                                                                    
0020ec   0846     SUBLW     0x46                                                                                            
0020ee   e30b     BNC       0x2106                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0020f0   0e37     MOVLW     0x37           			tmp -= 55;                                                                    C:\Projects\UBW\FW\D\user\user.c
0020f2   6e2a     MOVWF     0x2a,0x0                                                                                        
0020f4   0e02     MOVLW     0x2                                                                                             
0020f6   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
0020f8   ffe7                                                                                                               
0020fa   502a     MOVF      0x2a,0x0,0x0                                                                                    
0020fc   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
0020fe   0e02     MOVLW     0x2                                                                                             
002100   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002102   ffdb                                                                                                               
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
002104   d002     BRA       0x210a         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
002106   8c0d     BSF       0xd,0x6,0x0    			bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                     C:\Projects\UBW\FW\D\user\user.c
002108   d051     BRA       0x21ac         			return;                                                                       C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
00210a   0e02     MOVLW     0x2            		BO_data_byte = BO_data_byte + tmp;                                             C:\Projects\UBW\FW\D\user\user.c
00210c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00210e   24df     ADDWF     0xdf,0x0,0x0                                                                                    
002110   6edf     MOVWF     0xdf,0x0                                                                                        
002112   0101     MOVLB     0x1            		advance_RX_buf_out ();                                                         C:\Projects\UBW\FW\D\user\user.c
002114   2bbc     INCF      0xbc,0x1,0x1                                                                                    
002116   0e40     MOVLW     0x40                                                                                            
002118   0101     MOVLB     0x1                                                                                             
00211a   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
00211c   e102     BNZ       0x2122                                                                                          
00211e   0101     MOVLB     0x1                                                                                             
002120   6bbc     CLRF      0xbc,0x1                                                                                        
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           		// Output the byte on Port B                                                   C:\Projects\UBW\FW\D\user\user.c
002122   50df     MOVF      0xdf,0x0,0x0   		LATB = BO_data_byte;                                                           C:\Projects\UBW\FW\D\user\user.c
002124   6e8a     MOVWF     0x8a,0x0                                                                                        
                                           		                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// And strobe the Port A bits that we're supposed to                           C:\Projects\UBW\FW\D\user\user.c
002126   0e01     MOVLW     0x1            		LATA = new_port_A_value;                                                       C:\Projects\UBW\FW\D\user\user.c
002128   50db     MOVF      0xdb,0x0,0x0                                                                                    
00212a   6e89     MOVWF     0x89,0x0                                                                                        
00212c   0101     MOVLB     0x1            		if (g_BO_strobe_delay)                                                         C:\Projects\UBW\FW\D\user\user.c
00212e   51b8     MOVF      0xb8,0x0,0x1                                                                                    
002130   e005     BZ        0x213c                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
002132   c1b8     MOVFF     0x1b8,0xfe6    			Delay10TCYx (g_BO_strobe_delay);                                              C:\Projects\UBW\FW\D\user\user.c
002134   ffe6                                                                                                               
002136   ecb3     CALL      0x4766,0x0                                                                                      
002138   f023                                                                                                               
00213a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
00213c   c1b4     MOVFF     0x1b4,0xf89    		LATA = g_BO_init;                                                              C:\Projects\UBW\FW\D\user\user.c
00213e   ff89                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
002140   0101     MOVLB     0x1            		if (g_BO_wait_delay)                                                           C:\Projects\UBW\FW\D\user\user.c
002142   51b7     MOVF      0xb7,0x0,0x1                                                                                    
002144   e030     BZ        0x21a6                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Now we spin on the wait bit specified in WaitMask                          C:\Projects\UBW\FW\D\user\user.c
                                           			// (Used for Busy Bits) We also have to wait here                             C:\Projects\UBW\FW\D\user\user.c
                                           			// for a maximum of g_BO_wait_delay, which is in 10 clock units               C:\Projects\UBW\FW\D\user\user.c
                                           			// First we wait for the wait mask to become asserted                         C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			// Set the wait counter to the number of delays we want                       C:\Projects\UBW\FW\D\user\user.c
002146   0e03     MOVLW     0x3            			wait_count = g_BO_wait_delay;                                                 C:\Projects\UBW\FW\D\user\user.c
002148   c1b7     MOVFF     0x1b7,0xfdb                                                                                     
00214a   ffdb                                                                                                               
002174   d7eb     BRA       0x214c         			while (                                                                       C:\Projects\UBW\FW\D\user\user.c
00214c   0101     MOVLB     0x1            				((g_BO_init & g_BO_wait_mask) == (PORTA & g_BO_wait_mask))                   C:\Projects\UBW\FW\D\user\user.c
00214e   51b4     MOVF      0xb4,0x0,0x1                                                                                    
002150   0101     MOVLB     0x1                                                                                             
002152   15b6     ANDWF     0xb6,0x0,0x1                                                                                    
002154   6e2a     MOVWF     0x2a,0x0                                                                                        
002156   0101     MOVLB     0x1                                                                                             
002158   51b6     MOVF      0xb6,0x0,0x1                                                                                    
00215a   1480     ANDWF     0x80,0x0,0x0                                                                                    
00215c   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
                                           				&&                                                                           C:\Projects\UBW\FW\D\user\user.c
002160   0e03     MOVLW     0x3            				(wait_count != 0)                                                            C:\Projects\UBW\FW\D\user\user.c
002162   50db     MOVF      0xdb,0x0,0x0                                                                                    
00215e   e10b     BNZ       0x2176         			)                                                                             C:\Projects\UBW\FW\D\user\user.c
002164   e008     BZ        0x2176                                                                                          
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
002166   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
002168   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
00216a   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
00216c   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
00216e   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
002170   0e03     MOVLW     0x3            				wait_count--;                                                                C:\Projects\UBW\FW\D\user\user.c
002172   06db     DECF      0xdb,0x1,0x0                                                                                    
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			// Set the wait counter to the number of delays we want                       C:\Projects\UBW\FW\D\user\user.c
002176   0e03     MOVLW     0x3            			wait_count = g_BO_wait_delay;                                                 C:\Projects\UBW\FW\D\user\user.c
002178   c1b7     MOVFF     0x1b7,0xfdb                                                                                     
00217a   ffdb                                                                                                               
                                           			// Then we wait for the wait mask to become de-asserted                       C:\Projects\UBW\FW\D\user\user.c
0021a4   d7eb     BRA       0x217c         			while (                                                                       C:\Projects\UBW\FW\D\user\user.c
00217c   0101     MOVLB     0x1            				((g_BO_init & g_BO_wait_mask) != (PORTA & g_BO_wait_mask))                   C:\Projects\UBW\FW\D\user\user.c
00217e   51b4     MOVF      0xb4,0x0,0x1                                                                                    
002180   0101     MOVLB     0x1                                                                                             
002182   15b6     ANDWF     0xb6,0x0,0x1                                                                                    
002184   6e2a     MOVWF     0x2a,0x0                                                                                        
002186   0101     MOVLB     0x1                                                                                             
002188   51b6     MOVF      0xb6,0x0,0x1                                                                                    
00218a   1480     ANDWF     0x80,0x0,0x0                                                                                    
00218c   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
                                           				&&                                                                           C:\Projects\UBW\FW\D\user\user.c
002190   0e03     MOVLW     0x3            				(wait_count != 0)                                                            C:\Projects\UBW\FW\D\user\user.c
002192   50db     MOVF      0xdb,0x0,0x0                                                                                    
00218e   e00b     BZ        0x21a6         			)                                                                             C:\Projects\UBW\FW\D\user\user.c
002194   e008     BZ        0x21a6                                                                                          
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
002196   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
002198   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
00219a   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
00219c   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
00219e   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
0021a0   0e03     MOVLW     0x3            				wait_count--;                                                                C:\Projects\UBW\FW\D\user\user.c
0021a2   06db     DECF      0xdb,0x1,0x0                                                                                    
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
0021a8   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
0021aa   f009                                                                                                               
0021ac   0e04     MOVLW     0x4            }                                                                                C:\Projects\UBW\FW\D\user\user.c
0021ae   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0021b0   e202     BC        0x21b6                                                                                          
0021b2   6ae1     CLRF      0xe1,0x0                                                                                        
0021b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0021b6   6ee1     MOVWF     0xe1,0x0                                                                                        
0021b8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0021ba   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0021bc   ffd9                                                                                                               
0021be   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Bulk Stream (BS) (he he, couldn't think of a better name)                     C:\Projects\UBW\FW\D\user\user.c
                                           // BS,<count>,<binary_data><CR>                                                  C:\Projects\UBW\FW\D\user\user.c
                                           // This command is extremely similar to the BO command                           C:\Projects\UBW\FW\D\user\user.c
                                           // except that instead of ASCII HEX values, it actually                          C:\Projects\UBW\FW\D\user\user.c
                                           // takes raw binary data.                                                        C:\Projects\UBW\FW\D\user\user.c
                                           // So in order for the UBW to know when the end of the stream                    C:\Projects\UBW\FW\D\user\user.c
                                           // is, we need to have a <count> of bytes.                                       C:\Projects\UBW\FW\D\user\user.c
                                           // <count> represents the number of bytes after the second comma                 C:\Projects\UBW\FW\D\user\user.c
                                           // that will be the actual binary data to be streamed out port B.                C:\Projects\UBW\FW\D\user\user.c
                                           // Then, <binary_data> must be exactly that length.                              C:\Projects\UBW\FW\D\user\user.c
                                           // <count> must be between 1 and 56 (currently - in the future                   C:\Projects\UBW\FW\D\user\user.c
                                           // it would be nice to extend the upper limit)                                   C:\Projects\UBW\FW\D\user\user.c
                                           // The UBW will pull in one byte at a time within the <binary_data>              C:\Projects\UBW\FW\D\user\user.c
                                           // section and output it to PORTB exactly as the BO command does.                C:\Projects\UBW\FW\D\user\user.c
                                           // It will do this for <count> bytes. It will then pull in another               C:\Projects\UBW\FW\D\user\user.c
                                           // byte (which must be a carrige return) and be done.                            C:\Projects\UBW\FW\D\user\user.c
                                           // The whole point of this command is to improve data throughput                 C:\Projects\UBW\FW\D\user\user.c
                                           // from the PC to the UBW. This form of data is also more efficient              C:\Projects\UBW\FW\D\user\user.c
                                           // for the UBW to process.                                                       C:\Projects\UBW\FW\D\user\user.c
0021c0   cfd9     MOVFF     0xfd9,0xfe6    void parse_BS_packet(void)                                                       C:\Projects\UBW\FW\D\user\user.c
0021c2   ffe6                                                                                                               
0021c4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0021c6   ffd9                                                                                                               
0021c8   0e05     MOVLW     0x5                                                                                             
0021ca   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char BO_data_byte;                                                     C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char new_port_A_value;                                                 C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char tmp;                                                              C:\Projects\UBW\FW\D\user\user.c
0021cc   0e03     MOVLW     0x3            	unsigned char wait_count = 0;                                                   C:\Projects\UBW\FW\D\user\user.c
0021ce   6adb     CLRF      0xdb,0x0                                                                                        
0021d0   0e04     MOVLW     0x4            	unsigned char byte_count = 0;	                                                  C:\Projects\UBW\FW\D\user\user.c
0021d2   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Get byte_count                                                               C:\Projects\UBW\FW\D\user\user.c
0021d4   0e01     MOVLW     0x1            	byte_count = extract_number (kUCHAR);                                           C:\Projects\UBW\FW\D\user\user.c
0021d6   6ee6     MOVWF     0xe6,0x0                                                                                        
0021d8   d8c1     RCALL     0x235c                                                                                          
0021da   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0021dc   0e04     MOVLW     0x4                                                                                             
0021de   c01d     MOVFF     0x1d,0xfdb                                                                                      
0021e0   ffdb                                                                                                               
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	// Limit check it                                                               C:\Projects\UBW\FW\D\user\user.c
0021e2   0e04     MOVLW     0x4            	if (0 == byte_count || byte_count > 56)                                         C:\Projects\UBW\FW\D\user\user.c
0021e4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0021e6   e004     BZ        0x21f0                                                                                          
0021e8   0e04     MOVLW     0x4                                                                                             
0021ea   50db     MOVF      0xdb,0x0,0x0                                                                                    
0021ec   0838     SUBLW     0x38                                                                                            
0021ee   e202     BC        0x21f4                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0021f0   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
0021f2   d098     BRA       0x2324         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Check for comma where ptr points                                             C:\Projects\UBW\FW\D\user\user.c
0021f4   0101     MOVLB     0x1            	if (g_RX_buf[g_RX_buf_out] != ',')                                              C:\Projects\UBW\FW\D\user\user.c
0021f6   51bc     MOVF      0xbc,0x0,0x1                                                                                    
0021f8   6aea     CLRF      0xea,0x0                                                                                        
0021fa   0f40     ADDLW     0x40                                                                                            
0021fc   6ee9     MOVWF     0xe9,0x0                                                                                        
0021fe   0e02     MOVLW     0x2                                                                                             
002200   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002202   50ef     MOVF      0xef,0x0,0x0                                                                                    
002204   082c     SUBLW     0x2c                                                                                            
002206   e01d     BZ        0x2242                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
002208   0101     MOVLB     0x1            		printf ((rom char *)"!5 Err: Need comma next, found: '%c'\r\n", g_RX_buf[g_RX_buf_out]); C:\Projects\UBW\FW\D\user\user.c
00220a   51bc     MOVF      0xbc,0x0,0x1                                                                                    
00220c   6aea     CLRF      0xea,0x0                                                                                        
00220e   0f40     ADDLW     0x40                                                                                            
002210   6ee9     MOVWF     0xe9,0x0                                                                                        
002212   0e02     MOVLW     0x2                                                                                             
002214   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002216   50ef     MOVF      0xef,0x0,0x0                                                                                    
002218   6ee6     MOVWF     0xe6,0x0                                                                                        
00221a   6ae6     CLRF      0xe6,0x0                                                                                        
00221c   0eb2     MOVLW     0xb2                                                                                            
00221e   6e2a     MOVWF     0x2a,0x0                                                                                        
002220   0e40     MOVLW     0x40                                                                                            
002222   6e2b     MOVWF     0x2b,0x0                                                                                        
002224   6a2c     CLRF      0x2c,0x0                                                                                        
002226   c02a     MOVFF     0x2a,0xfe6                                                                                      
002228   ffe6                                                                                                               
00222a   c02b     MOVFF     0x2b,0xfe6                                                                                      
00222c   ffe6                                                                                                               
00222e   c02c     MOVFF     0x2c,0xfe6                                                                                      
002230   ffe6                                                                                                               
002232   ec29     CALL      0x4452,0x0                                                                                      
002234   f022                                                                                                               
002236   6e2d     MOVWF     0x2d,0x0                                                                                        
002238   0e05     MOVLW     0x5                                                                                             
00223a   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00223c   502d     MOVF      0x2d,0x0,0x0                                                                                    
00223e   8a0d     BSF       0xd,0x5,0x0    		bitset (error_byte, kERROR_BYTE_PRINTED_ERROR);                                C:\Projects\UBW\FW\D\user\user.c
002240   d071     BRA       0x2324         		return;                                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Move to the next character                                                   C:\Projects\UBW\FW\D\user\user.c
002242   0101     MOVLB     0x1            	advance_RX_buf_out ();                                                          C:\Projects\UBW\FW\D\user\user.c
002244   2bbc     INCF      0xbc,0x1,0x1                                                                                    
002246   0e40     MOVLW     0x40                                                                                            
002248   0101     MOVLB     0x1                                                                                             
00224a   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
00224c   e102     BNZ       0x2252                                                                                          
00224e   0101     MOVLB     0x1                                                                                             
002250   6bbc     CLRF      0xbc,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Make sure Port A is correct                                                  C:\Projects\UBW\FW\D\user\user.c
002252   c1b4     MOVFF     0x1b4,0xf89    	LATA = g_BO_init;                                                               C:\Projects\UBW\FW\D\user\user.c
002254   ff89                                                                                                               
002256   0101     MOVLB     0x1            	new_port_A_value = ((~LATA & g_BO_strobe_mask)) | (LATA & ~g_BO_strobe_mask);   C:\Projects\UBW\FW\D\user\user.c
002258   1db5     COMF      0xb5,0x0,0x1                                                                                    
00225a   1489     ANDWF     0x89,0x0,0x0                                                                                    
00225c   6e2a     MOVWF     0x2a,0x0                                                                                        
00225e   1c89     COMF      0x89,0x0,0x0                                                                                    
002260   0101     MOVLB     0x1                                                                                             
002262   15b5     ANDWF     0xb5,0x0,0x1                                                                                    
002264   102a     IORWF     0x2a,0x0,0x0                                                                                    
002266   6ee7     MOVWF     0xe7,0x0                                                                                        
002268   0e01     MOVLW     0x1                                                                                             
00226a   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00226c   ffdb                                                                                                               
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
00226e   0e04     MOVLW     0x4            	while (byte_count != 0)                                                         C:\Projects\UBW\FW\D\user\user.c
002270   50db     MOVF      0xdb,0x0,0x0                                                                                    
002272   e056     BZ        0x2320                                                                                          
00231e   d7a7     BRA       0x226e                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// Pull in a single byte from input buffer                                     C:\Projects\UBW\FW\D\user\user.c
002274   0101     MOVLB     0x1            		BO_data_byte = g_RX_buf[g_RX_buf_out];                                         C:\Projects\UBW\FW\D\user\user.c
002276   51bc     MOVF      0xbc,0x0,0x1                                                                                    
002278   6aea     CLRF      0xea,0x0                                                                                        
00227a   0f40     ADDLW     0x40                                                                                            
00227c   6ee9     MOVWF     0xe9,0x0                                                                                        
00227e   0e02     MOVLW     0x2                                                                                             
002280   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002282   cfef     MOVFF     0xfef,0xfdf                                                                                     
002284   ffdf                                                                                                               
002286   0101     MOVLB     0x1            		advance_RX_buf_out ();                                                         C:\Projects\UBW\FW\D\user\user.c
002288   2bbc     INCF      0xbc,0x1,0x1                                                                                    
00228a   0e40     MOVLW     0x40                                                                                            
00228c   0101     MOVLB     0x1                                                                                             
00228e   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
002290   e102     BNZ       0x2296                                                                                          
002292   0101     MOVLB     0x1                                                                                             
002294   6bbc     CLRF      0xbc,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		// Count this byte                                                             C:\Projects\UBW\FW\D\user\user.c
002296   0e04     MOVLW     0x4            		byte_count--;                                                                  C:\Projects\UBW\FW\D\user\user.c
002298   06db     DECF      0xdb,0x1,0x0                                                                                    
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           		// Output the byte on Port B                                                   C:\Projects\UBW\FW\D\user\user.c
00229a   50df     MOVF      0xdf,0x0,0x0   		LATB = BO_data_byte;                                                           C:\Projects\UBW\FW\D\user\user.c
00229c   6e8a     MOVWF     0x8a,0x0                                                                                        
                                           		                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// And strobe the Port A bits that we're supposed to                           C:\Projects\UBW\FW\D\user\user.c
00229e   0e01     MOVLW     0x1            		LATA = new_port_A_value;                                                       C:\Projects\UBW\FW\D\user\user.c
0022a0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0022a2   6e89     MOVWF     0x89,0x0                                                                                        
0022a4   0101     MOVLB     0x1            		if (g_BO_strobe_delay)                                                         C:\Projects\UBW\FW\D\user\user.c
0022a6   51b8     MOVF      0xb8,0x0,0x1                                                                                    
0022a8   e005     BZ        0x22b4                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0022aa   c1b8     MOVFF     0x1b8,0xfe6    			Delay10TCYx (g_BO_strobe_delay);                                              C:\Projects\UBW\FW\D\user\user.c
0022ac   ffe6                                                                                                               
0022ae   ecb3     CALL      0x4766,0x0                                                                                      
0022b0   f023                                                                                                               
0022b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
0022b4   c1b4     MOVFF     0x1b4,0xf89    		LATA = g_BO_init;                                                              C:\Projects\UBW\FW\D\user\user.c
0022b6   ff89                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
0022b8   0101     MOVLB     0x1            		if (g_BO_wait_delay)                                                           C:\Projects\UBW\FW\D\user\user.c
0022ba   51b7     MOVF      0xb7,0x0,0x1                                                                                    
0022bc   e030     BZ        0x231e                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			// Now we spin on the wait bit specified in WaitMask                          C:\Projects\UBW\FW\D\user\user.c
                                           			// (Used for Busy Bits) We also have to wait here                             C:\Projects\UBW\FW\D\user\user.c
                                           			// for a maximum of g_BO_wait_delay, which is in 10 clock units               C:\Projects\UBW\FW\D\user\user.c
                                           			// First we wait for the wait mask to become asserted                         C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			// Set the wait counter to the number of delays we want                       C:\Projects\UBW\FW\D\user\user.c
0022be   0e03     MOVLW     0x3            			wait_count = g_BO_wait_delay;                                                 C:\Projects\UBW\FW\D\user\user.c
0022c0   c1b7     MOVFF     0x1b7,0xfdb                                                                                     
0022c2   ffdb                                                                                                               
0022ec   d7eb     BRA       0x22c4         			while (                                                                       C:\Projects\UBW\FW\D\user\user.c
0022c4   0101     MOVLB     0x1            				((g_BO_init & g_BO_wait_mask) == (PORTA & g_BO_wait_mask))                   C:\Projects\UBW\FW\D\user\user.c
0022c6   51b4     MOVF      0xb4,0x0,0x1                                                                                    
0022c8   0101     MOVLB     0x1                                                                                             
0022ca   15b6     ANDWF     0xb6,0x0,0x1                                                                                    
0022cc   6e2a     MOVWF     0x2a,0x0                                                                                        
0022ce   0101     MOVLB     0x1                                                                                             
0022d0   51b6     MOVF      0xb6,0x0,0x1                                                                                    
0022d2   1480     ANDWF     0x80,0x0,0x0                                                                                    
0022d4   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
                                           				&&                                                                           C:\Projects\UBW\FW\D\user\user.c
0022d8   0e03     MOVLW     0x3            				(wait_count != 0)                                                            C:\Projects\UBW\FW\D\user\user.c
0022da   50db     MOVF      0xdb,0x0,0x0                                                                                    
0022d6   e10b     BNZ       0x22ee         			)                                                                             C:\Projects\UBW\FW\D\user\user.c
0022dc   e008     BZ        0x22ee                                                                                          
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
0022de   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
0022e0   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
0022e2   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
0022e4   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
0022e6   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
0022e8   0e03     MOVLW     0x3            				wait_count--;                                                                C:\Projects\UBW\FW\D\user\user.c
0022ea   06db     DECF      0xdb,0x1,0x0                                                                                    
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			// Set the wait counter to the number of delays we want                       C:\Projects\UBW\FW\D\user\user.c
0022ee   0e03     MOVLW     0x3            			wait_count = g_BO_wait_delay;                                                 C:\Projects\UBW\FW\D\user\user.c
0022f0   c1b7     MOVFF     0x1b7,0xfdb                                                                                     
0022f2   ffdb                                                                                                               
                                           			// Then we wait for the wait mask to become de-asserted                       C:\Projects\UBW\FW\D\user\user.c
00231c   d7eb     BRA       0x22f4         			while (                                                                       C:\Projects\UBW\FW\D\user\user.c
0022f4   0101     MOVLB     0x1            				((g_BO_init & g_BO_wait_mask) != (PORTA & g_BO_wait_mask))                   C:\Projects\UBW\FW\D\user\user.c
0022f6   51b4     MOVF      0xb4,0x0,0x1                                                                                    
0022f8   0101     MOVLB     0x1                                                                                             
0022fa   15b6     ANDWF     0xb6,0x0,0x1                                                                                    
0022fc   6e2a     MOVWF     0x2a,0x0                                                                                        
0022fe   0101     MOVLB     0x1                                                                                             
002300   51b6     MOVF      0xb6,0x0,0x1                                                                                    
002302   1480     ANDWF     0x80,0x0,0x0                                                                                    
002304   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
                                           				&&                                                                           C:\Projects\UBW\FW\D\user\user.c
002308   0e03     MOVLW     0x3            				(wait_count != 0)                                                            C:\Projects\UBW\FW\D\user\user.c
00230a   50db     MOVF      0xdb,0x0,0x0                                                                                    
002306   e00b     BZ        0x231e         			)                                                                             C:\Projects\UBW\FW\D\user\user.c
00230c   e008     BZ        0x231e                                                                                          
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
00230e   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
002310   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
002312   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
002314   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
002316   0000     NOP                      				Delay1TCY ();                                                                C:\Projects\UBW\FW\D\user\user.c
002318   0e03     MOVLW     0x3            				wait_count--;                                                                C:\Projects\UBW\FW\D\user\user.c
00231a   06db     DECF      0xdb,0x1,0x0                                                                                    
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
002320   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
002322   f009                                                                                                               
002324   0e05     MOVLW     0x5            }                                                                                C:\Projects\UBW\FW\D\user\user.c
002326   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
002328   e202     BC        0x232e                                                                                          
00232a   6ae1     CLRF      0xe1,0x0                                                                                        
00232c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00232e   6ee1     MOVWF     0xe1,0x0                                                                                        
002330   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002332   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002334   ffd9                                                                                                               
002336   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // SS Send SPI                                                                   C:\Projects\UBW\FW\D\user\user.c
                                           void parse_SS_packet (void)                                                      C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
002338   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
00233a   f009                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
00233c   0012     RETURN    0x0            }	                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // RS Receive SPI                                                                C:\Projects\UBW\FW\D\user\user.c
                                           void parse_RS_packet (void)                                                      C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
00233e   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
002340   f009                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
002342   0012     RETURN    0x0            }	                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // CS Configure SPI                                                              C:\Projects\UBW\FW\D\user\user.c
                                           void parse_CS_packet (void)                                                      C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
002344   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
002346   f009                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
002348   0012     RETURN    0x0            }	                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // SI Send I2C                                                                   C:\Projects\UBW\FW\D\user\user.c
                                           void parse_SI_packet (void)                                                      C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
00234a   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
00234c   f009                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
00234e   0012     RETURN    0x0            }	                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // RI Receive I2C                                                                C:\Projects\UBW\FW\D\user\user.c
                                           void parse_RI_packet (void)                                                      C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
002350   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
002352   f009                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
002354   0012     RETURN    0x0            }	                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // CI Configure I2C                                                              C:\Projects\UBW\FW\D\user\user.c
                                           void parse_CI_packet (void)                                                      C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
002356   ecde     CALL      0x13bc,0x0     	print_ack ();                                                                   C:\Projects\UBW\FW\D\user\user.c
002358   f009                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
00235a   0012     RETURN    0x0            }	                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Look at the string pointed to by ptr                                          C:\Projects\UBW\FW\D\user\user.c
                                           // There should be a comma where ptr points to upon entry.                       C:\Projects\UBW\FW\D\user\user.c
                                           // If not, throw a comma error.                                                  C:\Projects\UBW\FW\D\user\user.c
                                           // If so, then look for up to three bytes after the                              C:\Projects\UBW\FW\D\user\user.c
                                           // comma for numbers, and put them all into one                                  C:\Projects\UBW\FW\D\user\user.c
                                           // byte (0-255). If the number is greater than 255, then                         C:\Projects\UBW\FW\D\user\user.c
                                           // thow a range error.                                                           C:\Projects\UBW\FW\D\user\user.c
                                           // Advance the pointer to the byte after the last number                         C:\Projects\UBW\FW\D\user\user.c
                                           // and return.                                                                   C:\Projects\UBW\FW\D\user\user.c
00235c   cfd9     MOVFF     0xfd9,0xfe6    signed short long extract_number(tExtractType type)                              C:\Projects\UBW\FW\D\user\user.c
00235e   ffe6                                                                                                               
002360   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002362   ffd9                                                                                                               
002364   0e04     MOVLW     0x4                                                                                             
002366   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	signed short long acc;                                                          C:\Projects\UBW\FW\D\user\user.c
002368   0e03     MOVLW     0x3            	unsigned char neg = FALSE;                                                      C:\Projects\UBW\FW\D\user\user.c
00236a   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Check to see if we're already at the end                                     C:\Projects\UBW\FW\D\user\user.c
00236c   0e0d     MOVLW     0xd            	if (kCR == g_RX_buf[g_RX_buf_out])                                              C:\Projects\UBW\FW\D\user\user.c
00236e   6e2a     MOVWF     0x2a,0x0                                                                                        
002370   0101     MOVLB     0x1                                                                                             
002372   51bc     MOVF      0xbc,0x0,0x1                                                                                    
002374   6aea     CLRF      0xea,0x0                                                                                        
002376   0f40     ADDLW     0x40                                                                                            
002378   6ee9     MOVWF     0xe9,0x0                                                                                        
00237a   0e02     MOVLW     0x2                                                                                             
00237c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00237e   50ef     MOVF      0xef,0x0,0x0                                                                                    
002380   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
002382   e105     BNZ       0x238e                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
002384   880d     BSF       0xd,0x4,0x0    		bitset (error_byte, kERROR_BYTE_MISSING_PARAMETER);                            C:\Projects\UBW\FW\D\user\user.c
002386   6a1d     CLRF      0x1d,0x0       		return (0);                                                                    C:\Projects\UBW\FW\D\user\user.c
002388   6a1e     CLRF      0x1e,0x0                                                                                        
00238a   6a1f     CLRF      0x1f,0x0                                                                                        
00238c   d193     BRA       0x26b4                                                                                          
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Check for comma where ptr points                                             C:\Projects\UBW\FW\D\user\user.c
00238e   0101     MOVLB     0x1            	if (g_RX_buf[g_RX_buf_out] != ',')                                              C:\Projects\UBW\FW\D\user\user.c
002390   51bc     MOVF      0xbc,0x0,0x1                                                                                    
002392   6aea     CLRF      0xea,0x0                                                                                        
002394   0f40     ADDLW     0x40                                                                                            
002396   6ee9     MOVWF     0xe9,0x0                                                                                        
002398   0e02     MOVLW     0x2                                                                                             
00239a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00239c   50ef     MOVF      0xef,0x0,0x0                                                                                    
00239e   082c     SUBLW     0x2c                                                                                            
0023a0   e020     BZ        0x23e2                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0023a2   0101     MOVLB     0x1            		printf ((rom char *)"!5 Err: Need comma next, found: '%c'\r\n", g_RX_buf[g_RX_buf_out]); C:\Projects\UBW\FW\D\user\user.c
0023a4   51bc     MOVF      0xbc,0x0,0x1                                                                                    
0023a6   6aea     CLRF      0xea,0x0                                                                                        
0023a8   0f40     ADDLW     0x40                                                                                            
0023aa   6ee9     MOVWF     0xe9,0x0                                                                                        
0023ac   0e02     MOVLW     0x2                                                                                             
0023ae   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0023b0   50ef     MOVF      0xef,0x0,0x0                                                                                    
0023b2   6ee6     MOVWF     0xe6,0x0                                                                                        
0023b4   6ae6     CLRF      0xe6,0x0                                                                                        
0023b6   0eb2     MOVLW     0xb2                                                                                            
0023b8   6e2a     MOVWF     0x2a,0x0                                                                                        
0023ba   0e40     MOVLW     0x40                                                                                            
0023bc   6e2b     MOVWF     0x2b,0x0                                                                                        
0023be   6a2c     CLRF      0x2c,0x0                                                                                        
0023c0   c02a     MOVFF     0x2a,0xfe6                                                                                      
0023c2   ffe6                                                                                                               
0023c4   c02b     MOVFF     0x2b,0xfe6                                                                                      
0023c6   ffe6                                                                                                               
0023c8   c02c     MOVFF     0x2c,0xfe6                                                                                      
0023ca   ffe6                                                                                                               
0023cc   ec29     CALL      0x4452,0x0                                                                                      
0023ce   f022                                                                                                               
0023d0   6e2d     MOVWF     0x2d,0x0                                                                                        
0023d2   0e05     MOVLW     0x5                                                                                             
0023d4   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0023d6   502d     MOVF      0x2d,0x0,0x0                                                                                    
0023d8   8a0d     BSF       0xd,0x5,0x0    		bitset (error_byte, kERROR_BYTE_PRINTED_ERROR);                                C:\Projects\UBW\FW\D\user\user.c
0023da   6a1d     CLRF      0x1d,0x0       		return (0);                                                                    C:\Projects\UBW\FW\D\user\user.c
0023dc   6a1e     CLRF      0x1e,0x0                                                                                        
0023de   6a1f     CLRF      0x1f,0x0                                                                                        
0023e0   d169     BRA       0x26b4                                                                                          
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Move to the next character                                                   C:\Projects\UBW\FW\D\user\user.c
0023e2   0101     MOVLB     0x1            	advance_RX_buf_out ();                                                          C:\Projects\UBW\FW\D\user\user.c
0023e4   2bbc     INCF      0xbc,0x1,0x1                                                                                    
0023e6   0e40     MOVLW     0x40                                                                                            
0023e8   0101     MOVLB     0x1                                                                                             
0023ea   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
0023ec   e102     BNZ       0x23f2                                                                                          
0023ee   0101     MOVLB     0x1                                                                                             
0023f0   6bbc     CLRF      0xbc,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Now check for a sign character if we're not looking for ASCII chars          C:\Projects\UBW\FW\D\user\user.c
                                           	if (                                                                            C:\Projects\UBW\FW\D\user\user.c
0023f2   0e2d     MOVLW     0x2d           		('-' == g_RX_buf[g_RX_buf_out])                                                C:\Projects\UBW\FW\D\user\user.c
0023f4   6e2a     MOVWF     0x2a,0x0                                                                                        
0023f6   0101     MOVLB     0x1                                                                                             
0023f8   51bc     MOVF      0xbc,0x0,0x1                                                                                    
0023fa   6aea     CLRF      0xea,0x0                                                                                        
0023fc   0f40     ADDLW     0x40                                                                                            
0023fe   6ee9     MOVWF     0xe9,0x0                                                                                        
002400   0e02     MOVLW     0x2                                                                                             
002402   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002404   50ef     MOVF      0xef,0x0,0x0                                                                                    
002406   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
                                           		&&                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		(                                                                              C:\Projects\UBW\FW\D\user\user.c
00240a   0e04     MOVLW     0x4            			(kASCII_CHAR != type)                                                         C:\Projects\UBW\FW\D\user\user.c
00240c   6e2b     MOVWF     0x2b,0x0                                                                                        
00240e   0efe     MOVLW     0xfe                                                                                            
002410   50db     MOVF      0xdb,0x0,0x0                                                                                    
002412   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
                                           			&&                                                                            C:\Projects\UBW\FW\D\user\user.c
002416   0e05     MOVLW     0x5            			(kUCASE_ASCII_CHAR != type)                                                   C:\Projects\UBW\FW\D\user\user.c
002418   6e2c     MOVWF     0x2c,0x0                                                                                        
00241a   0efe     MOVLW     0xfe                                                                                            
00241c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00241e   5c2c     SUBWF     0x2c,0x0,0x0                                                                                    
002414   e022     BZ        0x245a         		)                                                                              C:\Projects\UBW\FW\D\user\user.c
002420   e01c     BZ        0x245a                                                                                          
002408   e128     BNZ       0x245a         	)                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// It's an error if we see a negative sign on an unsigned value                C:\Projects\UBW\FW\D\user\user.c
                                           		if (                                                                           C:\Projects\UBW\FW\D\user\user.c
002422   0efe     MOVLW     0xfe           			(kUCHAR == type)                                                              C:\Projects\UBW\FW\D\user\user.c
002424   04db     DECF      0xdb,0x0,0x0                                                                                    
                                           			||                                                                            C:\Projects\UBW\FW\D\user\user.c
002428   0e03     MOVLW     0x3            			(kUINT == type)                                                               C:\Projects\UBW\FW\D\user\user.c
00242a   6e2a     MOVWF     0x2a,0x0                                                                                        
00242c   0efe     MOVLW     0xfe                                                                                            
00242e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002430   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
002426   e006     BZ        0x2434         		)                                                                              C:\Projects\UBW\FW\D\user\user.c
002432   e106     BNZ       0x2440                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
002434   8c0d     BSF       0xd,0x6,0x0    			bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                     C:\Projects\UBW\FW\D\user\user.c
002436   6a1d     CLRF      0x1d,0x0       			return (0);                                                                   C:\Projects\UBW\FW\D\user\user.c
002438   6a1e     CLRF      0x1e,0x0                                                                                        
00243a   6a1f     CLRF      0x1f,0x0                                                                                        
00243c   d13b     BRA       0x26b4                                                                                          
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
00243e   d00d     BRA       0x245a         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
002440   0e01     MOVLW     0x1            			neg = TRUE;                                                                   C:\Projects\UBW\FW\D\user\user.c
002442   6ef3     MOVWF     0xf3,0x0                                                                                        
002444   0e03     MOVLW     0x3                                                                                             
002446   cff3     MOVFF     0xff3,0xfdb                                                                                     
002448   ffdb                                                                                                               
                                           			// Move to the next character                                                 C:\Projects\UBW\FW\D\user\user.c
00244a   0101     MOVLB     0x1            			advance_RX_buf_out ();                                                        C:\Projects\UBW\FW\D\user\user.c
00244c   2bbc     INCF      0xbc,0x1,0x1                                                                                    
00244e   0e40     MOVLW     0x40                                                                                            
002450   0101     MOVLB     0x1                                                                                             
002452   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
002454   e102     BNZ       0x245a                                                                                          
002456   0101     MOVLB     0x1                                                                                             
002458   6bbc     CLRF      0xbc,0x1                                                                                        
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// If we need to get a digit, go do that                                        C:\Projects\UBW\FW\D\user\user.c
                                           	if (                                                                            C:\Projects\UBW\FW\D\user\user.c
00245a   0e04     MOVLW     0x4            		(kASCII_CHAR != type)                                                          C:\Projects\UBW\FW\D\user\user.c
00245c   6e2a     MOVWF     0x2a,0x0                                                                                        
00245e   0efe     MOVLW     0xfe                                                                                            
002460   50db     MOVF      0xdb,0x0,0x0                                                                                    
002462   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
                                           		&&                                                                             C:\Projects\UBW\FW\D\user\user.c
002466   0e05     MOVLW     0x5            		(kUCASE_ASCII_CHAR != type)                                                    C:\Projects\UBW\FW\D\user\user.c
002468   6e2b     MOVWF     0x2b,0x0                                                                                        
00246a   0efe     MOVLW     0xfe                                                                                            
00246c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00246e   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
002464   e011     BZ        0x2488         	)                                                                               C:\Projects\UBW\FW\D\user\user.c
002470   e00b     BZ        0x2488                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
002472   0e05     MOVLW     0x5            		extract_digit(&acc, 5);                                                        C:\Projects\UBW\FW\D\user\user.c
002474   6ee6     MOVWF     0xe6,0x0                                                                                        
002476   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
002478   ffe6                                                                                                               
00247a   cfda     MOVFF     0xfda,0xfe6                                                                                     
00247c   ffe6                                                                                                               
00247e   d924     RCALL     0x26c8                                                                                          
002480   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002482   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002484   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
002486   d03a     BRA       0x24fc         	else                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// Otherwise just copy the byte                                                C:\Projects\UBW\FW\D\user\user.c
002488   0101     MOVLB     0x1            		acc = g_RX_buf[g_RX_buf_out];                                                  C:\Projects\UBW\FW\D\user\user.c
00248a   51bc     MOVF      0xbc,0x0,0x1                                                                                    
00248c   6aea     CLRF      0xea,0x0                                                                                        
00248e   0f40     ADDLW     0x40                                                                                            
002490   6ee9     MOVWF     0xe9,0x0                                                                                        
002492   0e02     MOVLW     0x2                                                                                             
002494   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002496   cfef     MOVFF     0xfef,0x2a                                                                                      
002498   f02a                                                                                                               
00249a   6a2b     CLRF      0x2b,0x0                                                                                        
00249c   6a2c     CLRF      0x2c,0x0                                                                                        
00249e   c02a     MOVFF     0x2a,0xfdf                                                                                      
0024a0   ffdf                                                                                                               
0024a2   0e01     MOVLW     0x1                                                                                             
0024a4   c02b     MOVFF     0x2b,0xfdb                                                                                      
0024a6   ffdb                                                                                                               
0024a8   0e02     MOVLW     0x2                                                                                             
0024aa   c02c     MOVFF     0x2c,0xfdb                                                                                      
0024ac   ffdb                                                                                                               
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           		// Force uppercase if that's what type we have                                 C:\Projects\UBW\FW\D\user\user.c
0024ae   0e05     MOVLW     0x5            		if (kUCASE_ASCII_CHAR == type)                                                 C:\Projects\UBW\FW\D\user\user.c
0024b0   6e2a     MOVWF     0x2a,0x0                                                                                        
0024b2   0efe     MOVLW     0xfe                                                                                            
0024b4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0024b6   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
0024b8   e119     BNZ       0x24ec                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0024ba   0e00     MOVLW     0x0            			acc = toupper (acc);                                                          C:\Projects\UBW\FW\D\user\user.c
0024bc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0024be   ffe6                                                                                                               
0024c0   0e01     MOVLW     0x1                                                                                             
0024c2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0024c4   ffe6                                                                                                               
0024c6   ec22     CALL      0x4644,0x0                                                                                      
0024c8   f023                                                                                                               
0024ca   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0024cc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0024ce   cff3     MOVFF     0xff3,0x2a                                                                                      
0024d0   f02a                                                                                                               
0024d2   cff4     MOVFF     0xff4,0x2b                                                                                      
0024d4   f02b                                                                                                               
0024d6   6a2c     CLRF      0x2c,0x0                                                                                        
0024d8   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
0024da   682c     SETF      0x2c,0x0                                                                                        
0024dc   c02a     MOVFF     0x2a,0xfdf                                                                                      
0024de   ffdf                                                                                                               
0024e0   0e01     MOVLW     0x1                                                                                             
0024e2   c02b     MOVFF     0x2b,0xfdb                                                                                      
0024e4   ffdb                                                                                                               
0024e6   0e02     MOVLW     0x2                                                                                             
0024e8   c02c     MOVFF     0x2c,0xfdb                                                                                      
0024ea   ffdb                                                                                                               
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           		// Move to the next character                                                  C:\Projects\UBW\FW\D\user\user.c
0024ec   0101     MOVLB     0x1            		advance_RX_buf_out ();                                                         C:\Projects\UBW\FW\D\user\user.c
0024ee   2bbc     INCF      0xbc,0x1,0x1                                                                                    
0024f0   0e40     MOVLW     0x40                                                                                            
0024f2   0101     MOVLB     0x1                                                                                             
0024f4   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
0024f6   e102     BNZ       0x24fc                                                                                          
0024f8   0101     MOVLB     0x1                                                                                             
0024fa   6bbc     CLRF      0xbc,0x1                                                                                        
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Handle the negative sign                                                     C:\Projects\UBW\FW\D\user\user.c
0024fc   0e03     MOVLW     0x3            	if (neg)                                                                        C:\Projects\UBW\FW\D\user\user.c
0024fe   50db     MOVF      0xdb,0x0,0x0                                                                                    
002500   e021     BZ        0x2544                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
002502   cfdf     MOVFF     0xfdf,0x2a     		acc = -acc;                                                                    C:\Projects\UBW\FW\D\user\user.c
002504   f02a                                                                                                               
002506   0e01     MOVLW     0x1                                                                                             
002508   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00250a   f02b                                                                                                               
00250c   0e02     MOVLW     0x2                                                                                             
00250e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
002510   f02c                                                                                                               
002512   6822     SETF      0x22,0x0                                                                                        
002514   6823     SETF      0x23,0x0                                                                                        
002516   6824     SETF      0x24,0x0                                                                                        
002518   c02a     MOVFF     0x2a,0x1d                                                                                       
00251a   f01d                                                                                                               
00251c   c02b     MOVFF     0x2b,0x1e                                                                                       
00251e   f01e                                                                                                               
002520   c02c     MOVFF     0x2c,0x1f                                                                                       
002522   f01f                                                                                                               
002524   ecfd     CALL      0x41fa,0x0                                                                                      
002526   f020                                                                                                               
002528   c01a     MOVFF     0x1a,0x2a                                                                                       
00252a   f02a                                                                                                               
00252c   c01b     MOVFF     0x1b,0x2b                                                                                       
00252e   f02b                                                                                                               
002530   c01c     MOVFF     0x1c,0x2c                                                                                       
002532   f02c                                                                                                               
002534   c02a     MOVFF     0x2a,0xfdf                                                                                      
002536   ffdf                                                                                                               
002538   0e01     MOVLW     0x1                                                                                             
00253a   c02b     MOVFF     0x2b,0xfdb                                                                                      
00253c   ffdb                                                                                                               
00253e   0e02     MOVLW     0x2                                                                                             
002540   c02c     MOVFF     0x2c,0xfdb                                                                                      
002542   ffdb                                                                                                               
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	// Range check the new value                                                    C:\Projects\UBW\FW\D\user\user.c
                                           	if (                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           		(                                                                              C:\Projects\UBW\FW\D\user\user.c
002544   0efe     MOVLW     0xfe           			kCHAR == type                                                                 C:\Projects\UBW\FW\D\user\user.c
002546   50db     MOVF      0xdb,0x0,0x0                                                                                    
                                           			&&                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			(                                                                             C:\Projects\UBW\FW\D\user\user.c
00254a   cfdf     MOVFF     0xfdf,0x2a     				(acc > 127)                                                                  C:\Projects\UBW\FW\D\user\user.c
00254c   f02a                                                                                                               
00254e   0e01     MOVLW     0x1                                                                                             
002550   cfdb     MOVFF     0xfdb,0x2b                                                                                      
002552   f02b                                                                                                               
002554   0e02     MOVLW     0x2                                                                                             
002556   cfdb     MOVFF     0xfdb,0x2c                                                                                      
002558   f02c                                                                                                               
00255a   342c     RLCF      0x2c,0x0,0x0                                                                                    
00255c   0e00     MOVLW     0x0                                                                                             
00255e   182c     XORWF     0x2c,0x0,0x0                                                                                    
002560   e607     BN        0x2570                                                                                          
002562   80d8     BSF       0xd8,0x0,0x0                                                                                    
002564   0e7f     MOVLW     0x7f                                                                                            
002566   542a     SUBFWB    0x2a,0x0,0x0                                                                                    
002568   0e00     MOVLW     0x0                                                                                             
00256a   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
00256c   0e00     MOVLW     0x0                                                                                             
00256e   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
                                           				||                                                                           C:\Projects\UBW\FW\D\user\user.c
002574   cfd9     MOVFF     0xfd9,0xfe9    				(acc < -128)                                                                 C:\Projects\UBW\FW\D\user\user.c
002576   ffe9                                                                                                               
002578   cfda     MOVFF     0xfda,0xfea                                                                                     
00257a   ffea                                                                                                               
00257c   0e02     MOVLW     0x2                                                                                             
00257e   80d8     BSF       0xd8,0x0,0x0                                                                                    
002580   50eb     MOVF      0xeb,0x0,0x0                                                                                    
002582   0aff     XORLW     0xff                                                                                            
002584   e606     BN        0x2592                                                                                          
002586   0e80     MOVLW     0x80                                                                                            
002588   5cee     SUBWF     0xee,0x0,0x0                                                                                    
00258a   0eff     MOVLW     0xff                                                                                            
00258c   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
00258e   0eff     MOVLW     0xff                                                                                            
002590   58ef     SUBWFB    0xef,0x0,0x0                                                                                    
002570   e201     BC        0x2574         			)                                                                             C:\Projects\UBW\FW\D\user\user.c
002572   d08c     BRA       0x268c                                                                                          
002592   e201     BC        0x2596                                                                                          
002594   d07b     BRA       0x268c                                                                                          
002548   e126     BNZ       0x2596         		)                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		||                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		(                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           			kUCHAR == type                                                                C:\Projects\UBW\FW\D\user\user.c
002596   0efe     MOVLW     0xfe           			&&                                                                            C:\Projects\UBW\FW\D\user\user.c
002598   04db     DECF      0xdb,0x0,0x0                                                                                    
                                           			(                                                                             C:\Projects\UBW\FW\D\user\user.c
00259c   cfdf     MOVFF     0xfdf,0x2d     				(acc > 255)                                                                  C:\Projects\UBW\FW\D\user\user.c
00259e   f02d                                                                                                               
0025a0   0e01     MOVLW     0x1                                                                                             
0025a2   cfdb     MOVFF     0xfdb,0x2e                                                                                      
0025a4   f02e                                                                                                               
0025a6   0e02     MOVLW     0x2                                                                                             
0025a8   cfdb     MOVFF     0xfdb,0x2f                                                                                      
0025aa   f02f                                                                                                               
0025ac   342f     RLCF      0x2f,0x0,0x0                                                                                    
0025ae   0e00     MOVLW     0x0                                                                                             
0025b0   182f     XORWF     0x2f,0x0,0x0                                                                                    
0025b2   e607     BN        0x25c2                                                                                          
0025b4   80d8     BSF       0xd8,0x0,0x0                                                                                    
0025b6   0eff     MOVLW     0xff                                                                                            
0025b8   542d     SUBFWB    0x2d,0x0,0x0                                                                                    
0025ba   0e00     MOVLW     0x0                                                                                             
0025bc   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
0025be   0e00     MOVLW     0x0                                                                                             
0025c0   542f     SUBFWB    0x2f,0x0,0x0                                                                                    
                                           				||                                                                           C:\Projects\UBW\FW\D\user\user.c
0025c4   cfd9     MOVFF     0xfd9,0xfe9    				(acc < 0)                                                                    C:\Projects\UBW\FW\D\user\user.c
0025c6   ffe9                                                                                                               
0025c8   cfda     MOVFF     0xfda,0xfea                                                                                     
0025ca   ffea                                                                                                               
0025cc   0e02     MOVLW     0x2                                                                                             
0025ce   90d8     BCF       0xd8,0x0,0x0                                                                                    
0025d0   50eb     MOVF      0xeb,0x0,0x0                                                                                    
0025d2   0a00     XORLW     0x0                                                                                             
0025d4   e606     BN        0x25e2                                                                                          
0025d6   0e00     MOVLW     0x0                                                                                             
0025d8   5cee     SUBWF     0xee,0x0,0x0                                                                                    
0025da   0e00     MOVLW     0x0                                                                                             
0025dc   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
0025de   0e00     MOVLW     0x0                                                                                             
0025e0   58ef     SUBWFB    0xef,0x0,0x0                                                                                    
0025c2   e364     BNC       0x268c         			)                                                                             C:\Projects\UBW\FW\D\user\user.c
0025e2   e354     BNC       0x268c                                                                                          
00259a   e124     BNZ       0x25e4         		)                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		||                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		(                                                                              C:\Projects\UBW\FW\D\user\user.c
0025e4   0e02     MOVLW     0x2            			kINT == type                                                                  C:\Projects\UBW\FW\D\user\user.c
0025e6   6e30     MOVWF     0x30,0x0                                                                                        
0025e8   0efe     MOVLW     0xfe                                                                                            
0025ea   50db     MOVF      0xdb,0x0,0x0                                                                                    
0025ec   5c30     SUBWF     0x30,0x0,0x0   			&&                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			(                                                                             C:\Projects\UBW\FW\D\user\user.c
0025f0   cfdf     MOVFF     0xfdf,0x31     				(acc > 32767)                                                                C:\Projects\UBW\FW\D\user\user.c
0025f2   f031                                                                                                               
0025f4   0e01     MOVLW     0x1                                                                                             
0025f6   cfdb     MOVFF     0xfdb,0x32                                                                                      
0025f8   f032                                                                                                               
0025fa   0e02     MOVLW     0x2                                                                                             
0025fc   cfdb     MOVFF     0xfdb,0x33                                                                                      
0025fe   f033                                                                                                               
002600   3433     RLCF      0x33,0x0,0x0                                                                                    
002602   0e00     MOVLW     0x0                                                                                             
002604   1833     XORWF     0x33,0x0,0x0                                                                                    
002606   e607     BN        0x2616                                                                                          
002608   80d8     BSF       0xd8,0x0,0x0                                                                                    
00260a   0eff     MOVLW     0xff                                                                                            
00260c   5431     SUBFWB    0x31,0x0,0x0                                                                                    
00260e   0e7f     MOVLW     0x7f                                                                                            
002610   5432     SUBFWB    0x32,0x0,0x0                                                                                    
002612   0e00     MOVLW     0x0                                                                                             
002614   5433     SUBFWB    0x33,0x0,0x0                                                                                    
                                           				||                                                                           C:\Projects\UBW\FW\D\user\user.c
002618   cfd9     MOVFF     0xfd9,0xfe9    				(acc < -32768)                                                               C:\Projects\UBW\FW\D\user\user.c
00261a   ffe9                                                                                                               
00261c   cfda     MOVFF     0xfda,0xfea                                                                                     
00261e   ffea                                                                                                               
002620   0e02     MOVLW     0x2                                                                                             
002622   80d8     BSF       0xd8,0x0,0x0                                                                                    
002624   50eb     MOVF      0xeb,0x0,0x0                                                                                    
002626   0aff     XORLW     0xff                                                                                            
002628   e606     BN        0x2636                                                                                          
00262a   0e00     MOVLW     0x0                                                                                             
00262c   5cee     SUBWF     0xee,0x0,0x0                                                                                    
00262e   0e80     MOVLW     0x80                                                                                            
002630   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
002632   0eff     MOVLW     0xff                                                                                            
002634   58ef     SUBWFB    0xef,0x0,0x0                                                                                    
002616   e33a     BNC       0x268c         			)                                                                             C:\Projects\UBW\FW\D\user\user.c
002636   e32a     BNC       0x268c                                                                                          
0025ee   e124     BNZ       0x2638         		)                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           		||                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		(                                                                              C:\Projects\UBW\FW\D\user\user.c
002638   0e03     MOVLW     0x3            			kUINT == type                                                                 C:\Projects\UBW\FW\D\user\user.c
00263a   6e34     MOVWF     0x34,0x0                                                                                        
00263c   0efe     MOVLW     0xfe                                                                                            
00263e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002640   5c34     SUBWF     0x34,0x0,0x0   			&&                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           			(                                                                             C:\Projects\UBW\FW\D\user\user.c
002644   cfdf     MOVFF     0xfdf,0x35     				(acc > 65535)                                                                C:\Projects\UBW\FW\D\user\user.c
002646   f035                                                                                                               
002648   0e01     MOVLW     0x1                                                                                             
00264a   cfdb     MOVFF     0xfdb,0x36                                                                                      
00264c   f036                                                                                                               
00264e   0e02     MOVLW     0x2                                                                                             
002650   cfdb     MOVFF     0xfdb,0x37                                                                                      
002652   f037                                                                                                               
002654   3437     RLCF      0x37,0x0,0x0                                                                                    
002656   0e00     MOVLW     0x0                                                                                             
002658   1837     XORWF     0x37,0x0,0x0                                                                                    
00265a   e607     BN        0x266a                                                                                          
00265c   80d8     BSF       0xd8,0x0,0x0                                                                                    
00265e   0eff     MOVLW     0xff                                                                                            
002660   5435     SUBFWB    0x35,0x0,0x0                                                                                    
002662   0eff     MOVLW     0xff                                                                                            
002664   5436     SUBFWB    0x36,0x0,0x0                                                                                    
002666   0e00     MOVLW     0x0                                                                                             
002668   5437     SUBFWB    0x37,0x0,0x0                                                                                    
                                           				||                                                                           C:\Projects\UBW\FW\D\user\user.c
00266c   cfd9     MOVFF     0xfd9,0xfe9    				(acc < 0)                                                                    C:\Projects\UBW\FW\D\user\user.c
00266e   ffe9                                                                                                               
002670   cfda     MOVFF     0xfda,0xfea                                                                                     
002672   ffea                                                                                                               
002674   0e02     MOVLW     0x2                                                                                             
002676   90d8     BCF       0xd8,0x0,0x0                                                                                    
002678   50eb     MOVF      0xeb,0x0,0x0                                                                                    
00267a   0a00     XORLW     0x0                                                                                             
00267c   e606     BN        0x268a                                                                                          
00267e   0e00     MOVLW     0x0                                                                                             
002680   5cee     SUBWF     0xee,0x0,0x0                                                                                    
002682   0e00     MOVLW     0x0                                                                                             
002684   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
002686   0e00     MOVLW     0x0                                                                                             
002688   58ef     SUBWFB    0xef,0x0,0x0                                                                                    
00266a   e310     BNC       0x268c         			)                                                                             C:\Projects\UBW\FW\D\user\user.c
00268a   e205     BC        0x2696                                                                                          
002642   e129     BNZ       0x2696         		)                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	)                                                                               C:\Projects\UBW\FW\D\user\user.c
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
00268c   8c0d     BSF       0xd,0x6,0x0    		bitset (error_byte, kERROR_BYTE_PARAMATER_OUTSIDE_LIMIT);                      C:\Projects\UBW\FW\D\user\user.c
00268e   6a1d     CLRF      0x1d,0x0       		return (0);                                                                    C:\Projects\UBW\FW\D\user\user.c
002690   6a1e     CLRF      0x1e,0x0                                                                                        
002692   6a1f     CLRF      0x1f,0x0                                                                                        
002694   d00f     BRA       0x26b4                                                                                          
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
002696   cfdf     MOVFF     0xfdf,0x2a     	return(acc);	                                                                   C:\Projects\UBW\FW\D\user\user.c
002698   f02a                                                                                                               
00269a   0e01     MOVLW     0x1                                                                                             
00269c   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00269e   f02b                                                                                                               
0026a0   0e02     MOVLW     0x2                                                                                             
0026a2   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0026a4   f02c                                                                                                               
0026a6   c02a     MOVFF     0x2a,0x1d                                                                                       
0026a8   f01d                                                                                                               
0026aa   c02b     MOVFF     0x2b,0x1e                                                                                       
0026ac   f01e                                                                                                               
0026ae   c02c     MOVFF     0x2c,0x1f                                                                                       
0026b0   f01f                                                                                                               
0026b2   d000     BRA       0x26b4                                                                                          
0026b4   0e04     MOVLW     0x4            }                                                                                C:\Projects\UBW\FW\D\user\user.c
0026b6   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0026b8   e202     BC        0x26be                                                                                          
0026ba   6ae1     CLRF      0xe1,0x0                                                                                        
0026bc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0026be   6ee1     MOVWF     0xe1,0x0                                                                                        
0026c0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0026c2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0026c4   ffd9                                                                                                               
0026c6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // Loop 'digits' number of times, looking at the                                 C:\Projects\UBW\FW\D\user\user.c
                                           // byte in input_buffer index *ptr, and if it is                                 C:\Projects\UBW\FW\D\user\user.c
                                           // a digit, adding it to acc. Take care of                                       C:\Projects\UBW\FW\D\user\user.c
                                           // powers of ten as well. If you hit a non-numerical                             C:\Projects\UBW\FW\D\user\user.c
                                           // char, then return FALSE, otherwise return TRUE.                               C:\Projects\UBW\FW\D\user\user.c
                                           // Store result as you go in *acc.                                               C:\Projects\UBW\FW\D\user\user.c
0026c8   cfd9     MOVFF     0xfd9,0xfe6    signed char extract_digit(signed short long * acc,	unsigned char digits)         C:\Projects\UBW\FW\D\user\user.c
0026ca   ffe6                                                                                                               
0026cc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0026ce   ffd9                                                                                                               
0026d0   0e02     MOVLW     0x2                                                                                             
0026d2   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char val;                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	unsigned char digit_cnt;                                                        C:\Projects\UBW\FW\D\user\user.c
                                           	                                                                                C:\Projects\UBW\FW\D\user\user.c
0026d4   0efd     MOVLW     0xfd           	*acc = 0;                                                                       C:\Projects\UBW\FW\D\user\user.c
0026d6   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0026d8   ffe9                                                                                                               
0026da   0efe     MOVLW     0xfe                                                                                            
0026dc   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0026de   ffea                                                                                                               
0026e0   6aee     CLRF      0xee,0x0                                                                                        
0026e2   6aee     CLRF      0xee,0x0                                                                                        
0026e4   6aee     CLRF      0xee,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
0026e6   0e01     MOVLW     0x1            	for (digit_cnt = 0; digit_cnt < digits; digit_cnt++)                            C:\Projects\UBW\FW\D\user\user.c
0026e8   6adb     CLRF      0xdb,0x0                                                                                        
0026ea   0efc     MOVLW     0xfc                                                                                            
0026ec   50db     MOVF      0xdb,0x0,0x0                                                                                    
0026ee   6ef3     MOVWF     0xf3,0x0                                                                                        
0026f0   0e01     MOVLW     0x1                                                                                             
0026f2   cfdb     MOVFF     0xfdb,0xff4                                                                                     
0026f4   fff4                                                                                                               
0026f6   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0026f8   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
0026fa   e255     BC        0x27a6                                                                                          
0027a0   0e01     MOVLW     0x1                                                                                             
0027a2   2adb     INCF      0xdb,0x1,0x0                                                                                    
0027a4   d7a2     BRA       0x26ea                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0026fc   0101     MOVLB     0x1            		val = g_RX_buf[g_RX_buf_out];                                                  C:\Projects\UBW\FW\D\user\user.c
0026fe   51bc     MOVF      0xbc,0x0,0x1                                                                                    
002700   6aea     CLRF      0xea,0x0                                                                                        
002702   0f40     ADDLW     0x40                                                                                            
002704   6ee9     MOVWF     0xe9,0x0                                                                                        
002706   0e02     MOVLW     0x2                                                                                             
002708   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00270a   cfef     MOVFF     0xfef,0xfdf                                                                                     
00270c   ffdf                                                                                                               
00270e   0e30     MOVLW     0x30           		if ((val >= 48) && (val <= 57))                                                C:\Projects\UBW\FW\D\user\user.c
002710   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002712   e344     BNC       0x279c                                                                                          
002714   50df     MOVF      0xdf,0x0,0x0                                                                                    
002716   0839     SUBLW     0x39                                                                                            
002718   e341     BNC       0x279c                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
00271a   0efd     MOVLW     0xfd           			*acc = (*acc * 10) + (val - 48);                                              C:\Projects\UBW\FW\D\user\user.c
00271c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00271e   ffe9                                                                                                               
002720   0efe     MOVLW     0xfe                                                                                            
002722   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002724   ffea                                                                                                               
002726   cfee     MOVFF     0xfee,0x2d                                                                                      
002728   f02d                                                                                                               
00272a   cfee     MOVFF     0xfee,0x2e                                                                                      
00272c   f02e                                                                                                               
00272e   cfef     MOVFF     0xfef,0x2f                                                                                      
002730   f02f                                                                                                               
002732   0e0a     MOVLW     0xa                                                                                             
002734   6e22     MOVWF     0x22,0x0                                                                                        
002736   6a23     CLRF      0x23,0x0                                                                                        
002738   6a24     CLRF      0x24,0x0                                                                                        
00273a   c02d     MOVFF     0x2d,0x1d                                                                                       
00273c   f01d                                                                                                               
00273e   c02e     MOVFF     0x2e,0x1e                                                                                       
002740   f01e                                                                                                               
002742   c02f     MOVFF     0x2f,0x1f                                                                                       
002744   f01f                                                                                                               
002746   ecfd     CALL      0x41fa,0x0                                                                                      
002748   f020                                                                                                               
00274a   c01a     MOVFF     0x1a,0x2d                                                                                       
00274c   f02d                                                                                                               
00274e   c01b     MOVFF     0x1b,0x2e                                                                                       
002750   f02e                                                                                                               
002752   c01c     MOVFF     0x1c,0x2f                                                                                       
002754   f02f                                                                                                               
002756   0e30     MOVLW     0x30                                                                                            
002758   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00275a   6e30     MOVWF     0x30,0x0                                                                                        
00275c   6a31     CLRF      0x31,0x0                                                                                        
00275e   6a32     CLRF      0x32,0x0                                                                                        
002760   502d     MOVF      0x2d,0x0,0x0                                                                                    
002762   2430     ADDWF     0x30,0x0,0x0                                                                                    
002764   6e2a     MOVWF     0x2a,0x0                                                                                        
002766   502e     MOVF      0x2e,0x0,0x0                                                                                    
002768   2031     ADDWFC    0x31,0x0,0x0                                                                                    
00276a   6e2b     MOVWF     0x2b,0x0                                                                                        
00276c   502f     MOVF      0x2f,0x0,0x0                                                                                    
00276e   2032     ADDWFC    0x32,0x0,0x0                                                                                    
002770   6e2c     MOVWF     0x2c,0x0                                                                                        
002772   0efd     MOVLW     0xfd                                                                                            
002774   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002776   ffe9                                                                                                               
002778   0efe     MOVLW     0xfe                                                                                            
00277a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00277c   ffea                                                                                                               
00277e   c02a     MOVFF     0x2a,0xfee                                                                                      
002780   ffee                                                                                                               
002782   c02b     MOVFF     0x2b,0xfee                                                                                      
002784   ffee                                                                                                               
002786   c02c     MOVFF     0x2c,0xfee                                                                                      
002788   ffee                                                                                                               
                                           			// Move to the next character                                                 C:\Projects\UBW\FW\D\user\user.c
00278a   0101     MOVLB     0x1            			advance_RX_buf_out ();                                                        C:\Projects\UBW\FW\D\user\user.c
00278c   2bbc     INCF      0xbc,0x1,0x1                                                                                    
00278e   0e40     MOVLW     0x40                                                                                            
002790   0101     MOVLB     0x1                                                                                             
002792   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
002794   e102     BNZ       0x279a                                                                                          
002796   0101     MOVLB     0x1                                                                                             
002798   6bbc     CLRF      0xbc,0x1                                                                                        
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
00279a   d002     BRA       0x27a0         		else                                                                           C:\Projects\UBW\FW\D\user\user.c
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
00279c   0e00     MOVLW     0x0            			return (FALSE);                                                               C:\Projects\UBW\FW\D\user\user.c
00279e   d005     BRA       0x27aa                                                                                          
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
0027a6   0e01     MOVLW     0x1            	return (TRUE);                                                                  C:\Projects\UBW\FW\D\user\user.c
0027a8   d000     BRA       0x27aa                                                                                          
0027aa   6e2a     MOVWF     0x2a,0x0       }                                                                                C:\Projects\UBW\FW\D\user\user.c
0027ac   0e02     MOVLW     0x2                                                                                             
0027ae   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0027b0   e202     BC        0x27b6                                                                                          
0027b2   6ae1     CLRF      0xe1,0x0                                                                                        
0027b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0027b6   6ee1     MOVWF     0xe1,0x0                                                                                        
0027b8   502a     MOVF      0x2a,0x0,0x0                                                                                    
0027ba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0027bc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0027be   ffd9                                                                                                               
0027c0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           // For debugging, this command will spit out a bunch of values.                  C:\Projects\UBW\FW\D\user\user.c
                                           void print_status(void)                                                          C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                           	printf(                                                                         C:\Projects\UBW\FW\D\user\user.c
                                           		(rom char*)"Status=%i\r\n"                                                     C:\Projects\UBW\FW\D\user\user.c
0027c2   5006     MOVF      0x6,0x0,0x0    		,ISR_D_FIFO_length                                                             C:\Projects\UBW\FW\D\user\user.c
0027c8   0ea6     MOVLW     0xa6                                                                                            
0027ca   6e2a     MOVWF     0x2a,0x0                                                                                        
0027cc   0e40     MOVLW     0x40                                                                                            
0027ce   6e2b     MOVWF     0x2b,0x0                                                                                        
0027d0   6a2c     CLRF      0x2c,0x0                                                                                        
0027d2   c02a     MOVFF     0x2a,0xfe6                                                                                      
0027d4   ffe6                                                                                                               
0027d6   c02b     MOVFF     0x2b,0xfe6                                                                                      
0027d8   ffe6                                                                                                               
0027da   c02c     MOVFF     0x2c,0xfe6                                                                                      
0027dc   ffe6                                                                                                               
0027c4   6ee6     MOVWF     0xe6,0x0       	);                                                                              C:\Projects\UBW\FW\D\user\user.c
0027c6   6ae6     CLRF      0xe6,0x0                                                                                        
0027de   ec29     CALL      0x4452,0x0                                                                                      
0027e0   f022                                                                                                               
0027e2   6e2d     MOVWF     0x2d,0x0                                                                                        
0027e4   0e05     MOVLW     0x5                                                                                             
0027e6   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0027e8   502d     MOVF      0x2d,0x0,0x0                                                                                    
0027ea   0012     RETURN    0x0            }                                                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\user\user.c
                                            * Function:        void BlinkUSBStatus(void)                                    C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * Overview:        BlinkUSBStatus turns on and off LEDs corresponding to        C:\Projects\UBW\FW\D\user\user.c
                                            *                  the USB device state.                                        C:\Projects\UBW\FW\D\user\user.c
                                            *                                                                               C:\Projects\UBW\FW\D\user\user.c
                                            * Note:            mLED macros can be found in io_cfg.h                         C:\Projects\UBW\FW\D\user\user.c
                                            *                  usb_device_state is declared in usbmmap.c and is modified    C:\Projects\UBW\FW\D\user\user.c
                                            *                  in usbdrv.c, usbctrltrf.c, and usb9.c                        C:\Projects\UBW\FW\D\user\user.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\user\user.c
                                           void BlinkUSBStatus(void)                                                        C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
                                               static word LEDCount = 0;                                                    C:\Projects\UBW\FW\D\user\user.c
                                           	static unsigned char LEDState = 0;                                              C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                               if (                                                                         C:\Projects\UBW\FW\D\user\user.c
0027ec   0101     MOVLB     0x1            		usb_device_state == DETACHED_STATE                                             C:\Projects\UBW\FW\D\user\user.c
0027ee   51d5     MOVF      0xd5,0x0,0x1                                                                                    
                                                  	||                                                                       C:\Projects\UBW\FW\D\user\user.c
0027f2   0e01     MOVLW     0x1                   	1 == UCONbits.SUSPND                                                     C:\Projects\UBW\FW\D\user\user.c
0027f4   6e2a     MOVWF     0x2a,0x0                                                                                        
0027f6   506d     MOVF      0x6d,0x0,0x0                                                                                    
0027f8   0b02     ANDLW     0x2                                                                                             
0027fa   e001     BZ        0x27fe                                                                                          
0027fc   0e01     MOVLW     0x1                                                                                             
0027f0   e008     BZ        0x2802             )                                                                            C:\Projects\UBW\FW\D\user\user.c
0027fe   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
002800   e102     BNZ       0x2806                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\user\user.c
002802   908b     BCF       0x8b,0x0,0x0   		mLED_1_Off();                                                                  C:\Projects\UBW\FW\D\user\user.c
                                               }                                                                            C:\Projects\UBW\FW\D\user\user.c
002804   d05d     BRA       0x28c0             else if (                                                                    C:\Projects\UBW\FW\D\user\user.c
                                           		usb_device_state == ATTACHED_STATE                                             C:\Projects\UBW\FW\D\user\user.c
002806   0101     MOVLB     0x1            		||                                                                             C:\Projects\UBW\FW\D\user\user.c
002808   05d5     DECF      0xd5,0x0,0x1                                                                                    
00280c   0e02     MOVLW     0x2            		usb_device_state == POWERED_STATE		                                            C:\Projects\UBW\FW\D\user\user.c
00280a   e00c     BZ        0x2824         		||                                                                             C:\Projects\UBW\FW\D\user\user.c
00280e   0101     MOVLB     0x1                                                                                             
002810   5dd5     SUBWF     0xd5,0x0,0x1                                                                                    
002812   e008     BZ        0x2824                                                                                          
002814   0e03     MOVLW     0x3            		usb_device_state == DEFAULT_STATE                                              C:\Projects\UBW\FW\D\user\user.c
002816   0101     MOVLB     0x1            		||                                                                             C:\Projects\UBW\FW\D\user\user.c
002818   5dd5     SUBWF     0xd5,0x0,0x1                                                                                    
00281a   e004     BZ        0x2824                                                                                          
00281c   0e05     MOVLW     0x5            		usb_device_state == ADDRESS_STATE                                              C:\Projects\UBW\FW\D\user\user.c
00281e   0101     MOVLB     0x1            	)                                                                               C:\Projects\UBW\FW\D\user\user.c
002820   5dd5     SUBWF     0xd5,0x0,0x1                                                                                    
002822   e102     BNZ       0x2828                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\user\user.c
002824   808b     BSF       0x8b,0x0,0x0           mLED_1_On();                                                             C:\Projects\UBW\FW\D\user\user.c
                                               }                                                                            C:\Projects\UBW\FW\D\user\user.c
002826   d04c     BRA       0x28c0             else if (usb_device_state == CONFIGURED_STATE)                               C:\Projects\UBW\FW\D\user\user.c
002828   0e06     MOVLW     0x6                                                                                             
00282a   0101     MOVLB     0x1                                                                                             
00282c   5dd5     SUBWF     0xd5,0x0,0x1                                                                                    
00282e   e148     BNZ       0x28c0                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\user\user.c
002830   0101     MOVLB     0x1            		LEDCount--;                                                                    C:\Projects\UBW\FW\D\user\user.c
002832   07da     DECF      0xda,0x1,0x1                                                                                    
002834   0e00     MOVLW     0x0                                                                                             
002836   5bdb     SUBWFB    0xdb,0x1,0x1                                                                                    
002838   0101     MOVLB     0x1            		if (0 == LEDState)                                                             C:\Projects\UBW\FW\D\user\user.c
00283a   51dc     MOVF      0xdc,0x0,0x1                                                                                    
00283c   e10e     BNZ       0x285a                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
00283e   0101     MOVLB     0x1            			if (0 == LEDCount)                                                            C:\Projects\UBW\FW\D\user\user.c
002840   51da     MOVF      0xda,0x0,0x1                                                                                    
002842   11db     IORWF     0xdb,0x0,0x1                                                                                    
002844   e109     BNZ       0x2858                                                                                          
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
002846   808b     BSF       0x8b,0x0,0x0   				mLED_1_On();                                                                 C:\Projects\UBW\FW\D\user\user.c
002848   0101     MOVLB     0x1            				LEDCount = 10000U;				                                                       C:\Projects\UBW\FW\D\user\user.c
00284a   0e10     MOVLW     0x10                                                                                            
00284c   6fda     MOVWF     0xda,0x1                                                                                        
00284e   0e27     MOVLW     0x27                                                                                            
002850   6fdb     MOVWF     0xdb,0x1                                                                                        
002852   0101     MOVLB     0x1            				LEDState = 1;                                                                C:\Projects\UBW\FW\D\user\user.c
002854   0e01     MOVLW     0x1                                                                                             
002856   6fdc     MOVWF     0xdc,0x1                                                                                        
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
002858   d033     BRA       0x28c0         		else if (1 == LEDState)                                                        C:\Projects\UBW\FW\D\user\user.c
00285a   0101     MOVLB     0x1                                                                                             
00285c   05dc     DECF      0xdc,0x0,0x1                                                                                    
00285e   e10e     BNZ       0x287c                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
002860   0101     MOVLB     0x1            			if (0 == LEDCount)                                                            C:\Projects\UBW\FW\D\user\user.c
002862   51da     MOVF      0xda,0x0,0x1                                                                                    
002864   11db     IORWF     0xdb,0x0,0x1                                                                                    
002866   e109     BNZ       0x287a                                                                                          
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
002868   908b     BCF       0x8b,0x0,0x0   				mLED_1_Off();                                                                C:\Projects\UBW\FW\D\user\user.c
00286a   0101     MOVLB     0x1            				LEDCount = 10000U;				                                                       C:\Projects\UBW\FW\D\user\user.c
00286c   0e10     MOVLW     0x10                                                                                            
00286e   6fda     MOVWF     0xda,0x1                                                                                        
002870   0e27     MOVLW     0x27                                                                                            
002872   6fdb     MOVWF     0xdb,0x1                                                                                        
002874   0101     MOVLB     0x1            				LEDState = 2;                                                                C:\Projects\UBW\FW\D\user\user.c
002876   0e02     MOVLW     0x2                                                                                             
002878   6fdc     MOVWF     0xdc,0x1                                                                                        
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
00287a   d022     BRA       0x28c0         		else if (2 == LEDState)                                                        C:\Projects\UBW\FW\D\user\user.c
00287c   0e02     MOVLW     0x2                                                                                             
00287e   0101     MOVLB     0x1                                                                                             
002880   5ddc     SUBWF     0xdc,0x0,0x1                                                                                    
002882   e10e     BNZ       0x28a0                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
002884   0101     MOVLB     0x1            			if (0 == LEDCount)                                                            C:\Projects\UBW\FW\D\user\user.c
002886   51da     MOVF      0xda,0x0,0x1                                                                                    
002888   11db     IORWF     0xdb,0x0,0x1                                                                                    
00288a   e109     BNZ       0x289e                                                                                          
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
00288c   808b     BSF       0x8b,0x0,0x0   				mLED_1_On();                                                                 C:\Projects\UBW\FW\D\user\user.c
00288e   0101     MOVLB     0x1            				LEDCount = 100000U;				                                                      C:\Projects\UBW\FW\D\user\user.c
002890   0ea0     MOVLW     0xa0                                                                                            
002892   6fda     MOVWF     0xda,0x1                                                                                        
002894   0e86     MOVLW     0x86                                                                                            
002896   6fdb     MOVWF     0xdb,0x1                                                                                        
002898   0101     MOVLB     0x1            				LEDState = 3;                                                                C:\Projects\UBW\FW\D\user\user.c
00289a   0e03     MOVLW     0x3                                                                                             
00289c   6fdc     MOVWF     0xdc,0x1                                                                                        
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
00289e   d010     BRA       0x28c0         		else if (LEDState >= 3)                                                        C:\Projects\UBW\FW\D\user\user.c
0028a0   0e03     MOVLW     0x3                                                                                             
0028a2   0101     MOVLB     0x1                                                                                             
0028a4   5ddc     SUBWF     0xdc,0x0,0x1                                                                                    
0028a6   e30c     BNC       0x28c0                                                                                          
                                           		{                                                                              C:\Projects\UBW\FW\D\user\user.c
0028a8   0101     MOVLB     0x1            			if (0 == LEDCount)                                                            C:\Projects\UBW\FW\D\user\user.c
0028aa   51da     MOVF      0xda,0x0,0x1                                                                                    
0028ac   11db     IORWF     0xdb,0x0,0x1                                                                                    
0028ae   e108     BNZ       0x28c0                                                                                          
                                           			{                                                                             C:\Projects\UBW\FW\D\user\user.c
0028b0   908b     BCF       0x8b,0x0,0x0   				mLED_1_Off();                                                                C:\Projects\UBW\FW\D\user\user.c
0028b2   0101     MOVLB     0x1            				LEDCount = 10000U;				                                                       C:\Projects\UBW\FW\D\user\user.c
0028b4   0e10     MOVLW     0x10                                                                                            
0028b6   6fda     MOVWF     0xda,0x1                                                                                        
0028b8   0e27     MOVLW     0x27                                                                                            
0028ba   6fdb     MOVWF     0xdb,0x1                                                                                        
0028bc   0101     MOVLB     0x1            				LEDState = 0;                                                                C:\Projects\UBW\FW\D\user\user.c
0028be   6bdc     CLRF      0xdc,0x1                                                                                        
                                           			}                                                                             C:\Projects\UBW\FW\D\user\user.c
                                           		}                                                                              C:\Projects\UBW\FW\D\user\user.c
                                               }                                                                            C:\Projects\UBW\FW\D\user\user.c
0028c0   0012     RETURN    0x0            }                                                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           BOOL SwitchIsPressed(void)                                                       C:\Projects\UBW\FW\D\user\user.c
                                           {                                                                                C:\Projects\UBW\FW\D\user\user.c
0028c2   b482     BTFSC     0x82,0x2,0x0   	if( 0 == UserSW)                   	// If pressed                               C:\Projects\UBW\FW\D\user\user.c
0028c4   d003     BRA       0x28cc                                                                                          
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0028c6   0e01     MOVLW     0x1            	    return (TRUE);                	// Was pressed                               C:\Projects\UBW\FW\D\user\user.c
0028c8   d003     BRA       0x28d0                                                                                          
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
0028ca   d002     BRA       0x28d0         	else                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           	{                                                                               C:\Projects\UBW\FW\D\user\user.c
0028cc   0e00     MOVLW     0x0            		return (FALSE);					// Was not pressed                                         C:\Projects\UBW\FW\D\user\user.c
0028ce   d000     BRA       0x28d0                                                                                          
                                           	}                                                                               C:\Projects\UBW\FW\D\user\user.c
0028d0   0012     RETURN    0x0            }                                                                                C:\Projects\UBW\FW\D\user\user.c
                                                                                                                            C:\Projects\UBW\FW\D\user\user.c
                                           /** EOF user.c ***************************************************************/  C:\Projects\UBW\FW\D\user\user.c
                                           /*********************************************************************           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *             Microchip USB C18 Firmware -  CDC Version 1.0                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *********************************************************************           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * FileName:        cdc.c                                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Dependencies:    See INCLUDES section below                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Processor:       PIC18                                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Compiler:        C18 2.30.01+                                                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Company:         Microchip Technology, Inc.                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Software License Agreement                                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * civil liability for the breach of the terms and conditions of this            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * license.                                                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Author               Date        Comment                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Rawin Rojvanit       11/19/04    Original. RS-232 Emulation Subset            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            ********************************************************************/           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /** I N C L U D E S **********************************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           #include <p18cxxx.h>                                                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           #include "system\typedefs.h"                                                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           #include "system\usb\usb.h"                                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           #ifdef USB_USE_CDC                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /** V A R I A B L E S ********************************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           #pragma udata                                                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           byte cdc_rx_len;            // total rx length                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           byte cdc_trf_state;         // States are defined cdc.h                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           POINTER pCDCSrc;            // Dedicated source pointer                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           POINTER pCDCDst;            // Dedicated destination pointer                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           byte cdc_tx_len;            // total tx length                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           byte cdc_mem_type;          // _ROM, _RAM                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           LINE_CODING line_coding;    // Buffer to store line coding information           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           CONTROL_SIGNAL_BITMAP control_signal_bitmap;                                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /*                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * SEND_ENCAPSULATED_COMMAND and GET_ENCAPSULATED_RESPONSE are required          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * requests according to the CDC specification.                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * However, it is not really being used here, therefore a dummy buffer is        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * used for conformance.                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            */                                                                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           #define dummy_length    0x08                                                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           byte dummy_encapsulated_cmd_response[dummy_length];                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           #pragma code                                                                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /** C L A S S  S P E C I F I C  R E Q ****************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Function:        void USBCheckCDCRequest(void)                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Overview:        This routine checks the setup data packet to see if it       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  knows how to handle it                                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           void USBCheckCDCRequest(void)                                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * If request recipient is not an interface then return                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0034f4   0104     MOVLB     0x4                if(SetupPkt.Recipient != RCPT_INTF) return;                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0034f6   5120     MOVF      0x20,0x0,0x1                                                                                    
0034f8   0b1f     ANDLW     0x1f                                                                                            
0034fa   0801     SUBLW     0x1                                                                                             
0034fc   e001     BZ        0x3500                                                                                          
0034fe   d060     BRA       0x35c0                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * If request type is not class-specific then return                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003500   0104     MOVLB     0x4                if(SetupPkt.RequestType != CLASS) return;                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003502   5120     MOVF      0x20,0x0,0x1                                                                                    
003504   0b60     ANDLW     0x60                                                                                            
003506   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003508   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
00350a   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
00350c   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
00350e   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003510   0801     SUBLW     0x1                                                                                             
003512   e001     BZ        0x3516                                                                                          
003514   d055     BRA       0x35c0                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Interface ID must match interface numbers associated with                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * CDC class, else return                                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003516   0104     MOVLB     0x4                if((SetupPkt.bIntfID != CDC_COMM_INTF_ID)&&                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003518   5124     MOVF      0x24,0x0,0x1                                                                                    
00351a   e004     BZ        0x3524                (SetupPkt.bIntfID != CDC_DATA_INTF_ID)) return;                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00351c   0104     MOVLB     0x4                                                                                             
00351e   0524     DECF      0x24,0x0,0x1                                                                                    
003520   e001     BZ        0x3524                                                                                          
003522   d04e     BRA       0x35c0                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003524   0104     MOVLB     0x4                switch(SetupPkt.bRequest)                                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003526   5121     MOVF      0x21,0x0,0x1                                                                                    
003528   0a23     XORLW     0x23                                                                                            
00352a   e048     BZ        0x35bc                                                                                          
00352c   0a01     XORLW     0x1                                                                                             
00352e   e040     BZ        0x35b0                                                                                          
003530   0a03     XORLW     0x3                                                                                             
003532   e030     BZ        0x3594                                                                                          
003534   0a01     XORLW     0x1                                                                                             
003536   e025     BZ        0x3582                                                                                          
003538   0a24     XORLW     0x24                                                                                            
00353a   e022     BZ        0x3580                                                                                          
00353c   0a07     XORLW     0x7                                                                                             
00353e   e01f     BZ        0x357e                                                                                          
003540   0a01     XORLW     0x1                                                                                             
003542   e01c     BZ        0x357c                                                                                          
003544   0a03     XORLW     0x3                                                                                             
003546   e011     BZ        0x356a                                                                                          
003548   0a01     XORLW     0x1                                                                                             
00354a   e001     BZ        0x354e                                                                                          
00354c   d038     BRA       0x35be                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   case SEND_ENCAPSULATED_COMMAND:                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00354e   0101     MOVLB     0x1                        ctrl_trf_session_owner = MUID_CDC;                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003550   0e03     MOVLW     0x3                                                                                             
003552   6fce     MOVWF     0xce,0x1                                                                                        
003554   0101     MOVLB     0x1                        pSrc.bRam = (byte*)&dummy_encapsulated_cmd_response;                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003556   0eac     MOVLW     0xac                                                                                            
003558   6fcf     MOVWF     0xcf,0x1                                                                                        
00355a   0e01     MOVLW     0x1                                                                                             
00355c   6fd0     MOVWF     0xd0,0x1                                                                                        
00355e   0101     MOVLB     0x1                        usb_stat.ctrl_trf_mem = _RAM;                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003560   93d6     BCF       0xd6,0x1,0x1                                                                                    
003562   0101     MOVLB     0x1                        LSB(wCount) = dummy_length;                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003564   0e08     MOVLW     0x8                                                                                             
003566   6fd3     MOVWF     0xd3,0x1                                                                                        
003568   d02b     BRA       0x35c0                     break;                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   case GET_ENCAPSULATED_RESPONSE:                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00356a   0101     MOVLB     0x1                        ctrl_trf_session_owner = MUID_CDC;                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00356c   0e03     MOVLW     0x3                                                                                             
00356e   6fce     MOVWF     0xce,0x1                                                                                        
                                                       // Populate dummy_encapsulated_cmd_response first.                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003570   0101     MOVLB     0x1                        pDst.bRam = (byte*)&dummy_encapsulated_cmd_response;                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003572   0eac     MOVLW     0xac                                                                                            
003574   6fd1     MOVWF     0xd1,0x1                                                                                        
003576   0e01     MOVLW     0x1                                                                                             
003578   6fd2     MOVWF     0xd2,0x1                                                                                        
00357a   d022     BRA       0x35c0                     break;                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   case SET_COMM_FEATURE:                  // Optional                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00357c   d021     BRA       0x35c0                     break;                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   case GET_COMM_FEATURE:                  // Optional                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00357e   d020     BRA       0x35c0                     break;                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   case CLEAR_COMM_FEATURE:                // Optional                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003580   d01f     BRA       0x35c0                     break;                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   case SET_LINE_CODING:                                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003582   0101     MOVLB     0x1                        ctrl_trf_session_owner = MUID_CDC;                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003584   0e03     MOVLW     0x3                                                                                             
003586   6fce     MOVWF     0xce,0x1                                                                                        
003588   0101     MOVLB     0x1                        pDst.bRam = (byte*)&line_coding;    // Set destination               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00358a   0ea1     MOVLW     0xa1                                                                                            
00358c   6fd1     MOVWF     0xd1,0x1                                                                                        
00358e   0e01     MOVLW     0x1                                                                                             
003590   6fd2     MOVWF     0xd2,0x1                                                                                        
003592   d016     BRA       0x35c0                     break;                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   case GET_LINE_CODING:                                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003594   0101     MOVLB     0x1                        ctrl_trf_session_owner = MUID_CDC;                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003596   0e03     MOVLW     0x3                                                                                             
003598   6fce     MOVWF     0xce,0x1                                                                                        
00359a   0101     MOVLB     0x1                        pSrc.bRam = (byte*)&line_coding;    // Set source                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00359c   0ea1     MOVLW     0xa1                                                                                            
00359e   6fcf     MOVWF     0xcf,0x1                                                                                        
0035a0   0e01     MOVLW     0x1                                                                                             
0035a2   6fd0     MOVWF     0xd0,0x1                                                                                        
0035a4   0101     MOVLB     0x1                        usb_stat.ctrl_trf_mem = _RAM;       // Set memory type               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035a6   93d6     BCF       0xd6,0x1,0x1                                                                                    
0035a8   0101     MOVLB     0x1                        LSB(wCount) = LINE_CODING_LENGTH;   // Set data count                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035aa   0e07     MOVLW     0x7                                                                                             
0035ac   6fd3     MOVWF     0xd3,0x1                                                                                        
0035ae   d008     BRA       0x35c0                     break;                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   case SET_CONTROL_LINE_STATE:                                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035b0   0101     MOVLB     0x1                        ctrl_trf_session_owner = MUID_CDC;                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035b2   0e03     MOVLW     0x3                                                                                             
0035b4   6fce     MOVWF     0xce,0x1                                                                                        
0035b6   c422     MOVFF     0x422,0x1a8                control_signal_bitmap._byte = LSB(SetupPkt.W_Value);                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035b8   f1a8                                                                                                               
0035ba   d002     BRA       0x35c0                     break;                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   case SEND_BREAK:                        // Optional                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035bc   d001     BRA       0x35c0                     break;                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   default:                                                                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035be   d000     BRA       0x35c0                     break;                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               }//end switch(SetupPkt.bRequest)                                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035c0   0012     RETURN    0x0            }//end USBCheckCDCRequest                                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /** U S E R  A P I ***********************************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Function:        void CDCInitEP(void)                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Overview:        CDCInitEP initializes CDC endpoints, buffer descriptors,     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  internal state-machine, and variables.                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  It should be called after the USB host has sent out a        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  SET_CONFIGURATION request.                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  See USBStdSetCfgHandler() in usb9.c for examples.            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           void CDCInitEP(void)                                                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               //Abstract line coding information                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035c2   0101     MOVLB     0x1                line_coding.dwDTERate._dword = 115200;      // baud rate                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035c4   6ba1     CLRF      0xa1,0x1                                                                                        
0035c6   0ec2     MOVLW     0xc2                                                                                            
0035c8   6fa2     MOVWF     0xa2,0x1                                                                                        
0035ca   0e01     MOVLW     0x1                                                                                             
0035cc   6fa3     MOVWF     0xa3,0x1                                                                                        
0035ce   6ba4     CLRF      0xa4,0x1                                                                                        
0035d0   0101     MOVLB     0x1                line_coding.bCharFormat = 0x00;             // 1 stop bit                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035d2   6ba5     CLRF      0xa5,0x1                                                                                        
0035d4   0101     MOVLB     0x1                line_coding.bParityType = 0x00;             // None                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035d6   6ba6     CLRF      0xa6,0x1                                                                                        
0035d8   0101     MOVLB     0x1                line_coding.bDataBits = 0x08;               // 5,6,7,8, or 16                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035da   0e08     MOVLW     0x8                                                                                             
0035dc   6fa7     MOVWF     0xa7,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035de   0101     MOVLB     0x1                cdc_trf_state = CDC_TX_READY;                                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035e0   6b9a     CLRF      0x9a,0x1                                                                                        
0035e2   0101     MOVLB     0x1                cdc_rx_len = 0;                                                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035e4   6b99     CLRF      0x99,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035e6   0e1a     MOVLW     0x1a               CDC_COMM_UEP = EP_IN|HSHK_EN;               // Enable 1 Comm pipe            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035e8   6e72     MOVWF     0x72,0x0                                                                                        
0035ea   0e1e     MOVLW     0x1e               CDC_DATA_UEP = EP_OUT_IN|HSHK_EN;           // Enable 2 data pipes           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035ec   6e73     MOVWF     0x73,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Do not have to init Cnt of IN pipes here.                                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Reason:  Number of bytes to send to the host                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *          varies from one transaction to                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *          another. Cnt should equal the exact                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *          number of bytes to transmit for                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *          a given IN transaction.                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *          This number of bytes will only                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *          be known right before the data is                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *          sent.                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035ee   0104     MOVLB     0x4                CDC_INT_BD_IN.ADR = (byte*)&cdc_notice;     // Set buffer address            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035f0   0e00     MOVLW     0x0                                                                                             
0035f2   6f16     MOVWF     0x16,0x1                                                                                        
0035f4   0e05     MOVLW     0x5                                                                                             
0035f6   6f17     MOVWF     0x17,0x1                                                                                        
0035f8   0104     MOVLB     0x4                CDC_INT_BD_IN.Stat._byte = _UCPU|_DAT1;     // Set status                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035fa   0e40     MOVLW     0x40                                                                                            
0035fc   6f14     MOVWF     0x14,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0035fe   0104     MOVLB     0x4                CDC_BULK_BD_OUT.Cnt = sizeof(cdc_data_rx);  // Set buffer size               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003600   0e40     MOVLW     0x40                                                                                            
003602   6f19     MOVWF     0x19,0x1                                                                                        
003604   0104     MOVLB     0x4                CDC_BULK_BD_OUT.ADR = (byte*)&cdc_data_rx;  // Set buffer address            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003606   0e08     MOVLW     0x8                                                                                             
003608   6f1a     MOVWF     0x1a,0x1                                                                                        
00360a   0e05     MOVLW     0x5                                                                                             
00360c   6f1b     MOVWF     0x1b,0x1                                                                                        
00360e   0104     MOVLB     0x4                CDC_BULK_BD_OUT.Stat._byte = _USIE|_DAT0|_DTSEN;// Set status                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003610   0e88     MOVLW     0x88                                                                                            
003612   6f18     MOVWF     0x18,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003614   0104     MOVLB     0x4                CDC_BULK_BD_IN.ADR = (byte*)&cdc_data_tx;   // Set buffer size               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003616   0e48     MOVLW     0x48                                                                                            
003618   6f1e     MOVWF     0x1e,0x1                                                                                        
00361a   0e05     MOVLW     0x5                                                                                             
00361c   6f1f     MOVWF     0x1f,0x1                                                                                        
00361e   0104     MOVLB     0x4                CDC_BULK_BD_IN.Stat._byte = _UCPU|_DAT1;    // Set buffer address            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003620   0e40     MOVLW     0x40                                                                                            
003622   6f1c     MOVWF     0x1c,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003624   0012     RETURN    0x0            }//end CDCInitEP                                                                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Function:        byte getsUSBUSART(char *buffer,                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                    byte len)                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * PreCondition:    Value of input argument 'len' should be smaller than the     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  maximum endpoint size responsible for receiving bulk         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  data from USB host for CDC class.                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  Input argument 'buffer' should point to a buffer area that   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  is bigger or equal to the size specified by 'len'.           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Input:           buffer  : Pointer to where received bytes are to be stored   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  len     : The number of bytes expected.                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Output:          The number of bytes copied to buffer.                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Side Effects:    Publicly accessible variable cdc_rx_len is updated with      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  the number of bytes copied to buffer.                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  Once getsUSBUSART is called, subsequent retrieval of         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  cdc_rx_len can be done by calling macro mCDCGetRxLength().   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Overview:        getsUSBUSART copies a string of bytes received through       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  USB CDC Bulk OUT endpoint to a user's specified location.    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  It is a non-blocking function. It does not wait              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  for data if there is no data available. Instead it returns   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  '0' to notify the caller that there is no data available.    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Note:            If the actual number of bytes received is larger than the    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  number of bytes expected (len), only the expected number     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  of bytes specified will be copied to buffer.                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  If the actual number of bytes received is smaller than the   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  number of bytes expected (len), only the actual number       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  of bytes received will be copied to buffer.                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003626   cfd9     MOVFF     0xfd9,0xfe6    byte getsUSBUSART(unsigned char *buffer, byte len)                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003628   ffe6                                                                                                               
00362a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00362c   ffd9                                                                                                               
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00362e   0101     MOVLB     0x1                cdc_rx_len = 0;                                                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003630   6b99     CLRF      0x99,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003632   0104     MOVLB     0x4                if(!mCDCUsartRxIsBusy())                                                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003634   bf18     BTFSC     0x18,0x7,0x1                                                                                    
003636   d039     BRA       0x36aa                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    * Adjust the expected number of bytes to equal                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    * the actual number of bytes received.                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003638   0efc     MOVLW     0xfc                   if(len > CDC_BULK_BD_OUT.Cnt)                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00363a   cfdb     MOVFF     0xfdb,0x2a                                                                                      
00363c   f02a                                                                                                               
00363e   0104     MOVLB     0x4                                                                                             
003640   5119     MOVF      0x19,0x0,0x1                                                                                    
003642   80d8     BSF       0xd8,0x0,0x0                                                                                    
003644   542a     SUBFWB    0x2a,0x0,0x0                                                                                    
003646   e203     BC        0x364e                                                                                          
003648   0efc     MOVLW     0xfc                       len = CDC_BULK_BD_OUT.Cnt;                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00364a   c419     MOVFF     0x419,0xfdb                                                                                     
00364c   ffdb                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    * Copy data from dual-ram buffer to user's buffer                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00364e   0101     MOVLB     0x1                    for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003650   6b99     CLRF      0x99,0x1                                                                                        
003652   0efc     MOVLW     0xfc                                                                                            
003654   50db     MOVF      0xdb,0x0,0x0                                                                                    
003656   0101     MOVLB     0x1                                                                                             
003658   5d99     SUBWF     0x99,0x0,0x1                                                                                    
00365a   e21c     BC        0x3694                                                                                          
00368e   0101     MOVLB     0x1                                                                                             
003690   2b99     INCF      0x99,0x1,0x1                                                                                    
003692   d7df     BRA       0x3652                                                                                          
00365c   0101     MOVLB     0x1                        buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00365e   5199     MOVF      0x99,0x0,0x1                                                                                    
003660   6aea     CLRF      0xea,0x0                                                                                        
003662   0f08     ADDLW     0x8                                                                                             
003664   6ee9     MOVWF     0xe9,0x0                                                                                        
003666   0e05     MOVLW     0x5                                                                                             
003668   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00366a   50ef     MOVF      0xef,0x0,0x0                                                                                    
00366c   6ee6     MOVWF     0xe6,0x0                                                                                        
00366e   0101     MOVLB     0x1                                                                                             
003670   5199     MOVF      0x99,0x0,0x1                                                                                    
003672   6ee7     MOVWF     0xe7,0x0                                                                                        
003674   0efd     MOVLW     0xfd                                                                                            
003676   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
003678   ffe9                                                                                                               
00367a   0efe     MOVLW     0xfe                                                                                            
00367c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00367e   ffea                                                                                                               
003680   50e7     MOVF      0xe7,0x0,0x0                                                                                    
003682   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003684   0e00     MOVLW     0x0                                                                                             
003686   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003688   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00368a   50e7     MOVF      0xe7,0x0,0x0                                                                                    
00368c   6eef     MOVWF     0xef,0x0                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    * Prepare dual-ram buffer for next OUT transaction                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003694   0104     MOVLB     0x4                    CDC_BULK_BD_OUT.Cnt = sizeof(cdc_data_rx);                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003696   0e40     MOVLW     0x40                                                                                            
003698   6f19     MOVWF     0x19,0x1                                                                                        
00369a   0e40     MOVLW     0x40                   mUSBBufferReady(CDC_BULK_BD_OUT);                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00369c   0104     MOVLB     0x4                                                                                             
00369e   1718     ANDWF     0x18,0x1,0x1                                                                                    
0036a0   0104     MOVLB     0x4                                                                                             
0036a2   7d18     BTG       0x18,0x6,0x1                                                                                    
0036a4   0e88     MOVLW     0x88                                                                                            
0036a6   0104     MOVLB     0x4                                                                                             
0036a8   1318     IORWF     0x18,0x1,0x1                                                                                    
                                               }//end if                                                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036aa   0101     MOVLB     0x1                return cdc_rx_len;                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036ac   5199     MOVF      0x99,0x0,0x1                                                                                    
0036ae   d000     BRA       0x36b0                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036b0   52e5     MOVF      0xe5,0x1,0x0   }//end getsUSBUSART                                                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036b2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0036b4   ffd9                                                                                                               
0036b6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Function:        void putsUSBUSART(char *data)                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * PreCondition:    cdc_trf_state must be in the CDC_TX_READY state.             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  The string of characters pointed to by 'data' must equal     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  to or smaller than 255 bytes.                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Input:           data    : Pointer to a null-terminated string of data.       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                            If a null character is not found, 255 bytes        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                            of data will be transferred to the host.           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Overview:        putsUSBUSART writes a string of data to the USB including    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  the null character. Use this version, 'puts', to transfer    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  data located in data memory.                                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Note:            The transfer mechanism for device-to-host(put) is more       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  flexible than host-to-device(get). It can handle             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  a string of data larger than the maximum size of bulk IN     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  endpoint. A state machine is used to transfer a long         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  string of data over multiple USB transactions.               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  See CDCTxService() for more details.                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036b8   cfd9     MOVFF     0xfd9,0xfe6    void putsUSBUSART(unsigned char *data)                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036ba   ffe6                                                                                                               
0036bc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0036be   ffd9                                                                                                               
0036c0   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               byte len;                                                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * User should have checked that cdc_trf_state is in CDC_TX_READY state      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * before calling this function.                                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * As a safety precaution, this fuction checks the state one more time       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * to make sure it does not override any pending transactions.               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Currently it just quits the routine without reporting any errors back     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * to the user.                                                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Bottomline: User MUST make sure that mUSBUSARTIsTxTrfReady()==1           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *             before calling this function!                                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Example:                                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * if(mUSBUSARTIsTxTrfReady())                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *     putsUSBUSART(pData);                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * IMPORTANT: Never use the following blocking while loop to wait:           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * while(!mUSBUSARTIsTxTrfReady())                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *     putsUSBUSART(pData);                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * The whole firmware framework is written based on cooperative              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * multi-tasking and a blocking code is not acceptable.                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Use a state machine instead.                                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036c2   0101     MOVLB     0x1                if(cdc_trf_state != CDC_TX_READY) return;                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036c4   519a     MOVF      0x9a,0x0,0x1                                                                                    
0036c6   e001     BZ        0x36ca                                                                                          
0036c8   d031     BRA       0x372c                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * While loop counts the number of bytes to send including the               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * null character.                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036ca   6adf     CLRF      0xdf,0x0           len = 0;                                                                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               do                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036cc   2adf     INCF      0xdf,0x1,0x0           len++;                                                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036ce   50df     MOVF      0xdf,0x0,0x0           if(len == 256) break;       // Break loop once max len is reached.       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036d0   6e2a     MOVWF     0x2a,0x0                                                                                        
0036d2   6a2b     CLRF      0x2b,0x0                                                                                        
0036d4   502a     MOVF      0x2a,0x0,0x0                                                                                    
0036d6   e102     BNZ       0x36dc                                                                                          
0036d8   0e01     MOVLW     0x1                                                                                             
0036da   182b     XORWF     0x2b,0x0,0x0                                                                                    
0036dc   e101     BNZ       0x36e0                                                                                          
0036de   d00b     BRA       0x36f6                                                                                          
0036e0   0efd     MOVLW     0xfd               }while(*data++);                                                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036e2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0036e4   ffe9                                                                                                               
0036e6   2adb     INCF      0xdb,0x1,0x0                                                                                    
0036e8   0efe     MOVLW     0xfe                                                                                            
0036ea   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0036ec   ffea                                                                                                               
0036ee   e301     BNC       0x36f2                                                                                          
0036f0   2adb     INCF      0xdb,0x1,0x0                                                                                    
0036f2   50ef     MOVF      0xef,0x0,0x0                                                                                    
0036f4   e1eb     BNZ       0x36cc                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Re-adjust pointer to its initial location                                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036f6   50df     MOVF      0xdf,0x0,0x0       data-=len;                                                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0036f8   6e2a     MOVWF     0x2a,0x0                                                                                        
0036fa   6a2b     CLRF      0x2b,0x0                                                                                        
0036fc   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0036fe   0ffd     ADDLW     0xfd                                                                                            
003700   6ee9     MOVWF     0xe9,0x0                                                                                        
003702   0eff     MOVLW     0xff                                                                                            
003704   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003706   6eea     MOVWF     0xea,0x0                                                                                        
003708   502a     MOVF      0x2a,0x0,0x0                                                                                    
00370a   5eee     SUBWF     0xee,0x1,0x0                                                                                    
00370c   502b     MOVF      0x2b,0x0,0x0                                                                                    
00370e   5aed     SUBWFB    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           	// BPS - 05/04/2006 I don't want the NULL at the end.                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003710   06df     DECF      0xdf,0x1,0x0   	len--;                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Second piece of information (length of data to send) is ready.            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Call mUSBUSARTTxRam to setup the transfer.                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * The actual transfer process will be handled by CDCTxService(),            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * which should be called once per Main Program loop.                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003712   0efd     MOVLW     0xfd               mUSBUSARTTxRam((byte*)data,len);     // See cdc.h                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003714   cfdb     MOVFF     0xfdb,0x19b                                                                                     
003716   f19b                                                                                                               
003718   0efe     MOVLW     0xfe                                                                                            
00371a   cfdb     MOVFF     0xfdb,0x19c                                                                                     
00371c   f19c                                                                                                               
00371e   cfdf     MOVFF     0xfdf,0x19f                                                                                     
003720   f19f                                                                                                               
003722   0101     MOVLB     0x1                                                                                             
003724   6ba0     CLRF      0xa0,0x1                                                                                        
003726   0101     MOVLB     0x1                                                                                             
003728   0e01     MOVLW     0x1                                                                                             
00372a   6f9a     MOVWF     0x9a,0x1                                                                                        
00372c   52e5     MOVF      0xe5,0x1,0x0   }//end putsUSBUSART                                                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00372e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003730   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003732   ffd9                                                                                                               
003734   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Function:        void putrsUSBUSART(const rom char *data)                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * PreCondition:    cdc_trf_state must be in the CDC_TX_READY state.             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  The string of characters pointed to by 'data' must equal     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  to or smaller than 255 bytes.                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Input:           data    : Pointer to a null-terminated string of data.       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                            If a null character is not found, 255 bytes        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                            of data will be transferred to the host.           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Overview:        putrsUSBUSART writes a string of data to the USB including   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  the null character. Use this version, 'putrs', to transfer   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  data literals and data located in program memory.            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Note:            The transfer mechanism for device-to-host(put) is more       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  flexible than host-to-device(get). It can handle             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  a string of data larger than the maximum size of bulk IN     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  endpoint. A state machine is used to transfer a long         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  string of data over multiple USB transactions.               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  See CDCTxService() for more details.                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003736   cfd9     MOVFF     0xfd9,0xfe6    void putrsUSBUSART(const rom unsigned char *data)                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003738   ffe6                                                                                                               
00373a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00373c   ffd9                                                                                                               
00373e   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               byte len;                                                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * User should have checked that cdc_trf_state is in CDC_TX_READY state      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * before calling this function.                                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * As a safety precaution, this fuction checks the state one more time       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * to make sure it does not override any pending transactions.               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Currently it just quits the routine without reporting any errors back     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * to the user.                                                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Bottomline: User MUST make sure that mUSBUSARTIsTxTrfReady()              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *             before calling this function!                                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Example:                                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * if(mUSBUSARTIsTxTrfReady())                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *     putsUSBUSART(pData);                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * IMPORTANT: Never use the following blocking while loop to wait:           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * while(cdc_trf_state != CDC_TX_READY)                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *     putsUSBUSART(pData);                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * The whole firmware framework is written based on cooperative              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * multi-tasking and a blocking code is not acceptable.                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Use a state machine instead.                                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003740   0101     MOVLB     0x1                if(cdc_trf_state != CDC_TX_READY) return;                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003742   519a     MOVF      0x9a,0x0,0x1                                                                                    
003744   e001     BZ        0x3748                                                                                          
003746   d033     BRA       0x37ae                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * While loop counts the number of bytes to send including the               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * null character.                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003748   6adf     CLRF      0xdf,0x0           len = 0;                                                                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               do                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00374a   2adf     INCF      0xdf,0x1,0x0           len++;                                                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00374c   50df     MOVF      0xdf,0x0,0x0           if(len == 255) break;       // Break loop once max len is reached.       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00374e   6e2a     MOVWF     0x2a,0x0                                                                                        
003750   6a2b     CLRF      0x2b,0x0                                                                                        
003752   0eff     MOVLW     0xff                                                                                            
003754   182a     XORWF     0x2a,0x0,0x0                                                                                    
003756   e101     BNZ       0x375a                                                                                          
003758   502b     MOVF      0x2b,0x0,0x0                                                                                    
00375a   e101     BNZ       0x375e                                                                                          
00375c   d00c     BRA       0x3776                                                                                          
00375e   0efd     MOVLW     0xfd               }while(*data++);                                                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003760   cfdb     MOVFF     0xfdb,0xff6                                                                                     
003762   fff6                                                                                                               
003764   2adb     INCF      0xdb,0x1,0x0                                                                                    
003766   0efe     MOVLW     0xfe                                                                                            
003768   cfdb     MOVFF     0xfdb,0xff7                                                                                     
00376a   fff7                                                                                                               
00376c   e301     BNC       0x3770                                                                                          
00376e   2adb     INCF      0xdb,0x1,0x0                                                                                    
003770   0008     TBLRD                                                                                                     
003772   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003774   e1ea     BNZ       0x374a                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Re-adjust pointer to its initial location                                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003776   50df     MOVF      0xdf,0x0,0x0       data-=len;                                                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003778   6e2a     MOVWF     0x2a,0x0                                                                                        
00377a   6a2b     CLRF      0x2b,0x0                                                                                        
00377c   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00377e   0ffd     ADDLW     0xfd                                                                                            
003780   6ee9     MOVWF     0xe9,0x0                                                                                        
003782   0eff     MOVLW     0xff                                                                                            
003784   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003786   6eea     MOVWF     0xea,0x0                                                                                        
003788   502a     MOVF      0x2a,0x0,0x0                                                                                    
00378a   5eee     SUBWF     0xee,0x1,0x0                                                                                    
00378c   502b     MOVF      0x2b,0x0,0x0                                                                                    
00378e   5aed     SUBWFB    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           	// BPS - 05/04/2006 I don't want the NULL at the end.                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003790   06df     DECF      0xdf,0x1,0x0   	len--;                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Second piece of information (length of data to send) is ready.            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Call mUSBUSARTTxRom to setup the transfer.                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * The actual transfer process will be handled by CDCTxService(),            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * which should be called once per Main Program loop.                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                *                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * (BPS 5/16/2006) Don't add the zero byte at the end. Send len-1            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * bytes intead of len bytes.                                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003792   0efd     MOVLW     0xfd               mUSBUSARTTxRom((rom byte*)data,len); // See cdc.h                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003794   cfdb     MOVFF     0xfdb,0x19b                                                                                     
003796   f19b                                                                                                               
003798   0efe     MOVLW     0xfe                                                                                            
00379a   cfdb     MOVFF     0xfdb,0x19c                                                                                     
00379c   f19c                                                                                                               
00379e   cfdf     MOVFF     0xfdf,0x19f                                                                                     
0037a0   f19f                                                                                                               
0037a2   0101     MOVLB     0x1                                                                                             
0037a4   0e01     MOVLW     0x1                                                                                             
0037a6   6fa0     MOVWF     0xa0,0x1                                                                                        
0037a8   0101     MOVLB     0x1                                                                                             
0037aa   0e01     MOVLW     0x1                                                                                             
0037ac   6f9a     MOVWF     0x9a,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037ae   52e5     MOVF      0xe5,0x1,0x0   }//end putrsUSBUSART                                                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0037b2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0037b4   ffd9                                                                                                               
0037b6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /******************************************************************************  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Function:        void CDCTxService(void)                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * PreCondition:    None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Input:           None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Output:          None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Side Effects:    None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Overview:        CDCTxService handles device-to-host transaction(s).          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                  This function should be called once per Main Program loop.   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *                                                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            * Note:            None                                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                            *****************************************************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037b8   cfd9     MOVFF     0xfd9,0xfe6    void CDCTxService(void)                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037ba   ffe6                                                                                                               
0037bc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0037be   ffd9                                                                                                               
0037c0   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               byte byte_to_send;                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037c2   0104     MOVLB     0x4                if(mCDCUsartTxIsBusy()) return;                                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037c4   bf1c     BTFSC     0x1c,0x7,0x1                                                                                    
0037c6   d07d     BRA       0x38c2                                                                                          
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Completing stage is necessary while [ mCDCUSartTxIsBusy()==1 ].           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * By having this stage, user can always check cdc_trf_state,                C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * and not having to call mCDCUsartTxIsBusy() directly.                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037c8   0e03     MOVLW     0x3                if(cdc_trf_state == CDC_TX_COMPLETING)                                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037ca   0101     MOVLB     0x1                                                                                             
0037cc   5d9a     SUBWF     0x9a,0x0,0x1                                                                                    
0037ce   e102     BNZ       0x37d4                                                                                          
0037d0   0101     MOVLB     0x1                    cdc_trf_state = CDC_TX_READY;                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037d2   6b9a     CLRF      0x9a,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * If CDC_TX_READY state, nothing to do, just return.                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037d4   0101     MOVLB     0x1                if(cdc_trf_state == CDC_TX_READY) return;                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037d6   519a     MOVF      0x9a,0x0,0x1                                                                                    
0037d8   e101     BNZ       0x37dc                                                                                          
0037da   d073     BRA       0x38c2                                                                                          
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * If CDC_TX_BUSY_ZLP state, send zero length packet                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037dc   0e02     MOVLW     0x2                if(cdc_trf_state == CDC_TX_BUSY_ZLP)                                         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037de   0101     MOVLB     0x1                                                                                             
0037e0   5d9a     SUBWF     0x9a,0x0,0x1                                                                                    
0037e2   e106     BNZ       0x37f0                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037e4   0104     MOVLB     0x4                    CDC_BULK_BD_IN.Cnt = 0;                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037e6   6b1d     CLRF      0x1d,0x1                                                                                        
0037e8   0101     MOVLB     0x1                    cdc_trf_state = CDC_TX_COMPLETING;                                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037ea   0e03     MOVLW     0x3                                                                                             
0037ec   6f9a     MOVWF     0x9a,0x1                                                                                        
                                               }                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037ee   d061     BRA       0x38b2             else if(cdc_trf_state == CDC_TX_BUSY)                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037f0   0101     MOVLB     0x1                                                                                             
0037f2   059a     DECF      0x9a,0x0,0x1                                                                                    
0037f4   e15e     BNZ       0x38b2                                                                                          
                                               {                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    * First, have to figure out how many byte of data to send.              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037f6   0e40     MOVLW     0x40               	if(cdc_tx_len > sizeof(cdc_data_tx))                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0037f8   6e2a     MOVWF     0x2a,0x0                                                                                        
0037fa   6a2b     CLRF      0x2b,0x0                                                                                        
0037fc   0101     MOVLB     0x1                                                                                             
0037fe   519f     MOVF      0x9f,0x0,0x1                                                                                    
003800   5c2a     SUBWF     0x2a,0x0,0x0                                                                                    
003802   0e00     MOVLW     0x0                                                                                             
003804   582b     SUBWFB    0x2b,0x0,0x0                                                                                    
003806   e203     BC        0x380e                                                                                          
003808   0e40     MOVLW     0x40               	    byte_to_send = sizeof(cdc_data_tx);                                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00380a   6edf     MOVWF     0xdf,0x0                                                                                        
00380c   d002     BRA       0x3812             	else                                                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00380e   c19f     MOVFF     0x19f,0xfdf        	    byte_to_send = cdc_tx_len;                                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003810   ffdf                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    * Next, load the number of bytes to send to Cnt in buffer descriptor    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003812   cfdf     MOVFF     0xfdf,0x41d            CDC_BULK_BD_IN.Cnt = byte_to_send;                                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003814   f41d                                                                                                               
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    * Subtract the number of bytes just about to be sent from the total.    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003816   50df     MOVF      0xdf,0x0,0x0       	cdc_tx_len = cdc_tx_len - byte_to_send;                                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003818   0101     MOVLB     0x1                                                                                             
00381a   5d9f     SUBWF     0x9f,0x0,0x1                                                                                    
00381c   0101     MOVLB     0x1                                                                                             
00381e   6f9f     MOVWF     0x9f,0x1                                                                                        
                                               	                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003820   0101     MOVLB     0x1                    pCDCDst.bRam = (byte*)&cdc_data_tx; // Set destination pointer           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003822   0e48     MOVLW     0x48                                                                                            
003824   6f9d     MOVWF     0x9d,0x1                                                                                        
003826   0e05     MOVLW     0x5                                                                                             
003828   6f9e     MOVWF     0x9e,0x1                                                                                        
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00382a   0101     MOVLB     0x1                    if(cdc_mem_type == _ROM)            // Determine type of memory source   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00382c   05a0     DECF      0xa0,0x0,0x1                                                                                    
00382e   e118     BNZ       0x3860                                                                                          
                                                   {                                                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003830   50df     MOVF      0xdf,0x0,0x0               while(byte_to_send)                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003832   e015     BZ        0x385e                                                                                          
00385c   d7e9     BRA       0x3830                                                                                          
                                                       {                                                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003834   c19b     MOVFF     0x19b,0xff6                    *pCDCDst.bRam = *pCDCSrc.bRom;                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003836   fff6                                                                                                               
003838   c19c     MOVFF     0x19c,0xff7                                                                                     
00383a   fff7                                                                                                               
00383c   0008     TBLRD                                                                                                     
00383e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003840   c19d     MOVFF     0x19d,0xfe9                                                                                     
003842   ffe9                                                                                                               
003844   c19e     MOVFF     0x19e,0xfea                                                                                     
003846   ffea                                                                                                               
003848   6eef     MOVWF     0xef,0x0                                                                                        
00384a   0101     MOVLB     0x1                            pCDCDst.bRam++;                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00384c   2b9d     INCF      0x9d,0x1,0x1                                                                                    
00384e   0e00     MOVLW     0x0                                                                                             
003850   239e     ADDWFC    0x9e,0x1,0x1                                                                                    
003852   0101     MOVLB     0x1                            pCDCSrc.bRom++;                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003854   2b9b     INCF      0x9b,0x1,0x1                                                                                    
003856   0e00     MOVLW     0x0                                                                                             
003858   239c     ADDWFC    0x9c,0x1,0x1                                                                                    
00385a   06df     DECF      0xdf,0x1,0x0                   byte_to_send--;                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                       }//end while(byte_to_send)                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   }                                                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00385e   d016     BRA       0x388c                 else // _RAM                                                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   {                                                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003860   50df     MOVF      0xdf,0x0,0x0               while(byte_to_send)                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003862   e014     BZ        0x388c                                                                                          
00388a   d7ea     BRA       0x3860                                                                                          
                                                       {                                                                    C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003864   c19b     MOVFF     0x19b,0xfe9                    *pCDCDst.bRam = *pCDCSrc.bRam;                                   C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003866   ffe9                                                                                                               
003868   c19c     MOVFF     0x19c,0xfea                                                                                     
00386a   ffea                                                                                                               
00386c   50ef     MOVF      0xef,0x0,0x0                                                                                    
00386e   c19d     MOVFF     0x19d,0xfe9                                                                                     
003870   ffe9                                                                                                               
003872   c19e     MOVFF     0x19e,0xfea                                                                                     
003874   ffea                                                                                                               
003876   6eef     MOVWF     0xef,0x0                                                                                        
003878   0101     MOVLB     0x1                            pCDCDst.bRam++;                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00387a   2b9d     INCF      0x9d,0x1,0x1                                                                                    
00387c   0e00     MOVLW     0x0                                                                                             
00387e   239e     ADDWFC    0x9e,0x1,0x1                                                                                    
003880   0101     MOVLB     0x1                            pCDCSrc.bRam++;                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003882   2b9b     INCF      0x9b,0x1,0x1                                                                                    
003884   0e00     MOVLW     0x0                                                                                             
003886   239c     ADDWFC    0x9c,0x1,0x1                                                                                    
003888   06df     DECF      0xdf,0x1,0x0                   byte_to_send--;                                                  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                       }//end while(byte_to_send._word)                                     C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   }//end if(cdc_mem_type...)                                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   /*                                                                       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    * Lastly, determine if a zero length packet state is necessary.         C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    * See explanation in USB Specification 2.0: Section 5.8.3               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                    */                                                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00388c   0101     MOVLB     0x1                    if(cdc_tx_len == 0)                                                      C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
00388e   519f     MOVF      0x9f,0x0,0x1                                                                                    
003890   e110     BNZ       0x38b2                                                                                          
                                                   {                                                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003892   0104     MOVLB     0x4                        if(CDC_BULK_BD_IN.Cnt == sizeof(cdc_data_tx))                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
003894   511d     MOVF      0x1d,0x0,0x1                                                                                    
003896   6e2a     MOVWF     0x2a,0x0                                                                                        
003898   6a2b     CLRF      0x2b,0x0                                                                                        
00389a   0e40     MOVLW     0x40                                                                                            
00389c   182a     XORWF     0x2a,0x0,0x0                                                                                    
00389e   e101     BNZ       0x38a2                                                                                          
0038a0   502b     MOVF      0x2b,0x0,0x0                                                                                    
0038a2   e104     BNZ       0x38ac                                                                                          
0038a4   0101     MOVLB     0x1                            cdc_trf_state = CDC_TX_BUSY_ZLP;                                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0038a6   0e02     MOVLW     0x2                                                                                             
0038a8   6f9a     MOVWF     0x9a,0x1                                                                                        
0038aa   d003     BRA       0x38b2                     else                                                                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0038ac   0101     MOVLB     0x1                            cdc_trf_state = CDC_TX_COMPLETING;                               C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0038ae   0e03     MOVLW     0x3                                                                                             
0038b0   6f9a     MOVWF     0x9a,0x1                                                                                        
                                                   }//end if(cdc_tx_len...)                                                 C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               }//end if(cdc_tx_sate == CDC_TX_BUSY)                                        C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                               /*                                                                           C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                * Both CDC_TX_BUSY and CDC_TX_BUSY_ZLP states use the following macro       C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                */                                                                          C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0038b2   0e40     MOVLW     0x40               mUSBBufferReady(CDC_BULK_BD_IN);                                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0038b4   0104     MOVLB     0x4                                                                                             
0038b6   171c     ANDWF     0x1c,0x1,0x1                                                                                    
0038b8   0104     MOVLB     0x4                                                                                             
0038ba   7d1c     BTG       0x1c,0x6,0x1                                                                                    
0038bc   0e88     MOVLW     0x88                                                                                            
0038be   0104     MOVLB     0x4                                                                                             
0038c0   131c     IORWF     0x1c,0x1,0x1                                                                                    
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0038c2   52e5     MOVF      0xe5,0x1,0x0   }//end CDCTxService                                                              C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
0038c4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038c6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0038c8   ffd9                                                                                                               
0038ca   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           #endif //USB_USE_CDC                                                             C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                                                                                            C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                           /** EOF cdc.c ****************************************************************/  C:\Projects\UBW\FW\D\system\usb\class\cdc\cdc.c
                                                   LIST P=18F4550                                                           C:\MCC18\SRC\TRADIT~1\PROC\p18f4550.asm
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\PROC\p18f4550.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\PROC\p18f4550.asm
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6527.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6622.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8527.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8622.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F24J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F25J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F44J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F45J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2221.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2321.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4221.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4321.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F97J60.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F96J65.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F96J60.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J60.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J65.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J60.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J60.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J65.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J60.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1330.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1231                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1231.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1230.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4450.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2450.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4523.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4423.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2523.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2423.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J90.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J90.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F83J90.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J90.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J90.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F63J90.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F45K20.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F25K20.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4685.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2685.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Function Name: Delay10TCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Description:   This routine delays for multiples of 10          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 10 Tcy.       *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  A value of 1 to 255 provides 10 to 2550   Tcy    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  delay.  A value of 0 will provide a delay of     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  2560 Tcy.                                        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10TCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           Delay10TCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
004766   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
004768   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00476a   4ee8     DCFSNZ    0xe8,0x1,0x0       dcfsnz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00476c   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10x                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00476e   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
004770   d000     BRA       0x4772             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
004772   d000     BRA       0x4774             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
004774   d000     BRA       0x4776             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
004776   2ee8     DECFSZ    0xe8,0x1,0x0       decfsz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
004778   d7fa     BRA       0x476e             bra     D10x                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00477a   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               GLOBAL  Delay10TCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;	RCS Header $Id: fxm2424u.asm,v 1.2.12.1 2006/01/13 04:11:26 nairnj Exp $       C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;	$Revision: 1.2.12.1 $                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1231                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1231.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2.12.1 2006/01/13 04:11:25 nairnj Exp $        C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2.12.1 $                                                          C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2.12.1 2006/01/13 04:11:25 nairnj Exp $           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	__AARGB0, __AARGB1, __AARGB2, __AARGB3                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  __AARGB4, __AARGB5, __AARGB6, __AARGB7                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  __AEXP                                                                  C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  __REMB3, __REMB2, __REMB1, __REMB0                                      C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2.12.1 2006/01/13 04:11:25 nairnj Exp $           C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  __BARGB3, __BARGB2, __BARGB1, __BARGB0                           C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  __BEXP                                                           C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.2.12.1 2006/01/13 04:11:26 nairnj Exp $        C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  __TEMPB3, __TEMPB2, __TEMPB1, __TEMPB0, __TEMP                   C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       24x24 Bit Unsigned Fixed Point Multiply 24 x 24 -> 48                    C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       Input:  24 bit unsigned fixed point multiplicand in AARGB0, AARGB1,      C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;               AARGB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;               24 bit unsigned fixed point multiplier in BARGB0, BARGB1,        C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;               BARGB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       Use:    CALL    FXM2424U                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       Output: 48 bit unsigned fixed point product in AARGB0, AARGB1,           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;               AARGB2, AARGB3, AARGB4, AARGB5                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       Max Timing:     65 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       Min Timing:     65 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;       PM: 64              DM: 12                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           FXM2424U                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           		GLOBAL	FXM2424U                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
0041fa   c01f     MOVFF     0x1f,0x29      		MOVFF	__AARGB0,__TEMPB0	                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
0041fc   f029                                                                                                               
0041fe   c01e     MOVFF     0x1e,0x28      		MOVFF	__AARGB1,__TEMPB1	                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004200   f028                                                                                                               
004202   c01d     MOVFF     0x1d,0x27      		MOVFF	__AARGB2,__TEMPB2	                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004204   f027                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004206   501d     MOVF      0x1d,0x0,0x0   		MOVF	__AARGB2,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004208   0222     MULWF     0x22,0x0       		MULWF	__BARGB2                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00420a   cff4     MOVFF     0xff4,0x1b     		MOVFF	PRODH,__AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00420c   f01b                                                                                                               
00420e   cff3     MOVFF     0xff3,0x1a     		MOVFF	PRODL,__AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004210   f01a                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004212   501e     MOVF      0x1e,0x0,0x0   		MOVF	__AARGB1,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004214   0223     MULWF     0x23,0x0       		MULWF	__BARGB1                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004216   cff4     MOVFF     0xff4,0x1d     		MOVFF	PRODH,__AARGB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004218   f01d                                                                                                               
00421a   cff3     MOVFF     0xff3,0x1c     		MOVFF	PRODL,__AARGB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00421c   f01c                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00421e   0222     MULWF     0x22,0x0       		MULWF	__BARGB2                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004220   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004222   261b     ADDWF     0x1b,0x1,0x0   		ADDWF	__AARGB4,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004224   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004226   221c     ADDWFC    0x1c,0x1,0x0   		ADDWFC	__AARGB3,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004228   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00422a   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	__AARGB2,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00422c   5027     MOVF      0x27,0x0,0x0   		MOVF	__TEMPB2,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00422e   0223     MULWF     0x23,0x0       		MULWF	__BARGB1                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004230   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004232   261b     ADDWF     0x1b,0x1,0x0   		ADDWF	__AARGB4,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004234   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004236   221c     ADDWFC    0x1c,0x1,0x0   		ADDWFC	__AARGB3,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004238   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00423a   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	__AARGB2,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00423c   501f     MOVF      0x1f,0x0,0x0   		MOVF	__AARGB0,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00423e   0222     MULWF     0x22,0x0       		MULWF	__BARGB2                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004240   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004242   261c     ADDWF     0x1c,0x1,0x0   		ADDWF	__AARGB3,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004244   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004246   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	__AARGB2,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004248   501f     MOVF      0x1f,0x0,0x0   		MOVF	__AARGB0,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00424a   0223     MULWF     0x23,0x0       		MULWF	__BARGB1                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00424c   6a1e     CLRF      0x1e,0x0       		CLRF	__AARGB1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00424e   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004250   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	__AARGB1,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004252   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004254   261d     ADDWF     0x1d,0x1,0x0   		ADDWF	__AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004256   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004258   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	__AARGB1,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00425a   5027     MOVF      0x27,0x0,0x0   		MOVF	__TEMPB2,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00425c   0224     MULWF     0x24,0x0       		MULWF	__BARGB0                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00425e   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004260   261c     ADDWF     0x1c,0x1,0x0   		ADDWF	__AARGB3,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004262   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004264   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	__AARGB2,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004266   6a1f     CLRF      0x1f,0x0       		CLRF	__AARGB0                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004268   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00426a   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	__AARGB1,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00426c   221f     ADDWFC    0x1f,0x1,0x0   		ADDWFC	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00426e   5028     MOVF      0x28,0x0,0x0   		MOVF	__TEMPB1,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004270   0224     MULWF     0x24,0x0       		MULWF	__BARGB0                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004272   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004274   261d     ADDWF     0x1d,0x1,0x0   		ADDWF	__AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004276   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004278   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	__AARGB1,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00427a   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00427c   221f     ADDWFC    0x1f,0x1,0x0   		ADDWFC	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00427e   5029     MOVF      0x29,0x0,0x0   		MOVF	__TEMPB0,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004280   0224     MULWF     0x24,0x0       		MULWF	__BARGB0                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004282   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004284   261e     ADDWF     0x1e,0x1,0x0   		ADDWF	__AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004286   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
004288   221f     ADDWFC    0x1f,0x1,0x0   		ADDWFC	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
00428a   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm2424u.asm
                                           ;	RCS Header $Id: cmath18.asm,v 1.4.12.1 2006/01/13 04:11:25 nairnj Exp $        C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           SIGN		RES 1       ; save location for sign in MSB                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           __FPFLAGSbits                                                                    C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           __FPFLAGS		RES 1       ; floating point library exception flags                  C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   GLOBAL  SIGN, __FPFLAGS, __FPFLAGSbits                                   C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;	RCS Header $Id: aarg.asm,v 1.2.12.1 2006/01/13 04:11:25 nairnj Exp $           C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __REMB3                                                                          C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB7		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __REMB2                                                                          C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB6		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __REMB1                                                                          C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB5		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __REMB0                                                                          C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB4		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB3		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB2		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB1		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AARGB0		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           __AEXP		RES 1       ; 8 bit biased exponent for argument A                       C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL	__AARGB0, __AARGB1, __AARGB2, __AARGB3                                   C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   GLOBAL  __AARGB4, __AARGB5, __AARGB6, __AARGB7                           C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  __AEXP                                                                  C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  __REMB3, __REMB2, __REMB1, __REMB0                                      C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;	RCS Header $Id: barg.asm,v 1.2.12.1 2006/01/13 04:11:25 nairnj Exp $           C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           __BARGB3		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           __BARGB2		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           __BARGB1		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           __BARGB0		RES 1       ; most significant byte of argument B                      C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           __BEXP		RES 1       ; 8 bit biased exponent for argument B                       C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  __BARGB3, __BARGB2, __BARGB1, __BARGB0                           C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  __BEXP                                                           C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;	RCS Header $Id: temparg.asm,v 1.2.12.1 2006/01/13 04:11:26 nairnj Exp $        C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           __TEMPB3		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           __TEMPB2		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           __TEMPB1		RES 1                                                                  C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           __TEMP                                                                           C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           __TEMPB0		RES 1       ; temporary storage                                        C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   GLOBAL  __TEMPB3, __TEMPB2, __TEMPB1, __TEMPB0, __TEMP                   C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           #include <stdio.h>                                                               C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                           /* printf() is a wrapper function which calls vfprintf() with stdout as the      C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                              destination output stream. EOF is returned on error, else the number          C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                              of characters output. */                                                      C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                           int                                                                              C:\MCC18\src\TRADIT~1\stdclib\printf.c
004452   cfd9     MOVFF     0xfd9,0xfe6    printf (const rom char *fmt, ...)                                                C:\MCC18\src\TRADIT~1\stdclib\printf.c
004454   ffe6                                                                                                               
004456   cfda     MOVFF     0xfda,0xfe6                                                                                     
004458   ffe6                                                                                                               
00445a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00445c   ffd9                                                                                                               
00445e   cfe2     MOVFF     0xfe2,0xfda                                                                                     
004460   ffda                                                                                                               
004462   52e6     MOVF      0xe6,0x1,0x0                                                                                    
004464   52e6     MOVF      0xe6,0x1,0x0                                                                                    
004466   52e6     MOVF      0xe6,0x1,0x0                                                                                    
004468   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                             va_list ap;                                                                    C:\MCC18\src\TRADIT~1\stdclib\printf.c
                                             int n;                                                                         C:\MCC18\src\TRADIT~1\stdclib\printf.c
00446a   50d9     MOVF      0xd9,0x0,0x0     va_start (ap, fmt);                                                            C:\MCC18\src\TRADIT~1\stdclib\printf.c
00446c   0ffb     ADDLW     0xfb                                                                                            
00446e   6e2a     MOVWF     0x2a,0x0                                                                                        
004470   0eff     MOVLW     0xff                                                                                            
004472   20da     ADDWFC    0xda,0x0,0x0                                                                                    
004474   6e2b     MOVWF     0x2b,0x0                                                                                        
004476   c02a     MOVFF     0x2a,0xfde                                                                                      
004478   ffde                                                                                                               
00447a   6edd     MOVWF     0xdd,0x0                                                                                        
00447c   cfde     MOVFF     0xfde,0xfe6      n = vfprintf (stdout, fmt, ap);                                                C:\MCC18\src\TRADIT~1\stdclib\printf.c
00447e   ffe6                                                                                                               
004480   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
004482   ffe6                                                                                                               
004484   0efb     MOVLW     0xfb                                                                                            
004486   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004488   ffe6                                                                                                               
00448a   0efc     MOVLW     0xfc                                                                                            
00448c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00448e   ffe6                                                                                                               
004490   0efd     MOVLW     0xfd                                                                                            
004492   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004494   ffe6                                                                                                               
004496   c1df     MOVFF     0x1df,0xfe6                                                                                     
004498   ffe6                                                                                                               
00449a   c1e0     MOVFF     0x1e0,0xfe6                                                                                     
00449c   ffe6                                                                                                               
00449e   ec7f     CALL      0x28fe,0x0                                                                                      
0044a0   f014                                                                                                               
0044a2   6e2a     MOVWF     0x2a,0x0                                                                                        
0044a4   0e07     MOVLW     0x7                                                                                             
0044a6   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0044a8   e202     BC        0x44ae                                                                                          
0044aa   6ae1     CLRF      0xe1,0x0                                                                                        
0044ac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0044ae   6ee1     MOVWF     0xe1,0x0                                                                                        
0044b0   502a     MOVF      0x2a,0x0,0x0                                                                                    
0044b2   0e02     MOVLW     0x2                                                                                             
0044b4   cff3     MOVFF     0xff3,0xfdb                                                                                     
0044b6   ffdb                                                                                                               
0044b8   0e03     MOVLW     0x3                                                                                             
0044ba   cff4     MOVFF     0xff4,0xfdb                                                                                     
0044bc   ffdb                                                                                                               
                                             va_end (ap);                                                                   C:\MCC18\src\TRADIT~1\stdclib\printf.c
0044be   0e02     MOVLW     0x2              return n;                                                                      C:\MCC18\src\TRADIT~1\stdclib\printf.c
0044c0   cfdb     MOVFF     0xfdb,0x2a                                                                                      
0044c2   f02a                                                                                                               
0044c4   0e03     MOVLW     0x3                                                                                             
0044c6   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0044c8   f02b                                                                                                               
0044ca   c02a     MOVFF     0x2a,0xff3                                                                                      
0044cc   fff3                                                                                                               
0044ce   c02b     MOVFF     0x2b,0xff4                                                                                      
0044d0   fff4                                                                                                               
0044d2   0e04     MOVLW     0x4            }                                                                                C:\MCC18\src\TRADIT~1\stdclib\printf.c
0044d4   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0044d6   e202     BC        0x44dc                                                                                          
0044d8   6ae1     CLRF      0xe1,0x0                                                                                        
0044da   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0044dc   6ee1     MOVWF     0xe1,0x0                                                                                        
0044de   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0044e0   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0044e2   ffda                                                                                                               
0044e4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0044e6   ffd9                                                                                                               
0044e8   0012     RETURN    0x0                                                                                             
                                           #include <stdio.h>                                                               C:\MCC18\src\TRADIT~1\stdclib\stdout.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\stdout.c
                                           /* by default stdout issues to the USART */                                      C:\MCC18\src\TRADIT~1\stdclib\stdout.c
                                           FILE *stdout = _H_USART;                                                         C:\MCC18\src\TRADIT~1\stdclib\stdout.c
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1231                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1231.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ; $Id: p18macro.inc,v 1.2 2005/05/20 15:34:54 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
004644   0eff     MOVLW     0xff           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
004646   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
004648   6ee9     MOVWF     0xe9,0x0                                                                                        
00464a   0eff     MOVLW     0xff                                                                                            
00464c   20e2     ADDWFC    0xe2,0x0,0x0                                                                                    
00464e   6eea     MOVWF     0xea,0x0                                                                                        
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00465c   0e60     MOVLW     0x60            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00465e   64f3     CPFSGT    0xf3,0x0                                                                                        
004660   d004     BRA       0x466a                                                                                          
004662   0e7b     MOVLW     0x7b                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
004664   60f3     CPFSLT    0xf3,0x0                                                                                        
004666   d001     BRA       0x466a                                                                                          
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ; @name toupper                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;The {\bf toupper} function converts a lower case character to the               C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;corresponding upper case character.                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;@return If {\bf islower} is true for the value of {\bf c}, the corresponding    C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;upper case equivalent is returned, else the value of {\bf c} is returned        C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;unchanged.                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ; int toupper (int c);                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           CTYPE CODE                                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           toupper                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                             global toupper                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ; Proceedure: Use FSR0 as pointer to 'c'                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           ;         Return with result in PROD                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                             ; Set FSR0 = FSR1 - 2 ( location of 'c') after checking upper byte for 0       C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                     StkSetPtrToOffset FSR0L,-1                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                             ; Copy 'c' into target location                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004650   cfed     MOVFF     0xfed,0xff4    	  movff POSTDEC0, PRODH                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004652   fff4                                                                                                               
004654   cfef     MOVFF     0xfef,0xff3    	  movff INDF0, PRODL                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004656   fff3                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004658   66f4     TSTFSZ    0xf4,0x0                 tstfsz    PRODH,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
00465a   d007     BRA       0x466a                   bra       jNoMatch            ; upper byte must be 0                   C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                             ; Test for lower case condition                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                     jmpFleL   PRODL,ACCESS,'a'-1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                     jmpFgeL   PRODL,ACCESS,'z'+1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                             ; Convert char from lower to upper by clearing bit 5                           C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
004668   9af3     BCF       0xf3,0x5,0x0             bcf       PRODL,5,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           jNoMatch:                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
00466a   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\toupper.asm
                                           #include <stdio.h>                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <ctype.h>                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <string.h>                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_MINUS 0x1                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_PLUS  0x2                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SPACE 0x4                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_OCTO  0x8                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_ZERO  0x10                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SIGNED 0x80                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           static const rom char s_digits[] = "0123456789abcdef";                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           static unsigned char                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0028d2   eca5     CALL      0x334a,0x0     s_put_n_chars (FILE * handle, unsigned char n, char c)                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0028d4   f019                                                                                                               
00334a   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
00334c   ffe6                                                                                                               
00334e   cfda     MOVFF     0xfda,0xfe6                                                                                     
003350   ffe6                                                                                                               
003352   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003354   ffd9                                                                                                               
003356   cfe2     MOVFF     0xfe2,0xfda                                                                                     
003358   ffda                                                                                                               
00335a   0012     RETURN    0x0                                                                                             
                                           {                                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0028d6   0efb     MOVLW     0xfb             while (n--)                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0028d8   cfdb     MOVFF     0xfdb,0xff3                                                                                     
0028da   fff3                                                                                                               
0028dc   06db     DECF      0xdb,0x1,0x0                                                                                    
0028de   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0028e0   0900     IORLW     0x0                                                                                             
0028e2   e00a     BZ        0x28f8                                                                                          
0028e4   ecf3     CALL      0x33e6,0x0         if (putc (c, handle) == EOF)                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0028e6   f019                                                                                                               
0028e8   0efa     MOVLW     0xfa                                                                                            
0028ea   ec5e     CALL      0x34bc,0x0                                                                                      
0028ec   f01a                                                                                                               
0028ee   e1f3     BNZ       0x28d6                                                                                          
0028f0   1c2b     COMF      0x2b,0x0,0x0                                                                                    
0028f2   e1f1     BNZ       0x28d6                                                                                          
0028f4   0e01     MOVLW     0x1                  return 1;                                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0028f6   d001     BRA       0x28fa                                                                                          
0028f8   0e00     MOVLW     0x0              return 0;                                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0028fa   efd4     GOTO      0x33a8         }                                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0028fc   f019                                                                                                               
0033a8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0033aa   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0033ac   ffda                                                                                                               
0033ae   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0033b0   ffd9                                                                                                               
0033b2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_UNSPECIFIED 0                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_LONG 1                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_SHLONG 2                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_BYTE   3                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                           int                                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0028fe   eca5     CALL      0x334a,0x0     vfprintf (auto FILE *handle, auto const rom char *f, auto va_list ap)            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002900   f019                                                                                                               
002902   0e3b     MOVLW     0x3b                                                                                            
002904   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
002906   e302     BNC       0x290c                                                                                          
002908   68e1     SETF      0xe1,0x0                                                                                        
00290a   52e6     MOVF      0xe6,0x1,0x0                                                                                    
00290c   6ee1     MOVWF     0xe1,0x0                                                                                        
                                           {                                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                             unsigned char c;                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00290e   0e01     MOVLW     0x1              int count = 0;                                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002910   6adb     CLRF      0xdb,0x0                                                                                        
002912   0e02     MOVLW     0x2                                                                                             
002914   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002916   0ef9     MOVLW     0xf9             for (c = *f; c; c = *++f)                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002918   cfdb     MOVFF     0xfdb,0xff6                                                                                     
00291a   fff6                                                                                                               
00291c   0efa     MOVLW     0xfa                                                                                            
00291e   cfdb     MOVFF     0xfdb,0xff7                                                                                     
002920   fff7                                                                                                               
002922   0efb     MOVLW     0xfb                                                                                            
002924   cfdb     MOVFF     0xfdb,0xff8                                                                                     
002926   fff8                                                                                                               
002928   0008     TBLRD                                                                                                     
00292a   50f5     MOVF      0xf5,0x0,0x0                                                                                    
00292c   6edf     MOVWF     0xdf,0x0                                                                                        
00292e   50df     MOVF      0xdf,0x0,0x0                                                                                    
002930   e102     BNZ       0x2936                                                                                          
002932   eff8     GOTO      0x31f0                                                                                          
002934   f018                                                                                                               
0031ea   d979     RCALL     0x34de                                                                                          
0031ec   ef94     GOTO      0x2928                                                                                          
0031ee   f014                                                                                                               
0034de   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0034e0   0ff9     ADDLW     0xf9                                                                                            
0034e2   6ee9     MOVWF     0xe9,0x0                                                                                        
0034e4   0eff     MOVLW     0xff                                                                                            
0034e6   ef08     GOTO      0x3410                                                                                          
0034e8   f01a                                                                                                               
                                               {                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002936   0e25     MOVLW     0x25                 if (c == '%')                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002938   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00293a   e002     BZ        0x2940                                                                                          
00293c   efeb     GOTO      0x31d6                                                                                          
00293e   f018                                                                                                               
                                                   {                                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002940   0e03     MOVLW     0x3                      unsigned char flags = 0;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002942   6adb     CLRF      0xdb,0x0                                                                                        
002944   0e04     MOVLW     0x4                      unsigned char width = 0;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002946   6adb     CLRF      0xdb,0x0                                                                                        
002948   0e05     MOVLW     0x5                      unsigned char precision = 0;                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00294a   6adb     CLRF      0xdb,0x0                                                                                        
00294c   0e06     MOVLW     0x6                      unsigned char have_precision = 0;                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00294e   6adb     CLRF      0xdb,0x0                                                                                        
002950   0e07     MOVLW     0x7                      unsigned char size = 0;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002952   6adb     CLRF      0xdb,0x0                                                                                        
                                                     unsigned char space_cnt;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned char cval;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned long larg;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     far rom char *romstring;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     char *ramstring;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     int n;                                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* get the first character of the conversion specifier */              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002954   ec0d     CALL      0x321a,0x0               c = *++f;                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002956   f019                                                                                                               
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /**  The conversion specification has, after the '%' character:        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         7.9.6.1                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * Zero or more flags (in any order) that modify the meaning of the  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specification.                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional minimum field width. If the converted value has       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          fewer characters than the field width, it will be padded with     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          spaces (by default) on the left (or right, if the left            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          adjustment flag, described later, has been given) to the field    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          width. The field width takes the form of an asterisk *            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (described later) or a decimal integer.                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional precision that gives the minimum number of digits     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to appear for the d, i, o, u, x, and X conversions, the           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of digits to appear after the decimal point        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          character for e, E, and f conversions, the maximum number         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of significant digits for the g and G conversions, or the         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of characters to be written from a string in       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          s conversion. The precision takes the form of a period (.)        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          followed by an asterisk * (described later) or by an optional     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal integer; if only the period is specified, the precision   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          is taken as zero. If a precision appears with any other           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier, the behaviour is undefined.                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional h specifying that a following d, i, o, u, x, or X     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a short int or unsigned short     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          int argument (the argument will have been promoted according      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to the integer promotions, and its value shall be converted       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to short int or unsigned short int before printing); an           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          optional h specifying that a following n conversion specifier     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          applies to a pointer to a short int argument; an optional l       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (ell) specifying that a following d, i, o, u, x, or X             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a long int or unsigned long int   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument; or an optional L specifying that a following e, E,      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          f, g, or G conversion specifier applies to a long double          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument. If an h, l, or L appears with any other conversion      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specifier, the behaviour is undefined.                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * A character that specifies the type of conversion to be applied.  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /** check for a flag.                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        7.9.6.1                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        The flag characters and their meanings are:                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        - The result of the conversion will be left-justified within        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the field. (It will be right justified if this flag is not        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specified.)                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        + The result of a signed conversion will always begin with a        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          plus or a minus sign. (It will begin with a sign only when        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          a negative value is converted if this flag is not specified.)     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        space  If the first character of a signed conversion is not a       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          sign, or if a signed conversion results in no characters, a       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          space will be prefixed to the result. If the space and + flags    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          both appear, the space flag will be ignored.                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        # The result is to be converted to an "alternate form." For o       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion, it increases the precision to force the first digit   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of the result to be a zero. For x (or X) conversion, a nonzero    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result will have 0x (or 0X) prefixed to it. For e, E, f, g,       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          and G conversions, the result will always contain a decimal-      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          point character, even if no digits follow it. (Normally, a        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal point character appears in the result of these            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions only if a digit follows it.) For g and G              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions, trailing zeros will not be removed from the          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result. For other conversions the behaviour is undefined.         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        0 For d, i, o, u, x, X, e, E, f, g, and G conversions, leading      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          zeros (following any indication of sign or base) are used to      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          pad to the field width; no space padding is performed. If         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the 0 and - flags both appear, the 0 flag will be ignored.        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                          For other conversions, the behaviour is undefined.                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002958   0e2d     MOVLW     0x2d                     while (c == '-' || c == '+' || c == ' ' || c == '#'                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00295a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00295c   e00c     BZ        0x2976                                                                                          
00295e   0e2b     MOVLW     0x2b                                                                                            
002960   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002962   e009     BZ        0x2976                                                                                          
002964   0e20     MOVLW     0x20                                                                                            
002966   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002968   e006     BZ        0x2976                                                                                          
00296a   0e23     MOVLW     0x23                                                                                            
0029a8   d7d5     BRA       0x2954                                                                                          
00296c   5cdf     SUBWF     0xdf,0x0,0x0                    || c == '0')                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00296e   e003     BZ        0x2976                                                                                          
002970   0e30     MOVLW     0x30                                                                                            
002972   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002974   e11a     BNZ       0x29aa                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002976   50df     MOVF      0xdf,0x0,0x0                 switch (c)                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002978   0a30     XORLW     0x30                                                                                            
00297a   e014     BZ        0x29a4                                                                                          
00297c   0a13     XORLW     0x13                                                                                            
00297e   e00f     BZ        0x299e                                                                                          
002980   0a03     XORLW     0x3                                                                                             
002982   e00a     BZ        0x2998                                                                                          
002984   0a0b     XORLW     0xb                                                                                             
002986   e005     BZ        0x2992                                                                                          
002988   0a06     XORLW     0x6                                                                                             
00298a   e1e4     BNZ       0x2954                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '-':                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00298c   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00298e   80db     BSF       0xdb,0x0,0x0                                                                                    
002990   d7e1     BRA       0x2954                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '+':                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002992   0e03     MOVLW     0x3                              flags |= _FLAG_PLUS;                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002994   82db     BSF       0xdb,0x1,0x0                                                                                    
002996   d7de     BRA       0x2954                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case ' ':                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002998   0e03     MOVLW     0x3                              flags |= _FLAG_SPACE;                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00299a   84db     BSF       0xdb,0x2,0x0                                                                                    
00299c   d7db     BRA       0x2954                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '#':                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00299e   0e03     MOVLW     0x3                              flags |= _FLAG_OCTO;                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029a0   86db     BSF       0xdb,0x3,0x0                                                                                    
0029a2   d7d8     BRA       0x2954                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '0':                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029a4   0e03     MOVLW     0x3                              flags |= _FLAG_ZERO;                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029a6   88db     BSF       0xdb,0x4,0x0                                                                                    
                                                             break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional width field is next */                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029aa   0e2a     MOVLW     0x2a                     if (c == '*')                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029ac   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0029ae   e11b     BNZ       0x29e6                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029b0   ec09     CALL      0x3212,0x0                   n = va_arg (ap, int);                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029b2   f019                                                                                                               
0029b4   ec57     CALL      0x32ae,0x0                                                                                      
0029b6   f019                                                                                                               
0032ae   0e13     MOVLW     0x13                                                                                            
0032b0   cfee     MOVFF     0xfee,0xfdb                                                                                     
0032b2   ffdb                                                                                                               
0032b4   0e14     MOVLW     0x14                                                                                            
0032b6   cfed     MOVFF     0xfed,0xfdb                                                                                     
0032b8   ffdb                                                                                                               
0029b8   e010     BZ        0x29da                       if (n < 0)                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032ba   0e13     MOVLW     0x13                                                                                            
0032bc   cfdb     MOVFF     0xfdb,0x2a                                                                                      
0032be   f02a                                                                                                               
0032c0   0e14     MOVLW     0x14                                                                                            
0032c2   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0032c4   f02b                                                                                                               
0032c6   0100     MOVLB     0x0                                                                                             
0032c8   0e80     MOVLW     0x80                                                                                            
0032ca   142b     ANDWF     0x2b,0x0,0x0                                                                                    
0032cc   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029ba   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029bc   80db     BSF       0xdb,0x0,0x0                                                                                    
0029be   681e     SETF      0x1e,0x0                         width = -n;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029c0   681f     SETF      0x1f,0x0                                                                                        
0029c2   0e13     MOVLW     0x13                                                                                            
0029c4   cfdb     MOVFF     0xfdb,0x23                                                                                      
0029c6   f023                                                                                                               
0029c8   0e14     MOVLW     0x14                                                                                            
0029ca   cfdb     MOVFF     0xfdb,0x24                                                                                      
0029cc   f024                                                                                                               
0029ce   ec46     CALL      0x428c,0x0                                                                                      
0029d0   f021                                                                                                               
0029d2   0e04     MOVLW     0x4                                                                                             
0029d4   c01c     MOVFF     0x1c,0xfdb                                                                                      
0029d6   ffdb                                                                                                               
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029d8   d003     BRA       0x29e0                       else                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029da   0e13     MOVLW     0x13                           width = n;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029dc   ec40     CALL      0x3280,0x0                                                                                      
0029de   f019                                                                                                               
0029e0   ec0d     CALL      0x321a,0x0                   c = *++f;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029e2   f019                                                                                                               
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029e4   d00b     BRA       0x29fc                   else                                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029e6   0e09     MOVLW     0x9                          cval = 0;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029e8   6adb     CLRF      0xdb,0x0                                                                                        
0029ea   ecae     CALL      0x335c,0x0                   while ((unsigned char) isdigit (c))                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029ec   f019                                                                                                               
0029ee   e003     BZ        0x29f6                                                                                          
0029f4   d7fa     BRA       0x29ea                                                                                          
00335c   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
00335e   ffe6                                                                                                               
003360   6ae6     CLRF      0xe6,0x0                                                                                        
003362   ec36     CALL      0x466c,0x0                                                                                      
003364   f023                                                                                                               
003366   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003368   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00336a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00336c   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029f0   ec22     CALL      0x3444,0x0                       cval = cval * 10 + c - '0';                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029f2   f01a                                                                                                               
003444   0e09     MOVLW     0x9                                                                                             
003446   50db     MOVF      0xdb,0x0,0x0                                                                                    
003448   0d0a     MULLW     0xa                                                                                             
00344a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00344c   24df     ADDWF     0xdf,0x0,0x0                                                                                    
00344e   0fd0     ADDLW     0xd0                                                                                            
003450   6ee7     MOVWF     0xe7,0x0                                                                                        
003452   0e09     MOVLW     0x9                                                                                             
003454   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003456   ffdb                                                                                                               
003458   ef0d     GOTO      0x321a                           c = *++f;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00345a   f019                                                                                                               
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029f6   0e09     MOVLW     0x9                          width = cval;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029f8   ec40     CALL      0x3280,0x0                                                                                      
0029fa   f019                                                                                                               
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* if '-' is specified, '0' is ignored */                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029fc   0e03     MOVLW     0x3                      if (flags & _FLAG_MINUS)                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0029fe   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
002a00   98db     BCF       0xdb,0x4,0x0               flags &= ~_FLAG_ZERO;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional precision field is next */                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a02   0e2e     MOVLW     0x2e                     if (c == '.')                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a04   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a06   e11b     BNZ       0x2a3e                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a08   ec0d     CALL      0x321a,0x0                   c = *++f;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a0a   f019                                                                                                               
002a0c   0e2a     MOVLW     0x2a                         if (c == '*')                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a0e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a10   e10b     BNZ       0x2a28                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a12   ec09     CALL      0x3212,0x0                       n = va_arg (ap, int);                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a14   f019                                                                                                               
002a16   ec57     CALL      0x32ae,0x0                                                                                      
002a18   f019                                                                                                               
003212   d929     RCALL     0x3466                                                                                          
003214   0e02     MOVLW     0x2                                                                                             
003216   effa     GOTO      0x33f4                                                                                          
003218   f019                                                                                                               
0033f4   5e2a     SUBWF     0x2a,0x1,0x0                                                                                    
0033f6   0e00     MOVLW     0x0                                                                                             
0033f8   5a2b     SUBWFB    0x2b,0x1,0x0                                                                                    
0033fa   0ef7     MOVLW     0xf7                                                                                            
0033fc   c02a     MOVFF     0x2a,0xfdb                                                                                      
0033fe   ffdb                                                                                                               
003400   0ef8     MOVLW     0xf8                                                                                            
003402   c02b     MOVFF     0x2b,0xfdb                                                                                      
003404   ffdb                                                                                                               
003406   c02a     MOVFF     0x2a,0xfe9                                                                                      
003408   ffe9                                                                                                               
00340a   c02b     MOVFF     0x2b,0xfea                                                                                      
00340c   ffea                                                                                                               
00340e   0012     RETURN    0x0                                                                                             
003466   0ef7     MOVLW     0xf7                                                                                            
003468   cfdb     MOVFF     0xfdb,0x2a                                                                                      
00346a   f02a                                                                                                               
00346c   0ef8     MOVLW     0xf8                                                                                            
00346e   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003470   f02b                                                                                                               
003472   0012     RETURN    0x0                                                                                             
002a1a   e103     BNZ       0x2a22                           if (n >= 0)                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                               {                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a1c   0e13     MOVLW     0x13                                 precision = n;                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a1e   ec92     CALL      0x3324,0x0                                                                                      
002a20   f019                                                                                                               
003324   50db     MOVF      0xdb,0x0,0x0                                                                                    
003326   d8ce     RCALL     0x34c4                                                                                          
0034c4   6ee7     MOVWF     0xe7,0x0                                                                                        
0034c6   0e05     MOVLW     0x5                                                                                             
0034c8   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0034ca   ffdb                                                                                                               
0034cc   0012     RETURN    0x0                                                                                             
003328   0e01     MOVLW     0x1                                  have_precision = 1;                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00332a   6ef3     MOVWF     0xf3,0x0                                                                                        
00332c   0e06     MOVLW     0x6                                                                                             
00332e   cff3     MOVFF     0xff3,0xfdb                                                                                     
003330   ffdb                                                                                                               
003332   0012     RETURN    0x0                                                                                             
                                                               }                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a22   ec0d     CALL      0x321a,0x0                       c = *++f;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a24   f019                                                                                                               
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a26   d00b     BRA       0x2a3e                       else                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a28   0e09     MOVLW     0x9                              cval = 0;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a2a   6adb     CLRF      0xdb,0x0                                                                                        
002a2c   ecae     CALL      0x335c,0x0                       while ((unsigned char) isdigit (c))                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a2e   f019                                                                                                               
002a30   e003     BZ        0x2a38                                                                                          
002a36   d7fa     BRA       0x2a2c                                                                                          
                                                               {                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a32   ec22     CALL      0x3444,0x0                           cval = cval * 10 + c - '0';                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a34   f01a                                                                                                               
                                                                 c = *++f;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                               }                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a38   0e09     MOVLW     0x9                              precision = cval;                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a3a   ec92     CALL      0x3324,0x0                                                                                      
002a3c   f019                                                                                                               
                                                             have_precision = 1;                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional 'h' specifier. since int and short int are             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the same size for MPLAB C18, this is a NOP for us. */               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a3e   0e68     MOVLW     0x68                     if (c == 'h')                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a40   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a42   e107     BNZ       0x2a52                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a44   ec0d     CALL      0x321a,0x0                   c = *++f;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a46   f019                                                                                                               
                                                         /* if 'c' is another 'h' character, this is an 'hh'                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifier and the size is 8 bits */                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a48   0e68     MOVLW     0x68                         if (c == 'h')                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a4a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a4c   e11d     BNZ       0x2a88                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a4e   0e03     MOVLW     0x3                              size = _FMT_BYTE;                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             c = *++f;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* 'z' and 't' are both 16-bit and so are NOPs */                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a50   d018     BRA       0x2a82                   else if (c == 't' || c == 'z')                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a52   0e74     MOVLW     0x74                                                                                            
002a54   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a56   e017     BZ        0x2a86                                                                                          
002a58   0e7a     MOVLW     0x7a                                                                                            
002a5a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a5c   e014     BZ        0x2a86                                                                                          
                                                       c = *++f;                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'H' specifier tells us to deal with 24-bit integers.            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the 'T' and 'Z' specifiers are also 24 bit */                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a5e   0e48     MOVLW     0x48                     else if (c == 'H' || c == 'T' || c == 'Z')                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a60   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a62   e006     BZ        0x2a70                                                                                          
002a64   0e54     MOVLW     0x54                                                                                            
002a66   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a68   e003     BZ        0x2a70                                                                                          
002a6a   0e5a     MOVLW     0x5a                                                                                            
002a6c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a6e   e102     BNZ       0x2a74                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a70   0e02     MOVLW     0x2                          size = _FMT_SHLONG;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'l' specifier tells us to deal with 32-bit integers             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                        'j' specifies intmax_t (long in our case). */                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a72   d007     BRA       0x2a82                   else if (c == 'l' || c == 'j')                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a74   0e6c     MOVLW     0x6c                                                                                            
002a76   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a78   e003     BZ        0x2a80                                                                                          
002a7a   0e6a     MOVLW     0x6a                                                                                            
002a7c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a7e   e104     BNZ       0x2a88                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a80   0e01     MOVLW     0x1                          size = _FMT_LONG;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a82   ece5     CALL      0x33ca,0x0                                                                                      
002a84   f019                                                                                                               
002a86   dbc9     RCALL     0x321a                       c = *++f;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00321a   d961     RCALL     0x34de                                                                                          
00321c   0008     TBLRD                                                                                                     
00321e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003220   6edf     MOVWF     0xdf,0x0                                                                                        
003222   0012     RETURN    0x0                                                                                             
003410   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003412   6eea     MOVWF     0xea,0x0                                                                                        
003414   2aef     INCF      0xef,0x1,0x0                                                                                    
003416   cfee     MOVFF     0xfee,0xff6                                                                                     
003418   fff6                                                                                                               
00341a   0e00     MOVLW     0x0                                                                                             
00341c   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
00341e   cfee     MOVFF     0xfee,0xff7                                                                                     
003420   fff7                                                                                                               
003422   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
003424   cfee     MOVFF     0xfee,0xff8                                                                                     
003426   fff8                                                                                                               
003428   0012     RETURN    0x0                                                                                             
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a88   50df     MOVF      0xdf,0x0,0x0             switch (c)                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002a8a   0a6e     XORLW     0x6e                                                                                            
002a8c   e101     BNZ       0x2a90                                                                                          
002a8e   d37f     BRA       0x318e                                                                                          
002a90   0a1e     XORLW     0x1e                                                                                            
002a92   e101     BNZ       0x2a96                                                                                          
002a94   d192     BRA       0x2dba                                                                                          
002a96   0a20     XORLW     0x20                                                                                            
002a98   e101     BNZ       0x2a9c                                                                                          
002a9a   d18f     BRA       0x2dba                                                                                          
002a9c   0a3f     XORLW     0x3f                                                                                            
002a9e   e101     BNZ       0x2aa2                                                                                          
002aa0   d149     BRA       0x2d34                                                                                          
002aa2   0a1a     XORLW     0x1a                                                                                            
002aa4   e101     BNZ       0x2aa8                                                                                          
002aa6   d146     BRA       0x2d34                                                                                          
002aa8   0a0d     XORLW     0xd                                                                                             
002aaa   e101     BNZ       0x2aae                                                                                          
002aac   d143     BRA       0x2d34                                                                                          
002aae   0a20     XORLW     0x20                                                                                            
002ab0   e101     BNZ       0x2ab4                                                                                          
002ab2   d140     BRA       0x2d34                                                                                          
002ab4   0a3a     XORLW     0x3a                                                                                            
002ab6   e101     BNZ       0x2aba                                                                                          
002ab8   d13d     BRA       0x2d34                                                                                          
002aba   0a20     XORLW     0x20                                                                                            
002abc   e101     BNZ       0x2ac0                                                                                          
002abe   d13a     BRA       0x2d34                                                                                          
002ac0   0a26     XORLW     0x26                                                                                            
002ac2   e101     BNZ       0x2ac6                                                                                          
002ac4   d135     BRA       0x2d30                                                                                          
002ac6   0a0d     XORLW     0xd                                                                                             
002ac8   e101     BNZ       0x2acc                                                                                          
002aca   d132     BRA       0x2d30                                                                                          
002acc   0a1a     XORLW     0x1a                                                                                            
002ace   e101     BNZ       0x2ad2                                                                                          
002ad0   d0d9     BRA       0x2c84                                                                                          
002ad2   0a20     XORLW     0x20                                                                                            
002ad4   e04a     BZ        0x2b6a                                                                                          
002ad6   0a30     XORLW     0x30                                                                                            
002ad8   e01f     BZ        0x2b18                                                                                          
002ada   0a46     XORLW     0x46                                                                                            
002adc   e00e     BZ        0x2afa                                                                                          
002ade   0a25     XORLW     0x25                                                                                            
002ae0   e001     BZ        0x2ae4                                                                                          
002ae2   d383     BRA       0x31ea                                                                                          
                                                       {                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '\0':                                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* this is undefined behaviour. we have a trailing '%' character   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            in the string, perhaps with some flags, width, precision        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            stuff as well, but no format specifier. We'll, arbitrarily,     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            back up a character so that the loop will terminate             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            properly when it loops back and we'll output a '%'              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            character. */                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ae4   50d9     MOVF      0xd9,0x0,0x0                 --f;                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ae6   0ff9     ADDLW     0xf9                                                                                            
002ae8   6ee9     MOVWF     0xe9,0x0                                                                                        
002aea   0eff     MOVLW     0xff                                                                                            
002aec   20da     ADDWFC    0xda,0x0,0x0                                                                                    
002aee   6eea     MOVWF     0xea,0x0                                                                                        
002af0   0e01     MOVLW     0x1                                                                                             
002af2   5eee     SUBWF     0xee,0x1,0x0                                                                                    
002af4   0e00     MOVLW     0x0                                                                                             
002af6   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
002af8   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
                                                         /* fallthrough */                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '%':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002afa   ecf3     CALL      0x33e6,0x0                   if (putc ('%', handle) == EOF)                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002afc   f019                                                                                                               
002afe   0e25     MOVLW     0x25                                                                                            
002b00   6ee6     MOVWF     0xe6,0x0                                                                                        
002b02   db95     RCALL     0x322e                                                                                          
002b04   e103     BNZ       0x2b0c                                                                                          
002b06   1c2b     COMF      0x2b,0x0,0x0                                                                                    
002b08   e101     BNZ       0x2b0c                                                                                          
002b0a   d369     BRA       0x31de                                                                                          
                                                           return EOF;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b0c   ecef     CALL      0x33de,0x0                   ++count;                                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b0e   f019                                                                                                               
002b10   e201     BC        0x2b14                                                                                          
002b12   d36b     BRA       0x31ea                                                                                          
002b14   2adb     INCF      0xdb,0x1,0x0                                                                                    
002b16   d369     BRA       0x31ea                       break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'c':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b18   0e08     MOVLW     0x8                          space_cnt = 0;                                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b1a   6adb     CLRF      0xdb,0x0                                                                                        
002b1c   0e04     MOVLW     0x4                          if (width > 1)                                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b1e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002b20   0801     SUBLW     0x1                                                                                             
002b22   e206     BC        0x2b30                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b24   0e04     MOVLW     0x4                              space_cnt = width - 1;                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b26   04db     DECF      0xdb,0x0,0x0                                                                                    
002b28   ecb7     CALL      0x336e,0x0                                                                                      
002b2a   f019                                                                                                               
002b2c   50db     MOVF      0xdb,0x0,0x0                     count += space_cnt;                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b2e   db8b     RCALL     0x3246                                                                                          
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b30   0e08     MOVLW     0x8                          if (space_cnt && !(flags & _FLAG_MINUS))                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b32   50db     MOVF      0xdb,0x0,0x0                                                                                    
002b34   e009     BZ        0x2b48                                                                                          
002b36   0e03     MOVLW     0x3                                                                                             
002b38   50db     MOVF      0xdb,0x0,0x0                                                                                    
002b3a   0b01     ANDLW     0x1                                                                                             
002b3c   e105     BNZ       0x2b48                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b3e   db72     RCALL     0x3224                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b40   e001     BZ        0x2b44                                                                                          
002b42   d34d     BRA       0x31de                                                                                          
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b44   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b46   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b48   db64     RCALL     0x3212                       c = va_arg (ap, int);                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b4a   cfef     MOVFF     0xfef,0xfdf                                                                                     
002b4c   ffdf                                                                                                               
002b4e   ec67     CALL      0x34ce,0x0                   if (putc (c, handle) == EOF)                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b50   f01a                                                                                                               
002b52   e103     BNZ       0x2b5a                                                                                          
002b54   1c2b     COMF      0x2b,0x0,0x0                                                                                    
002b56   e101     BNZ       0x2b5a                                                                                          
002b58   d342     BRA       0x31de                                                                                          
                                                           return EOF;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b5a   ecef     CALL      0x33de,0x0                   ++count;                                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b5c   f019                                                                                                               
002b5e   e301     BNC       0x2b62                                                                                          
002b60   2adb     INCF      0xdb,0x1,0x0                                                                                    
002b62   db60     RCALL     0x3224                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b64   e101     BNZ       0x2b68                                                                                          
002b66   d341     BRA       0x31ea                                                                                          
002b68   d33a     BRA       0x31de                         return EOF;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'S':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b6a   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b6c   50db     MOVF      0xdb,0x0,0x0                                                                                    
002b6e   0802     SUBLW     0x2                                                                                             
002b70   e10f     BNZ       0x2b90                                                                                          
002b72   ec33     CALL      0x3466,0x0                     romstring = va_arg (ap, rom far char *);                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b74   f01a                                                                                                               
002b76   0e03     MOVLW     0x3                                                                                             
002b78   ecfa     CALL      0x33f4,0x0                                                                                      
002b7a   f019                                                                                                               
002b7c   0e0e     MOVLW     0xe                                                                                             
002b7e   cfee     MOVFF     0xfee,0xfdb                                                                                     
002b80   ffdb                                                                                                               
002b82   0e0f     MOVLW     0xf                                                                                             
002b84   cfee     MOVFF     0xfee,0xfdb                                                                                     
002b86   ffdb                                                                                                               
002b88   0e10     MOVLW     0x10                                                                                            
002b8a   cfee     MOVFF     0xfee,0xfdb                                                                                     
002b8c   ffdb                                                                                                               
002b8e   d020     BRA       0x2bd0                       else                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b90   0ef7     MOVLW     0xf7                           romstring = (far rom char*)va_arg (ap, rom near char *);         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002b92   cfdb     MOVFF     0xfdb,0x2d                                                                                      
002b94   f02d                                                                                                               
002b96   0ef8     MOVLW     0xf8                                                                                            
002b98   cfdb     MOVFF     0xfdb,0x2e                                                                                      
002b9a   f02e                                                                                                               
002b9c   0e02     MOVLW     0x2                                                                                             
002b9e   5e2d     SUBWF     0x2d,0x1,0x0                                                                                    
002ba0   0e00     MOVLW     0x0                                                                                             
002ba2   5a2e     SUBWFB    0x2e,0x1,0x0                                                                                    
002ba4   0ef7     MOVLW     0xf7                                                                                            
002ba6   c02d     MOVFF     0x2d,0xfdb                                                                                      
002ba8   ffdb                                                                                                               
002baa   0ef8     MOVLW     0xf8                                                                                            
002bac   c02e     MOVFF     0x2e,0xfdb                                                                                      
002bae   ffdb                                                                                                               
002bb0   c02d     MOVFF     0x2d,0xfe9                                                                                      
002bb2   ffe9                                                                                                               
002bb4   c02e     MOVFF     0x2e,0xfea                                                                                      
002bb6   ffea                                                                                                               
002bb8   ecea     CALL      0x33d4,0x0                                                                                      
002bba   f019                                                                                                               
002bbc   6a2c     CLRF      0x2c,0x0                                                                                        
002bbe   0e0e     MOVLW     0xe                                                                                             
002bc0   c02a     MOVFF     0x2a,0xfdb                                                                                      
002bc2   ffdb                                                                                                               
002bc4   0e0f     MOVLW     0xf                                                                                             
002bc6   c02b     MOVFF     0x2b,0xfdb                                                                                      
002bc8   ffdb                                                                                                               
002bca   0e10     MOVLW     0x10                                                                                            
002bcc   c02c     MOVFF     0x2c,0xfdb                                                                                      
002bce   ffdb                                                                                                               
002bd0   0e0e     MOVLW     0xe                          n = strlenpgm (romstring);                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002bd2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002bd4   ffe6                                                                                                               
002bd6   0e0f     MOVLW     0xf                                                                                             
002bd8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002bda   ffe6                                                                                                               
002bdc   0e10     MOVLW     0x10                                                                                            
002bde   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002be0   ffe6                                                                                                               
002be2   ecfd     CALL      0x45fa,0x0                                                                                      
002be4   f022                                                                                                               
002be6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002be8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002bea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002bec   0e13     MOVLW     0x13                                                                                            
002bee   c01d     MOVFF     0x1d,0xfdb                                                                                      
002bf0   ffdb                                                                                                               
002bf2   0e14     MOVLW     0x14                                                                                            
002bf4   c01e     MOVFF     0x1e,0xfdb                                                                                      
002bf6   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002bf8   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002bfa   50db     MOVF      0xdb,0x0,0x0                                                                                    
002bfc   e005     BZ        0x2c08                                                                                          
002bfe   0e13     MOVLW     0x13                                                                                            
002c00   ec2e     CALL      0x345c,0x0                                                                                      
002c02   f01a                                                                                                               
002c04   e201     BC        0x2c08                                                                                          
002c06   db6a     RCALL     0x32dc                         n = precision;                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0032dc   0e05     MOVLW     0x5                                                                                             
0032de   50db     MOVF      0xdb,0x0,0x0                                                                                    
0032e0   6ee6     MOVWF     0xe6,0x0                                                                                        
0032e2   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0032e4   0f13     ADDLW     0x13                                                                                            
0032e6   d901     RCALL     0x34ea                                                                                          
0032e8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0032ea   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0032ec   6eee     MOVWF     0xee,0x0                                                                                        
0032ee   6aed     CLRF      0xed,0x0                                                                                        
0032f0   0012     RETURN    0x0                                                                                             
002c08   ec52     CALL      0x34a4,0x0                   if (width < (unsigned char) n)                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c0a   f01a                                                                                                               
002c0c   e202     BC        0x2c12                                                                                          
0034a4   0e13     MOVLW     0x13                                                                                            
0034a6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0034a8   6ef3     MOVWF     0xf3,0x0                                                                                        
0034aa   0e04     MOVLW     0x4                                                                                             
0034ac   ef3b     GOTO      0x3276                                                                                          
0034ae   f019                                                                                                               
002c0e   0e13     MOVLW     0x13                           width = n;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c10   db37     RCALL     0x3280                                                                                          
002c12   ec15     CALL      0x342a,0x0                   space_cnt = width - (unsigned char) n;                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c14   f01a                                                                                                               
00342a   0e04     MOVLW     0x4                                                                                             
00342c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00342e   ffe6                                                                                                               
003430   0e13     MOVLW     0x13                                                                                            
003432   50db     MOVF      0xdb,0x0,0x0                                                                                    
003434   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003436   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
003438   df9a     RCALL     0x336e                                                                                          
00343a   50db     MOVF      0xdb,0x0,0x0                 count += space_cnt;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00343c   df04     RCALL     0x3246                                                                                          
                                                         /* we've already calculated the space count that the width         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c16   e006     BZ        0x2c24                       if (have_precision && precision < width)                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c18   0e04     MOVLW     0x4                                                                                             
002c1a   ec2e     CALL      0x345c,0x0                                                                                      
002c1c   f01a                                                                                                               
002c1e   e202     BC        0x2c24                                                                                          
00343e   0e06     MOVLW     0x6                                                                                             
003440   50db     MOVF      0xdb,0x0,0x0                                                                                    
003442   0012     RETURN    0x0                                                                                             
002c20   0e05     MOVLW     0x5                            width = precision;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c22   db2e     RCALL     0x3280                                                                                          
                                                         /* if right justified, we print the spaces before the              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c24   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c26   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
002c28   d005     BRA       0x2c34                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c2a   dafc     RCALL     0x3224                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c2c   e001     BZ        0x2c30                                                                                          
002c2e   d2d7     BRA       0x31de                                                                                          
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c30   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c32   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c34   0e09     MOVLW     0x9                          cval = 0;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c36   6adb     CLRF      0xdb,0x0                                                                                        
002c38   0e0e     MOVLW     0xe                          for (c = *romstring; c && cval < width; c = *++romstring)          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c3a   cfdb     MOVFF     0xfdb,0xff6                                                                                     
002c3c   fff6                                                                                                               
002c3e   0e0f     MOVLW     0xf                                                                                             
002c40   cfdb     MOVFF     0xfdb,0xff7                                                                                     
002c42   fff7                                                                                                               
002c44   0e10     MOVLW     0x10                                                                                            
002c46   cfdb     MOVFF     0xfdb,0xff8                                                                                     
002c48   fff8                                                                                                               
002c4a   0008     TBLRD                                                                                                     
002c4c   50f5     MOVF      0xf5,0x0,0x0                                                                                    
002c4e   6edf     MOVWF     0xdf,0x0                                                                                        
002c50   50df     MOVF      0xdf,0x0,0x0                                                                                    
002c52   e014     BZ        0x2c7c                                                                                          
002c54   ec58     CALL      0x34b0,0x0                                                                                      
002c56   f01a                                                                                                               
002c58   e211     BC        0x2c7c                                                                                          
002c70   50d9     MOVF      0xd9,0x0,0x0                                                                                    
002c72   0f0e     ADDLW     0xe                                                                                             
002c74   6ee9     MOVWF     0xe9,0x0                                                                                        
002c76   0e00     MOVLW     0x0                                                                                             
002c78   dbcb     RCALL     0x3410                                                                                          
002c7a   d7e7     BRA       0x2c4a                                                                                          
0034b0   0e04     MOVLW     0x4                                                                                             
0034b2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0034b4   6ef3     MOVWF     0xf3,0x0                                                                                        
0034b6   0e09     MOVLW     0x9                                                                                             
0034b8   ef3b     GOTO      0x3276                                                                                          
0034ba   f019                                                                                                               
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c5a   ec67     CALL      0x34ce,0x0                       if (putc (c, handle) == EOF)                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c5c   f01a                                                                                                               
002c5e   e103     BNZ       0x2c66                                                                                          
002c60   1c2b     COMF      0x2b,0x0,0x0                                                                                    
002c62   e101     BNZ       0x2c66                                                                                          
002c64   d2bc     BRA       0x31de                                                                                          
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c66   dbbb     RCALL     0x33de                           ++count;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c68   e301     BNC       0x2c6c                                                                                          
002c6a   2adb     INCF      0xdb,0x1,0x0                                                                                    
002c6c   0e09     MOVLW     0x9                              ++cval;                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c6e   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c7c   dad3     RCALL     0x3224                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c7e   e101     BNZ       0x2c82                                                                                          
002c80   d2b4     BRA       0x31ea                                                                                          
002c82   d2ad     BRA       0x31de                         return EOF;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 's':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c84   dac6     RCALL     0x3212                       ramstring = va_arg (ap, char *);                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c86   0e11     MOVLW     0x11                                                                                            
002c88   cfee     MOVFF     0xfee,0xfdb                                                                                     
002c8a   ffdb                                                                                                               
002c8c   0e12     MOVLW     0x12                                                                                            
002c8e   cfed     MOVFF     0xfed,0xfdb                                                                                     
002c90   ffdb                                                                                                               
002c92   0e11     MOVLW     0x11                         n = strlen (ramstring);                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002c94   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002c96   ffe6                                                                                                               
002c98   0e12     MOVLW     0x12                                                                                            
002c9a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002c9c   ffe6                                                                                                               
002c9e   ecef     CALL      0x45de,0x0                                                                                      
002ca0   f022                                                                                                               
002ca2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ca4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ca6   0e13     MOVLW     0x13                                                                                            
002ca8   cff3     MOVFF     0xff3,0xfdb                                                                                     
002caa   ffdb                                                                                                               
002cac   0e14     MOVLW     0x14                                                                                            
002cae   cff4     MOVFF     0xff4,0xfdb                                                                                     
002cb0   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002cb2   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002cb4   50db     MOVF      0xdb,0x0,0x0                                                                                    
002cb6   e004     BZ        0x2cc0                                                                                          
002cb8   0e13     MOVLW     0x13                                                                                            
002cba   dbd0     RCALL     0x345c                                                                                          
002cbc   e201     BC        0x2cc0                                                                                          
002cbe   db0e     RCALL     0x32dc                         n = precision;                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002cc0   ec52     CALL      0x34a4,0x0                   if (width < (unsigned char) n)                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002cc2   f01a                                                                                                               
002cc4   e202     BC        0x2cca                                                                                          
002cc6   0e13     MOVLW     0x13                           width = n;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002cc8   dadb     RCALL     0x3280                                                                                          
002cca   dbaf     RCALL     0x342a                       space_cnt = width - (unsigned char) n;                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00336e   6ee7     MOVWF     0xe7,0x0                                                                                        
003370   0e08     MOVLW     0x8                                                                                             
003372   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003374   ffdb                                                                                                               
003376   0012     RETURN    0x0                                                                                             
                                                         count += space_cnt;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* we've already calculated the space count that the width         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ccc   e005     BZ        0x2cd8                       if (have_precision && precision < width)                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002cce   0e04     MOVLW     0x4                                                                                             
002cd0   dbc5     RCALL     0x345c                                                                                          
002cd2   e202     BC        0x2cd8                                                                                          
00345c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00345e   6ef3     MOVWF     0xf3,0x0                                                                                        
003460   0e05     MOVLW     0x5                                                                                             
003462   ef3b     GOTO      0x3276                                                                                          
003464   f019                                                                                                               
002cd4   0e05     MOVLW     0x5                            width = precision;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002cd6   dad4     RCALL     0x3280                                                                                          
003280   50db     MOVF      0xdb,0x0,0x0                                                                                    
003282   6ee7     MOVWF     0xe7,0x0                                                                                        
003284   0e04     MOVLW     0x4                                                                                             
003286   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003288   ffdb                                                                                                               
00328a   0012     RETURN    0x0                                                                                             
                                                         /* if right justified, we print the spaces before the              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002cd8   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002cda   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
002cdc   d005     BRA       0x2ce8                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002cde   daa2     RCALL     0x3224                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ce0   e001     BZ        0x2ce4                                                                                          
002ce2   d27d     BRA       0x31de                                                                                          
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ce4   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ce6   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ce8   0e09     MOVLW     0x9                          cval = 0;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002cea   6adb     CLRF      0xdb,0x0                                                                                        
002cec   0e11     MOVLW     0x11                         for (c = *ramstring; c && cval < width; c = *++ramstring)          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002cee   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002cf0   ffe9                                                                                                               
002cf2   0e12     MOVLW     0x12                                                                                            
002cf4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002cf6   ffea                                                                                                               
002cf8   cfef     MOVFF     0xfef,0xfdf                                                                                     
002cfa   ffdf                                                                                                               
002cfc   50df     MOVF      0xdf,0x0,0x0                                                                                    
002cfe   e014     BZ        0x2d28                                                                                          
002d00   dbd7     RCALL     0x34b0                                                                                          
002d02   e212     BC        0x2d28                                                                                          
002d18   0e11     MOVLW     0x11                                                                                            
002d1a   2adb     INCF      0xdb,0x1,0x0                                                                                    
002d1c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002d1e   ffe9                                                                                                               
002d20   0e12     MOVLW     0x12                                                                                            
002d22   e3e8     BNC       0x2cf4                                                                                          
002d24   2adb     INCF      0xdb,0x1,0x0                                                                                    
002d26   d7e6     BRA       0x2cf4                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d04   dbe4     RCALL     0x34ce                           if (putc (c, handle) == EOF)                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d06   e103     BNZ       0x2d0e                                                                                          
002d08   1c2b     COMF      0x2b,0x0,0x0                                                                                    
002d0a   e101     BNZ       0x2d0e                                                                                          
002d0c   d268     BRA       0x31de                                                                                          
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d0e   db67     RCALL     0x33de                           ++count;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d10   e301     BNC       0x2d14                                                                                          
002d12   2adb     INCF      0xdb,0x1,0x0                                                                                    
002d14   0e09     MOVLW     0x9                              ++cval;                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d16   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d28   da7d     RCALL     0x3224                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d2a   e101     BNZ       0x2d2e                                                                                          
002d2c   d25e     BRA       0x31ea                                                                                          
002d2e   d257     BRA       0x31de                         return EOF;                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'd':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'i':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d30   0e03     MOVLW     0x3                          flags |= _FLAG_SIGNED;                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d32   8edb     BSF       0xdb,0x7,0x0                                                                                    
                                                         /* fall through */                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'o':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'u':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'x':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'X':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'b':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'B':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* This is a bit of a sneaky trick. The 'l' and 'hh' size          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifiers are valid only for the integer conversions,          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            not the 'p' or 'P' conversions, and are ignored for the         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            latter. By jumping over the additional size specifier           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            checks here we get the best code size since we can              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limit the size checks in the remaining code. */                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d34   0e07     MOVLW     0x7                          if (size == _FMT_LONG)                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d36   04db     DECF      0xdb,0x0,0x0                                                                                    
002d38   e110     BNZ       0x2d5a                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d3a   db95     RCALL     0x3466                           larg = va_arg (ap, long int);                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d3c   0e04     MOVLW     0x4                                                                                             
002d3e   db5a     RCALL     0x33f4                                                                                          
002d40   0e0a     MOVLW     0xa                                                                                             
002d42   cfee     MOVFF     0xfee,0xfdb                                                                                     
002d44   ffdb                                                                                                               
002d46   0e0b     MOVLW     0xb                                                                                             
002d48   cfee     MOVFF     0xfee,0xfdb                                                                                     
002d4a   ffdb                                                                                                               
002d4c   0e0c     MOVLW     0xc                                                                                             
002d4e   cfee     MOVFF     0xfee,0xfdb                                                                                     
002d50   ffdb                                                                                                               
002d52   0e0d     MOVLW     0xd                                                                                             
002d54   cfee     MOVFF     0xfee,0xfdb                                                                                     
002d56   ffdb                                                                                                               
002d58   d06c     BRA       0x2e32                           goto _do_integer_conversion;                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d5a   0e07     MOVLW     0x7                          else if (size == _FMT_BYTE)                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d5c   50db     MOVF      0xdb,0x0,0x0                                                                                    
002d5e   0803     SUBLW     0x3                                                                                             
002d60   e12c     BNZ       0x2dba                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d62   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d64   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
002d66   d00d     BRA       0x2d82                                                                                          
002d68   dab2     RCALL     0x32ce                             larg = (signed char) va_arg (ap, int);                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d6a   0e02     MOVLW     0x2                                                                                             
002d6c   da76     RCALL     0x325a                                                                                          
002d6e   cfef     MOVFF     0xfef,0x2a                                                                                      
002d70   f02a                                                                                                               
002d72   6a2b     CLRF      0x2b,0x0                                                                                        
002d74   6a2c     CLRF      0x2c,0x0                                                                                        
002d76   6a2d     CLRF      0x2d,0x0                                                                                        
002d78   ae2a     BTFSS     0x2a,0x7,0x0                                                                                    
002d7a   d039     BRA       0x2dee                                                                                          
002d7c   682b     SETF      0x2b,0x0                                                                                        
002d7e   682c     SETF      0x2c,0x0                                                                                        
002d80   d035     BRA       0x2dec                           else                                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d82   0ef7     MOVLW     0xf7                               larg = (unsigned char) va_arg (ap, unsigned int);            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002d84   cfdb     MOVFF     0xfdb,0x2b                                                                                      
002d86   f02b                                                                                                               
002d88   0ef8     MOVLW     0xf8                                                                                            
002d8a   cfdb     MOVFF     0xfdb,0x2c                                                                                      
002d8c   f02c                                                                                                               
002d8e   0e02     MOVLW     0x2                                                                                             
002d90   5e2b     SUBWF     0x2b,0x1,0x0                                                                                    
002d92   0e00     MOVLW     0x0                                                                                             
002d94   5a2c     SUBWFB    0x2c,0x1,0x0                                                                                    
002d96   0ef7     MOVLW     0xf7                                                                                            
002d98   c02b     MOVFF     0x2b,0xfdb                                                                                      
002d9a   ffdb                                                                                                               
002d9c   0ef8     MOVLW     0xf8                                                                                            
002d9e   c02c     MOVFF     0x2c,0xfdb                                                                                      
002da0   ffdb                                                                                                               
002da2   c02b     MOVFF     0x2b,0xfe9                                                                                      
002da4   ffe9                                                                                                               
002da6   c02c     MOVFF     0x2c,0xfea                                                                                      
002da8   ffea                                                                                                               
002daa   cfef     MOVFF     0xfef,0x2a                                                                                      
002dac   f02a                                                                                                               
002dae   0e0a     MOVLW     0xa                                                                                             
002db0   c02a     MOVFF     0x2a,0xfdb                                                                                      
002db2   ffdb                                                                                                               
002db4   0e0b     MOVLW     0xb                                                                                             
002db6   6adb     CLRF      0xdb,0x0                                                                                        
002db8   d038     BRA       0x2e2a                           goto _do_integer_conversion;                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* fall through */                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'p':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'P':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002dba   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002dbc   50db     MOVF      0xdb,0x0,0x0                                                                                    
002dbe   0802     SUBLW     0x2                                                                                             
002dc0   e109     BNZ       0x2dd4                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002dc2   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002dc4   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
002dc6   d004     BRA       0x2dd0                                                                                          
002dc8   db59     RCALL     0x347c                             larg = va_arg (ap, short long int);                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002dca   ae2c     BTFSS     0x2c,0x7,0x0                                                                                    
002dcc   d010     BRA       0x2dee                                                                                          
003378   cfee     MOVFF     0xfee,0x2a                                                                                      
00337a   f02a                                                                                                               
00337c   cfee     MOVFF     0xfee,0x2b                                                                                      
00337e   f02b                                                                                                               
003380   cfef     MOVFF     0xfef,0x2c                                                                                      
003382   f02c                                                                                                               
003384   6a2d     CLRF      0x2d,0x0                                                                                        
003386   0012     RETURN    0x0                                                                                             
00347c   df28     RCALL     0x32ce                                                                                          
00347e   0e03     MOVLW     0x3                                                                                             
003480   deec     RCALL     0x325a                                                                                          
003482   efbc     GOTO      0x3378                                                                                          
003484   f019                                                                                                               
002dce   d00e     BRA       0x2dec                           else                                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002dd0   db55     RCALL     0x347c                             larg = va_arg (ap, unsigned short long int);                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002dd2   d00d     BRA       0x2dee                       else if (flags & _FLAG_SIGNED)                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002dd4   0e03     MOVLW     0x3                                                                                             
002dd6   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
002dd8   d012     BRA       0x2dfe                                                                                          
002dda   da79     RCALL     0x32ce                         larg = va_arg (ap, int);                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ddc   0e02     MOVLW     0x2                                                                                             
002dde   da3d     RCALL     0x325a                                                                                          
002de0   daf9     RCALL     0x33d4                                                                                          
002de2   6a2c     CLRF      0x2c,0x0                                                                                        
002de4   6a2d     CLRF      0x2d,0x0                                                                                        
002de6   ae2b     BTFSS     0x2b,0x7,0x0                                                                                    
002de8   d002     BRA       0x2dee                                                                                          
002dea   682c     SETF      0x2c,0x0                                                                                        
002dec   682d     SETF      0x2d,0x0                                                                                        
002dee   dae2     RCALL     0x33b4                                                                                          
002df0   0e0c     MOVLW     0xc                                                                                             
002df2   c02c     MOVFF     0x2c,0xfdb                                                                                      
002df4   ffdb                                                                                                               
002df6   0e0d     MOVLW     0xd                                                                                             
002df8   c02d     MOVFF     0x2d,0xfdb                                                                                      
002dfa   ffdb                                                                                                               
00325a   5e2e     SUBWF     0x2e,0x1,0x0                                                                                    
00325c   0e00     MOVLW     0x0                                                                                             
00325e   5a2f     SUBWFB    0x2f,0x1,0x0                                                                                    
003260   0ef7     MOVLW     0xf7                                                                                            
003262   c02e     MOVFF     0x2e,0xfdb                                                                                      
003264   ffdb                                                                                                               
003266   0ef8     MOVLW     0xf8                                                                                            
003268   c02f     MOVFF     0x2f,0xfdb                                                                                      
00326a   ffdb                                                                                                               
00326c   c02e     MOVFF     0x2e,0xfe9                                                                                      
00326e   ffe9                                                                                                               
003270   c02f     MOVFF     0x2f,0xfea                                                                                      
003272   ffea                                                                                                               
003274   0012     RETURN    0x0                                                                                             
0032ce   0ef7     MOVLW     0xf7                                                                                            
0032d0   cfdb     MOVFF     0xfdb,0x2e                                                                                      
0032d2   f02e                                                                                                               
0032d4   0ef8     MOVLW     0xf8                                                                                            
0032d6   cfdb     MOVFF     0xfdb,0x2f                                                                                      
0032d8   f02f                                                                                                               
0032da   0012     RETURN    0x0                                                                                             
0033b4   0e0a     MOVLW     0xa                                                                                             
0033b6   c02a     MOVFF     0x2a,0xfdb                                                                                      
0033b8   ffdb                                                                                                               
0033ba   0e0b     MOVLW     0xb                                                                                             
0033bc   c02b     MOVFF     0x2b,0xfdb                                                                                      
0033be   ffdb                                                                                                               
0033c0   0012     RETURN    0x0                                                                                             
0033d4   cfee     MOVFF     0xfee,0x2a                                                                                      
0033d6   f02a                                                                                                               
0033d8   cfef     MOVFF     0xfef,0x2b                                                                                      
0033da   f02b                                                                                                               
0033dc   0012     RETURN    0x0                                                                                             
002dfc   d01a     BRA       0x2e32                       else                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002dfe   0ef7     MOVLW     0xf7                           larg = va_arg (ap, unsigned int);                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e00   cfdb     MOVFF     0xfdb,0x2c                                                                                      
002e02   f02c                                                                                                               
002e04   0ef8     MOVLW     0xf8                                                                                            
002e06   cfdb     MOVFF     0xfdb,0x2d                                                                                      
002e08   f02d                                                                                                               
002e0a   0e02     MOVLW     0x2                                                                                             
002e0c   5e2c     SUBWF     0x2c,0x1,0x0                                                                                    
002e0e   0e00     MOVLW     0x0                                                                                             
002e10   5a2d     SUBWFB    0x2d,0x1,0x0                                                                                    
002e12   0ef7     MOVLW     0xf7                                                                                            
002e14   c02c     MOVFF     0x2c,0xfdb                                                                                      
002e16   ffdb                                                                                                               
002e18   0ef8     MOVLW     0xf8                                                                                            
002e1a   c02d     MOVFF     0x2d,0xfdb                                                                                      
002e1c   ffdb                                                                                                               
002e1e   c02c     MOVFF     0x2c,0xfe9                                                                                      
002e20   ffe9                                                                                                               
002e22   c02d     MOVFF     0x2d,0xfea                                                                                      
002e24   ffea                                                                                                               
002e26   dad6     RCALL     0x33d4                                                                                          
002e28   dac5     RCALL     0x33b4                                                                                          
002e2a   0e0c     MOVLW     0xc                                                                                             
002e2c   6adb     CLRF      0xdb,0x0                                                                                        
002e2e   0e0d     MOVLW     0xd                                                                                             
002e30   6adb     CLRF      0xdb,0x0                                                                                        
                                                       _do_integer_conversion:                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* default precision is 1 */                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e32   0e06     MOVLW     0x6                          if (!have_precision)                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e34   50db     MOVF      0xdb,0x0,0x0                                                                                    
002e36   e105     BNZ       0x2e42                                                                                          
002e38   0e01     MOVLW     0x1                            precision = 1;                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e3a   6ef3     MOVWF     0xf3,0x0                                                                                        
002e3c   0e05     MOVLW     0x5                                                                                             
002e3e   cff3     MOVFF     0xff3,0xfdb                                                                                     
002e40   ffdb                                                                                                               
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         {                                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e42   0e15     MOVLW     0x15                           unsigned char digit_cnt = 0;                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e44   6adb     CLRF      0xdb,0x0                                                                                        
002e46   0e16     MOVLW     0x16                           unsigned char prefix_cnt = 0;                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e48   6adb     CLRF      0xdb,0x0                                                                                        
                                                           unsigned char sign_char;                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* A 32 bit number will require at most 32 digits in the         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              string representation (binary format). */                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           char buf[33];                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* Start storing digits least-significant first */               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e4a   50d9     MOVF      0xd9,0x0,0x0                   char *q = &buf[31];                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e4c   0f37     ADDLW     0x37                                                                                            
002e4e   6e2a     MOVWF     0x2a,0x0                                                                                        
002e50   0e00     MOVLW     0x0                                                                                             
002e52   20da     ADDWFC    0xda,0x0,0x0                                                                                    
002e54   6e2b     MOVWF     0x2b,0x0                                                                                        
002e56   0e39     MOVLW     0x39                                                                                            
002e58   c02a     MOVFF     0x2a,0xfdb                                                                                      
002e5a   ffdb                                                                                                               
002e5c   0e3a     MOVLW     0x3a                                                                                            
002e5e   c02b     MOVFF     0x2b,0xfdb                                                                                      
002e60   ffdb                                                                                                               
                                                           /* null terminate the string */                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e62   0e38     MOVLW     0x38                           buf[32] = '\0';                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e64   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e66   0e08     MOVLW     0x8                            space_cnt = 0;                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e68   6adb     CLRF      0xdb,0x0                                                                                        
002e6a   0e0a     MOVLW     0xa                            size = 10;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e6c   daae     RCALL     0x33ca                                                                                          
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e6e   50df     MOVF      0xdf,0x0,0x0                   switch (c)                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e70   0a78     XORLW     0x78                                                                                            
002e72   e012     BZ        0x2e98                                                                                          
002e74   0a20     XORLW     0x20                                                                                            
002e76   e010     BZ        0x2e98                                                                                          
002e78   0a28     XORLW     0x28                                                                                            
002e7a   e00c     BZ        0x2e94                                                                                          
002e7c   0a20     XORLW     0x20                                                                                            
002e7e   e00a     BZ        0x2e94                                                                                          
002e80   0a3f     XORLW     0x3f                                                                                            
002e82   e006     BZ        0x2e90                                                                                          
002e84   0a0d     XORLW     0xd                                                                                             
002e86   e002     BZ        0x2e8c                                                                                          
002e88   0a20     XORLW     0x20                                                                                            
002e8a   e108     BNZ       0x2e9c                                                                                          
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'b':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'B':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e8c   0e02     MOVLW     0x2                                size = 2;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e8e   d005     BRA       0x2e9a                             break;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'o':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e90   0e08     MOVLW     0x8                                size = 8;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e92   d003     BRA       0x2e9a                             break;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'p':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'P':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                               /* from here on out, treat 'p' conversions just              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  like 'x' conversions. */                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e94   0e08     MOVLW     0x8                                c += 'x' - 'p';                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e96   26df     ADDWF     0xdf,0x1,0x0                                                                                    
                                                               /* fall through */                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'x':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'X':                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e98   0e10     MOVLW     0x10                               size = 16;                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e9a   da97     RCALL     0x33ca                                                                                          
0033ca   6ef3     MOVWF     0xf3,0x0                                                                                        
0033cc   0e07     MOVLW     0x7                                                                                             
0033ce   cff3     MOVFF     0xff3,0xfdb                                                                                     
0033d0   ffdb                                                                                                               
0033d2   0012     RETURN    0x0                                                                                             
                                                               break;                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's an unsigned conversion, we should ignore the          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              ' ' and '+' flags */                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e9c   0e03     MOVLW     0x3                            if (!(flags & _FLAG_SIGNED))                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002e9e   bedb     BTFSC     0xdb,0x7,0x0                                                                                    
002ea0   d002     BRA       0x2ea6                                                                                          
002ea2   92db     BCF       0xdb,0x1,0x0                     flags &= ~(_FLAG_PLUS | _FLAG_SPACE);                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ea4   94db     BCF       0xdb,0x2,0x0                                                                                    
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's a negative value, we need to negate the               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned version before we convert to text. Using             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned for this allows us to (ab)use the 2's                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              complement system to avoid overflow and be able to            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              adequately handle LONG_MIN.                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              We'll figure out what sign character to print, if             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              any, here as well. */                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ea6   50db     MOVF      0xdb,0x0,0x0                   if (flags & _FLAG_SIGNED && ((long) larg < 0))                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ea8   0b80     ANDLW     0x80                                                                                            
002eaa   e024     BZ        0x2ef4                                                                                          
002eac   da8a     RCALL     0x33c2                                                                                          
002eae   90d8     BCF       0xd8,0x0,0x0                                                                                    
002eb0   0e03     MOVLW     0x3                                                                                             
002eb2   50eb     MOVF      0xeb,0x0,0x0                                                                                    
002eb4   0a00     XORLW     0x0                                                                                             
002eb6   e608     BN        0x2ec8                                                                                          
002eb8   0e00     MOVLW     0x0                                                                                             
002eba   5cee     SUBWF     0xee,0x0,0x0                                                                                    
002ebc   0e00     MOVLW     0x0                                                                                             
002ebe   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
002ec0   0e00     MOVLW     0x0                                                                                             
002ec2   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
002ec4   0e00     MOVLW     0x0                                                                                             
002ec6   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
002ec8   e215     BC        0x2ef4                                                                                          
0033c2   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0033c4   0f0a     ADDLW     0xa                                                                                             
0033c6   ef75     GOTO      0x34ea                                                                                          
0033c8   f01a                                                                                                               
0034ea   6ee9     MOVWF     0xe9,0x0                                                                                        
0034ec   0e00     MOVLW     0x0                                                                                             
0034ee   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0034f0   6eea     MOVWF     0xea,0x0                                                                                        
0034f2   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002eca   da13     RCALL     0x32f2                             larg = -(long) larg;                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ecc   6821     SETF      0x21,0x0                                                                                        
002ece   6822     SETF      0x22,0x0                                                                                        
002ed0   6823     SETF      0x23,0x0                                                                                        
002ed2   6824     SETF      0x24,0x0                                                                                        
002ed4   ecb7     CALL      0x456e,0x0                                                                                      
002ed6   f022                                                                                                               
002ed8   0e0a     MOVLW     0xa                                                                                             
002eda   c018     MOVFF     0x18,0xfdb                                                                                      
002edc   ffdb                                                                                                               
002ede   0e0b     MOVLW     0xb                                                                                             
002ee0   c019     MOVFF     0x19,0xfdb                                                                                      
002ee2   ffdb                                                                                                               
002ee4   0e0c     MOVLW     0xc                                                                                             
002ee6   c01a     MOVFF     0x1a,0xfdb                                                                                      
002ee8   ffdb                                                                                                               
002eea   0e0d     MOVLW     0xd                                                                                             
002eec   c01b     MOVFF     0x1b,0xfdb                                                                                      
002eee   ffdb                                                                                                               
0032f2   0e0a     MOVLW     0xa                                                                                             
0032f4   cfdb     MOVFF     0xfdb,0x1c                                                                                      
0032f6   f01c                                                                                                               
0032f8   0e0b     MOVLW     0xb                                                                                             
0032fa   cfdb     MOVFF     0xfdb,0x1d                                                                                      
0032fc   f01d                                                                                                               
0032fe   0e0c     MOVLW     0xc                                                                                             
003300   cfdb     MOVFF     0xfdb,0x1e                                                                                      
003302   f01e                                                                                                               
003304   0e0d     MOVLW     0xd                                                                                             
003306   cfdb     MOVFF     0xfdb,0x1f                                                                                      
003308   f01f                                                                                                               
00330a   0012     RETURN    0x0                                                                                             
002ef0   0e2d     MOVLW     0x2d                               sign_char = '-';                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ef2   d008     BRA       0x2f04                         else if (flags & _FLAG_PLUS)                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ef4   0e03     MOVLW     0x3                                                                                             
002ef6   a2db     BTFSS     0xdb,0x1,0x0                                                                                    
002ef8   d002     BRA       0x2efe                                                                                          
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002efa   0e2b     MOVLW     0x2b                               sign_char = '+';                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002efc   d003     BRA       0x2f04                         else if (flags & _FLAG_SPACE)                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002efe   a4db     BTFSS     0xdb,0x2,0x0                                                                                    
002f00   d008     BRA       0x2f12                                                                                          
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f02   0e20     MOVLW     0x20                               sign_char = ' ';                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f04   6ef3     MOVWF     0xf3,0x0                                                                                        
002f06   0e17     MOVLW     0x17                                                                                            
002f08   cff3     MOVFF     0xff3,0xfdb                                                                                     
002f0a   ffdb                                                                                                               
002f0c   0e15     MOVLW     0x15                               ++digit_cnt;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f0e   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f10   d002     BRA       0x2f16                         else                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f12   0e17     MOVLW     0x17                             sign_char = '\0';                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f14   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* get the digits for the actual number. If the                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision is zero and the value is zero, the result           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is no characters. */                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f16   0e05     MOVLW     0x5                            if (precision || larg)                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f18   50db     MOVF      0xdb,0x0,0x0                                                                                    
002f1a   e103     BNZ       0x2f22                                                                                          
002f1c   d9b7     RCALL     0x328c                                                                                          
002f1e   e101     BNZ       0x2f22                                                                                          
002f20   d089     BRA       0x3034                                                                                          
00328c   0e0a     MOVLW     0xa                                                                                             
00328e   cfdb     MOVFF     0xfdb,0x2a                                                                                      
003290   f02a                                                                                                               
003292   0e0b     MOVLW     0xb                                                                                             
003294   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003296   f02b                                                                                                               
003298   0e0c     MOVLW     0xc                                                                                             
00329a   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00329c   f02c                                                                                                               
00329e   0e0d     MOVLW     0xd                                                                                             
0032a0   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0032a2   f02d                                                                                                               
0032a4   502a     MOVF      0x2a,0x0,0x0                                                                                    
0032a6   102b     IORWF     0x2b,0x0,0x0                                                                                    
0032a8   102c     IORWF     0x2c,0x0,0x0                                                                                    
0032aa   102d     IORWF     0x2d,0x0,0x0                                                                                    
0032ac   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                               do                                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                 {                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f22   0e7c     MOVLW     0x7c                                   cval = s_digits[larg % size];                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f24   6e2a     MOVWF     0x2a,0x0                                                                                        
002f26   0e47     MOVLW     0x47                                                                                            
002f28   6e2b     MOVWF     0x2b,0x0                                                                                        
002f2a   0e00     MOVLW     0x0                                                                                             
002f2c   6e2c     MOVWF     0x2c,0x0                                                                                        
002f2e   0e07     MOVLW     0x7                                                                                             
002f30   cfdb     MOVFF     0xfdb,0x2d                                                                                      
002f32   f02d                                                                                                               
002f34   6a2e     CLRF      0x2e,0x0                                                                                        
002f36   6a2f     CLRF      0x2f,0x0                                                                                        
002f38   6a30     CLRF      0x30,0x0                                                                                        
002f3a   c02d     MOVFF     0x2d,0x21                                                                                       
002f3c   f021                                                                                                               
002f3e   c02e     MOVFF     0x2e,0x22                                                                                       
002f40   f022                                                                                                               
002f42   c02f     MOVFF     0x2f,0x23                                                                                       
002f44   f023                                                                                                               
002f46   c030     MOVFF     0x30,0x24                                                                                       
002f48   f024                                                                                                               
002f4a   d9d3     RCALL     0x32f2                                                                                          
002f4c   ec48     CALL      0x4690,0x0                                                                                      
002f4e   f023                                                                                                               
002f50   502a     MOVF      0x2a,0x0,0x0                                                                                    
002f52   2418     ADDWF     0x18,0x0,0x0                                                                                    
002f54   6ef3     MOVWF     0xf3,0x0                                                                                        
002f56   502b     MOVF      0x2b,0x0,0x0                                                                                    
002f58   2019     ADDWFC    0x19,0x0,0x0                                                                                    
002f5a   6ef4     MOVWF     0xf4,0x0                                                                                        
002f5c   502c     MOVF      0x2c,0x0,0x0                                                                                    
002f5e   201a     ADDWFC    0x1a,0x0,0x0                                                                                    
002f60   6ef8     MOVWF     0xf8,0x0                                                                                        
002f62   cff4     MOVFF     0xff4,0xff7                                                                                     
002f64   fff7                                                                                                               
002f66   cff3     MOVFF     0xff3,0xff6                                                                                     
002f68   fff6                                                                                                               
002f6a   0008     TBLRD                                                                                                     
002f6c   0e09     MOVLW     0x9                                                                                             
002f6e   cff5     MOVFF     0xff5,0xfdb                                                                                     
002f70   ffdb                                                                                                               
002f72   0e58     MOVLW     0x58                                   if (c == 'X' && cval >= 'a')                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f74   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002f76   e10f     BNZ       0x2f96                                                                                          
002f78   0e61     MOVLW     0x61                                                                                            
002f7a   6ef3     MOVWF     0xf3,0x0                                                                                        
002f7c   0e09     MOVLW     0x9                                                                                             
002f7e   d97b     RCALL     0x3276                                                                                          
002f80   e30a     BNC       0x2f96                                                                                          
003276   cfdb     MOVFF     0xfdb,0xff4                                                                                     
003278   fff4                                                                                                               
00327a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00327c   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
00327e   0012     RETURN    0x0                                                                                             
002f82   0e20     MOVLW     0x20                                     cval -= 'a' - 'A';                                     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f84   6e2a     MOVWF     0x2a,0x0                                                                                        
002f86   0e09     MOVLW     0x9                                                                                             
002f88   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
002f8a   ffe7                                                                                                               
002f8c   502a     MOVF      0x2a,0x0,0x0                                                                                    
002f8e   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
002f90   0e09     MOVLW     0x9                                                                                             
002f92   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002f94   ffdb                                                                                                               
002f96   0e07     MOVLW     0x7                                    larg /= size;                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002f98   cfdb     MOVFF     0xfdb,0x2a                                                                                      
002f9a   f02a                                                                                                               
002f9c   6a2b     CLRF      0x2b,0x0                                                                                        
002f9e   6a2c     CLRF      0x2c,0x0                                                                                        
002fa0   6a2d     CLRF      0x2d,0x0                                                                                        
002fa2   da0f     RCALL     0x33c2                                                                                          
002fa4   c02a     MOVFF     0x2a,0x21                                                                                       
002fa6   f021                                                                                                               
002fa8   c02b     MOVFF     0x2b,0x22                                                                                       
002faa   f022                                                                                                               
002fac   c02c     MOVFF     0x2c,0x23                                                                                       
002fae   f023                                                                                                               
002fb0   c02d     MOVFF     0x2d,0x24                                                                                       
002fb2   f024                                                                                                               
002fb4   cfee     MOVFF     0xfee,0x1c                                                                                      
002fb6   f01c                                                                                                               
002fb8   cfee     MOVFF     0xfee,0x1d                                                                                      
002fba   f01d                                                                                                               
002fbc   cfee     MOVFF     0xfee,0x1e                                                                                      
002fbe   f01e                                                                                                               
002fc0   cfef     MOVFF     0xfef,0x1f                                                                                      
002fc2   f01f                                                                                                               
002fc4   ec48     CALL      0x4690,0x0                                                                                      
002fc6   f023                                                                                                               
002fc8   c01f     MOVFF     0x1f,0xfed                                                                                      
002fca   ffed                                                                                                               
002fcc   c01e     MOVFF     0x1e,0xfed                                                                                      
002fce   ffed                                                                                                               
002fd0   c01d     MOVFF     0x1d,0xfed                                                                                      
002fd2   ffed                                                                                                               
002fd4   c01c     MOVFF     0x1c,0xfef                                                                                      
002fd6   ffef                                                                                                               
002fd8   0e39     MOVLW     0x39                                   *q-- = cval;                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002fda   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002fdc   ffe9                                                                                                               
002fde   06db     DECF      0xdb,0x1,0x0                                                                                    
002fe0   0e3a     MOVLW     0x3a                                                                                            
002fe2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002fe4   ffea                                                                                                               
002fe6   e201     BC        0x2fea                                                                                          
002fe8   06db     DECF      0xdb,0x1,0x0                                                                                    
002fea   0e09     MOVLW     0x9                                                                                             
002fec   cfdb     MOVFF     0xfdb,0xfef                                                                                     
002fee   ffef                                                                                                               
002ff0   0e15     MOVLW     0x15                                   ++digit_cnt;                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ff2   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                                 }                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ff4   d94b     RCALL     0x328c                             while (larg);                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ff6   e195     BNZ       0x2f22                                                                                          
                                                               /* if the '#' flag was specified and we're dealing           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  with an 'o', 'b', 'B', 'x', or 'X' conversion,            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  we need a bit more. */                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ff8   0e03     MOVLW     0x3                                if (flags & _FLAG_OCTO)                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ffa   a6db     BTFSS     0xdb,0x3,0x0                                                                                    
002ffc   d01d     BRA       0x3038                                                                                          
                                                                 {                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
002ffe   0e6f     MOVLW     0x6f                                   if (c == 'o')                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003000   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
003002   e106     BNZ       0x3010                                                                                          
                                                                     {                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                       /* per the standard, for octal, the '#' flag         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          makes the precision be at least one more          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          than the number of digits in the number */        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003004   d9c1     RCALL     0x3388                                     if (precision <= digit_cnt)                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003006   e318     BNC       0x3038                                                                                          
003388   0e05     MOVLW     0x5                                                                                             
00338a   cfdb     MOVFF     0xfdb,0x2a                                                                                      
00338c   f02a                                                                                                               
00338e   0e15     MOVLW     0x15                                                                                            
003390   50db     MOVF      0xdb,0x0,0x0                                                                                    
003392   80d8     BSF       0xd8,0x0,0x0                                                                                    
003394   542a     SUBFWB    0x2a,0x0,0x0                                                                                    
003396   0012     RETURN    0x0                                                                                             
003008   0e15     MOVLW     0x15                                         precision = digit_cnt + 1;                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00300a   28db     INCF      0xdb,0x0,0x0                                                                                    
00300c   da5b     RCALL     0x34c4                                                                                          
                                                                     }                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00300e   d014     BRA       0x3038                                 else if (c == 'x'                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003010   0e78     MOVLW     0x78                                                                                            
003012   5cdf     SUBWF     0xdf,0x0,0x0                                    || c == 'X' || c == 'b' || c == 'B')            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003014   e009     BZ        0x3028                                                                                          
003016   0e58     MOVLW     0x58                                                                                            
003018   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00301a   e006     BZ        0x3028                                                                                          
00301c   0e62     MOVLW     0x62                                                                                            
00301e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
003020   e003     BZ        0x3028                                                                                          
003022   0e42     MOVLW     0x42                                                                                            
003024   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
003026   e108     BNZ       0x3038                                                                                          
003028   0e02     MOVLW     0x2                                      prefix_cnt = 2;                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00302a   6ef3     MOVWF     0xf3,0x0                                                                                        
00302c   0e16     MOVLW     0x16                                                                                            
00302e   cff3     MOVFF     0xff3,0xfdb                                                                                     
003030   ffdb                                                                                                               
                                                                 }                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003032   d002     BRA       0x3038                         else                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003034   0e15     MOVLW     0x15                             digit_cnt = 0;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003036   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* The leading zero count depends on whether the '0'             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              flag was specified or not. If it was not, then the            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count is the difference between the specified                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision and the number of digits (including the             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              sign character, if any) to be printed; otherwise,             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              it's as if the precision were equal to the max of             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the specified precision and the field width. If a             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision was specified, the '0' flag is ignored,             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              however. */                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003038   0e03     MOVLW     0x3                            if ((flags & _FLAG_ZERO) && (width > precision)                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00303a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00303c   0b10     ANDLW     0x10                                                                                            
003040   0e04     MOVLW     0x4                                                                                             
003042   cfdb     MOVFF     0xfdb,0x2a                                                                                      
003044   f02a                                                                                                               
003046   0e05     MOVLW     0x5                                                                                             
003048   50db     MOVF      0xdb,0x0,0x0                                                                                    
00304a   80d8     BSF       0xd8,0x0,0x0                                                                                    
00304c   542a     SUBFWB    0x2a,0x0,0x0                                                                                    
00303e   e00e     BZ        0x305c                             && !have_precision)                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00304e   e206     BC        0x305c                                                                                          
003050   0e06     MOVLW     0x6                                                                                             
003052   50db     MOVF      0xdb,0x0,0x0                                                                                    
003054   e103     BNZ       0x305c                                                                                          
003056   0e04     MOVLW     0x4                              precision = width;                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003058   50db     MOVF      0xdb,0x0,0x0                                                                                    
00305a   da34     RCALL     0x34c4                                                                                          
                                                           /* for the rest of the processing, precision contains            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the leading zero count for the conversion. */                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00305c   d995     RCALL     0x3388                         if (precision > digit_cnt)                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00305e   e20a     BC        0x3074                                                                                          
003060   0e05     MOVLW     0x5                              precision -= digit_cnt;                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003062   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
003064   ffe7                                                                                                               
003066   0e15     MOVLW     0x15                                                                                            
003068   50db     MOVF      0xdb,0x0,0x0                                                                                    
00306a   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
00306c   0e05     MOVLW     0x5                                                                                             
00306e   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003070   ffdb                                                                                                               
003072   d002     BRA       0x3078                         else                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003074   0e05     MOVLW     0x5                              precision = 0;                                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003076   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* the space count is the difference between the field           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              width and the digit count plus the leading zero               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count. If the width is less than the digit count              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              plus the leading zero count, the space count is               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              zero. */                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003078   0e04     MOVLW     0x4                            if (width > precision + digit_cnt + prefix_cnt)                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00307a   cfdb     MOVFF     0xfdb,0x2a                                                                                      
00307c   f02a                                                                                                               
00307e   0e16     MOVLW     0x16                                                                                            
003080   d945     RCALL     0x330c                                                                                          
003082   80d8     BSF       0xd8,0x0,0x0                                                                                    
003084   542a     SUBFWB    0x2a,0x0,0x0                                                                                    
003086   e214     BC        0x30b0                                                                                          
00330c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00330e   ffe6                                                                                                               
003310   0e15     MOVLW     0x15                                                                                            
003312   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003314   ffe6                                                                                                               
003316   0e05     MOVLW     0x5                                                                                             
003318   50db     MOVF      0xdb,0x0,0x0                                                                                    
00331a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00331c   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
00331e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003320   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
003322   0012     RETURN    0x0                                                                                             
                                                             space_cnt =                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003088   0e16     MOVLW     0x16                               width - precision - digit_cnt - prefix_cnt;                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00308a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00308c   ffe6                                                                                                               
00308e   0e15     MOVLW     0x15                                                                                            
003090   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003092   ffe6                                                                                                               
003094   0e04     MOVLW     0x4                                                                                             
003096   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003098   ffe6                                                                                                               
00309a   0e05     MOVLW     0x5                                                                                             
00309c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00309e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030a0   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
0030a2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030a4   80d8     BSF       0xd8,0x0,0x0                                                                                    
0030a6   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
0030a8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030aa   80d8     BSF       0xd8,0x0,0x0                                                                                    
0030ac   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
0030ae   d95f     RCALL     0x336e                                                                                          
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* for output, we check the justification, if it's               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              right justified and the space count is positive, we           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              emit the space characters first. */                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030b0   0e03     MOVLW     0x3                            if (!(flags & _FLAG_MINUS) && space_cnt)                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030b2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0030b4   0b01     ANDLW     0x1                                                                                             
0030b6   e10b     BNZ       0x30ce                                                                                          
0030b8   0e08     MOVLW     0x8                                                                                             
0030ba   50db     MOVF      0xdb,0x0,0x0                                                                                    
0030bc   e008     BZ        0x30ce                                                                                          
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030be   d8b2     RCALL     0x3224                             if (s_put_n_chars (handle, space_cnt, ' '))                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030c0   e001     BZ        0x30c4                                                                                          
0030c2   d08d     BRA       0x31de                                                                                          
                                                                 return EOF;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030c4   0e08     MOVLW     0x8                                count += space_cnt;                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030c6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0030c8   d8be     RCALL     0x3246                                                                                          
0030ca   0e08     MOVLW     0x8                                space_cnt = 0;                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030cc   6adb     CLRF      0xdb,0x0                                                                                        
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a sign character to print, that comes              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              next */                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030ce   0e17     MOVLW     0x17                           if (sign_char)                                                   C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030d0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0030d2   e007     BZ        0x30e2                                                                                          
0030d4   d988     RCALL     0x33e6                           if (putc (sign_char, handle) == EOF)                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030d6   0e17     MOVLW     0x17                                                                                            
0030d8   d9f1     RCALL     0x34bc                                                                                          
0030da   e103     BNZ       0x30e2                                                                                          
0030dc   1c2b     COMF      0x2b,0x0,0x0                                                                                    
0030de   e101     BNZ       0x30e2                                                                                          
0030e0   d07e     BRA       0x31de                                                                                          
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a prefix (0b, 0B, 0x or 0X), that's next */        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030e2   0e16     MOVLW     0x16                           if (prefix_cnt)                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030e4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0030e6   e016     BZ        0x3114                                                                                          
                                                             {                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030e8   d97e     RCALL     0x33e6                             if (putc ('0', handle) == EOF)                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030ea   0e30     MOVLW     0x30                                                                                            
0030ec   6ee6     MOVWF     0xe6,0x0                                                                                        
0030ee   d89f     RCALL     0x322e                                                                                          
0030f0   e102     BNZ       0x30f6                                                                                          
0030f2   1c2b     COMF      0x2b,0x0,0x0                                                                                    
0030f4   e074     BZ        0x31de                                                                                          
                                                                 return EOF;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030f6   d977     RCALL     0x33e6                             if (putc (c, handle) == EOF)                                 C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0030f8   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
0030fa   ffe6                                                                                                               
0030fc   ec75     CALL      0x44ea,0x0                                                                                      
0030fe   f022                                                                                                               
003100   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003102   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003104   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003106   cff4     MOVFF     0xff4,0x2b                                                                                      
003108   f02b                                                                                                               
00310a   0100     MOVLB     0x0                                                                                             
00310c   1cf3     COMF      0xf3,0x0,0x0                                                                                    
00310e   e102     BNZ       0x3114                                                                                          
003110   1c2b     COMF      0x2b,0x0,0x0                                                                                    
003112   e065     BZ        0x31de                                                                                          
                                                                 return EOF;                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have leading zeros, they follow. the prefix, if any     C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is included in the number of digits when determining how      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              many leading zeroes are needed. */                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003114   0e05     MOVLW     0x5                            if (precision > prefix_cnt)                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003116   cfdb     MOVFF     0xfdb,0x2a                                                                                      
003118   f02a                                                                                                               
00311a   0e16     MOVLW     0x16                                                                                            
00311c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00311e   80d8     BSF       0xd8,0x0,0x0                                                                                    
003120   542a     SUBFWB    0x2a,0x0,0x0                                                                                    
003122   e209     BC        0x3136                                                                                          
003124   0e05     MOVLW     0x5                              precision -= prefix_cnt;                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003126   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
003128   ffe7                                                                                                               
00312a   0e16     MOVLW     0x16                                                                                            
00312c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00312e   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
003130   0e05     MOVLW     0x5                                                                                             
003132   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003134   ffdb                                                                                                               
003136   0e30     MOVLW     0x30                           if (s_put_n_chars (handle, precision, '0'))                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003138   6ee6     MOVWF     0xe6,0x0                                                                                        
00313a   0e05     MOVLW     0x5                                                                                             
00313c   d9cb     RCALL     0x34d4                                                                                          
00313e   e14f     BNZ       0x31de                                                                                          
003486   ec69     CALL      0x28d2,0x0                                                                                      
003488   f014                                                                                                               
00348a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00348c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00348e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003490   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003492   0900     IORLW     0x0                                                                                             
003494   0012     RETURN    0x0                                                                                             
0034d4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0034d6   ffe6                                                                                                               
0034d8   df86     RCALL     0x33e6                                                                                          
0034da   ef43     GOTO      0x3486                                                                                          
0034dc   f01a                                                                                                               
                                                             return EOF;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* print the actual number */                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003140   0e39     MOVLW     0x39                           for (cval = *++q; cval; cval = *++q)                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003142   2adb     INCF      0xdb,0x1,0x0                                                                                    
003144   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
003146   ffe9                                                                                                               
003148   0e3a     MOVLW     0x3a                                                                                            
00314a   e301     BNC       0x314e                                                                                          
00314c   2adb     INCF      0xdb,0x1,0x0                                                                                    
00314e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
003150   ffea                                                                                                               
003152   0e09     MOVLW     0x9                                                                                             
003154   cfef     MOVFF     0xfef,0xfdb                                                                                     
003156   ffdb                                                                                                               
003158   50db     MOVF      0xdb,0x0,0x0                                                                                    
00315a   e00e     BZ        0x3178                                                                                          
003168   0e39     MOVLW     0x39                                                                                            
00316a   2adb     INCF      0xdb,0x1,0x0                                                                                    
00316c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00316e   ffe9                                                                                                               
003170   0e3a     MOVLW     0x3a                                                                                            
003172   e3ed     BNC       0x314e                                                                                          
003174   2adb     INCF      0xdb,0x1,0x0                                                                                    
003176   d7eb     BRA       0x314e                                                                                          
00315c   d944     RCALL     0x33e6                           if (putc (cval, handle) == EOF)                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00315e   0e09     MOVLW     0x9                                                                                             
003160   d9ad     RCALL     0x34bc                                                                                          
003162   e102     BNZ       0x3168                                                                                          
003164   1c2b     COMF      0x2b,0x0,0x0                                                                                    
003166   e03b     BZ        0x31de                                                                                          
0034bc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0034be   ffe6                                                                                                               
0034c0   ef17     GOTO      0x322e                                                                                          
0034c2   f019                                                                                                               
                                                               return EOF;                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if there are any spaces left, they go to right-pad            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the field */                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003178   d855     RCALL     0x3224                         if (s_put_n_chars (handle, space_cnt, ' '))                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00317a   e131     BNZ       0x31de                                                                                          
003224   0e20     MOVLW     0x20                                                                                            
003226   6ee6     MOVWF     0xe6,0x0                                                                                        
003228   0e08     MOVLW     0x8                                                                                             
00322a   ef6a     GOTO      0x34d4                                                                                          
00322c   f01a                                                                                                               
0033e6   0efc     MOVLW     0xfc                                                                                            
0033e8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0033ea   ffe6                                                                                                               
0033ec   0efd     MOVLW     0xfd                                                                                            
0033ee   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0033f0   ffe6                                                                                                               
0033f2   0012     RETURN    0x0                                                                                             
                                                             return EOF;                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00317c   0e16     MOVLW     0x16                           count += precision + digit_cnt + space_cnt + prefix_cnt;         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00317e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003180   ffe6                                                                                                               
003182   0e08     MOVLW     0x8                                                                                             
003184   d8c3     RCALL     0x330c                                                                                          
003186   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003188   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
00318a   d85d     RCALL     0x3246                                                                                          
003246   6e2a     MOVWF     0x2a,0x0                                                                                        
003248   6a2b     CLRF      0x2b,0x0                                                                                        
00324a   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00324c   0f01     ADDLW     0x1                                                                                             
00324e   d94d     RCALL     0x34ea                                                                                          
003250   502a     MOVF      0x2a,0x0,0x0                                                                                    
003252   26ee     ADDWF     0xee,0x1,0x0                                                                                    
003254   502b     MOVF      0x2b,0x0,0x0                                                                                    
003256   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
003258   0012     RETURN    0x0                                                                                             
                                                         }                                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00318c   d02e     BRA       0x31ea                       break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'n':                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00318e   0e07     MOVLW     0x7                          switch (size)                                                      C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003190   50db     MOVF      0xdb,0x0,0x0                                                                                    
003192   0a03     XORLW     0x3                                                                                             
003194   e01c     BZ        0x31ce                                                                                          
003196   0a01     XORLW     0x1                                                                                             
003198   e014     BZ        0x31c2                                                                                          
00319a   0a03     XORLW     0x3                                                                                             
00319c   e007     BZ        0x31ac                                                                                          
                                                           {                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_LONG:                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031ac   d8f5     RCALL     0x3398                           *(long *) va_arg (ap, long *) = count;                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031ae   6a2f     CLRF      0x2f,0x0                                                                                        
0031b0   ae2d     BTFSS     0x2d,0x7,0x0                                                                                    
0031b2   d002     BRA       0x31b8                                                                                          
0031b4   682e     SETF      0x2e,0x0                                                                                        
0031b6   682f     SETF      0x2f,0x0                                                                                        
0031b8   d82c     RCALL     0x3212                                                                                          
0031ba   d8bc     RCALL     0x3334                                                                                          
0031bc   c02f     MOVFF     0x2f,0xfee                                                                                      
0031be   ffee                                                                                                               
003334   50ee     MOVF      0xee,0x0,0x0                                                                                    
003336   cfef     MOVFF     0xfef,0xfea                                                                                     
003338   ffea                                                                                                               
00333a   6ee9     MOVWF     0xe9,0x0                                                                                        
00333c   c02c     MOVFF     0x2c,0xfee                                                                                      
00333e   ffee                                                                                                               
003340   c02d     MOVFF     0x2d,0xfee                                                                                      
003342   ffee                                                                                                               
003344   c02e     MOVFF     0x2e,0xfee                                                                                      
003346   ffee                                                                                                               
003348   0012     RETURN    0x0                                                                                             
003398   0e01     MOVLW     0x1                                                                                             
00339a   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00339c   f02c                                                                                                               
00339e   0e02     MOVLW     0x2                                                                                             
0033a0   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0033a2   f02d                                                                                                               
0033a4   6a2e     CLRF      0x2e,0x0                                                                                        
0033a6   0012     RETURN    0x0                                                                                             
0031c0   d014     BRA       0x31ea                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_SHLONG:                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031c2   d8ea     RCALL     0x3398                           *(short long *) va_arg (ap, short long *) = count;             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031c4   be2d     BTFSC     0x2d,0x7,0x0                                                                                    
0031c6   682e     SETF      0x2e,0x0                                                                                        
0031c8   d824     RCALL     0x3212                                                                                          
0031ca   d8b4     RCALL     0x3334                                                                                          
0031cc   d00e     BRA       0x31ea                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_BYTE:                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031ce   d963     RCALL     0x3496                           *(signed char *) va_arg (ap, signed char *) = count;           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031d0   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0031d2   ffef                                                                                                               
0031d4   d00a     BRA       0x31ea                           break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           default:                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
00319e   d97b     RCALL     0x3496                           *(int *) va_arg (ap, int *) = count;                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031a0   cfdb     MOVFF     0xfdb,0xfee                                                                                     
0031a2   ffee                                                                                                               
0031a4   0e02     MOVLW     0x2                                                                                             
0031a6   cfdb     MOVFF     0xfdb,0xfed                                                                                     
0031a8   ffed                                                                                                               
003496   debd     RCALL     0x3212                                                                                          
003498   50ee     MOVF      0xee,0x0,0x0                                                                                    
00349a   cfef     MOVFF     0xfef,0xfea                                                                                     
00349c   ffea                                                                                                               
00349e   6ee9     MOVWF     0xe9,0x0                                                                                        
0034a0   0e01     MOVLW     0x1                                                                                             
0034a2   0012     RETURN    0x0                                                                                             
                                                             break;                                                         C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031aa   d01f     BRA       0x31ea                       break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       default:                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* undefined behaviour. we do nothing */                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                   }                                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                 else                                                                       C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                   {                                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031d6   d97b     RCALL     0x34ce                   if (putc (c, handle) == EOF)                                           C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031d8   e105     BNZ       0x31e4                                                                                          
0031da   1c2b     COMF      0x2b,0x0,0x0                                                                                    
0031dc   e103     BNZ       0x31e4                                                                                          
00322e   ec75     CALL      0x44ea,0x0                                                                                      
003230   f022                                                                                                               
003232   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003234   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003236   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003238   cff3     MOVFF     0xff3,0x2a                                                                                      
00323a   f02a                                                                                                               
00323c   cff4     MOVFF     0xff4,0x2b                                                                                      
00323e   f02b                                                                                                               
003240   0100     MOVLB     0x0                                                                                             
003242   1cf3     COMF      0xf3,0x0,0x0                                                                                    
003244   0012     RETURN    0x0                                                                                             
003474   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
003476   ffe6                                                                                                               
003478   ef17     GOTO      0x322e                                                                                          
00347a   f019                                                                                                               
0034ce   df8b     RCALL     0x33e6                                                                                          
0034d0   ef3a     GOTO      0x3474                                                                                          
0034d2   f01a                                                                                                               
0031de   68f3     SETF      0xf3,0x0                   return EOF;                                                          C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031e0   68f4     SETF      0xf4,0x0                                                                                        
0031e2   d010     BRA       0x3204                                                                                          
0031e4   d8fc     RCALL     0x33de                   ++count;                                                               C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031e6   e301     BNC       0x31ea                                                                                          
0031e8   2adb     INCF      0xdb,0x1,0x0                                                                                    
0033de   0e01     MOVLW     0x1                                                                                             
0033e0   2adb     INCF      0xdb,0x1,0x0                                                                                    
0033e2   0e02     MOVLW     0x2                                                                                             
0033e4   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                               }                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031f0   0e01     MOVLW     0x1              return count;                                                                  C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
0031f2   cfdb     MOVFF     0xfdb,0x2a                                                                                      
0031f4   f02a                                                                                                               
0031f6   0e02     MOVLW     0x2                                                                                             
0031f8   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0031fa   f02b                                                                                                               
0031fc   c02a     MOVFF     0x2a,0xff3                                                                                      
0031fe   fff3                                                                                                               
003200   c02b     MOVFF     0x2b,0xff4                                                                                      
003202   fff4                                                                                                               
003204   0e3b     MOVLW     0x3b           }                                                                                C:\MCC18\src\TRADIT~1\stdclib\vfprintf.c
003206   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
003208   e202     BC        0x320e                                                                                          
00320a   6ae1     CLRF      0xe1,0x0                                                                                        
00320c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00320e   6ee1     MOVWF     0xe1,0x0                                                                                        
003210   d0cb     BRA       0x33a8                                                                                          
                                           /*** Unsigned Integer Division: 32-bit by 32-bit                                 C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                            ***                                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                            ***       for: Saved (for the worst case) at least 8*32 = 256 instruction cycles C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                            ***/                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           void  FXD3232U(void/* ulong aarg, ulong barg */)                                 C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           {                                                                                C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                             // use INDF1 for the counter...                                                C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                               _asm                                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                               // REM = 0                                                                   C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004690   6a1b     CLRF      0x1b,0x0           clrf __REMB0, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004692   6a1a     CLRF      0x1a,0x0           clrf __REMB1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004694   6a19     CLRF      0x19,0x0           clrf __REMB2, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004696   6a18     CLRF      0x18,0x0           clrf __REMB3, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                               // INDF1 = 32                                                                C:\MCC18\src\TRADIT~1\math\fxd3232u.c
004698   0e20     MOVLW     0x20               movlw 32                                                                     C:\MCC18\src\TRADIT~1\math\fxd3232u.c
00469a   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                               // Clear the carry                                                           C:\MCC18\src\TRADIT~1\math\fxd3232u.c
00469c   90d8     BCF       0xd8,0x0,0x0       bcf STATUS, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           loop:                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           	//AARG32 <<= 1; The carry is always clear at the top of the loop.               C:\MCC18\src\TRADIT~1\math\fxd3232u.c
00469e   361c     RLCF      0x1c,0x1,0x0   	rlcf __AARGB3, 1, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046a0   361d     RLCF      0x1d,0x1,0x0   	rlcf __AARGB2, 1, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046a2   361e     RLCF      0x1e,0x1,0x0   	rlcf __AARGB1, 1, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046a4   361f     RLCF      0x1f,0x1,0x0   	rlcf __AARGB0, 1, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           	//REM32 = (REM32 << 1) | (AARG32 >> 32)                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046a6   3618     RLCF      0x18,0x1,0x0   	rlcf __REMB3, 1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046a8   3619     RLCF      0x19,0x1,0x0   	rlcf __REMB2, 1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046aa   361a     RLCF      0x1a,0x1,0x0   	rlcf __REMB1, 1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046ac   361b     RLCF      0x1b,0x1,0x0   	rlcf __REMB0, 1, 0                                                              C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           	                                                                                C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           	//if (PROD >= BARG32)                                                           C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046ae   5021     MOVF      0x21,0x0,0x0   	movf __BARGB3, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046b0   5c18     SUBWF     0x18,0x0,0x0   	subwf __REMB3, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046b2   5022     MOVF      0x22,0x0,0x0   	movf __BARGB2, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046b4   5819     SUBWFB    0x19,0x0,0x0   	subwfb __REMB2, 0, 0                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046b6   5023     MOVF      0x23,0x0,0x0   	movf __BARGB1, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046b8   581a     SUBWFB    0x1a,0x0,0x0   	subwfb __REMB1, 0, 0                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046ba   5024     MOVF      0x24,0x0,0x0   	movf __BARGB0, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046bc   581b     SUBWFB    0x1b,0x0,0x0   	subwfb __REMB0, 0, 0                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046be   e309     BNC       0x46d2         	bnc _false                                                                      C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                               //{                                                                          C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           	    //REM32-= BARG32;                                                           C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046c0   5021     MOVF      0x21,0x0,0x0   	    movf __BARGB3, 0, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046c2   5e18     SUBWF     0x18,0x1,0x0   	    subwf __REMB3, 1, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046c4   5022     MOVF      0x22,0x0,0x0   	    movf __BARGB2, 0, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046c6   5a19     SUBWFB    0x19,0x1,0x0   	    subwfb __REMB2, 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046c8   5023     MOVF      0x23,0x0,0x0   	    movf __BARGB1, 0, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046ca   5a1a     SUBWFB    0x1a,0x1,0x0   	    subwfb __REMB1, 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046cc   5024     MOVF      0x24,0x0,0x0   	    movf __BARGB0, 0, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046ce   5a1b     SUBWFB    0x1b,0x1,0x0   	    subwfb __REMB0, 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           	    //++AARG32; Since AARG32 was shift to the left above, we only need to set   C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                   //          the lowest bit. Use incf so that the carry flag will also be cleared. C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                   //          Thus, the carry will always be clear at the top of the loop. C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046d0   2a1c     INCF      0x1c,0x1,0x0   	    incf __AARGB3, 1, 0                                                         C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                               //}                                                                          C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           _false:                                                                          C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046d2   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046d4   d7e4     BRA       0x469e             bra loop                                                                     C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                             /* result in AARG already... */                                                C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                             _endasm                                                                        C:\MCC18\src\TRADIT~1\math\fxd3232u.c
0046d6   0012     RETURN    0x0            }                                                                                C:\MCC18\src\TRADIT~1\math\fxd3232u.c
                                           ;	RCS Header $Id: fxm1616s.asm,v 1.2.12.1 2006/01/13 04:11:26 nairnj Exp $       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	$Revision: 1.2.12.1 $                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1231                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1231.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2.12.1 2006/01/13 04:11:25 nairnj Exp $        C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2.12.1 $                                                          C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2.12.1 2006/01/13 04:11:25 nairnj Exp $           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	__AARGB0, __AARGB1, __AARGB2, __AARGB3                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  __AARGB4, __AARGB5, __AARGB6, __AARGB7                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  __AEXP                                                                  C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  __REMB3, __REMB2, __REMB1, __REMB0                                      C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2.12.1 2006/01/13 04:11:25 nairnj Exp $           C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  __BARGB3, __BARGB2, __BARGB1, __BARGB0                           C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  __BEXP                                                           C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.2.12.1 2006/01/13 04:11:26 nairnj Exp $        C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  __TEMPB3, __TEMPB2, __TEMPB1, __TEMPB0, __TEMP                   C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       16x16 Bit Signed Fixed Point Multiply 16 x 16 -> 32                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Input:  16 bit signed fixed point multiplicand in AARGB0, AARGB1         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               16 bit signed fixed point multiplier in BARGB0, BARGB1           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Use:    CALL    FXM1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Output: 32 bit signed fixed point product in AARGB0, AARGB1,             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               AARGB2, AARGB3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Max Timing:     39 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Min Timing:     31 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       PM: 38              DM: 8                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           FXM1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		GLOBAL	FXM1616S                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00428c   c01f     MOVFF     0x1f,0x29      		MOVFF	__AARGB0,__TEMPB0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00428e   f029                                                                                                               
004290   c01e     MOVFF     0x1e,0x28      		MOVFF	__AARGB1,__TEMPB1	                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004292   f028                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004294   501e     MOVF      0x1e,0x0,0x0   		MOVF	__AARGB1,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004296   0223     MULWF     0x23,0x0       		MULWF	__BARGB1                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004298   cff4     MOVFF     0xff4,0x1d     		MOVFF	PRODH,__AARGB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00429a   f01d                                                                                                               
00429c   cff3     MOVFF     0xff3,0x1c     		MOVFF	PRODL,__AARGB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00429e   f01c                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042a0   501f     MOVF      0x1f,0x0,0x0   		MOVF	__AARGB0,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042a2   0224     MULWF     0x24,0x0       		MULWF	__BARGB0                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042a4   cff4     MOVFF     0xff4,0x1f     		MOVFF	PRODH,__AARGB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042a6   f01f                                                                                                               
0042a8   cff3     MOVFF     0xff3,0x1e     		MOVFF	PRODL,__AARGB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042aa   f01e                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042ac   0223     MULWF     0x23,0x0       		MULWF	__BARGB1                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042ae   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042b0   261d     ADDWF     0x1d,0x1,0x0   		ADDWF	__AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042b2   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042b4   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	__AARGB1,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042b6   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042b8   221f     ADDWFC    0x1f,0x1,0x0   		ADDWFC	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042ba   5028     MOVF      0x28,0x0,0x0   		MOVF	__TEMPB1,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042bc   0224     MULWF     0x24,0x0       		MULWF	__BARGB0                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042be   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042c0   261d     ADDWF     0x1d,0x1,0x0   		ADDWF	__AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042c2   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042c4   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	__AARGB1,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042c6   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042c8   221f     ADDWFC    0x1f,0x1,0x0   		ADDWFC	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042ca   ae24     BTFSS     0x24,0x7,0x0   		BTFSS	__BARGB0,MSB                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042cc   ef6c     GOTO      0x42d8         		GOTO	TSIGN1616A                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042ce   f021                                                                                                               
0042d0   5028     MOVF      0x28,0x0,0x0   		MOVF	__TEMPB1,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042d2   5e1e     SUBWF     0x1e,0x1,0x0   		SUBWF	__AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042d4   5029     MOVF      0x29,0x0,0x0   		MOVF	__TEMPB0,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042d6   5a1f     SUBWFB    0x1f,0x1,0x0   		SUBWFB	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           TSIGN1616A                                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042d8   ae29     BTFSS     0x29,0x7,0x0   		BTFSS	__TEMPB0,MSB                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042da   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042dc   5023     MOVF      0x23,0x0,0x0   		MOVF	__BARGB1,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042de   5e1e     SUBWF     0x1e,0x1,0x0   		SUBWF	__AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042e0   5024     MOVF      0x24,0x0,0x0   		MOVF	__BARGB0,W                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042e2   5a1f     SUBWFB    0x1f,0x1,0x0   		SUBWFB	__AARGB0,F                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0042e4   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           /* a signed multiply is only different from an unsigned multiply                 C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                            * if the upper bytes of the result matter, which for us they                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                            * don't.                                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                            */                                                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                           #define PRODH	(PRODL + 1)                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char __AARGB3, __BARGB3;                                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char __AARGB7;                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                           void FXM3232 (void)                                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                           {                                                                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                             _asm                                                                           C:\MCC18\src\TRADIT~1\math\fxm3232.c
00456e   501c     MOVF      0x1c,0x0,0x0       movf __AARGB3, 0, 0                                                          C:\MCC18\src\TRADIT~1\math\fxm3232.c
004570   0221     MULWF     0x21,0x0           mulwf __BARGB3, 0                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // low byte of both operands, so result adds into the low order              C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // result bytes                                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
004572   cff3     MOVFF     0xff3,0x18         movff PRODL, __AARGB7                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
004574   f018                                                                                                               
004576   cff4     MOVFF     0xff4,0x19         movff PRODH, __AARGB7 + 1                                                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
004578   f019                                                                                                               
                                               // W still contains AARGB3                                                   C:\MCC18\src\TRADIT~1\math\fxm3232.c
00457a   0222     MULWF     0x22,0x0           mulwf __BARGB3 + 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[1], so result adds into AARGB7[1,2]                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
00457c   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
00457e   2619     ADDWF     0x19,0x1,0x0       addwf __AARGB7 + 1, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
004580   0e00     MOVLW     0x0                movlw 0                                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004582   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\MCC18\src\TRADIT~1\math\fxm3232.c
004584   6e1a     MOVWF     0x1a,0x0           movwf __AARGB7 + 2, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\MCC18\src\TRADIT~1\math\fxm3232.c
004586   501c     MOVF      0x1c,0x0,0x0       movf __AARGB3, 0, 0                                                          C:\MCC18\src\TRADIT~1\math\fxm3232.c
004588   0223     MULWF     0x23,0x0           mulwf __BARGB3 + 2, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[2], so result adds into AARGB7[2,3]                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
00458a   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
00458c   261a     ADDWF     0x1a,0x1,0x0       addwf __AARGB7 + 2, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
00458e   0e00     MOVLW     0x0                movlw 0                                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004590   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\MCC18\src\TRADIT~1\math\fxm3232.c
004592   6e1b     MOVWF     0x1b,0x0           movwf __AARGB7 + 3, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\MCC18\src\TRADIT~1\math\fxm3232.c
004594   501c     MOVF      0x1c,0x0,0x0       movf __AARGB3, 0, 0                                                          C:\MCC18\src\TRADIT~1\math\fxm3232.c
004596   0224     MULWF     0x24,0x0           mulwf __BARGB3 + 3, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[3], so result adds into AARGB7[3].                                 C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\MCC18\src\TRADIT~1\math\fxm3232.c
004598   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
00459a   261b     ADDWF     0x1b,0x1,0x0       addwf __AARGB7 + 3, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // that's the end of all terms involving AARGB3[0].                          C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[1] to continue                                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
00459c   501d     MOVF      0x1d,0x0,0x0       movf __AARGB3 + 1, 0, 0                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
00459e   0221     MULWF     0x21,0x0           mulwf __BARGB3, 0                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1], so result adds into AARGB7[1,2]                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045a0   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045a2   2619     ADDWF     0x19,0x1,0x0       addwf __AARGB7 + 1, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045a4   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045a6   221a     ADDWFC    0x1a,0x1,0x0       addwfc __AARGB7 + 2, 1, 0                                                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045a8   0e00     MOVLW     0x0                movlw 0                                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045aa   221b     ADDWFC    0x1b,0x1,0x0       addwfc __AARGB7 + 3, 1, 0                                                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045ac   501d     MOVF      0x1d,0x0,0x0       movf __AARGB3 + 1, 0, 0                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045ae   0222     MULWF     0x22,0x0           mulwf __BARGB3 + 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[1], so result adds into AARGB7[2,3]                  C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045b0   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045b2   261a     ADDWF     0x1a,0x1,0x0       addwf __AARGB7 + 2, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045b4   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045b6   221b     ADDWFC    0x1b,0x1,0x0       addwfc __AARGB7 + 3, 1, 0                                                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045b8   501d     MOVF      0x1d,0x0,0x0       movf __AARGB3 + 1, 0, 0                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045ba   0223     MULWF     0x23,0x0           mulwf __BARGB3 + 2, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[2], so result adds into AARGB7[3]                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045bc   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045be   261b     ADDWF     0x1b,0x1,0x0       addwf __AARGB7 + 3, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the term from the product of AARGB3[1] and BARGB3[3] are     C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // that term.                                                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[2] to continue                                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045c0   501e     MOVF      0x1e,0x0,0x0       movf __AARGB3 + 2, 0, 0                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045c2   0221     MULWF     0x21,0x0           mulwf __BARGB3, 0                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[0], so result adds into AARGB7[2,3]                  C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045c4   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045c6   261a     ADDWF     0x1a,0x1,0x0       addwf __AARGB7 + 2, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045c8   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045ca   221b     ADDWFC    0x1b,0x1,0x0       addwfc __AARGB7 + 3, 1, 0                                                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[2] to continue                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045cc   501e     MOVF      0x1e,0x0,0x0       movf __AARGB3 + 2, 0, 0                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045ce   0222     MULWF     0x22,0x0           mulwf __BARGB3 + 1, 0                                                        C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[1], so result adds into AARGB7[3]                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045d0   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045d2   261b     ADDWF     0x1b,0x1,0x0       addwf __AARGB7 + 3, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the termsfrom the products of AARGB3[2] and BARGB3[2,3] are  C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // those terms.                                                              C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[3] to continue                                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045d4   501f     MOVF      0x1f,0x0,0x0       movf __AARGB3 + 3, 0, 0                                                      C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045d6   0221     MULWF     0x21,0x0           mulwf __BARGB3, 0                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[3] and BARGB3[0], so result adds into AARGB7[3]                    C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045d8   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045da   261b     ADDWF     0x1b,0x1,0x0       addwf __AARGB7 + 3, 1, 0                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                               _endasm;                                                                     C:\MCC18\src\TRADIT~1\math\fxm3232.c
0045dc   0012     RETURN    0x0            }                                                                                C:\MCC18\src\TRADIT~1\math\fxm3232.c
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1231                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1231.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; $Id: p18macro.inc,v 1.2 2005/05/20 15:34:54 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
004670   0eff     MOVLW     0xff             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
004672   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
004674   6ee9     MOVWF     0xe9,0x0                                                                                        
004676   0eff     MOVLW     0xff                                                                                            
004678   20e2     ADDWFC    0xe2,0x0,0x0                                                                                    
00467a   6eea     MOVWF     0xea,0x0                                                                                        
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
004680   0e2f     MOVLW     0x2f                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
004682   64ef     CPFSGT    0xef,0x0                                                                                        
004684   d004     BRA       0x468e                                                                                          
004686   0e3a     MOVLW     0x3a                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
004688   60ef     CPFSLT    0xef,0x0                                                                                        
00468a   d001     BRA       0x468e                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; @name isdigit                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;The {\bf isdigit} function tests the value of {\bf c} to determine if it        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;is a digit character. A digit character is defined as any decimal digit         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;character (0, 1, 2, 3, 4, 5, 6, 7, 8, 9).                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; int isdigit (int c);                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           CTYPE CODE                                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           isdigit                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             global isdigit                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; Proceedure: Use FSR0 as pointer to 'c'                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;         Return with result in PROD                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Clear out result                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
00466c   6af3     CLRF      0xf3,0x0                 clrf      PRODL, ACCESS                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
00466e   6af4     CLRF      0xf4,0x0       	  clrf      PRODH, ACCESS                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Set FSR0 = FSR1 - 2 ( location of 'c')                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     StkSetPtrToOffset FSR0L,-1                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
00467c   66ed     TSTFSZ    0xed,0x0                 tstfsz    POSTDEC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
00467e   d007     BRA       0x468e                   bra       jNoMatch            ; upper byte must be 0 to match          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Test for condition                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFleL   INDF0,ACCESS,'0'-1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFgeL   INDF0,ACCESS,'9'+1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jMatch:                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
00468c   2af3     INCF      0xf3,0x1,0x0             incf      PRODL,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jNoMatch:                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
00468e   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           #include <stdio.h>                                                               C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                           int _user_putc (char c);                                                         C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                           int _usart_putc (char c);                                                        C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                           int                                                                              C:\MCC18\src\TRADIT~1\stdclib\putc.c
0044ea   cfd9     MOVFF     0xfd9,0xfe6    putc (char c, FILE * f)                                                          C:\MCC18\src\TRADIT~1\stdclib\putc.c
0044ec   ffe6                                                                                                               
0044ee   cfda     MOVFF     0xfda,0xfe6                                                                                     
0044f0   ffe6                                                                                                               
0044f2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0044f4   ffd9                                                                                                               
0044f6   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0044f8   ffda                                                                                                               
                                           {                                                                                C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                             /* if the handle > 0 then it's a pointer to a string buffer address.           C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                specifically, a pointer to a pointer referencing the next available         C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                byte in the buffer, to which the character will be stored. */               C:\MCC18\src\TRADIT~1\stdclib\putc.c
0044fa   0efb     MOVLW     0xfb             if ((int) f >= 0)                                                              C:\MCC18\src\TRADIT~1\stdclib\putc.c
0044fc   cfdb     MOVFF     0xfdb,0x2a                                                                                      
0044fe   f02a                                                                                                               
004500   0efc     MOVLW     0xfc                                                                                            
004502   cfdb     MOVFF     0xfdb,0x2b                                                                                      
004504   f02b                                                                                                               
004506   0100     MOVLB     0x0                                                                                             
004508   0e80     MOVLW     0x80                                                                                            
00450a   142b     ANDWF     0x2b,0x0,0x0                                                                                    
00450c   e11a     BNZ       0x4542                                                                                          
00450e   0efb     MOVLW     0xfb               return (unsigned char) (*(*(char **) f)++ = c);                              C:\MCC18\src\TRADIT~1\stdclib\putc.c
004510   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004512   ffe9                                                                                                               
004514   0efc     MOVLW     0xfc                                                                                            
004516   cfdb     MOVFF     0xfdb,0xfea                                                                                     
004518   ffea                                                                                                               
00451a   cfee     MOVFF     0xfee,0xff3                                                                                     
00451c   fff3                                                                                                               
00451e   cfed     MOVFF     0xfed,0xff4                                                                                     
004520   fff4                                                                                                               
004522   2aee     INCF      0xee,0x1,0x0                                                                                    
004524   0e00     MOVLW     0x0                                                                                             
004526   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
004528   cff3     MOVFF     0xff3,0xfe9                                                                                     
00452a   ffe9                                                                                                               
00452c   cff4     MOVFF     0xff4,0xfea                                                                                     
00452e   ffea                                                                                                               
004530   0efd     MOVLW     0xfd                                                                                            
004532   cfdb     MOVFF     0xfdb,0xfef                                                                                     
004534   ffef                                                                                                               
004536   50ef     MOVF      0xef,0x0,0x0                                                                                    
004538   6a2b     CLRF      0x2b,0x0                                                                                        
00453a   6ef3     MOVWF     0xf3,0x0                                                                                        
00453c   c02b     MOVFF     0x2b,0xff4                                                                                      
00453e   fff4                                                                                                               
004540   d010     BRA       0x4562                                                                                          
                                                                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
004542   0efb     MOVLW     0xfb             if ((signed char) f == (signed char) _H_USART)                                 C:\MCC18\src\TRADIT~1\stdclib\putc.c
004544   50db     MOVF      0xdb,0x0,0x0                                                                                    
004546   08fe     SUBLW     0xfe                                                                                            
004548   e106     BNZ       0x4556                                                                                          
                                               {                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the USART function is direct, as it's our             C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    default value and we want it to work without needing any                C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    direct initialization from the user */                                  C:\MCC18\src\TRADIT~1\stdclib\putc.c
00454a   0efd     MOVLW     0xfd                 return _usart_putc (c);                                                    C:\MCC18\src\TRADIT~1\stdclib\putc.c
00454c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00454e   ffe6                                                                                                               
004550   ec99     CALL      0x4732,0x0                                                                                      
004552   f023                                                                                                               
004554   d005     BRA       0x4560                                                                                          
                                               }                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                             else                                                                           C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                               {                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the user function is direct, not via a                C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. We just put an empty definition of the                C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    function in the library and if the user specifies their own             C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    version it will be found first and the library definition will          C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    be ignored. We do it this way because it's generally better to          C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    spend 2 bytes of program memory for the RETURN instruction of           C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    the empty function than three bytes of data memory for the              C:\MCC18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. */                                                    C:\MCC18\src\TRADIT~1\stdclib\putc.c
004556   0efd     MOVLW     0xfd                 return _user_putc (c);                                                     C:\MCC18\src\TRADIT~1\stdclib\putc.c
004558   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00455a   ffe6                                                                                                               
00455c   ecb6     CALL      0xf6c,0x0                                                                                       
00455e   f007                                                                                                               
004560   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\MCC18\src\TRADIT~1\stdclib\putc.c
004562   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\MCC18\src\TRADIT~1\stdclib\putc.c
004564   cfe5     MOVFF     0xfe5,0xfda                                                                                     
004566   ffda                                                                                                               
004568   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00456a   ffd9                                                                                                               
00456c   0012     RETURN    0x0                                                                                             
                                             include <P18CXXX.INC>                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F4550.INC
                                                                                                                            C:\MCC18\MPASM\P18F4550.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F4550.INC
                                           ;  $Id: P18F4550.INC,v 1.8.2.2 2005/10/11 01:51:28 curtiss Exp $                 C:\MCC18\MPASM\P18F4550.INC
                                           ;  MPASM PIC18F4550 processor include                                            C:\MCC18\MPASM\P18F4550.INC
                                           ;                                                                                C:\MCC18\MPASM\P18F4550.INC
                                           ;  (c) Copyright 1999-2005 Microchip Technology, All rights reserved             C:\MCC18\MPASM\P18F4550.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F4550.INC
                                                                                                                            C:\MCC18\MPASM\P18F4550.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F4550.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1231                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1231.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1220                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1230                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1231                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1320                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1330                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1331                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                             GLOBAL _usart_putc                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           STDIO CODE                                                                       C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           _usart_putc                                                                      C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004732   0eff     MOVLW     0xff                         MOVLW     0xff                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004734   50e3     MOVF      0xe3,0x0,0x0                 MOVF      PLUSW1, w                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004736   baac     BTFSC     0xac,0x5,0x0                 BTFSC     TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004738   d004     BRA       0x4742                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00473a   6aaf     CLRF      0xaf,0x0                     CLRF      SPBRG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00473c   8eab     BSF       0xab,0x7,0x0                 BSF       RCSTA, 0x7                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00473e   8aac     BSF       0xac,0x5,0x0                 BSF       TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __USE_PORTB                                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                         BCF       TRISB, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004740   9c94     BCF       0x94,0x6,0x0                 BCF       TRISC, 0x6                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004742   a2ac     BTFSS     0xac,0x1,0x0   loop:         BTFSS     TXSTA, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004744   d7fe     BRA       0x4742                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004746   6ead     MOVWF     0xad,0x0                     MOVWF     TXREG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
004748   6ef3     MOVWF     0xf3,0x0                     MOVWF     PRODL                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00474a   6af4     CLRF      0xf4,0x0                     CLRF      PRODL + 1                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00474c   0012     RETURN    0x0                          RETURN                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           ; $Id: strlen.asm,v 1.1 2003/12/09 22:53:20 GrosbaJ Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1231                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1231.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: p18macro.inc,v 1.2 2005/05/20 15:34:54 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0045de   0efe     MOVLW     0xfe                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0045e0   cfe3     MOVFF     0xfe3,0xfe9                                                                                     
0045e2   ffe9                                                                                                               
0045e4   0eff     MOVLW     0xff                                                                                            
0045e6   cfe3     MOVFF     0xfe3,0xfea                                                                                     
0045e8   ffea                                                                                                               
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; @name strlen                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;``The {\bf strlen} function computes the length of the string pointed           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;Stack usage: 2 bytes. Re-entrant.                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@return ``The {\bf strlen} function returns the number of characters            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; size_t strlen (const char *s);                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           strlen                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             global strlen                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; Proceedure: Use FSR0 for 's' and use PROD for 'n'.                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Load FSR0 by copying 's' off stack into FSR0.                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Clear PROD                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0045ea   6af3     CLRF      0xf3,0x0                 clrf      PRODL,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0045ec   6af4     CLRF      0xf4,0x0                 clrf      PRODH,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0045ee   52ee     MOVF      0xee,0x1,0x0             movf      POSTINC0,F,ACCESS   ; set Z flag                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0045f0   e003     BZ        0x45f8                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0045f2   4af3     INFSNZ    0xf3,0x1,0x0   	  infsnz    PRODL, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0045f4   2af4     INCF      0xf4,0x1,0x0   	  incf      PRODH, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0045f6   d7fb     BRA       0x45ee                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0045f8   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: slenpgm.asm,v 1.3.14.1 2006/01/24 14:50:12 rhinec Exp $                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8527                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8527.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8622                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8622.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F24J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F24J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F44J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F44J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4221                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4221.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4321                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4321.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F97J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F97J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F96J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F96J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J65                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J65.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J60                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J60.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1330                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1330.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1231                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1231.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1230                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1230.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2450                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2450.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2523                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2523.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2423                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2423.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F83J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F83J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F63J90                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F63J90.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F45K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F45K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F25K20                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F25K20.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2685                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2685.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; $Id: p18macro.inc,v 1.2 2005/05/20 15:34:54 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0045fa   0eff     MOVLW     0xff                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0045fc   cfe3     MOVFF     0xfe3,0xff8                                                                                     
0045fe   fff8                                                                                                               
004600   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004602   0eff     MOVLW     0xff                                                                                            
004604   cfe3     MOVFF     0xfe3,0xff7                                                                                     
004606   fff7                                                                                                               
004608   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00460a   0eff     MOVLW     0xff                                                                                            
00460c   cfe3     MOVFF     0xfe3,0xff6                                                                                     
00460e   fff6                                                                                                               
004610   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00461e   0efd     MOVLW     0xfd                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
004620   2ae3     INCF      0xe3,0x1,0x0                                                                                    
004622   e105     BNZ       0x462e                                                                                          
004624   0efe     MOVLW     0xfe                                                                                            
004626   2ae3     INCF      0xe3,0x1,0x0                                                                                    
004628   e102     BNZ       0x462e                                                                                          
00462a   0eff     MOVLW     0xff                                                                                            
00462c   2ae3     INCF      0xe3,0x1,0x0                                                                                    
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
004630   0efd     MOVLW     0xfd           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
004632   cfe3     MOVFF     0xfe3,0x1d                                                                                      
004634   f01d                                                                                                               
004636   0efe     MOVLW     0xfe                                                                                            
004638   cfe3     MOVFF     0xfe3,0x1e                                                                                      
00463a   f01e                                                                                                               
00463c   0eff     MOVLW     0xff                                                                                            
00463e   cfe3     MOVFF     0xfe3,0x1f                                                                                      
004640   f01f                                                                                                               
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; @name strlenpgm                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;``The {\bf strlenpgm} function computes the length of the string pointed        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@return ``The {\bf strlenpgm} function returns the number of characters         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; sizerom_t strlenpgm (const rom char *s);                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             extern __AARGB2                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           strlenpgm                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             global strlenpgm                                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __SMALL__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - SMALL"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; __AARGB0:__AARGB1:__AARGB2.                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk2PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTDEC1,ACCESS    ; provide extra byte below stack          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, __AARGB2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __LARGE__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - LARGE"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; __AARGB0:__AARGB1:__AARGB2.                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004612   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004614   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004616   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004618   0009     TBLRDPOSTINC                       tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
00461a   52f5     MOVF      0xf5,0x1,0x0             movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
00461c   e009     BZ        0x4630                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
00462e   d7f4     BRA       0x4618                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, __AARGB2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
004642   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            error "No Model Specified"                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
